ARM GAS  /tmp/ccByvpkg.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_hal_dma.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.DMA_SetConfig,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	DMA_SetConfig:
  23              	.LFB185:
  24              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @file    stm32g0xx_hal_dma.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *         This file provides firmware functions to manage the following
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *         functionalities of the Direct Memory Access (DMA) peripheral:
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *           + IO operation functions
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *           + Peripheral State and errors functions
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   @verbatim
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   ==============================================================================
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                         ##### How to use this driver #####
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   ==============================================================================
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   [..]
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Channel
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (except for internal SRAM / FLASH memories: no initialization is
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        necessary). Please refer to the Reference manual for connection between peripherals
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        and DMA requests.
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****    (#) For a given Channel, program the required configuration through the following parameters:
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        Channel request, Transfer Direction, Source and Destination data formats,
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        Circular or Normal mode, Channel Priority level, Source and Destination Increment mode
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        using HAL_DMA_Init() function.
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        Prior to HAL_DMA_Init the CLK shall be enabled for both DMA & DMAMUX
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        thanks to:
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        DMA1   :       __HAL_RCC_DMA1_CLK_ENABLE();
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****    (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of er
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        detection.
  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****    (#) Use HAL_DMA_Abort() function to abort the current transfer
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
ARM GAS  /tmp/ccByvpkg.s 			page 2


  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      *** Polling mode IO operation ***
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      =================================
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     [..]
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****               address and destination address and the Length of data to be transferred
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      ===================================
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     [..]
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ()
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred.
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****               In this case the DMA interrupt is configured
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****               add his own function by customization of function pointer XferCpltCallback and
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****               XferErrorCallback (i.e. a member of DMA handle structure).
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      =============================================
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       [..]
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_ENABLE: Enable the specified DMA Channel.
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_DISABLE: Disable the specified DMA Channel.
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_GET_FLAG: Get the DMA Channel pending flags.
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_CLEAR_FLAG: Clear the DMA Channel pending flags.
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_ENABLE_IT: Enable the specified DMA Channel interrupts.
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_DISABLE_IT: Disable the specified DMA Channel interrupts.
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Channel interrupt has occurred 
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      [..]
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   @endverbatim
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   ******************************************************************************
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @attention
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics. 
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * All rights reserved.</center></h2>
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * the "License"; You may not use this file except in compliance with the 
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * License. You may obtain a copy of the License at:
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                        opensource.org/licenses/BSD-3-Clause
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   ******************************************************************************
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #include "stm32g0xx_hal.h"
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @addtogroup STM32G0xx_HAL_Driver
ARM GAS  /tmp/ccByvpkg.s 			page 3


  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @defgroup DMA DMA
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief DMA HAL module driver
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Private typedef -----------------------------------------------------------*/
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Private define ------------------------------------------------------------*/
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Private macro -------------------------------------------------------------*/
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Private function prototypes -----------------------------------------------*/
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @defgroup DMA_Private_Functions DMA Private Functions
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma);
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma);
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @}
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions DMA Exported Functions
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group1 Initialization and de-initialization functions
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  *  @brief   Initialization and de-initialization functions
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  *
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** @verbatim
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  ===============================================================================
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  ===============================================================================
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     [..]
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Channel source
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction,
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Channel priority value.
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     [..]
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     reference manual.
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** @endverbatim
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and initialize the associated handle.
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
ARM GAS  /tmp/ccByvpkg.s 			page 4


 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the DMA handle allocation */
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma == NULL)
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the parameters */
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* calculation of the channel index */
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Chan
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Change DMA peripheral state */
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR and MEM2MEM bits */
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   CLEAR_BIT(hdma->Instance->CCR, (DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                   DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                   DMA_CCR_DIR   | DMA_CCR_MEM2MEM));
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Set the DMA Channel configuration */
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   SET_BIT(hdma->Instance->CCR, (hdma->Init.Direction           |                               \
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                 hdma->Init.PeriphInc           | hdma->Init.MemInc           | \
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                 hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment | \
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                 hdma->Init.Mode                | hdma->Init.Priority));
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize parameters for DMAMUX channel :
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      DMAmuxChannel, DMAmuxChannelStatus and DMAmuxChannelStatusMask
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* if memory to memory force the request to 0*/
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->Init.Request = DMA_REQUEST_MEM2MEM;
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Set peripheral request  to DMAMUX channel */
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannel->CCR = (hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID);
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clear the DMAMUX synchro overrun flag */
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (((hdma->Init.Request >  0UL) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR3)))
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Initialize parameters for DMAMUX request generator :
ARM GAS  /tmp/ccByvpkg.s 			page 5


 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        DMAmuxRequestGen, DMAmuxRequestGenStatus and DMAmuxRequestGenStatusMask
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     */
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     DMA_CalcDMAMUXRequestGenBaseAndMask(hdma);
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Reset the DMAMUX request generator register*/
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGen->RGCR = 0U;
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the DMAMUX request generator overrun flag */
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGen = 0U;
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGenStatus = 0U;
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGenStatusMask = 0U;
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize the error code */
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize the DMA state*/
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->State  = HAL_DMA_STATE_READY;
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Release Lock */
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return HAL_OK;
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  DeInitialize the DMA peripheral.
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the DMA handle allocation */
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (NULL == hdma)
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the parameters */
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Disable the selected DMA Channelx */
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* calculation of the channel index */
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Chan
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Reset DMA Channel control register */
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->Instance->CCR  = 0U;
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clear all flags */
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_GI1 << (hdma->ChannelIndex & 0x1cU)));
ARM GAS  /tmp/ccByvpkg.s 			page 6


 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize parameters for DMAMUX channel :
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      DMAmuxChannel, DMAmuxChannelStatus and DMAmuxChannelStatusMask */
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Reset the DMAMUX channel that corresponds to the DMA channel */
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannel->CCR = 0U;
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clear the DMAMUX synchro overrun flag */
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Reset Request generator parameters if any */
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (((hdma->Init.Request >  0UL) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR3)))
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Initialize parameters for DMAMUX request generator :
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        DMAmuxRequestGen, DMAmuxRequestGenStatus and DMAmuxRequestGenStatusMask
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     */
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     DMA_CalcDMAMUXRequestGenBaseAndMask(hdma);
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Reset the DMAMUX request generator register*/
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGen->RGCR = 0U;
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the DMAMUX request generator overrun flag */
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clean callbacks */
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->XferCpltCallback = NULL;
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGen = 0U;
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGenStatus = 0U;
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGenStatusMask = 0U;
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize the error code */
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize the DMA state */
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Release Lock */
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return HAL_OK;
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @}
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group2 Input and Output operation functions
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  *  @brief   Input and Output operation functions
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  *
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** @verbatim
ARM GAS  /tmp/ccByvpkg.s 			page 7


 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  ===============================================================================
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                       #####  IO operation functions  #####
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  ===============================================================================
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Configure the source, destination address and data length and
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****           Start DMA transfer with interrupt
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Abort DMA transfer
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Poll for transfer complete
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Handle DMA interrupt request
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** @endverbatim
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Start the DMA Transfer.
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param SrcAddress The source memory Buffer address
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param DstAddress The destination memory Buffer address
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param DataLength The length of data to be transferred from source to destination
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the parameters */
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process locked */
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (HAL_DMA_STATE_READY == hdma->State)
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Change DMA peripheral state */
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable the peripheral */
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Configure the source, destination address and the data length & clear flags*/
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Enable the Peripheral */
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     status = HAL_BUSY;
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process locked */
ARM GAS  /tmp/ccByvpkg.s 			page 8


 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return status;
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param SrcAddress The source memory Buffer address
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param DstAddress The destination memory Buffer address
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param DataLength The length of data to be transferred from source to destination
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the parameters */
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process locked */
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (HAL_DMA_STATE_READY == hdma->State)
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Change DMA peripheral state */
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable the peripheral */
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Configure the source, destination address and the data length & clear flags*/
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Enable the transfer complete interrupt */
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Enable the transfer Error interrupt */
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (NULL != hdma->XferHalfCpltCallback)
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Enable the Half transfer complete interrupt as well */
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     else
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_TE));
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Check if DMAMUX Synchronization is enabled*/
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if ((hdma->DMAmuxChannel->CCR & DMAMUX_CxCR_SE) != 0U)
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Enable DMAMUX sync overrun IT*/
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxChannel->CCR |= DMAMUX_CxCR_SOIE;
 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (hdma->DMAmuxRequestGen != 0U)
ARM GAS  /tmp/ccByvpkg.s 			page 9


 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* if using DMAMUX request generator, enable the DMAMUX request generator overrun IT*/
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* enable the request gen overrun IT*/
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_OIE;
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Enable the Peripheral */
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Remain BUSY */
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     status = HAL_BUSY;
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process unlocked */
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return status;
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Abort the DMA Transfer.
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     * @retval HAL status
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the DMA peripheral handle */
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (NULL == hdma)
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the DMA peripheral state */
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable DMA IT */
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* disable the DMAMUX sync overrun IT*/
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable the channel */
ARM GAS  /tmp/ccByvpkg.s 			page 10


 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear all flags */
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex  & 0x1cU)));
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the DMAMUX synchro overrun flag */
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (hdma->DMAmuxRequestGen != 0U)
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* disable the request gen overrun IT*/
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Clear the DMAMUX request generator overrun flag */
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Change the DMA state */
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return HAL_OK;
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param  hdma    pointer to a DMA_HandleTypeDef structure that contains
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process Unlocked/locked */
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (HAL_DMA_STATE_BUSY != hdma->State)
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* no transfer ongoing */
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     status = HAL_ERROR;
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable DMA IT */
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable the channel */
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
ARM GAS  /tmp/ccByvpkg.s 			page 11


 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* disable the DMAMUX sync overrun IT*/
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear all flags */
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex & 0x1cU)));
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the DMAMUX synchro overrun flag */
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (hdma->DMAmuxRequestGen != 0U)
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* disable the request gen overrun IT*/
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Clear the DMAMUX request generator overrun flag */
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Change the DMA state */
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Call User Abort callback */
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (hdma->XferAbortCallback != NULL)
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->XferAbortCallback(hdma);
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return status;
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                  the configuration information for the specified DMA Channel.
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param CompleteLevel Specifies the DMA level complete.
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param Timeout Timeout duration.
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t temp;
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t tickstart;
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process unlocked */
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (HAL_DMA_STATE_BUSY != hdma->State)
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* no transfer ongoing */
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
ARM GAS  /tmp/ccByvpkg.s 			page 12


 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Polling mode not supported in circular mode */
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != 0U)
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Get the level transfer complete flag */
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (HAL_DMA_FULL_TRANSFER == CompleteLevel)
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Transfer Complete flag */
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     temp = DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1cU);
 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Half Transfer Complete flag */
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     temp = DMA_FLAG_HT1 << (hdma->ChannelIndex  & 0x1cU);
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Get tick */
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   tickstart = HAL_GetTick();
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   while (0U == __HAL_DMA_GET_FLAG(hdma, temp))
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (0U != __HAL_DMA_GET_FLAG(hdma, (DMA_FLAG_TE1 << (hdma->ChannelIndex & 0x1cU))))
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* When a DMA transfer error occurs */
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* A hardware clear of its EN bits is performed */
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Clear all flags */
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex & 0x1cU)));
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Update error code */
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TE;
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Change the DMA state */
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Process Unlocked */
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       return HAL_ERROR;
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Check for the Timeout */
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (Timeout != HAL_MAX_DELAY)
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       if(((HAL_GetTick() - tickstart ) > Timeout)||(Timeout == 0U))
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       {
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         /* Update error code */
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         /* Change the DMA state */
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         /* Process Unlocked */
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
ARM GAS  /tmp/ccByvpkg.s 			page 13


 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         return HAL_ERROR;
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       }
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /*Check for DMAMUX Request generator (if used) overrun status */
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->DMAmuxRequestGen != 0U)
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* if using DMAMUX request generator Check for DMAMUX request generator overrun */
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if ((hdma->DMAmuxRequestGenStatus->RGSR & hdma->DMAmuxRequestGenStatusMask) != 0U)
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Disable the request gen overrun interrupt */
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_OIE;
 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Clear the DMAMUX request generator overrun flag */
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Update error code */
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_REQGEN;
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check for DMAMUX Synchronization overrun */
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if ((hdma->DMAmuxChannelStatus->CSR & hdma->DMAmuxChannelStatusMask) != 0U)
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the DMAMUX synchro overrun flag */
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Update error code */
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode |= HAL_DMA_ERROR_SYNC;
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (HAL_DMA_FULL_TRANSFER == CompleteLevel)
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the transfer complete flag */
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1cU)));
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* The selected Channelx EN bit is cleared (DMA is disabled and
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     all transfers are complete) */
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the half transfer complete flag */
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1cU)));
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process unlocked */
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return HAL_OK;
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Handle DMA interrupt request.
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
ARM GAS  /tmp/ccByvpkg.s 			page 14


 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval None
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t flag_it = DMA1->ISR;
 724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t source_it = hdma->Instance->CCR;
 725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (((flag_it & (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1cU))) != 0U) && ((source_it & DMA_IT_HT
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Disable the half transfer interrupt */
 733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the half transfer complete flag */
 736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1cU)));
 737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* DMA peripheral state is not updated in Half Transfer */
 739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* but in Transfer Complete case */
 740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (hdma->XferHalfCpltCallback != NULL)
 742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Half transfer callback */
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->XferHalfCpltCallback(hdma);
 745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else if ((0U != (flag_it & (DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1cU)))) && (0U != (source_it 
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Disable the transfer complete and error interrupt */
 754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);
 755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Change the DMA state */
 757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the transfer complete flag */
 760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1cU)));
 761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (hdma->XferCpltCallback != NULL)
 766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Transfer complete callback */
 768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->XferCpltCallback(hdma);
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Transfer Error Interrupt management **************************************/
 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else if (((flag_it & (DMA_FLAG_TE1 << (hdma->ChannelIndex & 0x1cU)))!= 0U) && ((source_it & DMA_I
 774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* When a DMA transfer error occurs */
ARM GAS  /tmp/ccByvpkg.s 			page 15


 776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* A hardware clear of its EN bits is performed */
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable ALL DMA IT */
 778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear all flags */
 781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_GI1 << (hdma->ChannelIndex& 0x1cU)));
 782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Update error code */
 784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_TE;
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Change the DMA state */
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (hdma->XferErrorCallback != NULL)
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Transfer error callback */
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Nothing To Do */
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return;
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Register callbacks
 807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param  hdma                  pointer to a DMA_HandleTypeDef structure that contains
 808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param  CallbackID            User Callback identifer
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param  pCallback             pointer to private callbacsk function which has pointer to
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process locked */
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (HAL_DMA_STATE_READY == hdma->State)
 823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     switch (CallbackID)
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_CPLT_CB_ID:
 827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferCpltCallback = pCallback;
 828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferHalfCpltCallback = pCallback;
 832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
ARM GAS  /tmp/ccByvpkg.s 			page 16


 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_ERROR_CB_ID:
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferErrorCallback = pCallback;
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_ABORT_CB_ID:
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferAbortCallback = pCallback;
 840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       default:
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         status = HAL_ERROR;
 844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     status = HAL_ERROR;
 850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Release Lock */
 853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return status;
 856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  UnRegister callbacks
 860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param  hdma                  pointer to a DMA_HandleTypeDef structure that contains
 861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param  CallbackID            User Callback identifer
 863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
 864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
 867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process locked */
 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (HAL_DMA_STATE_READY == hdma->State)
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     switch (CallbackID)
 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_CPLT_CB_ID:
 878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferCpltCallback = NULL;
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferHalfCpltCallback = NULL;
 883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_ERROR_CB_ID:
 886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferErrorCallback = NULL;
 887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_ABORT_CB_ID:
ARM GAS  /tmp/ccByvpkg.s 			page 17


 890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferAbortCallback = NULL;
 891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case   HAL_DMA_XFER_ALL_CB_ID:
 894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferCpltCallback = NULL;
 895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferHalfCpltCallback = NULL;
 896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferErrorCallback = NULL;
 897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferAbortCallback = NULL;
 898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       default:
 901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         status = HAL_ERROR;
 902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     status = HAL_ERROR;
 908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Release Lock */
 911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return status;
 914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @}
 918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group3 Peripheral State and Errors functions
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  *  @brief    Peripheral State and Errors functions
 924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  *
 925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** @verbatim
 926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  ===============================================================================
 927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****             ##### Peripheral State and Errors functions #####
 928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  ===============================================================================
 929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     [..]
 930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     This subsection provides functions allowing to
 931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Check the DMA state
 932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Get error code
 933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** @endverbatim
 935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
 936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Return the DMA hande state.
 940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL state
 943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
 945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Return DMA handle state */
ARM GAS  /tmp/ccByvpkg.s 			page 18


 947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return hdma->State;
 948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Return the DMA error code.
 952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *              the configuration information for the specified DMA Channel.
 954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval DMA Error Code
 955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
 957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return hdma->ErrorCode;
 959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @}
 963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @}
 967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
 971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
 975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                     the configuration information for the specified DMA Channel.
 977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param SrcAddress The source memory Buffer address
 978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param DstAddress The destination memory Buffer address
 979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param DataLength The length of data to be transferred from source to destination
 980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
  25              		.loc 1 983 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
 984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clear the DMAMUX synchro overrun flag */
 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
  38              		.loc 1 985 0
  39 0002 846C     		ldr	r4, [r0, #72]
  40 0004 C56C     		ldr	r5, [r0, #76]
  41 0006 6560     		str	r5, [r4, #4]
 986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
ARM GAS  /tmp/ccByvpkg.s 			page 19


 987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->DMAmuxRequestGen != 0U)
  42              		.loc 1 987 0
  43 0008 046D     		ldr	r4, [r0, #80]
  44 000a 002C     		cmp	r4, #0
  45 000c 02D0     		beq	.L2
 988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the DMAMUX request generator overrun flag */
 990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
  46              		.loc 1 990 0
  47 000e 446D     		ldr	r4, [r0, #84]
  48 0010 856D     		ldr	r5, [r0, #88]
  49 0012 6560     		str	r5, [r4, #4]
  50              	.L2:
 991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clear all flags */
 994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_GI1 << (hdma->ChannelIndex & 0x1cU)));
  51              		.loc 1 994 0
  52 0014 0B4F     		ldr	r7, .L6
  53 0016 7C68     		ldr	r4, [r7, #4]
  54 0018 1C26     		movs	r6, #28
  55 001a 056C     		ldr	r5, [r0, #64]
  56 001c 2E40     		ands	r6, r5
  57 001e 0125     		movs	r5, #1
  58 0020 B540     		lsls	r5, r5, r6
  59 0022 2C43     		orrs	r4, r5
  60 0024 7C60     		str	r4, [r7, #4]
 995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Configure DMA Channel data length */
 997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->Instance->CNDTR = DataLength;
  61              		.loc 1 997 0
  62 0026 0468     		ldr	r4, [r0]
  63 0028 6360     		str	r3, [r4, #4]
 998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Peripheral to Memory */
1000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
  64              		.loc 1 1000 0
  65 002a 8368     		ldr	r3, [r0, #8]
  66              	.LVL1:
  67 002c 102B     		cmp	r3, #16
  68 002e 04D0     		beq	.L5
1001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
1002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Configure DMA Channel destination address */
1003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->Instance->CPAR = DstAddress;
1004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Configure DMA Channel source address */
1006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->Instance->CMAR = SrcAddress;
1007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
1008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Memory to Peripheral */
1009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
1010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
1011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Configure DMA Channel source address */
1012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->Instance->CPAR = SrcAddress;
  69              		.loc 1 1012 0
  70 0030 0368     		ldr	r3, [r0]
  71 0032 9960     		str	r1, [r3, #8]
  72              	.LVL2:
ARM GAS  /tmp/ccByvpkg.s 			page 20


1013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Configure DMA Channel destination address */
1015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->Instance->CMAR = DstAddress;
  73              		.loc 1 1015 0
  74 0034 0368     		ldr	r3, [r0]
  75 0036 DA60     		str	r2, [r3, #12]
  76              	.L1:
1016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
1017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
  77              		.loc 1 1017 0
  78              		@ sp needed
  79 0038 F0BD     		pop	{r4, r5, r6, r7, pc}
  80              	.LVL3:
  81              	.L5:
1003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  82              		.loc 1 1003 0
  83 003a 0368     		ldr	r3, [r0]
  84 003c 9A60     		str	r2, [r3, #8]
  85              	.LVL4:
1006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
  86              		.loc 1 1006 0
  87 003e 0368     		ldr	r3, [r0]
  88 0040 D960     		str	r1, [r3, #12]
  89 0042 F9E7     		b	.L1
  90              	.L7:
  91              		.align	2
  92              	.L6:
  93 0044 00000240 		.word	1073872896
  94              		.cfi_endproc
  95              	.LFE185:
  97              		.global	__aeabi_uidiv
  98              		.section	.text.DMA_CalcDMAMUXChannelBaseAndMask,"ax",%progbits
  99              		.align	1
 100              		.syntax unified
 101              		.code	16
 102              		.thumb_func
 103              		.fpu softvfp
 105              	DMA_CalcDMAMUXChannelBaseAndMask:
 106              	.LFB186:
1018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
1020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Updates the DMA handle with the DMAMUX  channel and status mask depending on stream num
1021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
1022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
1023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval None
1024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
1025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)
1026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 107              		.loc 1 1026 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL5:
 112 0000 10B5     		push	{r4, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
ARM GAS  /tmp/ccByvpkg.s 			page 21


 116              		.cfi_offset 14, -4
 117 0002 0400     		movs	r4, r0
1027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t channel_number;
1028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   channel_number = (((uint32_t)hdma->Instance & 0xFFU) - 8U) / 20U;
 118              		.loc 1 1029 0
 119 0004 FF20     		movs	r0, #255
 120              	.LVL6:
 121 0006 2368     		ldr	r3, [r4]
 122 0008 1840     		ands	r0, r3
 123 000a 0838     		subs	r0, r0, #8
 124 000c 1421     		movs	r1, #20
 125 000e FFF7FEFF 		bl	__aeabi_uidiv
 126              	.LVL7:
1030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)(uint32_t)((uint32_t)DMAMUX1_Channel0 + ((hdma->C
 127              		.loc 1 1030 0
 128 0012 236C     		ldr	r3, [r4, #64]
 129 0014 9B08     		lsrs	r3, r3, #2
 130 0016 064A     		ldr	r2, .L9
 131 0018 9446     		mov	ip, r2
 132 001a 6344     		add	r3, r3, ip
 133 001c 9B00     		lsls	r3, r3, #2
 134 001e 6364     		str	r3, [r4, #68]
1031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
 135              		.loc 1 1031 0
 136 0020 044B     		ldr	r3, .L9+4
 137 0022 A364     		str	r3, [r4, #72]
1032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannelStatusMask = 1UL << (channel_number & 0x1cU);
 138              		.loc 1 1032 0
 139 0024 1C23     		movs	r3, #28
 140 0026 1840     		ands	r0, r3
 141              	.LVL8:
 142 0028 1B3B     		subs	r3, r3, #27
 143 002a 8340     		lsls	r3, r3, r0
 144 002c E364     		str	r3, [r4, #76]
1033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 145              		.loc 1 1033 0
 146              		@ sp needed
 147              	.LVL9:
 148 002e 10BD     		pop	{r4, pc}
 149              	.L10:
 150              		.align	2
 151              	.L9:
 152 0030 00820010 		.word	268468736
 153 0034 80080240 		.word	1073875072
 154              		.cfi_endproc
 155              	.LFE186:
 157              		.section	.text.DMA_CalcDMAMUXRequestGenBaseAndMask,"ax",%progbits
 158              		.align	1
 159              		.syntax unified
 160              		.code	16
 161              		.thumb_func
 162              		.fpu softvfp
 164              	DMA_CalcDMAMUXRequestGenBaseAndMask:
 165              	.LFB187:
1034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
ARM GAS  /tmp/ccByvpkg.s 			page 22


1036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief  Updates the DMA handle with the DMAMUX  request generator params
1037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
1038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
1039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval None
1040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
1041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)
1043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 166              		.loc 1 1043 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171              	.LVL10:
1044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t request =  hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID;
 172              		.loc 1 1044 0
 173 0000 FF23     		movs	r3, #255
 174 0002 4268     		ldr	r2, [r0, #4]
 175 0004 1340     		ands	r3, r2
 176              	.LVL11:
1045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* DMA Channels are connected to DMAMUX1 request generator blocks*/
1047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGener
 177              		.loc 1 1047 0
 178 0006 064A     		ldr	r2, .L12
 179 0008 9A18     		adds	r2, r3, r2
 180 000a 9200     		lsls	r2, r2, #2
 181 000c 0265     		str	r2, [r0, #80]
1048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 182              		.loc 1 1049 0
 183 000e 054A     		ldr	r2, .L12+4
 184 0010 4265     		str	r2, [r0, #84]
1050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* here "Request" is either DMA_REQUEST_GENERATOR0 to 4, i.e. <= 4*/
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGenStatusMask = 1UL << ((request - 1U) & 0x3U);
 185              		.loc 1 1052 0
 186 0012 013B     		subs	r3, r3, #1
 187              	.LVL12:
 188 0014 0322     		movs	r2, #3
 189 0016 1A40     		ands	r2, r3
 190 0018 0123     		movs	r3, #1
 191              	.LVL13:
 192 001a 9340     		lsls	r3, r3, r2
 193 001c 8365     		str	r3, [r0, #88]
1053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 194              		.loc 1 1053 0
 195              		@ sp needed
 196 001e 7047     		bx	lr
 197              	.L13:
 198              		.align	2
 199              	.L12:
 200 0020 3F820010 		.word	268468799
 201 0024 40090240 		.word	1073875264
 202              		.cfi_endproc
 203              	.LFE187:
 205              		.section	.text.HAL_DMA_Init,"ax",%progbits
ARM GAS  /tmp/ccByvpkg.s 			page 23


 206              		.align	1
 207              		.global	HAL_DMA_Init
 208              		.syntax unified
 209              		.code	16
 210              		.thumb_func
 211              		.fpu softvfp
 213              	HAL_DMA_Init:
 214              	.LFB173:
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the DMA handle allocation */
 215              		.loc 1 152 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              	.LVL14:
 220 0000 70B5     		push	{r4, r5, r6, lr}
 221              	.LCFI2:
 222              		.cfi_def_cfa_offset 16
 223              		.cfi_offset 4, -16
 224              		.cfi_offset 5, -12
 225              		.cfi_offset 6, -8
 226              		.cfi_offset 14, -4
 227 0002 041E     		subs	r4, r0, #0
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 228              		.loc 1 154 0
 229 0004 4DD0     		beq	.L19
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 230              		.loc 1 170 0
 231 0006 0568     		ldr	r5, [r0]
 232 0008 274B     		ldr	r3, .L22
 233 000a E818     		adds	r0, r5, r3
 234              	.LVL15:
 235 000c 1421     		movs	r1, #20
 236 000e FFF7FEFF 		bl	__aeabi_uidiv
 237              	.LVL16:
 238 0012 8000     		lsls	r0, r0, #2
 239 0014 2064     		str	r0, [r4, #64]
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 240              		.loc 1 173 0
 241 0016 2523     		movs	r3, #37
 242 0018 0222     		movs	r2, #2
 243 001a E254     		strb	r2, [r4, r3]
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                   DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
 244              		.loc 1 176 0
 245 001c 2B68     		ldr	r3, [r5]
 246 001e 234A     		ldr	r2, .L22+4
 247 0020 1340     		ands	r3, r2
 248 0022 2B60     		str	r3, [r5]
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                 hdma->Init.PeriphInc           | hdma->Init.MemInc           | \
 249              		.loc 1 181 0
 250 0024 2168     		ldr	r1, [r4]
 251 0026 0A68     		ldr	r2, [r1]
 252 0028 A368     		ldr	r3, [r4, #8]
 253 002a E068     		ldr	r0, [r4, #12]
 254 002c 0343     		orrs	r3, r0
 255 002e 2069     		ldr	r0, [r4, #16]
 256 0030 0343     		orrs	r3, r0
 257 0032 6069     		ldr	r0, [r4, #20]
ARM GAS  /tmp/ccByvpkg.s 			page 24


 258 0034 0343     		orrs	r3, r0
 259 0036 A069     		ldr	r0, [r4, #24]
 260 0038 0343     		orrs	r3, r0
 261 003a E069     		ldr	r0, [r4, #28]
 262 003c 0343     		orrs	r3, r0
 263 003e 206A     		ldr	r0, [r4, #32]
 264 0040 0343     		orrs	r3, r0
 265 0042 1343     		orrs	r3, r2
 266 0044 0B60     		str	r3, [r1]
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 267              		.loc 1 189 0
 268 0046 2000     		movs	r0, r4
 269 0048 FFF7FEFF 		bl	DMA_CalcDMAMUXChannelBaseAndMask
 270              	.LVL17:
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 271              		.loc 1 191 0
 272 004c 8023     		movs	r3, #128
 273 004e DB01     		lsls	r3, r3, #7
 274 0050 A268     		ldr	r2, [r4, #8]
 275 0052 9A42     		cmp	r2, r3
 276 0054 18D0     		beq	.L20
 277              	.L16:
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 278              		.loc 1 198 0
 279 0056 626C     		ldr	r2, [r4, #68]
 280 0058 FF23     		movs	r3, #255
 281 005a 6168     		ldr	r1, [r4, #4]
 282 005c 0B40     		ands	r3, r1
 283 005e 1360     		str	r3, [r2]
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 284              		.loc 1 201 0
 285 0060 A36C     		ldr	r3, [r4, #72]
 286 0062 E26C     		ldr	r2, [r4, #76]
 287 0064 5A60     		str	r2, [r3, #4]
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 288              		.loc 1 203 0
 289 0066 6368     		ldr	r3, [r4, #4]
 290 0068 013B     		subs	r3, r3, #1
 291 006a 032B     		cmp	r3, #3
 292 006c 0FD9     		bls	.L21
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGenStatus = 0U;
 293              		.loc 1 218 0
 294 006e 0023     		movs	r3, #0
 295 0070 2365     		str	r3, [r4, #80]
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGenStatusMask = 0U;
 296              		.loc 1 219 0
 297 0072 6365     		str	r3, [r4, #84]
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 298              		.loc 1 220 0
 299 0074 A365     		str	r3, [r4, #88]
 300              	.L18:
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 301              		.loc 1 224 0
 302 0076 0023     		movs	r3, #0
 303 0078 E363     		str	r3, [r4, #60]
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 304              		.loc 1 227 0
ARM GAS  /tmp/ccByvpkg.s 			page 25


 305 007a 2522     		movs	r2, #37
 306 007c 0121     		movs	r1, #1
 307 007e A154     		strb	r1, [r4, r2]
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 308              		.loc 1 230 0
 309 0080 013A     		subs	r2, r2, #1
 310 0082 A354     		strb	r3, [r4, r2]
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 311              		.loc 1 232 0
 312 0084 0020     		movs	r0, #0
 313              	.L15:
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 314              		.loc 1 233 0
 315              		@ sp needed
 316              	.LVL18:
 317 0086 70BD     		pop	{r4, r5, r6, pc}
 318              	.LVL19:
 319              	.L20:
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 320              		.loc 1 194 0
 321 0088 0023     		movs	r3, #0
 322 008a 6360     		str	r3, [r4, #4]
 323 008c E3E7     		b	.L16
 324              	.L21:
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 325              		.loc 1 208 0
 326 008e 2000     		movs	r0, r4
 327 0090 FFF7FEFF 		bl	DMA_CalcDMAMUXRequestGenBaseAndMask
 328              	.LVL20:
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 329              		.loc 1 211 0
 330 0094 236D     		ldr	r3, [r4, #80]
 331 0096 0022     		movs	r2, #0
 332 0098 1A60     		str	r2, [r3]
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 333              		.loc 1 214 0
 334 009a 636D     		ldr	r3, [r4, #84]
 335 009c A26D     		ldr	r2, [r4, #88]
 336 009e 5A60     		str	r2, [r3, #4]
 337 00a0 E9E7     		b	.L18
 338              	.LVL21:
 339              	.L19:
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 340              		.loc 1 156 0
 341 00a2 0120     		movs	r0, #1
 342              	.LVL22:
 343 00a4 EFE7     		b	.L15
 344              	.L23:
 345 00a6 C046     		.align	2
 346              	.L22:
 347 00a8 F8FFFDBF 		.word	-1073872904
 348 00ac 0F80FFFF 		.word	-32753
 349              		.cfi_endproc
 350              	.LFE173:
 352              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 353              		.align	1
 354              		.global	HAL_DMA_DeInit
ARM GAS  /tmp/ccByvpkg.s 			page 26


 355              		.syntax unified
 356              		.code	16
 357              		.thumb_func
 358              		.fpu softvfp
 360              	HAL_DMA_DeInit:
 361              	.LFB174:
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the DMA handle allocation */
 362              		.loc 1 242 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              	.LVL23:
 367 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 368              	.LCFI3:
 369              		.cfi_def_cfa_offset 24
 370              		.cfi_offset 3, -24
 371              		.cfi_offset 4, -20
 372              		.cfi_offset 5, -16
 373              		.cfi_offset 6, -12
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 041E     		subs	r4, r0, #0
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 377              		.loc 1 244 0
 378 0004 3BD0     		beq	.L27
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 379              		.loc 1 253 0
 380 0006 0268     		ldr	r2, [r0]
 381 0008 1368     		ldr	r3, [r2]
 382 000a 0125     		movs	r5, #1
 383 000c AB43     		bics	r3, r5
 384 000e 1360     		str	r3, [r2]
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 385              		.loc 1 256 0
 386 0010 0768     		ldr	r7, [r0]
 387 0012 1C4B     		ldr	r3, .L29
 388 0014 F818     		adds	r0, r7, r3
 389              	.LVL24:
 390 0016 1421     		movs	r1, #20
 391 0018 FFF7FEFF 		bl	__aeabi_uidiv
 392              	.LVL25:
 393 001c 8000     		lsls	r0, r0, #2
 394 001e 2064     		str	r0, [r4, #64]
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 395              		.loc 1 259 0
 396 0020 0026     		movs	r6, #0
 397 0022 3E60     		str	r6, [r7]
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 398              		.loc 1 262 0
 399 0024 1849     		ldr	r1, .L29+4
 400 0026 4B68     		ldr	r3, [r1, #4]
 401 0028 1C22     		movs	r2, #28
 402 002a 206C     		ldr	r0, [r4, #64]
 403 002c 0240     		ands	r2, r0
 404 002e 9540     		lsls	r5, r5, r2
 405 0030 1D43     		orrs	r5, r3
 406 0032 4D60     		str	r5, [r1, #4]
ARM GAS  /tmp/ccByvpkg.s 			page 27


 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 407              		.loc 1 267 0
 408 0034 2000     		movs	r0, r4
 409 0036 FFF7FEFF 		bl	DMA_CalcDMAMUXChannelBaseAndMask
 410              	.LVL26:
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 411              		.loc 1 270 0
 412 003a 636C     		ldr	r3, [r4, #68]
 413 003c 1E60     		str	r6, [r3]
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 414              		.loc 1 273 0
 415 003e A36C     		ldr	r3, [r4, #72]
 416 0040 E26C     		ldr	r2, [r4, #76]
 417 0042 5A60     		str	r2, [r3, #4]
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 418              		.loc 1 276 0
 419 0044 6368     		ldr	r3, [r4, #4]
 420 0046 013B     		subs	r3, r3, #1
 421 0048 032B     		cmp	r3, #3
 422 004a 0ED9     		bls	.L28
 423              	.L26:
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 424              		.loc 1 291 0
 425 004c 0023     		movs	r3, #0
 426 004e E362     		str	r3, [r4, #44]
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 427              		.loc 1 292 0
 428 0050 2363     		str	r3, [r4, #48]
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;
 429              		.loc 1 293 0
 430 0052 6363     		str	r3, [r4, #52]
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 431              		.loc 1 294 0
 432 0054 A363     		str	r3, [r4, #56]
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGenStatus = 0U;
 433              		.loc 1 296 0
 434 0056 2365     		str	r3, [r4, #80]
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGenStatusMask = 0U;
 435              		.loc 1 297 0
 436 0058 6365     		str	r3, [r4, #84]
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 437              		.loc 1 298 0
 438 005a A365     		str	r3, [r4, #88]
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 439              		.loc 1 301 0
 440 005c E363     		str	r3, [r4, #60]
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 441              		.loc 1 304 0
 442 005e 2522     		movs	r2, #37
 443 0060 A354     		strb	r3, [r4, r2]
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 444              		.loc 1 307 0
 445 0062 013A     		subs	r2, r2, #1
 446 0064 A354     		strb	r3, [r4, r2]
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 447              		.loc 1 309 0
 448 0066 0020     		movs	r0, #0
ARM GAS  /tmp/ccByvpkg.s 			page 28


 449              	.L25:
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 450              		.loc 1 310 0
 451              		@ sp needed
 452              	.LVL27:
 453 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 454              	.LVL28:
 455              	.L28:
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 456              		.loc 1 281 0
 457 006a 2000     		movs	r0, r4
 458 006c FFF7FEFF 		bl	DMA_CalcDMAMUXRequestGenBaseAndMask
 459              	.LVL29:
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 460              		.loc 1 284 0
 461 0070 236D     		ldr	r3, [r4, #80]
 462 0072 0022     		movs	r2, #0
 463 0074 1A60     		str	r2, [r3]
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 464              		.loc 1 287 0
 465 0076 636D     		ldr	r3, [r4, #84]
 466 0078 A26D     		ldr	r2, [r4, #88]
 467 007a 5A60     		str	r2, [r3, #4]
 468 007c E6E7     		b	.L26
 469              	.LVL30:
 470              	.L27:
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 471              		.loc 1 246 0
 472 007e 0120     		movs	r0, #1
 473              	.LVL31:
 474 0080 F2E7     		b	.L25
 475              	.L30:
 476 0082 C046     		.align	2
 477              	.L29:
 478 0084 F8FFFDBF 		.word	-1073872904
 479 0088 00000240 		.word	1073872896
 480              		.cfi_endproc
 481              	.LFE174:
 483              		.section	.text.HAL_DMA_Start,"ax",%progbits
 484              		.align	1
 485              		.global	HAL_DMA_Start
 486              		.syntax unified
 487              		.code	16
 488              		.thumb_func
 489              		.fpu softvfp
 491              	HAL_DMA_Start:
 492              	.LFB175:
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 493              		.loc 1 345 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              	.LVL32:
 498 0000 70B5     		push	{r4, r5, r6, lr}
 499              	.LCFI4:
 500              		.cfi_def_cfa_offset 16
 501              		.cfi_offset 4, -16
ARM GAS  /tmp/ccByvpkg.s 			page 29


 502              		.cfi_offset 5, -12
 503              		.cfi_offset 6, -8
 504              		.cfi_offset 14, -4
 505 0002 0400     		movs	r4, r0
 506              	.LVL33:
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 507              		.loc 1 352 0
 508 0004 2420     		movs	r0, #36
 509              	.LVL34:
 510 0006 205C     		ldrb	r0, [r4, r0]
 511 0008 0128     		cmp	r0, #1
 512 000a 1ED0     		beq	.L34
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 513              		.loc 1 352 0 is_stmt 0 discriminator 2
 514 000c 2420     		movs	r0, #36
 515 000e 0125     		movs	r5, #1
 516 0010 2554     		strb	r5, [r4, r0]
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 517              		.loc 1 354 0 is_stmt 1 discriminator 2
 518 0012 0130     		adds	r0, r0, #1
 519 0014 205C     		ldrb	r0, [r4, r0]
 520 0016 0128     		cmp	r0, #1
 521 0018 04D0     		beq	.L36
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 522              		.loc 1 373 0
 523 001a 0220     		movs	r0, #2
 524              	.LVL35:
 525              	.L33:
 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 526              		.loc 1 377 0
 527 001c 2423     		movs	r3, #36
 528 001e 0022     		movs	r2, #0
 529 0020 E254     		strb	r2, [r4, r3]
 530              	.LVL36:
 531              	.L32:
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 532              		.loc 1 380 0
 533              		@ sp needed
 534              	.LVL37:
 535 0022 70BD     		pop	{r4, r5, r6, pc}
 536              	.LVL38:
 537              	.L36:
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 538              		.loc 1 357 0
 539 0024 2430     		adds	r0, r0, #36
 540 0026 0135     		adds	r5, r5, #1
 541 0028 2554     		strb	r5, [r4, r0]
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 542              		.loc 1 358 0
 543 002a 0020     		movs	r0, #0
 544 002c E063     		str	r0, [r4, #60]
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 545              		.loc 1 361 0
 546 002e 2668     		ldr	r6, [r4]
 547 0030 3068     		ldr	r0, [r6]
 548 0032 013D     		subs	r5, r5, #1
 549 0034 A843     		bics	r0, r5
ARM GAS  /tmp/ccByvpkg.s 			page 30


 550 0036 3060     		str	r0, [r6]
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 551              		.loc 1 364 0
 552 0038 2000     		movs	r0, r4
 553 003a FFF7FEFF 		bl	DMA_SetConfig
 554              	.LVL39:
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 555              		.loc 1 367 0
 556 003e 2268     		ldr	r2, [r4]
 557 0040 1368     		ldr	r3, [r2]
 558 0042 2B43     		orrs	r3, r5
 559 0044 1360     		str	r3, [r2]
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 560              		.loc 1 346 0
 561 0046 0020     		movs	r0, #0
 562 0048 E8E7     		b	.L33
 563              	.LVL40:
 564              	.L34:
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 565              		.loc 1 352 0
 566 004a 0220     		movs	r0, #2
 567 004c E9E7     		b	.L32
 568              		.cfi_endproc
 569              	.LFE175:
 571              		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 572              		.align	1
 573              		.global	HAL_DMA_Start_IT
 574              		.syntax unified
 575              		.code	16
 576              		.thumb_func
 577              		.fpu softvfp
 579              	HAL_DMA_Start_IT:
 580              	.LFB176:
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 581              		.loc 1 392 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              	.LVL41:
 586 0000 70B5     		push	{r4, r5, r6, lr}
 587              	.LCFI5:
 588              		.cfi_def_cfa_offset 16
 589              		.cfi_offset 4, -16
 590              		.cfi_offset 5, -12
 591              		.cfi_offset 6, -8
 592              		.cfi_offset 14, -4
 593 0002 0400     		movs	r4, r0
 594              	.LVL42:
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 595              		.loc 1 399 0
 596 0004 2420     		movs	r0, #36
 597              	.LVL43:
 598 0006 205C     		ldrb	r0, [r4, r0]
 599 0008 0128     		cmp	r0, #1
 600 000a 43D0     		beq	.L44
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 601              		.loc 1 399 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccByvpkg.s 			page 31


 602 000c 2420     		movs	r0, #36
 603 000e 0125     		movs	r5, #1
 604 0010 2554     		strb	r5, [r4, r0]
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 605              		.loc 1 401 0 is_stmt 1 discriminator 2
 606 0012 0130     		adds	r0, r0, #1
 607 0014 205C     		ldrb	r0, [r4, r0]
 608 0016 0128     		cmp	r0, #1
 609 0018 04D0     		beq	.L46
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 610              		.loc 1 449 0
 611 001a 0220     		movs	r0, #2
 612              	.LVL44:
 613              	.L39:
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 614              		.loc 1 453 0
 615 001c 2423     		movs	r3, #36
 616 001e 0022     		movs	r2, #0
 617 0020 E254     		strb	r2, [r4, r3]
 618              	.LVL45:
 619              	.L38:
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 620              		.loc 1 456 0
 621              		@ sp needed
 622              	.LVL46:
 623 0022 70BD     		pop	{r4, r5, r6, pc}
 624              	.LVL47:
 625              	.L46:
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 626              		.loc 1 404 0
 627 0024 2430     		adds	r0, r0, #36
 628 0026 0135     		adds	r5, r5, #1
 629 0028 2554     		strb	r5, [r4, r0]
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 630              		.loc 1 405 0
 631 002a 0020     		movs	r0, #0
 632 002c E063     		str	r0, [r4, #60]
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 633              		.loc 1 408 0
 634 002e 2568     		ldr	r5, [r4]
 635 0030 2868     		ldr	r0, [r5]
 636 0032 0126     		movs	r6, #1
 637 0034 B043     		bics	r0, r6
 638 0036 2860     		str	r0, [r5]
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 639              		.loc 1 411 0
 640 0038 2000     		movs	r0, r4
 641 003a FFF7FEFF 		bl	DMA_SetConfig
 642              	.LVL48:
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 643              		.loc 1 415 0
 644 003e 236B     		ldr	r3, [r4, #48]
 645 0040 002B     		cmp	r3, #0
 646 0042 1CD0     		beq	.L40
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 647              		.loc 1 418 0
 648 0044 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccByvpkg.s 			page 32


 649 0046 1368     		ldr	r3, [r2]
 650 0048 0E21     		movs	r1, #14
 651 004a 0B43     		orrs	r3, r1
 652 004c 1360     		str	r3, [r2]
 653              	.L41:
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 654              		.loc 1 427 0
 655 004e 636C     		ldr	r3, [r4, #68]
 656 0050 1A68     		ldr	r2, [r3]
 657 0052 D203     		lsls	r2, r2, #15
 658 0054 04D5     		bpl	.L42
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 659              		.loc 1 430 0
 660 0056 1968     		ldr	r1, [r3]
 661 0058 8022     		movs	r2, #128
 662 005a 5200     		lsls	r2, r2, #1
 663 005c 0A43     		orrs	r2, r1
 664 005e 1A60     		str	r2, [r3]
 665              	.L42:
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 666              		.loc 1 433 0
 667 0060 236D     		ldr	r3, [r4, #80]
 668 0062 002B     		cmp	r3, #0
 669 0064 04D0     		beq	.L43
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 670              		.loc 1 437 0
 671 0066 1968     		ldr	r1, [r3]
 672 0068 8022     		movs	r2, #128
 673 006a 5200     		lsls	r2, r2, #1
 674 006c 0A43     		orrs	r2, r1
 675 006e 1A60     		str	r2, [r3]
 676              	.L43:
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 677              		.loc 1 441 0
 678 0070 2268     		ldr	r2, [r4]
 679 0072 1368     		ldr	r3, [r2]
 680 0074 0121     		movs	r1, #1
 681 0076 0B43     		orrs	r3, r1
 682 0078 1360     		str	r3, [r2]
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 683              		.loc 1 393 0
 684 007a 0020     		movs	r0, #0
 685 007c CEE7     		b	.L39
 686              	.L40:
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_TE));
 687              		.loc 1 422 0
 688 007e 2268     		ldr	r2, [r4]
 689 0080 1368     		ldr	r3, [r2]
 690 0082 0421     		movs	r1, #4
 691 0084 8B43     		bics	r3, r1
 692 0086 1360     		str	r3, [r2]
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 693              		.loc 1 423 0
 694 0088 2268     		ldr	r2, [r4]
 695 008a 1368     		ldr	r3, [r2]
 696 008c 0631     		adds	r1, r1, #6
 697 008e 0B43     		orrs	r3, r1
ARM GAS  /tmp/ccByvpkg.s 			page 33


 698 0090 1360     		str	r3, [r2]
 699 0092 DCE7     		b	.L41
 700              	.LVL49:
 701              	.L44:
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 702              		.loc 1 399 0
 703 0094 0220     		movs	r0, #2
 704 0096 C4E7     		b	.L38
 705              		.cfi_endproc
 706              	.LFE176:
 708              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 709              		.align	1
 710              		.global	HAL_DMA_Abort
 711              		.syntax unified
 712              		.code	16
 713              		.thumb_func
 714              		.fpu softvfp
 716              	HAL_DMA_Abort:
 717              	.LFB177:
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the DMA peripheral handle */
 718              		.loc 1 465 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              	.LVL50:
 723 0000 30B5     		push	{r4, r5, lr}
 724              	.LCFI6:
 725              		.cfi_def_cfa_offset 12
 726              		.cfi_offset 4, -12
 727              		.cfi_offset 5, -8
 728              		.cfi_offset 14, -4
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 729              		.loc 1 467 0
 730 0002 0028     		cmp	r0, #0
 731 0004 36D0     		beq	.L51
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 732              		.loc 1 473 0
 733 0006 2523     		movs	r3, #37
 734 0008 C35C     		ldrb	r3, [r0, r3]
 735 000a 022B     		cmp	r3, #2
 736 000c 06D0     		beq	.L49
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 737              		.loc 1 475 0
 738 000e 0423     		movs	r3, #4
 739 0010 C363     		str	r3, [r0, #60]
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 740              		.loc 1 478 0
 741 0012 2033     		adds	r3, r3, #32
 742 0014 0022     		movs	r2, #0
 743 0016 C254     		strb	r2, [r0, r3]
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 744              		.loc 1 480 0
 745 0018 0120     		movs	r0, #1
 746              	.LVL51:
 747              	.L48:
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 748              		.loc 1 517 0
ARM GAS  /tmp/ccByvpkg.s 			page 34


 749              		@ sp needed
 750 001a 30BD     		pop	{r4, r5, pc}
 751              	.LVL52:
 752              	.L49:
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 753              		.loc 1 485 0
 754 001c 0268     		ldr	r2, [r0]
 755 001e 1368     		ldr	r3, [r2]
 756 0020 0E21     		movs	r1, #14
 757 0022 8B43     		bics	r3, r1
 758 0024 1360     		str	r3, [r2]
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 759              		.loc 1 488 0
 760 0026 426C     		ldr	r2, [r0, #68]
 761 0028 1368     		ldr	r3, [r2]
 762 002a 1349     		ldr	r1, .L52
 763 002c 0B40     		ands	r3, r1
 764 002e 1360     		str	r3, [r2]
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 765              		.loc 1 491 0
 766 0030 0168     		ldr	r1, [r0]
 767 0032 0A68     		ldr	r2, [r1]
 768 0034 0123     		movs	r3, #1
 769 0036 9A43     		bics	r2, r3
 770 0038 0A60     		str	r2, [r1]
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 771              		.loc 1 494 0
 772 003a 104C     		ldr	r4, .L52+4
 773 003c 6268     		ldr	r2, [r4, #4]
 774 003e 1C21     		movs	r1, #28
 775 0040 056C     		ldr	r5, [r0, #64]
 776 0042 2940     		ands	r1, r5
 777 0044 8B40     		lsls	r3, r3, r1
 778 0046 1343     		orrs	r3, r2
 779 0048 6360     		str	r3, [r4, #4]
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 780              		.loc 1 497 0
 781 004a 836C     		ldr	r3, [r0, #72]
 782 004c C26C     		ldr	r2, [r0, #76]
 783 004e 5A60     		str	r2, [r3, #4]
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 784              		.loc 1 499 0
 785 0050 036D     		ldr	r3, [r0, #80]
 786 0052 002B     		cmp	r3, #0
 787 0054 06D0     		beq	.L50
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 788              		.loc 1 503 0
 789 0056 1A68     		ldr	r2, [r3]
 790 0058 0749     		ldr	r1, .L52
 791 005a 0A40     		ands	r2, r1
 792 005c 1A60     		str	r2, [r3]
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 793              		.loc 1 506 0
 794 005e 436D     		ldr	r3, [r0, #84]
 795 0060 826D     		ldr	r2, [r0, #88]
 796 0062 5A60     		str	r2, [r3, #4]
 797              	.L50:
ARM GAS  /tmp/ccByvpkg.s 			page 35


 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 798              		.loc 1 510 0
 799 0064 2523     		movs	r3, #37
 800 0066 0122     		movs	r2, #1
 801 0068 C254     		strb	r2, [r0, r3]
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 802              		.loc 1 513 0
 803 006a 013B     		subs	r3, r3, #1
 804 006c 0022     		movs	r2, #0
 805 006e C254     		strb	r2, [r0, r3]
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 806              		.loc 1 516 0
 807 0070 0020     		movs	r0, #0
 808              	.LVL53:
 809 0072 D2E7     		b	.L48
 810              	.LVL54:
 811              	.L51:
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 812              		.loc 1 469 0
 813 0074 0120     		movs	r0, #1
 814              	.LVL55:
 815 0076 D0E7     		b	.L48
 816              	.L53:
 817              		.align	2
 818              	.L52:
 819 0078 FFFEFFFF 		.word	-257
 820 007c 00000240 		.word	1073872896
 821              		.cfi_endproc
 822              	.LFE177:
 824              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 825              		.align	1
 826              		.global	HAL_DMA_Abort_IT
 827              		.syntax unified
 828              		.code	16
 829              		.thumb_func
 830              		.fpu softvfp
 832              	HAL_DMA_Abort_IT:
 833              	.LFB178:
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 834              		.loc 1 526 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838              	.LVL56:
 839 0000 70B5     		push	{r4, r5, r6, lr}
 840              	.LCFI7:
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 4, -16
 843              		.cfi_offset 5, -12
 844              		.cfi_offset 6, -8
 845              		.cfi_offset 14, -4
 846              	.LVL57:
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 847              		.loc 1 531 0
 848 0002 2423     		movs	r3, #36
 849 0004 0122     		movs	r2, #1
 850 0006 C254     		strb	r2, [r0, r3]
ARM GAS  /tmp/ccByvpkg.s 			page 36


 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 851              		.loc 1 533 0
 852 0008 0133     		adds	r3, r3, #1
 853 000a C35C     		ldrb	r3, [r0, r3]
 854 000c 022B     		cmp	r3, #2
 855 000e 03D0     		beq	.L55
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 856              		.loc 1 536 0
 857 0010 0423     		movs	r3, #4
 858 0012 C363     		str	r3, [r0, #60]
 859              	.LVL58:
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 860              		.loc 1 538 0
 861 0014 0120     		movs	r0, #1
 862              	.LVL59:
 863              	.L56:
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 864              		.loc 1 580 0
 865              		@ sp needed
 866 0016 70BD     		pop	{r4, r5, r6, pc}
 867              	.LVL60:
 868              	.L55:
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 869              		.loc 1 543 0
 870 0018 0268     		ldr	r2, [r0]
 871 001a 1368     		ldr	r3, [r2]
 872 001c 0E21     		movs	r1, #14
 873 001e 8B43     		bics	r3, r1
 874 0020 1360     		str	r3, [r2]
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 875              		.loc 1 546 0
 876 0022 0168     		ldr	r1, [r0]
 877 0024 0A68     		ldr	r2, [r1]
 878 0026 0123     		movs	r3, #1
 879 0028 9A43     		bics	r2, r3
 880 002a 0A60     		str	r2, [r1]
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 881              		.loc 1 549 0
 882 002c 416C     		ldr	r1, [r0, #68]
 883 002e 0A68     		ldr	r2, [r1]
 884 0030 124C     		ldr	r4, .L59
 885 0032 2240     		ands	r2, r4
 886 0034 0A60     		str	r2, [r1]
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 887              		.loc 1 552 0
 888 0036 124C     		ldr	r4, .L59+4
 889 0038 6268     		ldr	r2, [r4, #4]
 890 003a 1C21     		movs	r1, #28
 891 003c 056C     		ldr	r5, [r0, #64]
 892 003e 2940     		ands	r1, r5
 893 0040 8B40     		lsls	r3, r3, r1
 894 0042 1343     		orrs	r3, r2
 895 0044 6360     		str	r3, [r4, #4]
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 896              		.loc 1 555 0
 897 0046 836C     		ldr	r3, [r0, #72]
 898 0048 C26C     		ldr	r2, [r0, #76]
ARM GAS  /tmp/ccByvpkg.s 			page 37


 899 004a 5A60     		str	r2, [r3, #4]
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 900              		.loc 1 557 0
 901 004c 036D     		ldr	r3, [r0, #80]
 902 004e 002B     		cmp	r3, #0
 903 0050 06D0     		beq	.L57
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 904              		.loc 1 561 0
 905 0052 1A68     		ldr	r2, [r3]
 906 0054 0949     		ldr	r1, .L59
 907 0056 0A40     		ands	r2, r1
 908 0058 1A60     		str	r2, [r3]
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 909              		.loc 1 564 0
 910 005a 436D     		ldr	r3, [r0, #84]
 911 005c 826D     		ldr	r2, [r0, #88]
 912 005e 5A60     		str	r2, [r3, #4]
 913              	.L57:
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 914              		.loc 1 568 0
 915 0060 2523     		movs	r3, #37
 916 0062 0122     		movs	r2, #1
 917 0064 C254     		strb	r2, [r0, r3]
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 918              		.loc 1 571 0
 919 0066 013B     		subs	r3, r3, #1
 920 0068 0022     		movs	r2, #0
 921 006a C254     		strb	r2, [r0, r3]
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 922              		.loc 1 574 0
 923 006c 836B     		ldr	r3, [r0, #56]
 924 006e 002B     		cmp	r3, #0
 925 0070 02D0     		beq	.L58
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 926              		.loc 1 576 0
 927 0072 9847     		blx	r3
 928              	.LVL61:
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 929              		.loc 1 527 0
 930 0074 0020     		movs	r0, #0
 931 0076 CEE7     		b	.L56
 932              	.LVL62:
 933              	.L58:
 934 0078 0020     		movs	r0, #0
 935              	.LVL63:
 936 007a CCE7     		b	.L56
 937              	.L60:
 938              		.align	2
 939              	.L59:
 940 007c FFFEFFFF 		.word	-257
 941 0080 00000240 		.word	1073872896
 942              		.cfi_endproc
 943              	.LFE178:
 945              		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 946              		.align	1
 947              		.global	HAL_DMA_PollForTransfer
 948              		.syntax unified
ARM GAS  /tmp/ccByvpkg.s 			page 38


 949              		.code	16
 950              		.thumb_func
 951              		.fpu softvfp
 953              	HAL_DMA_PollForTransfer:
 954              	.LFB179:
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t temp;
 955              		.loc 1 591 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 8
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 959              	.LVL64:
 960 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 961              	.LCFI8:
 962              		.cfi_def_cfa_offset 20
 963              		.cfi_offset 4, -20
 964              		.cfi_offset 5, -16
 965              		.cfi_offset 6, -12
 966              		.cfi_offset 7, -8
 967              		.cfi_offset 14, -4
 968 0002 83B0     		sub	sp, sp, #12
 969              	.LCFI9:
 970              		.cfi_def_cfa_offset 32
 971 0004 0600     		movs	r6, r0
 972 0006 0C00     		movs	r4, r1
 973 0008 1700     		movs	r7, r2
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 974              		.loc 1 596 0
 975 000a 2423     		movs	r3, #36
 976 000c 0022     		movs	r2, #0
 977              	.LVL65:
 978 000e C254     		strb	r2, [r0, r3]
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 979              		.loc 1 598 0
 980 0010 0133     		adds	r3, r3, #1
 981 0012 C35C     		ldrb	r3, [r0, r3]
 982 0014 022B     		cmp	r3, #2
 983 0016 04D0     		beq	.L62
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 984              		.loc 1 601 0
 985 0018 0423     		movs	r3, #4
 986 001a C363     		str	r3, [r0, #60]
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 987              		.loc 1 603 0
 988 001c 0120     		movs	r0, #1
 989              	.LVL66:
 990              	.L63:
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 991              		.loc 1 713 0
 992 001e 03B0     		add	sp, sp, #12
 993              		@ sp needed
 994              	.LVL67:
 995              	.LVL68:
 996 0020 F0BD     		pop	{r4, r5, r6, r7, pc}
 997              	.LVL69:
 998              	.L62:
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 999              		.loc 1 607 0
ARM GAS  /tmp/ccByvpkg.s 			page 39


 1000 0022 0368     		ldr	r3, [r0]
 1001 0024 1B68     		ldr	r3, [r3]
 1002 0026 9B06     		lsls	r3, r3, #26
 1003 0028 2AD4     		bmi	.L76
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1004              		.loc 1 614 0
 1005 002a 0029     		cmp	r1, #0
 1006 002c 2DD1     		bne	.L65
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 1007              		.loc 1 617 0
 1008 002e 1C23     		movs	r3, #28
 1009 0030 026C     		ldr	r2, [r0, #64]
 1010 0032 1340     		ands	r3, r2
 1011 0034 0225     		movs	r5, #2
 1012 0036 9D40     		lsls	r5, r5, r3
 1013              	.LVL70:
 1014              	.L66:
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1015              		.loc 1 626 0
 1016 0038 FFF7FEFF 		bl	HAL_GetTick
 1017              	.LVL71:
 1018 003c 0190     		str	r0, [sp, #4]
 1019              	.LVL72:
 1020              	.L69:
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1021              		.loc 1 628 0
 1022 003e 3C4B     		ldr	r3, .L79
 1023 0040 1B68     		ldr	r3, [r3]
 1024 0042 1D42     		tst	r5, r3
 1025 0044 37D1     		bne	.L77
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 1026              		.loc 1 630 0
 1027 0046 3A4B     		ldr	r3, .L79
 1028 0048 1968     		ldr	r1, [r3]
 1029 004a 1C23     		movs	r3, #28
 1030 004c 326C     		ldr	r2, [r6, #64]
 1031 004e 1340     		ands	r3, r2
 1032 0050 0822     		movs	r2, #8
 1033 0052 9A40     		lsls	r2, r2, r3
 1034 0054 0A42     		tst	r2, r1
 1035 0056 1ED1     		bne	.L78
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 1036              		.loc 1 649 0
 1037 0058 7B1C     		adds	r3, r7, #1
 1038 005a F0D0     		beq	.L69
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       {
 1039              		.loc 1 651 0
 1040 005c FFF7FEFF 		bl	HAL_GetTick
 1041              	.LVL73:
 1042 0060 019B     		ldr	r3, [sp, #4]
 1043 0062 C01A     		subs	r0, r0, r3
 1044 0064 B842     		cmp	r0, r7
 1045 0066 01D8     		bhi	.L70
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       {
 1046              		.loc 1 651 0 is_stmt 0 discriminator 1
 1047 0068 002F     		cmp	r7, #0
 1048 006a E8D1     		bne	.L69
ARM GAS  /tmp/ccByvpkg.s 			page 40


 1049              	.L70:
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1050              		.loc 1 654 0 is_stmt 1
 1051 006c 2023     		movs	r3, #32
 1052 006e F363     		str	r3, [r6, #60]
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1053              		.loc 1 657 0
 1054 0070 0533     		adds	r3, r3, #5
 1055 0072 0122     		movs	r2, #1
 1056 0074 F254     		strb	r2, [r6, r3]
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1057              		.loc 1 660 0
 1058 0076 013B     		subs	r3, r3, #1
 1059 0078 0022     		movs	r2, #0
 1060 007a F254     		strb	r2, [r6, r3]
 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       }
 1061              		.loc 1 662 0
 1062 007c 0120     		movs	r0, #1
 1063 007e CEE7     		b	.L63
 1064              	.LVL74:
 1065              	.L76:
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
 1066              		.loc 1 609 0
 1067 0080 8023     		movs	r3, #128
 1068 0082 5B00     		lsls	r3, r3, #1
 1069 0084 C363     		str	r3, [r0, #60]
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 1070              		.loc 1 610 0
 1071 0086 0120     		movs	r0, #1
 1072              	.LVL75:
 1073 0088 C9E7     		b	.L63
 1074              	.LVL76:
 1075              	.L65:
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 1076              		.loc 1 622 0
 1077 008a 1C23     		movs	r3, #28
 1078 008c 026C     		ldr	r2, [r0, #64]
 1079 008e 1340     		ands	r3, r2
 1080 0090 0425     		movs	r5, #4
 1081 0092 9D40     		lsls	r5, r5, r3
 1082              	.LVL77:
 1083 0094 D0E7     		b	.L66
 1084              	.LVL78:
 1085              	.L78:
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1086              		.loc 1 635 0
 1087 0096 2648     		ldr	r0, .L79
 1088 0098 4168     		ldr	r1, [r0, #4]
 1089 009a 0122     		movs	r2, #1
 1090 009c 1400     		movs	r4, r2
 1091 009e 9C40     		lsls	r4, r4, r3
 1092 00a0 2300     		movs	r3, r4
 1093 00a2 0B43     		orrs	r3, r1
 1094 00a4 4360     		str	r3, [r0, #4]
 1095              	.LVL79:
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1096              		.loc 1 638 0
ARM GAS  /tmp/ccByvpkg.s 			page 41


 1097 00a6 F263     		str	r2, [r6, #60]
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1098              		.loc 1 641 0
 1099 00a8 2523     		movs	r3, #37
 1100 00aa F254     		strb	r2, [r6, r3]
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1101              		.loc 1 644 0
 1102 00ac 013B     		subs	r3, r3, #1
 1103 00ae 0022     		movs	r2, #0
 1104 00b0 F254     		strb	r2, [r6, r3]
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 1105              		.loc 1 646 0
 1106 00b2 0120     		movs	r0, #1
 1107 00b4 B3E7     		b	.L63
 1108              	.LVL80:
 1109              	.L77:
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1110              		.loc 1 668 0
 1111 00b6 336D     		ldr	r3, [r6, #80]
 1112 00b8 002B     		cmp	r3, #0
 1113 00ba 11D0     		beq	.L72
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 1114              		.loc 1 671 0
 1115 00bc 726D     		ldr	r2, [r6, #84]
 1116 00be 1268     		ldr	r2, [r2]
 1117 00c0 B16D     		ldr	r1, [r6, #88]
 1118 00c2 1142     		tst	r1, r2
 1119 00c4 0CD0     		beq	.L72
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1120              		.loc 1 674 0
 1121 00c6 1968     		ldr	r1, [r3]
 1122 00c8 8022     		movs	r2, #128
 1123 00ca 5200     		lsls	r2, r2, #1
 1124 00cc 0A43     		orrs	r2, r1
 1125 00ce 1A60     		str	r2, [r3]
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1126              		.loc 1 677 0
 1127 00d0 736D     		ldr	r3, [r6, #84]
 1128 00d2 B26D     		ldr	r2, [r6, #88]
 1129 00d4 5A60     		str	r2, [r3, #4]
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 1130              		.loc 1 680 0
 1131 00d6 F26B     		ldr	r2, [r6, #60]
 1132 00d8 8023     		movs	r3, #128
 1133 00da DB00     		lsls	r3, r3, #3
 1134 00dc 1343     		orrs	r3, r2
 1135 00de F363     		str	r3, [r6, #60]
 1136              	.L72:
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1137              		.loc 1 685 0
 1138 00e0 B36C     		ldr	r3, [r6, #72]
 1139 00e2 1968     		ldr	r1, [r3]
 1140 00e4 F26C     		ldr	r2, [r6, #76]
 1141 00e6 0A42     		tst	r2, r1
 1142 00e8 05D0     		beq	.L73
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1143              		.loc 1 688 0
ARM GAS  /tmp/ccByvpkg.s 			page 42


 1144 00ea 5A60     		str	r2, [r3, #4]
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 1145              		.loc 1 691 0
 1146 00ec F26B     		ldr	r2, [r6, #60]
 1147 00ee 8023     		movs	r3, #128
 1148 00f0 9B00     		lsls	r3, r3, #2
 1149 00f2 1343     		orrs	r3, r2
 1150 00f4 F363     		str	r3, [r6, #60]
 1151              	.L73:
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1152              		.loc 1 694 0
 1153 00f6 002C     		cmp	r4, #0
 1154 00f8 10D1     		bne	.L74
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1155              		.loc 1 697 0
 1156 00fa 0D48     		ldr	r0, .L79
 1157 00fc 4368     		ldr	r3, [r0, #4]
 1158 00fe 1C21     		movs	r1, #28
 1159 0100 326C     		ldr	r2, [r6, #64]
 1160 0102 1140     		ands	r1, r2
 1161 0104 0222     		movs	r2, #2
 1162 0106 8A40     		lsls	r2, r2, r1
 1163 0108 1343     		orrs	r3, r2
 1164 010a 4360     		str	r3, [r0, #4]
 1165              	.LVL81:
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 1166              		.loc 1 701 0
 1167 010c 2523     		movs	r3, #37
 1168 010e 0122     		movs	r2, #1
 1169 0110 F254     		strb	r2, [r6, r3]
 1170              	.L75:
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1171              		.loc 1 710 0
 1172 0112 2423     		movs	r3, #36
 1173 0114 0022     		movs	r2, #0
 1174 0116 F254     		strb	r2, [r6, r3]
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 1175              		.loc 1 712 0
 1176 0118 0020     		movs	r0, #0
 1177 011a 80E7     		b	.L63
 1178              	.LVL82:
 1179              	.L74:
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 1180              		.loc 1 706 0
 1181 011c 0448     		ldr	r0, .L79
 1182 011e 4368     		ldr	r3, [r0, #4]
 1183 0120 1C21     		movs	r1, #28
 1184 0122 326C     		ldr	r2, [r6, #64]
 1185 0124 1140     		ands	r1, r2
 1186 0126 0422     		movs	r2, #4
 1187 0128 8A40     		lsls	r2, r2, r1
 1188 012a 1343     		orrs	r3, r2
 1189 012c 4360     		str	r3, [r0, #4]
 1190              	.LVL83:
 1191 012e F0E7     		b	.L75
 1192              	.L80:
 1193              		.align	2
ARM GAS  /tmp/ccByvpkg.s 			page 43


 1194              	.L79:
 1195 0130 00000240 		.word	1073872896
 1196              		.cfi_endproc
 1197              	.LFE179:
 1199              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1200              		.align	1
 1201              		.global	HAL_DMA_IRQHandler
 1202              		.syntax unified
 1203              		.code	16
 1204              		.thumb_func
 1205              		.fpu softvfp
 1207              	HAL_DMA_IRQHandler:
 1208              	.LFB180:
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t flag_it = DMA1->ISR;
 1209              		.loc 1 722 0
 1210              		.cfi_startproc
 1211              		@ args = 0, pretend = 0, frame = 0
 1212              		@ frame_needed = 0, uses_anonymous_args = 0
 1213              	.LVL84:
 1214 0000 70B5     		push	{r4, r5, r6, lr}
 1215              	.LCFI10:
 1216              		.cfi_def_cfa_offset 16
 1217              		.cfi_offset 4, -16
 1218              		.cfi_offset 5, -12
 1219              		.cfi_offset 6, -8
 1220              		.cfi_offset 14, -4
 723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t source_it = hdma->Instance->CCR;
 1221              		.loc 1 723 0
 1222 0002 314B     		ldr	r3, .L87
 1223 0004 1968     		ldr	r1, [r3]
 1224              	.LVL85:
 724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1225              		.loc 1 724 0
 1226 0006 0468     		ldr	r4, [r0]
 1227 0008 2568     		ldr	r5, [r4]
 1228              	.LVL86:
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1229              		.loc 1 727 0
 1230 000a 1C23     		movs	r3, #28
 1231 000c 026C     		ldr	r2, [r0, #64]
 1232 000e 1340     		ands	r3, r2
 1233 0010 0422     		movs	r2, #4
 1234 0012 9A40     		lsls	r2, r2, r3
 1235 0014 1142     		tst	r1, r2
 1236 0016 16D0     		beq	.L82
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1237              		.loc 1 727 0 is_stmt 0 discriminator 1
 1238 0018 6A07     		lsls	r2, r5, #29
 1239 001a 14D5     		bpl	.L82
 730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 1240              		.loc 1 730 0 is_stmt 1
 1241 001c 2368     		ldr	r3, [r4]
 1242 001e 9B06     		lsls	r3, r3, #26
 1243 0020 03D4     		bmi	.L83
 733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 1244              		.loc 1 733 0
 1245 0022 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccByvpkg.s 			page 44


 1246 0024 0422     		movs	r2, #4
 1247 0026 9343     		bics	r3, r2
 1248 0028 2360     		str	r3, [r4]
 1249              	.L83:
 736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1250              		.loc 1 736 0
 1251 002a 274C     		ldr	r4, .L87
 1252 002c 6368     		ldr	r3, [r4, #4]
 1253 002e 1C21     		movs	r1, #28
 1254              	.LVL87:
 1255 0030 026C     		ldr	r2, [r0, #64]
 1256 0032 1140     		ands	r1, r2
 1257 0034 0422     		movs	r2, #4
 1258 0036 8A40     		lsls	r2, r2, r1
 1259 0038 1343     		orrs	r3, r2
 1260 003a 6360     		str	r3, [r4, #4]
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 1261              		.loc 1 741 0
 1262 003c 036B     		ldr	r3, [r0, #48]
 1263 003e 002B     		cmp	r3, #0
 1264 0040 00D0     		beq	.L81
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 1265              		.loc 1 744 0
 1266 0042 9847     		blx	r3
 1267              	.LVL88:
 1268              	.L81:
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1269              		.loc 1 803 0
 1270              		@ sp needed
 1271 0044 70BD     		pop	{r4, r5, r6, pc}
 1272              	.LVL89:
 1273              	.L82:
 749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1274              		.loc 1 749 0
 1275 0046 0222     		movs	r2, #2
 1276 0048 9A40     		lsls	r2, r2, r3
 1277 004a 1142     		tst	r1, r2
 1278 004c 1CD0     		beq	.L85
 749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1279              		.loc 1 749 0 is_stmt 0 discriminator 1
 1280 004e AA07     		lsls	r2, r5, #30
 1281 0050 1AD5     		bpl	.L85
 751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 1282              		.loc 1 751 0 is_stmt 1
 1283 0052 2368     		ldr	r3, [r4]
 1284 0054 9B06     		lsls	r3, r3, #26
 1285 0056 06D4     		bmi	.L86
 754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1286              		.loc 1 754 0
 1287 0058 2368     		ldr	r3, [r4]
 1288 005a 0A22     		movs	r2, #10
 1289 005c 9343     		bics	r3, r2
 1290 005e 2360     		str	r3, [r4]
 757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 1291              		.loc 1 757 0
 1292 0060 2523     		movs	r3, #37
 1293 0062 093A     		subs	r2, r2, #9
ARM GAS  /tmp/ccByvpkg.s 			page 45


 1294 0064 C254     		strb	r2, [r0, r3]
 1295              	.L86:
 760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1296              		.loc 1 760 0
 1297 0066 184C     		ldr	r4, .L87
 1298 0068 6368     		ldr	r3, [r4, #4]
 1299 006a 1C21     		movs	r1, #28
 1300              	.LVL90:
 1301 006c 026C     		ldr	r2, [r0, #64]
 1302 006e 1140     		ands	r1, r2
 1303 0070 0222     		movs	r2, #2
 1304 0072 8A40     		lsls	r2, r2, r1
 1305 0074 1343     		orrs	r3, r2
 1306 0076 6360     		str	r3, [r4, #4]
 763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1307              		.loc 1 763 0
 1308 0078 2423     		movs	r3, #36
 1309 007a 0022     		movs	r2, #0
 1310 007c C254     		strb	r2, [r0, r3]
 765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 1311              		.loc 1 765 0
 1312 007e C36A     		ldr	r3, [r0, #44]
 1313 0080 002B     		cmp	r3, #0
 1314 0082 DFD0     		beq	.L81
 768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 1315              		.loc 1 768 0
 1316 0084 9847     		blx	r3
 1317              	.LVL91:
 1318 0086 DDE7     		b	.L81
 1319              	.LVL92:
 1320              	.L85:
 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1321              		.loc 1 773 0
 1322 0088 0822     		movs	r2, #8
 1323 008a 9A40     		lsls	r2, r2, r3
 1324 008c 1142     		tst	r1, r2
 1325 008e D9D0     		beq	.L81
 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1326              		.loc 1 773 0 is_stmt 0 discriminator 1
 1327 0090 2B07     		lsls	r3, r5, #28
 1328 0092 D7D5     		bpl	.L81
 778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1329              		.loc 1 778 0 is_stmt 1
 1330 0094 2368     		ldr	r3, [r4]
 1331 0096 0E22     		movs	r2, #14
 1332 0098 9343     		bics	r3, r2
 1333 009a 2360     		str	r3, [r4]
 781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1334              		.loc 1 781 0
 1335 009c 0A4C     		ldr	r4, .L87
 1336 009e 6268     		ldr	r2, [r4, #4]
 1337 00a0 1C21     		movs	r1, #28
 1338              	.LVL93:
 1339 00a2 036C     		ldr	r3, [r0, #64]
 1340 00a4 1940     		ands	r1, r3
 1341 00a6 0123     		movs	r3, #1
 1342 00a8 1D00     		movs	r5, r3
ARM GAS  /tmp/ccByvpkg.s 			page 46


 1343              	.LVL94:
 1344 00aa 8D40     		lsls	r5, r5, r1
 1345 00ac 2A43     		orrs	r2, r5
 1346 00ae 6260     		str	r2, [r4, #4]
 784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1347              		.loc 1 784 0
 1348 00b0 C363     		str	r3, [r0, #60]
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1349              		.loc 1 787 0
 1350 00b2 2522     		movs	r2, #37
 1351 00b4 8354     		strb	r3, [r0, r2]
 790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1352              		.loc 1 790 0
 1353 00b6 2333     		adds	r3, r3, #35
 1354 00b8 0022     		movs	r2, #0
 1355 00ba C254     		strb	r2, [r0, r3]
 792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 1356              		.loc 1 792 0
 1357 00bc 436B     		ldr	r3, [r0, #52]
 1358 00be 002B     		cmp	r3, #0
 1359 00c0 C0D0     		beq	.L81
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 1360              		.loc 1 795 0
 1361 00c2 9847     		blx	r3
 1362              	.LVL95:
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 1363              		.loc 1 802 0
 1364 00c4 BEE7     		b	.L81
 1365              	.L88:
 1366 00c6 C046     		.align	2
 1367              	.L87:
 1368 00c8 00000240 		.word	1073872896
 1369              		.cfi_endproc
 1370              	.LFE180:
 1372              		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1373              		.align	1
 1374              		.global	HAL_DMA_RegisterCallback
 1375              		.syntax unified
 1376              		.code	16
 1377              		.thumb_func
 1378              		.fpu softvfp
 1380              	HAL_DMA_RegisterCallback:
 1381              	.LFB181:
 816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1382              		.loc 1 816 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 0
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 1386              	.LVL96:
 1387 0000 10B5     		push	{r4, lr}
 1388              	.LCFI11:
 1389              		.cfi_def_cfa_offset 8
 1390              		.cfi_offset 4, -8
 1391              		.cfi_offset 14, -4
 1392              	.LVL97:
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1393              		.loc 1 820 0
ARM GAS  /tmp/ccByvpkg.s 			page 47


 1394 0002 2423     		movs	r3, #36
 1395 0004 C35C     		ldrb	r3, [r0, r3]
 1396 0006 012B     		cmp	r3, #1
 1397 0008 22D0     		beq	.L96
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1398              		.loc 1 820 0 is_stmt 0 discriminator 2
 1399 000a 2423     		movs	r3, #36
 1400 000c 0124     		movs	r4, #1
 1401 000e C454     		strb	r4, [r0, r3]
 822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1402              		.loc 1 822 0 is_stmt 1 discriminator 2
 1403 0010 0133     		adds	r3, r3, #1
 1404 0012 C35C     		ldrb	r3, [r0, r3]
 1405 0014 012B     		cmp	r3, #1
 1406 0016 05D0     		beq	.L100
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 1407              		.loc 1 849 0
 1408 0018 0123     		movs	r3, #1
 1409              	.L91:
 1410              	.LVL98:
 853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1411              		.loc 1 853 0
 1412 001a 2422     		movs	r2, #36
 1413              	.LVL99:
 1414 001c 0021     		movs	r1, #0
 1415              	.LVL100:
 1416 001e 8154     		strb	r1, [r0, r2]
 1417              	.LVL101:
 1418              	.L90:
 856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1419              		.loc 1 856 0
 1420 0020 1800     		movs	r0, r3
 1421              	.LVL102:
 1422              		@ sp needed
 1423 0022 10BD     		pop	{r4, pc}
 1424              	.LVL103:
 1425              	.L100:
 824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 1426              		.loc 1 824 0
 1427 0024 0129     		cmp	r1, #1
 1428 0026 0AD0     		beq	.L92
 1429 0028 0029     		cmp	r1, #0
 1430 002a 05D0     		beq	.L93
 1431 002c 0229     		cmp	r1, #2
 1432 002e 09D0     		beq	.L94
 1433 0030 0329     		cmp	r1, #3
 1434 0032 0AD0     		beq	.L95
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1435              		.loc 1 843 0
 1436 0034 0123     		movs	r3, #1
 1437 0036 F0E7     		b	.L91
 1438              	.L93:
 827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1439              		.loc 1 827 0
 1440 0038 C262     		str	r2, [r0, #44]
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1441              		.loc 1 817 0
ARM GAS  /tmp/ccByvpkg.s 			page 48


 1442 003a 0023     		movs	r3, #0
 828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1443              		.loc 1 828 0
 1444 003c EDE7     		b	.L91
 1445              	.L92:
 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1446              		.loc 1 831 0
 1447 003e 0263     		str	r2, [r0, #48]
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1448              		.loc 1 817 0
 1449 0040 0023     		movs	r3, #0
 832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1450              		.loc 1 832 0
 1451 0042 EAE7     		b	.L91
 1452              	.L94:
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1453              		.loc 1 835 0
 1454 0044 4263     		str	r2, [r0, #52]
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1455              		.loc 1 817 0
 1456 0046 0023     		movs	r3, #0
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1457              		.loc 1 836 0
 1458 0048 E7E7     		b	.L91
 1459              	.L95:
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1460              		.loc 1 839 0
 1461 004a 8263     		str	r2, [r0, #56]
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1462              		.loc 1 817 0
 1463 004c 0023     		movs	r3, #0
 840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1464              		.loc 1 840 0
 1465 004e E4E7     		b	.L91
 1466              	.L96:
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1467              		.loc 1 820 0
 1468 0050 0223     		movs	r3, #2
 1469 0052 E5E7     		b	.L90
 1470              		.cfi_endproc
 1471              	.LFE181:
 1473              		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1474              		.align	1
 1475              		.global	HAL_DMA_UnRegisterCallback
 1476              		.syntax unified
 1477              		.code	16
 1478              		.thumb_func
 1479              		.fpu softvfp
 1481              	HAL_DMA_UnRegisterCallback:
 1482              	.LFB182:
 867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1483              		.loc 1 867 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 1487              		@ link register save eliminated.
 1488              	.LVL104:
ARM GAS  /tmp/ccByvpkg.s 			page 49


 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1489              		.loc 1 871 0
 1490 0000 2423     		movs	r3, #36
 1491 0002 C35C     		ldrb	r3, [r0, r3]
 1492 0004 012B     		cmp	r3, #1
 1493 0006 26D0     		beq	.L110
 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1494              		.loc 1 871 0 is_stmt 0 discriminator 2
 1495 0008 2423     		movs	r3, #36
 1496 000a 0122     		movs	r2, #1
 1497 000c C254     		strb	r2, [r0, r3]
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1498              		.loc 1 873 0 is_stmt 1 discriminator 2
 1499 000e 0133     		adds	r3, r3, #1
 1500 0010 C35C     		ldrb	r3, [r0, r3]
 1501 0012 012B     		cmp	r3, #1
 1502 0014 05D0     		beq	.L113
 907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 1503              		.loc 1 907 0
 1504 0016 0123     		movs	r3, #1
 1505              	.LVL105:
 1506              	.L103:
 911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1507              		.loc 1 911 0
 1508 0018 2422     		movs	r2, #36
 1509 001a 0021     		movs	r1, #0
 1510 001c 8154     		strb	r1, [r0, r2]
 1511              	.LVL106:
 1512              	.L102:
 914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1513              		.loc 1 914 0
 1514 001e 1800     		movs	r0, r3
 1515              	.LVL107:
 1516              		@ sp needed
 1517 0020 7047     		bx	lr
 1518              	.LVL108:
 1519              	.L113:
 875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 1520              		.loc 1 875 0
 1521 0022 0429     		cmp	r1, #4
 1522 0024 15D8     		bhi	.L112
 1523 0026 8900     		lsls	r1, r1, #2
 1524              	.LVL109:
 1525 0028 0C4B     		ldr	r3, .L114
 1526 002a 5B58     		ldr	r3, [r3, r1]
 1527 002c 9F46     		mov	pc, r3
 1528              		.section	.rodata.HAL_DMA_UnRegisterCallback,"a",%progbits
 1529              		.align	2
 1530              	.L105:
 1531 0000 2E000000 		.word	.L104
 1532 0004 34000000 		.word	.L106
 1533 0008 3A000000 		.word	.L107
 1534 000c 40000000 		.word	.L108
 1535 0010 46000000 		.word	.L109
 1536              		.section	.text.HAL_DMA_UnRegisterCallback
 1537              	.L104:
 878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
ARM GAS  /tmp/ccByvpkg.s 			page 50


 1538              		.loc 1 878 0
 1539 002e 0023     		movs	r3, #0
 1540 0030 C362     		str	r3, [r0, #44]
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1541              		.loc 1 879 0
 1542 0032 F1E7     		b	.L103
 1543              	.L106:
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1544              		.loc 1 882 0
 1545 0034 0023     		movs	r3, #0
 1546 0036 0363     		str	r3, [r0, #48]
 883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1547              		.loc 1 883 0
 1548 0038 EEE7     		b	.L103
 1549              	.L107:
 886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1550              		.loc 1 886 0
 1551 003a 0023     		movs	r3, #0
 1552 003c 4363     		str	r3, [r0, #52]
 887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1553              		.loc 1 887 0
 1554 003e EBE7     		b	.L103
 1555              	.L108:
 890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1556              		.loc 1 890 0
 1557 0040 0023     		movs	r3, #0
 1558 0042 8363     		str	r3, [r0, #56]
 891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1559              		.loc 1 891 0
 1560 0044 E8E7     		b	.L103
 1561              	.L109:
 894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferHalfCpltCallback = NULL;
 1562              		.loc 1 894 0
 1563 0046 0023     		movs	r3, #0
 1564 0048 C362     		str	r3, [r0, #44]
 895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferErrorCallback = NULL;
 1565              		.loc 1 895 0
 1566 004a 0363     		str	r3, [r0, #48]
 896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferAbortCallback = NULL;
 1567              		.loc 1 896 0
 1568 004c 4363     		str	r3, [r0, #52]
 897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1569              		.loc 1 897 0
 1570 004e 8363     		str	r3, [r0, #56]
 898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1571              		.loc 1 898 0
 1572 0050 E2E7     		b	.L103
 1573              	.LVL110:
 1574              	.L112:
 901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1575              		.loc 1 901 0
 1576 0052 0123     		movs	r3, #1
 1577 0054 E0E7     		b	.L103
 1578              	.L110:
 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1579              		.loc 1 871 0
 1580 0056 0223     		movs	r3, #2
ARM GAS  /tmp/ccByvpkg.s 			page 51


 1581 0058 E1E7     		b	.L102
 1582              	.L115:
 1583 005a C046     		.align	2
 1584              	.L114:
 1585 005c 00000000 		.word	.L105
 1586              		.cfi_endproc
 1587              	.LFE182:
 1589              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 1590              		.align	1
 1591              		.global	HAL_DMA_GetState
 1592              		.syntax unified
 1593              		.code	16
 1594              		.thumb_func
 1595              		.fpu softvfp
 1597              	HAL_DMA_GetState:
 1598              	.LFB183:
 945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Return DMA handle state */
 1599              		.loc 1 945 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 1603              		@ link register save eliminated.
 1604              	.LVL111:
 947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 1605              		.loc 1 947 0
 1606 0000 2523     		movs	r3, #37
 1607 0002 C05C     		ldrb	r0, [r0, r3]
 1608              	.LVL112:
 1609 0004 C0B2     		uxtb	r0, r0
 948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1610              		.loc 1 948 0
 1611              		@ sp needed
 1612 0006 7047     		bx	lr
 1613              		.cfi_endproc
 1614              	.LFE183:
 1616              		.section	.text.HAL_DMA_GetError,"ax",%progbits
 1617              		.align	1
 1618              		.global	HAL_DMA_GetError
 1619              		.syntax unified
 1620              		.code	16
 1621              		.thumb_func
 1622              		.fpu softvfp
 1624              	HAL_DMA_GetError:
 1625              	.LFB184:
 957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return hdma->ErrorCode;
 1626              		.loc 1 957 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 0, uses_anonymous_args = 0
 1630              		@ link register save eliminated.
 1631              	.LVL113:
 958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 1632              		.loc 1 958 0
 1633 0000 C06B     		ldr	r0, [r0, #60]
 1634              	.LVL114:
 959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 1635              		.loc 1 959 0
ARM GAS  /tmp/ccByvpkg.s 			page 52


 1636              		@ sp needed
 1637 0002 7047     		bx	lr
 1638              		.cfi_endproc
 1639              	.LFE184:
 1641              		.text
 1642              	.Letext0:
 1643              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1644              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1645              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 1646              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 1647              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 1648              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 1649              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 1650              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
ARM GAS  /tmp/ccByvpkg.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_dma.c
     /tmp/ccByvpkg.s:16     .text.DMA_SetConfig:00000000 $t
     /tmp/ccByvpkg.s:22     .text.DMA_SetConfig:00000000 DMA_SetConfig
     /tmp/ccByvpkg.s:93     .text.DMA_SetConfig:00000044 $d
     /tmp/ccByvpkg.s:99     .text.DMA_CalcDMAMUXChannelBaseAndMask:00000000 $t
     /tmp/ccByvpkg.s:105    .text.DMA_CalcDMAMUXChannelBaseAndMask:00000000 DMA_CalcDMAMUXChannelBaseAndMask
     /tmp/ccByvpkg.s:152    .text.DMA_CalcDMAMUXChannelBaseAndMask:00000030 $d
     /tmp/ccByvpkg.s:158    .text.DMA_CalcDMAMUXRequestGenBaseAndMask:00000000 $t
     /tmp/ccByvpkg.s:164    .text.DMA_CalcDMAMUXRequestGenBaseAndMask:00000000 DMA_CalcDMAMUXRequestGenBaseAndMask
     /tmp/ccByvpkg.s:200    .text.DMA_CalcDMAMUXRequestGenBaseAndMask:00000020 $d
     /tmp/ccByvpkg.s:206    .text.HAL_DMA_Init:00000000 $t
     /tmp/ccByvpkg.s:213    .text.HAL_DMA_Init:00000000 HAL_DMA_Init
     /tmp/ccByvpkg.s:347    .text.HAL_DMA_Init:000000a8 $d
     /tmp/ccByvpkg.s:353    .text.HAL_DMA_DeInit:00000000 $t
     /tmp/ccByvpkg.s:360    .text.HAL_DMA_DeInit:00000000 HAL_DMA_DeInit
     /tmp/ccByvpkg.s:478    .text.HAL_DMA_DeInit:00000084 $d
     /tmp/ccByvpkg.s:484    .text.HAL_DMA_Start:00000000 $t
     /tmp/ccByvpkg.s:491    .text.HAL_DMA_Start:00000000 HAL_DMA_Start
     /tmp/ccByvpkg.s:572    .text.HAL_DMA_Start_IT:00000000 $t
     /tmp/ccByvpkg.s:579    .text.HAL_DMA_Start_IT:00000000 HAL_DMA_Start_IT
     /tmp/ccByvpkg.s:709    .text.HAL_DMA_Abort:00000000 $t
     /tmp/ccByvpkg.s:716    .text.HAL_DMA_Abort:00000000 HAL_DMA_Abort
     /tmp/ccByvpkg.s:819    .text.HAL_DMA_Abort:00000078 $d
     /tmp/ccByvpkg.s:825    .text.HAL_DMA_Abort_IT:00000000 $t
     /tmp/ccByvpkg.s:832    .text.HAL_DMA_Abort_IT:00000000 HAL_DMA_Abort_IT
     /tmp/ccByvpkg.s:940    .text.HAL_DMA_Abort_IT:0000007c $d
     /tmp/ccByvpkg.s:946    .text.HAL_DMA_PollForTransfer:00000000 $t
     /tmp/ccByvpkg.s:953    .text.HAL_DMA_PollForTransfer:00000000 HAL_DMA_PollForTransfer
     /tmp/ccByvpkg.s:1195   .text.HAL_DMA_PollForTransfer:00000130 $d
     /tmp/ccByvpkg.s:1200   .text.HAL_DMA_IRQHandler:00000000 $t
     /tmp/ccByvpkg.s:1207   .text.HAL_DMA_IRQHandler:00000000 HAL_DMA_IRQHandler
     /tmp/ccByvpkg.s:1368   .text.HAL_DMA_IRQHandler:000000c8 $d
     /tmp/ccByvpkg.s:1373   .text.HAL_DMA_RegisterCallback:00000000 $t
     /tmp/ccByvpkg.s:1380   .text.HAL_DMA_RegisterCallback:00000000 HAL_DMA_RegisterCallback
     /tmp/ccByvpkg.s:1474   .text.HAL_DMA_UnRegisterCallback:00000000 $t
     /tmp/ccByvpkg.s:1481   .text.HAL_DMA_UnRegisterCallback:00000000 HAL_DMA_UnRegisterCallback
     /tmp/ccByvpkg.s:1529   .rodata.HAL_DMA_UnRegisterCallback:00000000 $d
     /tmp/ccByvpkg.s:1585   .text.HAL_DMA_UnRegisterCallback:0000005c $d
     /tmp/ccByvpkg.s:1590   .text.HAL_DMA_GetState:00000000 $t
     /tmp/ccByvpkg.s:1597   .text.HAL_DMA_GetState:00000000 HAL_DMA_GetState
     /tmp/ccByvpkg.s:1617   .text.HAL_DMA_GetError:00000000 $t
     /tmp/ccByvpkg.s:1624   .text.HAL_DMA_GetError:00000000 HAL_DMA_GetError

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_GetTick
