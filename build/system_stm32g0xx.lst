ARM GAS  /tmp/cce7SPDi.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32g0xx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemInit,"ax",%progbits
  16              		.align	1
  17              		.global	SystemInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	SystemInit:
  24              	.LFB173:
  25              		.file 1 "Src/system_stm32g0xx.c"
   1:Src/system_stm32g0xx.c **** /**
   2:Src/system_stm32g0xx.c ****   ******************************************************************************
   3:Src/system_stm32g0xx.c ****   * @file    system_stm32g0xx.c
   4:Src/system_stm32g0xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32g0xx.c ****   * @brief   CMSIS Cortex-M0+ Device Peripheral Access Layer System Source File
   6:Src/system_stm32g0xx.c ****   *
   7:Src/system_stm32g0xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32g0xx.c ****   *   user application:
   9:Src/system_stm32g0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32g0xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32g0xx.c ****   *                      the "startup_stm32g0xx.s" file.
  12:Src/system_stm32g0xx.c ****   *
  13:Src/system_stm32g0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32g0xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32g0xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32g0xx.c ****   *
  17:Src/system_stm32g0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32g0xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32g0xx.c ****   *                                 during program execution.
  20:Src/system_stm32g0xx.c ****   *
  21:Src/system_stm32g0xx.c ****   *   After each device reset the HSI (8 MHz then 16 MHz) is used as system clock source.
  22:Src/system_stm32g0xx.c ****   *   Then SystemInit() function is called, in "startup_stm32g0xx.s" file, to
  23:Src/system_stm32g0xx.c ****   *   configure the system clock before to branch to main program.
  24:Src/system_stm32g0xx.c ****   *
  25:Src/system_stm32g0xx.c ****   *   This file configures the system clock as follows:
  26:Src/system_stm32g0xx.c ****   *=============================================================================
  27:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  28:Src/system_stm32g0xx.c ****   *        System Clock source                    | HSI
  29:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  30:Src/system_stm32g0xx.c ****   *        SYSCLK(Hz)                             | 16000000
  31:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  32:Src/system_stm32g0xx.c ****   *        HCLK(Hz)                               | 16000000
  33:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
ARM GAS  /tmp/cce7SPDi.s 			page 2


  34:Src/system_stm32g0xx.c ****   *        AHB Prescaler                          | 1
  35:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  36:Src/system_stm32g0xx.c ****   *        APB Prescaler                          | 1
  37:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  38:Src/system_stm32g0xx.c ****   *        HSI Division factor                    | 1
  39:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  40:Src/system_stm32g0xx.c ****   *        PLL_M                                  | 1
  41:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  42:Src/system_stm32g0xx.c ****   *        PLL_N                                  | 8
  43:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  44:Src/system_stm32g0xx.c ****   *        PLL_P                                  | 7
  45:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  46:Src/system_stm32g0xx.c ****   *        PLL_Q                                  | 2
  47:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  48:Src/system_stm32g0xx.c ****   *        PLL_R                                  | 2
  49:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  50:Src/system_stm32g0xx.c ****   *        Require 48MHz for RNG                  | Disabled
  51:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  52:Src/system_stm32g0xx.c ****   *=============================================================================
  53:Src/system_stm32g0xx.c ****   ******************************************************************************
  54:Src/system_stm32g0xx.c ****   * @attention
  55:Src/system_stm32g0xx.c ****   *
  56:Src/system_stm32g0xx.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
  57:Src/system_stm32g0xx.c ****   * All rights reserved.</center></h2>
  58:Src/system_stm32g0xx.c ****   *
  59:Src/system_stm32g0xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  60:Src/system_stm32g0xx.c ****   * the "License"; You may not use this file except in compliance with the
  61:Src/system_stm32g0xx.c ****   * License. You may obtain a copy of the License at:
  62:Src/system_stm32g0xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  63:Src/system_stm32g0xx.c ****   *
  64:Src/system_stm32g0xx.c ****   ******************************************************************************
  65:Src/system_stm32g0xx.c ****   */
  66:Src/system_stm32g0xx.c **** 
  67:Src/system_stm32g0xx.c **** /** @addtogroup CMSIS
  68:Src/system_stm32g0xx.c ****   * @{
  69:Src/system_stm32g0xx.c ****   */
  70:Src/system_stm32g0xx.c **** 
  71:Src/system_stm32g0xx.c **** /** @addtogroup stm32g0xx_system
  72:Src/system_stm32g0xx.c ****   * @{
  73:Src/system_stm32g0xx.c ****   */
  74:Src/system_stm32g0xx.c **** 
  75:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_Includes
  76:Src/system_stm32g0xx.c ****   * @{
  77:Src/system_stm32g0xx.c ****   */
  78:Src/system_stm32g0xx.c **** 
  79:Src/system_stm32g0xx.c **** #include "stm32g0xx.h"
  80:Src/system_stm32g0xx.c **** 
  81:Src/system_stm32g0xx.c **** #if !defined  (HSE_VALUE)
  82:Src/system_stm32g0xx.c **** #define HSE_VALUE    (8000000UL)    /*!< Value of the External oscillator in Hz */
  83:Src/system_stm32g0xx.c **** #endif /* HSE_VALUE */
  84:Src/system_stm32g0xx.c **** 
  85:Src/system_stm32g0xx.c **** #if !defined  (HSI_VALUE)
  86:Src/system_stm32g0xx.c ****   #define HSI_VALUE  (16000000UL)   /*!< Value of the Internal oscillator in Hz*/
  87:Src/system_stm32g0xx.c **** #endif /* HSI_VALUE */
  88:Src/system_stm32g0xx.c **** 
  89:Src/system_stm32g0xx.c **** #if !defined  (LSI_VALUE)
  90:Src/system_stm32g0xx.c ****  #define LSI_VALUE   (32000UL)     /*!< Value of LSI in Hz*/
ARM GAS  /tmp/cce7SPDi.s 			page 3


  91:Src/system_stm32g0xx.c **** #endif /* LSI_VALUE */
  92:Src/system_stm32g0xx.c **** 
  93:Src/system_stm32g0xx.c **** #if !defined  (LSE_VALUE)
  94:Src/system_stm32g0xx.c ****   #define LSE_VALUE  (32768UL)      /*!< Value of LSE in Hz*/
  95:Src/system_stm32g0xx.c **** #endif /* LSE_VALUE */
  96:Src/system_stm32g0xx.c **** 
  97:Src/system_stm32g0xx.c **** /**
  98:Src/system_stm32g0xx.c ****   * @}
  99:Src/system_stm32g0xx.c ****   */
 100:Src/system_stm32g0xx.c **** 
 101:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_TypesDefinitions
 102:Src/system_stm32g0xx.c ****   * @{
 103:Src/system_stm32g0xx.c ****   */
 104:Src/system_stm32g0xx.c **** 
 105:Src/system_stm32g0xx.c **** /**
 106:Src/system_stm32g0xx.c ****   * @}
 107:Src/system_stm32g0xx.c ****   */
 108:Src/system_stm32g0xx.c **** 
 109:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_Defines
 110:Src/system_stm32g0xx.c ****   * @{
 111:Src/system_stm32g0xx.c ****   */
 112:Src/system_stm32g0xx.c **** 
 113:Src/system_stm32g0xx.c **** /************************* Miscellaneous Configuration ************************/
 114:Src/system_stm32g0xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 115:Src/system_stm32g0xx.c ****      Internal SRAM. */
 116:Src/system_stm32g0xx.c **** /* #define VECT_TAB_SRAM */
 117:Src/system_stm32g0xx.c **** #define VECT_TAB_OFFSET  0x0U /*!< Vector Table base offset field.
 118:Src/system_stm32g0xx.c ****                                    This value must be a multiple of 0x100. */
 119:Src/system_stm32g0xx.c **** /******************************************************************************/
 120:Src/system_stm32g0xx.c **** /**
 121:Src/system_stm32g0xx.c ****   * @}
 122:Src/system_stm32g0xx.c ****   */
 123:Src/system_stm32g0xx.c **** 
 124:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_Macros
 125:Src/system_stm32g0xx.c ****   * @{
 126:Src/system_stm32g0xx.c ****   */
 127:Src/system_stm32g0xx.c **** 
 128:Src/system_stm32g0xx.c **** /**
 129:Src/system_stm32g0xx.c ****   * @}
 130:Src/system_stm32g0xx.c ****   */
 131:Src/system_stm32g0xx.c **** 
 132:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_Variables
 133:Src/system_stm32g0xx.c ****   * @{
 134:Src/system_stm32g0xx.c ****   */
 135:Src/system_stm32g0xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 136:Src/system_stm32g0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 137:Src/system_stm32g0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 138:Src/system_stm32g0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 139:Src/system_stm32g0xx.c ****          Note: If you use this function to configure the system clock; then there
 140:Src/system_stm32g0xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 141:Src/system_stm32g0xx.c ****                variable is updated automatically.
 142:Src/system_stm32g0xx.c ****   */
 143:Src/system_stm32g0xx.c ****   uint32_t SystemCoreClock = 16000000UL;
 144:Src/system_stm32g0xx.c **** 
 145:Src/system_stm32g0xx.c ****   const uint32_t AHBPrescTable[16UL] = {0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 1UL, 2UL, 3UL, 4UL,
 146:Src/system_stm32g0xx.c ****   const uint32_t APBPrescTable[8UL] =  {0UL, 0UL, 0UL, 0UL, 1UL, 2UL, 3UL, 4UL};
 147:Src/system_stm32g0xx.c **** 
ARM GAS  /tmp/cce7SPDi.s 			page 4


 148:Src/system_stm32g0xx.c **** /**
 149:Src/system_stm32g0xx.c ****   * @}
 150:Src/system_stm32g0xx.c ****   */
 151:Src/system_stm32g0xx.c **** 
 152:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_FunctionPrototypes
 153:Src/system_stm32g0xx.c ****   * @{
 154:Src/system_stm32g0xx.c ****   */
 155:Src/system_stm32g0xx.c **** 
 156:Src/system_stm32g0xx.c **** /**
 157:Src/system_stm32g0xx.c ****   * @}
 158:Src/system_stm32g0xx.c ****   */
 159:Src/system_stm32g0xx.c **** 
 160:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_Functions
 161:Src/system_stm32g0xx.c ****   * @{
 162:Src/system_stm32g0xx.c ****   */
 163:Src/system_stm32g0xx.c **** 
 164:Src/system_stm32g0xx.c **** /**
 165:Src/system_stm32g0xx.c ****   * @brief  Setup the microcontroller system.
 166:Src/system_stm32g0xx.c ****   * @param  None
 167:Src/system_stm32g0xx.c ****   * @retval None
 168:Src/system_stm32g0xx.c ****   */
 169:Src/system_stm32g0xx.c **** void SystemInit(void)
 170:Src/system_stm32g0xx.c **** {
  26              		.loc 1 170 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 171:Src/system_stm32g0xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 172:Src/system_stm32g0xx.c **** #ifdef VECT_TAB_SRAM
 173:Src/system_stm32g0xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 174:Src/system_stm32g0xx.c **** #else
 175:Src/system_stm32g0xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  31              		.loc 1 175 0
  32 0000 024B     		ldr	r3, .L2
  33 0002 8022     		movs	r2, #128
  34 0004 1205     		lsls	r2, r2, #20
  35 0006 9A60     		str	r2, [r3, #8]
 176:Src/system_stm32g0xx.c **** #endif
 177:Src/system_stm32g0xx.c **** }
  36              		.loc 1 177 0
  37              		@ sp needed
  38 0008 7047     		bx	lr
  39              	.L3:
  40 000a C046     		.align	2
  41              	.L2:
  42 000c 00ED00E0 		.word	-536810240
  43              		.cfi_endproc
  44              	.LFE173:
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  48              		.align	1
  49              		.global	SystemCoreClockUpdate
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  53              		.fpu softvfp
ARM GAS  /tmp/cce7SPDi.s 			page 5


  55              	SystemCoreClockUpdate:
  56              	.LFB174:
 178:Src/system_stm32g0xx.c **** 
 179:Src/system_stm32g0xx.c **** /**
 180:Src/system_stm32g0xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 181:Src/system_stm32g0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 182:Src/system_stm32g0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 183:Src/system_stm32g0xx.c ****   *         other parameters.
 184:Src/system_stm32g0xx.c ****   *
 185:Src/system_stm32g0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 186:Src/system_stm32g0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 187:Src/system_stm32g0xx.c ****   *         based on this variable will be incorrect.
 188:Src/system_stm32g0xx.c ****   *
 189:Src/system_stm32g0xx.c ****   * @note   - The system frequency computed by this function is not the real
 190:Src/system_stm32g0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 191:Src/system_stm32g0xx.c ****   *           constant and the selected clock source:
 192:Src/system_stm32g0xx.c ****   *
 193:Src/system_stm32g0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**) / HSI divis
 194:Src/system_stm32g0xx.c ****   *
 195:Src/system_stm32g0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 196:Src/system_stm32g0xx.c ****   *
 197:Src/system_stm32g0xx.c ****   *           - If SYSCLK source is LSI, SystemCoreClock will contain the LSI_VALUE
 198:Src/system_stm32g0xx.c ****   *
 199:Src/system_stm32g0xx.c ****   *           - If SYSCLK source is LSE, SystemCoreClock will contain the LSE_VALUE
 200:Src/system_stm32g0xx.c ****   *
 201:Src/system_stm32g0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 202:Src/system_stm32g0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 203:Src/system_stm32g0xx.c ****   *
 204:Src/system_stm32g0xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32g0xx_hal_conf.h file (default value
 205:Src/system_stm32g0xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 206:Src/system_stm32g0xx.c ****   *              in voltage and temperature.
 207:Src/system_stm32g0xx.c ****   *
 208:Src/system_stm32g0xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32g0xx_hal_conf.h file (default value
 209:Src/system_stm32g0xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 210:Src/system_stm32g0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 211:Src/system_stm32g0xx.c ****   *              have wrong result.
 212:Src/system_stm32g0xx.c ****   *
 213:Src/system_stm32g0xx.c ****   *         - The result of this function could be not correct when using fractional
 214:Src/system_stm32g0xx.c ****   *           value for HSE crystal.
 215:Src/system_stm32g0xx.c ****   *
 216:Src/system_stm32g0xx.c ****   * @param  None
 217:Src/system_stm32g0xx.c ****   * @retval None
 218:Src/system_stm32g0xx.c ****   */
 219:Src/system_stm32g0xx.c **** void SystemCoreClockUpdate(void)
 220:Src/system_stm32g0xx.c **** {
  57              		.loc 1 220 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61 0000 10B5     		push	{r4, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 14, -4
 221:Src/system_stm32g0xx.c ****   uint32_t tmp;
 222:Src/system_stm32g0xx.c ****   uint32_t pllvco;
 223:Src/system_stm32g0xx.c ****   uint32_t pllr;
ARM GAS  /tmp/cce7SPDi.s 			page 6


 224:Src/system_stm32g0xx.c ****   uint32_t pllsource;
 225:Src/system_stm32g0xx.c ****   uint32_t pllm;
 226:Src/system_stm32g0xx.c ****   uint32_t hsidiv;
 227:Src/system_stm32g0xx.c **** 
 228:Src/system_stm32g0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 229:Src/system_stm32g0xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  66              		.loc 1 229 0
  67 0002 2A4B     		ldr	r3, .L16
  68 0004 9A68     		ldr	r2, [r3, #8]
  69 0006 3823     		movs	r3, #56
  70 0008 1340     		ands	r3, r2
  71 000a 102B     		cmp	r3, #16
  72 000c 20D0     		beq	.L6
  73 000e 08D9     		bls	.L14
  74 0010 182B     		cmp	r3, #24
  75 0012 18D0     		beq	.L9
  76 0014 202B     		cmp	r3, #32
  77 0016 3BD1     		bne	.L5
 230:Src/system_stm32g0xx.c ****   {
 231:Src/system_stm32g0xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
 232:Src/system_stm32g0xx.c ****       SystemCoreClock = HSE_VALUE;
 233:Src/system_stm32g0xx.c ****       break;
 234:Src/system_stm32g0xx.c **** 
 235:Src/system_stm32g0xx.c ****     case RCC_CFGR_SWS_LSI:  /* LSI used as system clock */
 236:Src/system_stm32g0xx.c ****       SystemCoreClock = LSI_VALUE;
 237:Src/system_stm32g0xx.c ****       break;
 238:Src/system_stm32g0xx.c **** 
 239:Src/system_stm32g0xx.c ****     case RCC_CFGR_SWS_LSE:  /* LSE used as system clock */
 240:Src/system_stm32g0xx.c ****       SystemCoreClock = LSE_VALUE;
  78              		.loc 1 240 0
  79 0018 254B     		ldr	r3, .L16+4
  80 001a 8022     		movs	r2, #128
  81 001c 1202     		lsls	r2, r2, #8
  82 001e 1A60     		str	r2, [r3]
 241:Src/system_stm32g0xx.c ****       break;
  83              		.loc 1 241 0
  84 0020 04E0     		b	.L11
  85              	.L14:
 229:Src/system_stm32g0xx.c ****   {
  86              		.loc 1 229 0
  87 0022 082B     		cmp	r3, #8
  88 0024 34D1     		bne	.L5
 232:Src/system_stm32g0xx.c ****       break;
  89              		.loc 1 232 0
  90 0026 224B     		ldr	r3, .L16+4
  91 0028 224A     		ldr	r2, .L16+8
  92 002a 1A60     		str	r2, [r3]
  93              	.L11:
 242:Src/system_stm32g0xx.c **** 
 243:Src/system_stm32g0xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 244:Src/system_stm32g0xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 245:Src/system_stm32g0xx.c ****          SYSCLK = PLL_VCO / PLLR
 246:Src/system_stm32g0xx.c ****          */
 247:Src/system_stm32g0xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 248:Src/system_stm32g0xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1UL;
 249:Src/system_stm32g0xx.c **** 
 250:Src/system_stm32g0xx.c ****       if(pllsource == 0x03UL) /* HSE used as PLL clock source */
ARM GAS  /tmp/cce7SPDi.s 			page 7


 251:Src/system_stm32g0xx.c ****       {
 252:Src/system_stm32g0xx.c ****         pllvco = (HSE_VALUE / pllm);
 253:Src/system_stm32g0xx.c ****       }
 254:Src/system_stm32g0xx.c ****       else /* HSI used as PLL clock source */
 255:Src/system_stm32g0xx.c ****       {
 256:Src/system_stm32g0xx.c ****           pllvco = (HSI_VALUE / pllm);
 257:Src/system_stm32g0xx.c ****       }
 258:Src/system_stm32g0xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 259:Src/system_stm32g0xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1UL);
 260:Src/system_stm32g0xx.c **** 
 261:Src/system_stm32g0xx.c ****       SystemCoreClock = pllvco/pllr;
 262:Src/system_stm32g0xx.c ****       break;
 263:Src/system_stm32g0xx.c ****       
 264:Src/system_stm32g0xx.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock */
 265:Src/system_stm32g0xx.c ****     default:                /* HSI used as system clock */
 266:Src/system_stm32g0xx.c ****       hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV))>> RCC_CR_HSIDIV_Pos));
 267:Src/system_stm32g0xx.c ****       SystemCoreClock = (HSI_VALUE/hsidiv);
 268:Src/system_stm32g0xx.c ****       break;
 269:Src/system_stm32g0xx.c ****   }
 270:Src/system_stm32g0xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 271:Src/system_stm32g0xx.c ****   /* Get HCLK prescaler */
 272:Src/system_stm32g0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
  94              		.loc 1 272 0
  95 002c 1F4B     		ldr	r3, .L16
  96 002e 9A68     		ldr	r2, [r3, #8]
  97 0030 120A     		lsrs	r2, r2, #8
  98 0032 0F23     		movs	r3, #15
  99 0034 1340     		ands	r3, r2
 100 0036 9B00     		lsls	r3, r3, #2
 101 0038 1F4A     		ldr	r2, .L16+12
 102 003a 9B58     		ldr	r3, [r3, r2]
 103              	.LVL0:
 273:Src/system_stm32g0xx.c ****   /* HCLK clock frequency */
 274:Src/system_stm32g0xx.c ****   SystemCoreClock >>= tmp;
 104              		.loc 1 274 0
 105 003c 1C4A     		ldr	r2, .L16+4
 106 003e 1168     		ldr	r1, [r2]
 107 0040 D940     		lsrs	r1, r1, r3
 108 0042 1160     		str	r1, [r2]
 275:Src/system_stm32g0xx.c **** }
 109              		.loc 1 275 0
 110              		@ sp needed
 111 0044 10BD     		pop	{r4, pc}
 112              	.LVL1:
 113              	.L9:
 236:Src/system_stm32g0xx.c ****       break;
 114              		.loc 1 236 0
 115 0046 1A4B     		ldr	r3, .L16+4
 116 0048 FA22     		movs	r2, #250
 117 004a D201     		lsls	r2, r2, #7
 118 004c 1A60     		str	r2, [r3]
 237:Src/system_stm32g0xx.c **** 
 119              		.loc 1 237 0
 120 004e EDE7     		b	.L11
 121              	.L6:
 247:Src/system_stm32g0xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1UL;
 122              		.loc 1 247 0
ARM GAS  /tmp/cce7SPDi.s 			page 8


 123 0050 164A     		ldr	r2, .L16
 124 0052 D168     		ldr	r1, [r2, #12]
 125 0054 0323     		movs	r3, #3
 126 0056 0B40     		ands	r3, r1
 127              	.LVL2:
 248:Src/system_stm32g0xx.c **** 
 128              		.loc 1 248 0
 129 0058 D268     		ldr	r2, [r2, #12]
 130 005a 1209     		lsrs	r2, r2, #4
 131 005c 0721     		movs	r1, #7
 132 005e 1140     		ands	r1, r2
 133 0060 0131     		adds	r1, r1, #1
 134              	.LVL3:
 250:Src/system_stm32g0xx.c ****       {
 135              		.loc 1 250 0
 136 0062 032B     		cmp	r3, #3
 137 0064 10D0     		beq	.L15
 256:Src/system_stm32g0xx.c ****       }
 138              		.loc 1 256 0
 139 0066 1548     		ldr	r0, .L16+16
 140 0068 FFF7FEFF 		bl	__aeabi_uidiv
 141              	.LVL4:
 142              	.L13:
 258:Src/system_stm32g0xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1UL);
 143              		.loc 1 258 0
 144 006c 0F49     		ldr	r1, .L16
 145 006e CA68     		ldr	r2, [r1, #12]
 146 0070 120A     		lsrs	r2, r2, #8
 147 0072 7F23     		movs	r3, #127
 148 0074 1340     		ands	r3, r2
 149 0076 5843     		muls	r0, r3
 150              	.LVL5:
 259:Src/system_stm32g0xx.c **** 
 151              		.loc 1 259 0
 152 0078 C968     		ldr	r1, [r1, #12]
 153 007a 490F     		lsrs	r1, r1, #29
 154 007c 0131     		adds	r1, r1, #1
 155              	.LVL6:
 261:Src/system_stm32g0xx.c ****       break;
 156              		.loc 1 261 0
 157 007e FFF7FEFF 		bl	__aeabi_uidiv
 158              	.LVL7:
 159 0082 0B4B     		ldr	r3, .L16+4
 160 0084 1860     		str	r0, [r3]
 262:Src/system_stm32g0xx.c ****       
 161              		.loc 1 262 0
 162 0086 D1E7     		b	.L11
 163              	.LVL8:
 164              	.L15:
 252:Src/system_stm32g0xx.c ****       }
 165              		.loc 1 252 0
 166 0088 0A48     		ldr	r0, .L16+8
 167 008a FFF7FEFF 		bl	__aeabi_uidiv
 168              	.LVL9:
 169 008e EDE7     		b	.L13
 170              	.LVL10:
 171              	.L5:
ARM GAS  /tmp/cce7SPDi.s 			page 9


 266:Src/system_stm32g0xx.c ****       SystemCoreClock = (HSI_VALUE/hsidiv);
 172              		.loc 1 266 0
 173 0090 064B     		ldr	r3, .L16
 174 0092 1A68     		ldr	r2, [r3]
 175 0094 D20A     		lsrs	r2, r2, #11
 176 0096 0723     		movs	r3, #7
 177 0098 1340     		ands	r3, r2
 178 009a 0121     		movs	r1, #1
 179 009c 9940     		lsls	r1, r1, r3
 180              	.LVL11:
 267:Src/system_stm32g0xx.c ****       break;
 181              		.loc 1 267 0
 182 009e 0748     		ldr	r0, .L16+16
 183 00a0 FFF7FEFF 		bl	__aeabi_uidiv
 184              	.LVL12:
 185 00a4 024B     		ldr	r3, .L16+4
 186 00a6 1860     		str	r0, [r3]
 268:Src/system_stm32g0xx.c ****   }
 187              		.loc 1 268 0
 188 00a8 C0E7     		b	.L11
 189              	.L17:
 190 00aa C046     		.align	2
 191              	.L16:
 192 00ac 00100240 		.word	1073876992
 193 00b0 00000000 		.word	.LANCHOR0
 194 00b4 00127A00 		.word	8000000
 195 00b8 00000000 		.word	.LANCHOR1
 196 00bc 0024F400 		.word	16000000
 197              		.cfi_endproc
 198              	.LFE174:
 200              		.global	APBPrescTable
 201              		.global	AHBPrescTable
 202              		.global	SystemCoreClock
 203              		.section	.data.SystemCoreClock,"aw",%progbits
 204              		.align	2
 205              		.set	.LANCHOR0,. + 0
 208              	SystemCoreClock:
 209 0000 0024F400 		.word	16000000
 210              		.section	.rodata.AHBPrescTable,"a",%progbits
 211              		.align	2
 212              		.set	.LANCHOR1,. + 0
 215              	AHBPrescTable:
 216 0000 00000000 		.word	0
 217 0004 00000000 		.word	0
 218 0008 00000000 		.word	0
 219 000c 00000000 		.word	0
 220 0010 00000000 		.word	0
 221 0014 00000000 		.word	0
 222 0018 00000000 		.word	0
 223 001c 00000000 		.word	0
 224 0020 01000000 		.word	1
 225 0024 02000000 		.word	2
 226 0028 03000000 		.word	3
 227 002c 04000000 		.word	4
 228 0030 06000000 		.word	6
 229 0034 07000000 		.word	7
 230 0038 08000000 		.word	8
ARM GAS  /tmp/cce7SPDi.s 			page 10


 231 003c 09000000 		.word	9
 232              		.section	.rodata.APBPrescTable,"a",%progbits
 233              		.align	2
 236              	APBPrescTable:
 237 0000 00000000 		.word	0
 238 0004 00000000 		.word	0
 239 0008 00000000 		.word	0
 240 000c 00000000 		.word	0
 241 0010 01000000 		.word	1
 242 0014 02000000 		.word	2
 243 0018 03000000 		.word	3
 244 001c 04000000 		.word	4
 245              		.text
 246              	.Letext0:
 247              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 248              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 249              		.file 4 "Drivers/CMSIS/Include/core_cm0plus.h"
 250              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 251              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 252              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 253              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 254              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
ARM GAS  /tmp/cce7SPDi.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32g0xx.c
     /tmp/cce7SPDi.s:16     .text.SystemInit:00000000 $t
     /tmp/cce7SPDi.s:23     .text.SystemInit:00000000 SystemInit
     /tmp/cce7SPDi.s:42     .text.SystemInit:0000000c $d
     /tmp/cce7SPDi.s:48     .text.SystemCoreClockUpdate:00000000 $t
     /tmp/cce7SPDi.s:55     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/cce7SPDi.s:192    .text.SystemCoreClockUpdate:000000ac $d
     /tmp/cce7SPDi.s:236    .rodata.APBPrescTable:00000000 APBPrescTable
     /tmp/cce7SPDi.s:215    .rodata.AHBPrescTable:00000000 AHBPrescTable
     /tmp/cce7SPDi.s:208    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/cce7SPDi.s:204    .data.SystemCoreClock:00000000 $d
     /tmp/cce7SPDi.s:211    .rodata.AHBPrescTable:00000000 $d
     /tmp/cce7SPDi.s:233    .rodata.APBPrescTable:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
