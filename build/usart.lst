ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART2_UART_Init
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	MX_USART2_UART_Init:
  25              	.LFB284:
  26              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * @attention
   8:Src/usart.c   ****   *
   9:Src/usart.c   ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/usart.c   ****   * All rights reserved.</center></h2>
  11:Src/usart.c   ****   *
  12:Src/usart.c   ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/usart.c   ****   * the "License"; You may not use this file except in compliance with the
  14:Src/usart.c   ****   * License. You may obtain a copy of the License at:
  15:Src/usart.c   ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/usart.c   ****   *
  17:Src/usart.c   ****   ******************************************************************************
  18:Src/usart.c   ****   */
  19:Src/usart.c   **** 
  20:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  21:Src/usart.c   **** #include "usart.h"
  22:Src/usart.c   **** 
  23:Src/usart.c   **** /* USER CODE BEGIN 0 */
  24:Src/usart.c   **** #include "usart_utils.h"
  25:Src/usart.c   **** extern uint8_t UART_RX_BUFF[UART_RX_BUFFER_LENGTH];
  26:Src/usart.c   **** /* USER CODE END 0 */
  27:Src/usart.c   **** 
  28:Src/usart.c   **** UART_HandleTypeDef huart2;
  29:Src/usart.c   **** DMA_HandleTypeDef hdma_usart2_rx;
  30:Src/usart.c   **** 
  31:Src/usart.c   **** /* USART2 init function */
  32:Src/usart.c   **** 
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 2


  33:Src/usart.c   **** void MX_USART2_UART_Init(void)
  34:Src/usart.c   **** {
  27              		.loc 1 34 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  35:Src/usart.c   **** 
  36:Src/usart.c   ****   huart2.Instance = USART2;
  36              		.loc 1 36 3 view .LVU1
  37              		.loc 1 36 19 is_stmt 0 view .LVU2
  38 0002 1948     		ldr	r0, .L10
  39 0004 194B     		ldr	r3, .L10+4
  40 0006 0360     		str	r3, [r0]
  37:Src/usart.c   ****   huart2.Init.BaudRate = 115200;
  41              		.loc 1 37 3 is_stmt 1 view .LVU3
  42              		.loc 1 37 24 is_stmt 0 view .LVU4
  43 0008 E123     		movs	r3, #225
  44 000a 5B02     		lsls	r3, r3, #9
  45 000c 4360     		str	r3, [r0, #4]
  38:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  46              		.loc 1 38 3 is_stmt 1 view .LVU5
  47              		.loc 1 38 26 is_stmt 0 view .LVU6
  48 000e 0023     		movs	r3, #0
  49 0010 8360     		str	r3, [r0, #8]
  39:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
  50              		.loc 1 39 3 is_stmt 1 view .LVU7
  51              		.loc 1 39 24 is_stmt 0 view .LVU8
  52 0012 C360     		str	r3, [r0, #12]
  40:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
  53              		.loc 1 40 3 is_stmt 1 view .LVU9
  54              		.loc 1 40 22 is_stmt 0 view .LVU10
  55 0014 0361     		str	r3, [r0, #16]
  41:Src/usart.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
  56              		.loc 1 41 3 is_stmt 1 view .LVU11
  57              		.loc 1 41 20 is_stmt 0 view .LVU12
  58 0016 0C22     		movs	r2, #12
  59 0018 4261     		str	r2, [r0, #20]
  42:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  60              		.loc 1 42 3 is_stmt 1 view .LVU13
  61              		.loc 1 42 25 is_stmt 0 view .LVU14
  62 001a 8361     		str	r3, [r0, #24]
  43:Src/usart.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  63              		.loc 1 43 3 is_stmt 1 view .LVU15
  64              		.loc 1 43 28 is_stmt 0 view .LVU16
  65 001c C361     		str	r3, [r0, #28]
  44:Src/usart.c   ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  66              		.loc 1 44 3 is_stmt 1 view .LVU17
  67              		.loc 1 44 30 is_stmt 0 view .LVU18
  68 001e 0362     		str	r3, [r0, #32]
  45:Src/usart.c   ****   huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  69              		.loc 1 45 3 is_stmt 1 view .LVU19
  70              		.loc 1 45 30 is_stmt 0 view .LVU20
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 3


  71 0020 4362     		str	r3, [r0, #36]
  46:Src/usart.c   ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  72              		.loc 1 46 3 is_stmt 1 view .LVU21
  73              		.loc 1 46 38 is_stmt 0 view .LVU22
  74 0022 8362     		str	r3, [r0, #40]
  47:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  75              		.loc 1 47 3 is_stmt 1 view .LVU23
  76              		.loc 1 47 7 is_stmt 0 view .LVU24
  77 0024 FFF7FEFF 		bl	HAL_UART_Init
  78              	.LVL0:
  79              		.loc 1 47 6 view .LVU25
  80 0028 0028     		cmp	r0, #0
  81 002a 11D1     		bne	.L6
  82              	.L2:
  48:Src/usart.c   ****   {
  49:Src/usart.c   ****     Error_Handler();
  50:Src/usart.c   ****   }
  51:Src/usart.c   ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
  83              		.loc 1 51 3 is_stmt 1 view .LVU26
  84              		.loc 1 51 7 is_stmt 0 view .LVU27
  85 002c 0021     		movs	r1, #0
  86 002e 0E48     		ldr	r0, .L10
  87 0030 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
  88              	.LVL1:
  89              		.loc 1 51 6 view .LVU28
  90 0034 0028     		cmp	r0, #0
  91 0036 0ED1     		bne	.L7
  92              	.L3:
  52:Src/usart.c   ****   {
  53:Src/usart.c   ****     Error_Handler();
  54:Src/usart.c   ****   }
  55:Src/usart.c   ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
  93              		.loc 1 55 3 is_stmt 1 view .LVU29
  94              		.loc 1 55 7 is_stmt 0 view .LVU30
  95 0038 0021     		movs	r1, #0
  96 003a 0B48     		ldr	r0, .L10
  97 003c FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
  98              	.LVL2:
  99              		.loc 1 55 6 view .LVU31
 100 0040 0028     		cmp	r0, #0
 101 0042 0BD1     		bne	.L8
 102              	.L4:
  56:Src/usart.c   ****   {
  57:Src/usart.c   ****     Error_Handler();
  58:Src/usart.c   ****   }
  59:Src/usart.c   ****   if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 103              		.loc 1 59 3 is_stmt 1 view .LVU32
 104              		.loc 1 59 7 is_stmt 0 view .LVU33
 105 0044 0848     		ldr	r0, .L10
 106 0046 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 107              	.LVL3:
 108              		.loc 1 59 6 view .LVU34
 109 004a 0028     		cmp	r0, #0
 110 004c 09D1     		bne	.L9
 111              	.L1:
  60:Src/usart.c   ****   {
  61:Src/usart.c   ****     Error_Handler();
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 4


  62:Src/usart.c   ****   }
  63:Src/usart.c   **** 
  64:Src/usart.c   **** }
 112              		.loc 1 64 1 view .LVU35
 113              		@ sp needed
 114 004e 10BD     		pop	{r4, pc}
 115              	.L6:
  49:Src/usart.c   ****   }
 116              		.loc 1 49 5 is_stmt 1 view .LVU36
 117 0050 FFF7FEFF 		bl	Error_Handler
 118              	.LVL4:
 119 0054 EAE7     		b	.L2
 120              	.L7:
  53:Src/usart.c   ****   }
 121              		.loc 1 53 5 view .LVU37
 122 0056 FFF7FEFF 		bl	Error_Handler
 123              	.LVL5:
 124 005a EDE7     		b	.L3
 125              	.L8:
  57:Src/usart.c   ****   }
 126              		.loc 1 57 5 view .LVU38
 127 005c FFF7FEFF 		bl	Error_Handler
 128              	.LVL6:
 129 0060 F0E7     		b	.L4
 130              	.L9:
  61:Src/usart.c   ****   }
 131              		.loc 1 61 5 view .LVU39
 132 0062 FFF7FEFF 		bl	Error_Handler
 133              	.LVL7:
 134              		.loc 1 64 1 is_stmt 0 view .LVU40
 135 0066 F2E7     		b	.L1
 136              	.L11:
 137              		.align	2
 138              	.L10:
 139 0068 00000000 		.word	huart2
 140 006c 00440040 		.word	1073759232
 141              		.cfi_endproc
 142              	.LFE284:
 144              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 145              		.align	1
 146              		.global	HAL_UART_MspInit
 147              		.syntax unified
 148              		.code	16
 149              		.thumb_func
 150              		.fpu softvfp
 152              	HAL_UART_MspInit:
 153              	.LVL8:
 154              	.LFB285:
  65:Src/usart.c   **** 
  66:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  67:Src/usart.c   **** {
 155              		.loc 1 67 1 is_stmt 1 view -0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 32
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		.loc 1 67 1 is_stmt 0 view .LVU42
 160 0000 30B5     		push	{r4, r5, lr}
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 5


 161              	.LCFI1:
 162              		.cfi_def_cfa_offset 12
 163              		.cfi_offset 4, -12
 164              		.cfi_offset 5, -8
 165              		.cfi_offset 14, -4
 166 0002 89B0     		sub	sp, sp, #36
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 48
 169 0004 0400     		movs	r4, r0
  68:Src/usart.c   **** 
  69:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 170              		.loc 1 69 3 is_stmt 1 view .LVU43
 171              		.loc 1 69 20 is_stmt 0 view .LVU44
 172 0006 1422     		movs	r2, #20
 173 0008 0021     		movs	r1, #0
 174 000a 03A8     		add	r0, sp, #12
 175              	.LVL9:
 176              		.loc 1 69 20 view .LVU45
 177 000c FFF7FEFF 		bl	memset
 178              	.LVL10:
  70:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 179              		.loc 1 70 3 is_stmt 1 view .LVU46
 180              		.loc 1 70 5 is_stmt 0 view .LVU47
 181 0010 254B     		ldr	r3, .L17
 182 0012 2268     		ldr	r2, [r4]
 183 0014 9A42     		cmp	r2, r3
 184 0016 01D0     		beq	.L15
 185              	.L12:
  71:Src/usart.c   ****   {
  72:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
  73:Src/usart.c   **** 
  74:Src/usart.c   ****   /* USER CODE END USART2_MspInit 0 */
  75:Src/usart.c   ****     /* USART2 clock enable */
  76:Src/usart.c   ****     __HAL_RCC_USART2_CLK_ENABLE();
  77:Src/usart.c   ****   
  78:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  79:Src/usart.c   ****     /**USART2 GPIO Configuration    
  80:Src/usart.c   ****     PA2     ------> USART2_TX
  81:Src/usart.c   ****     PA3     ------> USART2_RX 
  82:Src/usart.c   ****     */
  83:Src/usart.c   ****     GPIO_InitStruct.Pin = UART_TX_Pin|UART_RX_Pin;
  84:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  85:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  86:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  87:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
  88:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  89:Src/usart.c   **** 
  90:Src/usart.c   ****     /* USART2 DMA Init */
  91:Src/usart.c   ****     /* USART2_RX Init */
  92:Src/usart.c   ****     hdma_usart2_rx.Instance = DMA1_Channel1;
  93:Src/usart.c   ****     hdma_usart2_rx.Init.Request = DMA_REQUEST_USART2_RX;
  94:Src/usart.c   ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
  95:Src/usart.c   ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
  96:Src/usart.c   ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
  97:Src/usart.c   ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
  98:Src/usart.c   ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
  99:Src/usart.c   ****     hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 6


 100:Src/usart.c   ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 101:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 102:Src/usart.c   ****     {
 103:Src/usart.c   ****       Error_Handler();
 104:Src/usart.c   ****     }
 105:Src/usart.c   **** 
 106:Src/usart.c   ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart2_rx);
 107:Src/usart.c   **** 
 108:Src/usart.c   ****     /* USART2 interrupt Init */
 109:Src/usart.c   ****     HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 110:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 111:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
 112:Src/usart.c   ****     __HAL_UART_ENABLE_IT(&huart2, UART_IT_IDLE);
 113:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
 114:Src/usart.c   ****   }
 115:Src/usart.c   **** }
 186              		.loc 1 115 1 view .LVU48
 187 0018 09B0     		add	sp, sp, #36
 188              		@ sp needed
 189              	.LVL11:
 190              		.loc 1 115 1 view .LVU49
 191 001a 30BD     		pop	{r4, r5, pc}
 192              	.LVL12:
 193              	.L15:
  76:Src/usart.c   ****   
 194              		.loc 1 76 5 is_stmt 1 view .LVU50
 195              	.LBB2:
  76:Src/usart.c   ****   
 196              		.loc 1 76 5 view .LVU51
  76:Src/usart.c   ****   
 197              		.loc 1 76 5 view .LVU52
 198 001c 234B     		ldr	r3, .L17+4
 199 001e D96B     		ldr	r1, [r3, #60]
 200 0020 8020     		movs	r0, #128
 201 0022 8002     		lsls	r0, r0, #10
 202 0024 0143     		orrs	r1, r0
 203 0026 D963     		str	r1, [r3, #60]
  76:Src/usart.c   ****   
 204              		.loc 1 76 5 view .LVU53
 205 0028 DA6B     		ldr	r2, [r3, #60]
 206 002a 0240     		ands	r2, r0
 207 002c 0192     		str	r2, [sp, #4]
  76:Src/usart.c   ****   
 208              		.loc 1 76 5 view .LVU54
 209 002e 019A     		ldr	r2, [sp, #4]
 210              	.LBE2:
  76:Src/usart.c   ****   
 211              		.loc 1 76 5 view .LVU55
  78:Src/usart.c   ****     /**USART2 GPIO Configuration    
 212              		.loc 1 78 5 view .LVU56
 213              	.LBB3:
  78:Src/usart.c   ****     /**USART2 GPIO Configuration    
 214              		.loc 1 78 5 view .LVU57
  78:Src/usart.c   ****     /**USART2 GPIO Configuration    
 215              		.loc 1 78 5 view .LVU58
 216 0030 596B     		ldr	r1, [r3, #52]
 217 0032 0122     		movs	r2, #1
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 7


 218 0034 1143     		orrs	r1, r2
 219 0036 5963     		str	r1, [r3, #52]
  78:Src/usart.c   ****     /**USART2 GPIO Configuration    
 220              		.loc 1 78 5 view .LVU59
 221 0038 5B6B     		ldr	r3, [r3, #52]
 222 003a 1340     		ands	r3, r2
 223 003c 0293     		str	r3, [sp, #8]
  78:Src/usart.c   ****     /**USART2 GPIO Configuration    
 224              		.loc 1 78 5 view .LVU60
 225 003e 029B     		ldr	r3, [sp, #8]
 226              	.LBE3:
  78:Src/usart.c   ****     /**USART2 GPIO Configuration    
 227              		.loc 1 78 5 view .LVU61
  83:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 228              		.loc 1 83 5 view .LVU62
  83:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 229              		.loc 1 83 25 is_stmt 0 view .LVU63
 230 0040 0C23     		movs	r3, #12
 231 0042 0393     		str	r3, [sp, #12]
  84:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 232              		.loc 1 84 5 is_stmt 1 view .LVU64
  84:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 233              		.loc 1 84 26 is_stmt 0 view .LVU65
 234 0044 0A3B     		subs	r3, r3, #10
 235 0046 0493     		str	r3, [sp, #16]
  85:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 236              		.loc 1 85 5 is_stmt 1 view .LVU66
  85:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 237              		.loc 1 85 26 is_stmt 0 view .LVU67
 238 0048 0025     		movs	r5, #0
 239 004a 0595     		str	r5, [sp, #20]
  86:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 240              		.loc 1 86 5 is_stmt 1 view .LVU68
  86:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 241              		.loc 1 86 27 is_stmt 0 view .LVU69
 242 004c 0695     		str	r5, [sp, #24]
  87:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 243              		.loc 1 87 5 is_stmt 1 view .LVU70
  87:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 244              		.loc 1 87 31 is_stmt 0 view .LVU71
 245 004e 0792     		str	r2, [sp, #28]
  88:Src/usart.c   **** 
 246              		.loc 1 88 5 is_stmt 1 view .LVU72
 247 0050 A020     		movs	r0, #160
 248 0052 03A9     		add	r1, sp, #12
 249 0054 C005     		lsls	r0, r0, #23
 250 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 251              	.LVL13:
  92:Src/usart.c   ****     hdma_usart2_rx.Init.Request = DMA_REQUEST_USART2_RX;
 252              		.loc 1 92 5 view .LVU73
  92:Src/usart.c   ****     hdma_usart2_rx.Init.Request = DMA_REQUEST_USART2_RX;
 253              		.loc 1 92 29 is_stmt 0 view .LVU74
 254 005a 1548     		ldr	r0, .L17+8
 255 005c 154B     		ldr	r3, .L17+12
 256 005e 0360     		str	r3, [r0]
  93:Src/usart.c   ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 257              		.loc 1 93 5 is_stmt 1 view .LVU75
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 8


  93:Src/usart.c   ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 258              		.loc 1 93 33 is_stmt 0 view .LVU76
 259 0060 3423     		movs	r3, #52
 260 0062 4360     		str	r3, [r0, #4]
  94:Src/usart.c   ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 261              		.loc 1 94 5 is_stmt 1 view .LVU77
  94:Src/usart.c   ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 262              		.loc 1 94 35 is_stmt 0 view .LVU78
 263 0064 8560     		str	r5, [r0, #8]
  95:Src/usart.c   ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 264              		.loc 1 95 5 is_stmt 1 view .LVU79
  95:Src/usart.c   ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 265              		.loc 1 95 35 is_stmt 0 view .LVU80
 266 0066 C560     		str	r5, [r0, #12]
  96:Src/usart.c   ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 267              		.loc 1 96 5 is_stmt 1 view .LVU81
  96:Src/usart.c   ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 268              		.loc 1 96 32 is_stmt 0 view .LVU82
 269 0068 4C33     		adds	r3, r3, #76
 270 006a 0361     		str	r3, [r0, #16]
  97:Src/usart.c   ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 271              		.loc 1 97 5 is_stmt 1 view .LVU83
  97:Src/usart.c   ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 272              		.loc 1 97 45 is_stmt 0 view .LVU84
 273 006c 4561     		str	r5, [r0, #20]
  98:Src/usart.c   ****     hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
 274              		.loc 1 98 5 is_stmt 1 view .LVU85
  98:Src/usart.c   ****     hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
 275              		.loc 1 98 42 is_stmt 0 view .LVU86
 276 006e 8561     		str	r5, [r0, #24]
  99:Src/usart.c   ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 277              		.loc 1 99 5 is_stmt 1 view .LVU87
  99:Src/usart.c   ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 278              		.loc 1 99 30 is_stmt 0 view .LVU88
 279 0070 603B     		subs	r3, r3, #96
 280 0072 C361     		str	r3, [r0, #28]
 100:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 281              		.loc 1 100 5 is_stmt 1 view .LVU89
 100:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 282              		.loc 1 100 34 is_stmt 0 view .LVU90
 283 0074 0562     		str	r5, [r0, #32]
 101:Src/usart.c   ****     {
 284              		.loc 1 101 5 is_stmt 1 view .LVU91
 101:Src/usart.c   ****     {
 285              		.loc 1 101 9 is_stmt 0 view .LVU92
 286 0076 FFF7FEFF 		bl	HAL_DMA_Init
 287              	.LVL14:
 101:Src/usart.c   ****     {
 288              		.loc 1 101 8 view .LVU93
 289 007a 0028     		cmp	r0, #0
 290 007c 11D1     		bne	.L16
 291              	.L14:
 106:Src/usart.c   **** 
 292              		.loc 1 106 5 is_stmt 1 view .LVU94
 106:Src/usart.c   **** 
 293              		.loc 1 106 5 view .LVU95
 294 007e 0C4B     		ldr	r3, .L17+8
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 9


 295 0080 A367     		str	r3, [r4, #120]
 106:Src/usart.c   **** 
 296              		.loc 1 106 5 view .LVU96
 297 0082 9C62     		str	r4, [r3, #40]
 106:Src/usart.c   **** 
 298              		.loc 1 106 5 view .LVU97
 109:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 299              		.loc 1 109 5 view .LVU98
 300 0084 0022     		movs	r2, #0
 301 0086 0021     		movs	r1, #0
 302 0088 1C20     		movs	r0, #28
 303 008a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 304              	.LVL15:
 110:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
 305              		.loc 1 110 5 view .LVU99
 306 008e 1C20     		movs	r0, #28
 307 0090 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 308              	.LVL16:
 112:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
 309              		.loc 1 112 5 view .LVU100
 310 0094 084B     		ldr	r3, .L17+16
 311 0096 1A68     		ldr	r2, [r3]
 312 0098 1368     		ldr	r3, [r2]
 313 009a 1021     		movs	r1, #16
 314 009c 0B43     		orrs	r3, r1
 315 009e 1360     		str	r3, [r2]
 316              		.loc 1 115 1 is_stmt 0 view .LVU101
 317 00a0 BAE7     		b	.L12
 318              	.L16:
 103:Src/usart.c   ****     }
 319              		.loc 1 103 7 is_stmt 1 view .LVU102
 320 00a2 FFF7FEFF 		bl	Error_Handler
 321              	.LVL17:
 322 00a6 EAE7     		b	.L14
 323              	.L18:
 324              		.align	2
 325              	.L17:
 326 00a8 00440040 		.word	1073759232
 327 00ac 00100240 		.word	1073876992
 328 00b0 00000000 		.word	hdma_usart2_rx
 329 00b4 08000240 		.word	1073872904
 330 00b8 00000000 		.word	huart2
 331              		.cfi_endproc
 332              	.LFE285:
 334              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 335              		.align	1
 336              		.global	HAL_UART_MspDeInit
 337              		.syntax unified
 338              		.code	16
 339              		.thumb_func
 340              		.fpu softvfp
 342              	HAL_UART_MspDeInit:
 343              	.LVL18:
 344              	.LFB286:
 116:Src/usart.c   **** 
 117:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 118:Src/usart.c   **** {
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 10


 345              		.loc 1 118 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		.loc 1 118 1 is_stmt 0 view .LVU104
 350 0000 10B5     		push	{r4, lr}
 351              	.LCFI3:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 4, -8
 354              		.cfi_offset 14, -4
 355 0002 0400     		movs	r4, r0
 119:Src/usart.c   **** 
 120:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 356              		.loc 1 120 3 is_stmt 1 view .LVU105
 357              		.loc 1 120 5 is_stmt 0 view .LVU106
 358 0004 0A4B     		ldr	r3, .L22
 359 0006 0268     		ldr	r2, [r0]
 360 0008 9A42     		cmp	r2, r3
 361 000a 00D0     		beq	.L21
 362              	.LVL19:
 363              	.L19:
 121:Src/usart.c   ****   {
 122:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 123:Src/usart.c   **** 
 124:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 0 */
 125:Src/usart.c   ****     /* Peripheral clock disable */
 126:Src/usart.c   ****     __HAL_RCC_USART2_CLK_DISABLE();
 127:Src/usart.c   ****   
 128:Src/usart.c   ****     /**USART2 GPIO Configuration    
 129:Src/usart.c   ****     PA2     ------> USART2_TX
 130:Src/usart.c   ****     PA3     ------> USART2_RX 
 131:Src/usart.c   ****     */
 132:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, UART_TX_Pin|UART_RX_Pin);
 133:Src/usart.c   **** 
 134:Src/usart.c   ****     /* USART2 DMA DeInit */
 135:Src/usart.c   ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 136:Src/usart.c   **** 
 137:Src/usart.c   ****     /* USART2 interrupt Deinit */
 138:Src/usart.c   ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 139:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 140:Src/usart.c   **** 
 141:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 1 */
 142:Src/usart.c   ****   }
 143:Src/usart.c   **** } 
 364              		.loc 1 143 1 view .LVU107
 365              		@ sp needed
 366              	.LVL20:
 367              		.loc 1 143 1 view .LVU108
 368 000c 10BD     		pop	{r4, pc}
 369              	.LVL21:
 370              	.L21:
 126:Src/usart.c   ****   
 371              		.loc 1 126 5 is_stmt 1 view .LVU109
 372 000e 094A     		ldr	r2, .L22+4
 373 0010 D36B     		ldr	r3, [r2, #60]
 374 0012 0949     		ldr	r1, .L22+8
 375 0014 0B40     		ands	r3, r1
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 11


 376 0016 D363     		str	r3, [r2, #60]
 132:Src/usart.c   **** 
 377              		.loc 1 132 5 view .LVU110
 378 0018 A020     		movs	r0, #160
 379              	.LVL22:
 132:Src/usart.c   **** 
 380              		.loc 1 132 5 is_stmt 0 view .LVU111
 381 001a 0C21     		movs	r1, #12
 382 001c C005     		lsls	r0, r0, #23
 383 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 384              	.LVL23:
 135:Src/usart.c   **** 
 385              		.loc 1 135 5 is_stmt 1 view .LVU112
 386 0022 A06F     		ldr	r0, [r4, #120]
 387 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 388              	.LVL24:
 138:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 389              		.loc 1 138 5 view .LVU113
 390 0028 1C20     		movs	r0, #28
 391 002a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 392              	.LVL25:
 393              		.loc 1 143 1 is_stmt 0 view .LVU114
 394 002e EDE7     		b	.L19
 395              	.L23:
 396              		.align	2
 397              	.L22:
 398 0030 00440040 		.word	1073759232
 399 0034 00100240 		.word	1073876992
 400 0038 FFFFFDFF 		.word	-131073
 401              		.cfi_endproc
 402              	.LFE286:
 404              		.section	.rodata.CHECK_IF_END.str1.4,"aMS",%progbits,1
 405              		.align	2
 406              	.LC5:
 407 0000 25635B31 		.ascii	"%c[100D\000"
 407      30304400 
 408              		.align	2
 409              	.LC7:
 410 0008 25635B32 		.ascii	"%c[2K\000"
 410      4B00
 411              		.section	.text.CHECK_IF_END,"ax",%progbits
 412              		.align	1
 413              		.global	CHECK_IF_END
 414              		.syntax unified
 415              		.code	16
 416              		.thumb_func
 417              		.fpu softvfp
 419              	CHECK_IF_END:
 420              	.LFB287:
 144:Src/usart.c   **** 
 145:Src/usart.c   **** /* USER CODE BEGIN 1 */
 146:Src/usart.c   **** 
 147:Src/usart.c   **** void CHECK_IF_END()
 148:Src/usart.c   **** {
 421              		.loc 1 148 1 is_stmt 1 view -0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 104
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 12


 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425 0000 70B5     		push	{r4, r5, r6, lr}
 426              	.LCFI4:
 427              		.cfi_def_cfa_offset 16
 428              		.cfi_offset 4, -16
 429              		.cfi_offset 5, -12
 430              		.cfi_offset 6, -8
 431              		.cfi_offset 14, -4
 432 0002 9AB0     		sub	sp, sp, #104
 433              	.LCFI5:
 434              		.cfi_def_cfa_offset 120
 149:Src/usart.c   ****   int flag = 1;
 435              		.loc 1 149 3 view .LVU116
 436              	.LVL26:
 150:Src/usart.c   ****   int i = 0;
 437              		.loc 1 150 3 view .LVU117
 151:Src/usart.c   ****   for (i; i < UART_RX_BUFFER_LENGTH; i++)
 438              		.loc 1 151 3 view .LVU118
 150:Src/usart.c   ****   int i = 0;
 439              		.loc 1 150 7 is_stmt 0 view .LVU119
 440 0004 0024     		movs	r4, #0
 441              		.loc 1 151 3 view .LVU120
 442 0006 15E0     		b	.L25
 443              	.LVL27:
 444              	.L35:
 152:Src/usart.c   ****   {
 153:Src/usart.c   ****     if (UART_RX_BUFF[i] == 13)
 154:Src/usart.c   ****     {
 155:Src/usart.c   ****       flag = 0;
 445              		.loc 1 155 7 is_stmt 1 view .LVU121
 156:Src/usart.c   ****       UART_RX_BUFF[i] = '\0';
 446              		.loc 1 156 7 view .LVU122
 447              		.loc 1 156 23 is_stmt 0 view .LVU123
 448 0008 3548     		ldr	r0, .L36
 449 000a 0023     		movs	r3, #0
 450 000c 0355     		strb	r3, [r0, r4]
 157:Src/usart.c   ****       UART_PARSE(UART_RX_BUFF);
 451              		.loc 1 157 7 is_stmt 1 view .LVU124
 452 000e FFF7FEFF 		bl	UART_PARSE
 453              	.LVL28:
 158:Src/usart.c   ****       HAL_UART_DMAStop(&huart2);
 454              		.loc 1 158 7 view .LVU125
 455 0012 3448     		ldr	r0, .L36+4
 456 0014 FFF7FEFF 		bl	HAL_UART_DMAStop
 457              	.LVL29:
 159:Src/usart.c   ****       for (i; i >= 0; i--)
 458              		.loc 1 159 7 view .LVU126
 459              	.L27:
 460              		.loc 1 159 15 discriminator 1 view .LVU127
 461              		.loc 1 159 7 is_stmt 0 discriminator 1 view .LVU128
 462 0018 002C     		cmp	r4, #0
 463 001a 04DB     		blt	.L34
 160:Src/usart.c   ****       {
 161:Src/usart.c   ****         UART_RX_BUFF[i] = '\0';
 464              		.loc 1 161 9 is_stmt 1 discriminator 2 view .LVU129
 465              		.loc 1 161 25 is_stmt 0 discriminator 2 view .LVU130
 466 001c 304B     		ldr	r3, .L36
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 13


 467 001e 0022     		movs	r2, #0
 468 0020 1A55     		strb	r2, [r3, r4]
 159:Src/usart.c   ****       for (i; i >= 0; i--)
 469              		.loc 1 159 23 is_stmt 1 discriminator 2 view .LVU131
 159:Src/usart.c   ****       for (i; i >= 0; i--)
 470              		.loc 1 159 24 is_stmt 0 discriminator 2 view .LVU132
 471 0022 013C     		subs	r4, r4, #1
 472              	.LVL30:
 159:Src/usart.c   ****       for (i; i >= 0; i--)
 473              		.loc 1 159 24 discriminator 2 view .LVU133
 474 0024 F8E7     		b	.L27
 475              	.L34:
 162:Src/usart.c   ****       }
 163:Src/usart.c   ****       HAL_UART_Receive_DMA(&huart2, UART_RX_BUFF, UART_RX_BUFFER_LENGTH);
 476              		.loc 1 163 7 is_stmt 1 view .LVU134
 477 0026 4022     		movs	r2, #64
 478 0028 2D49     		ldr	r1, .L36
 479 002a 2E48     		ldr	r0, .L36+4
 480 002c FFF7FEFF 		bl	HAL_UART_Receive_DMA
 481              	.LVL31:
 164:Src/usart.c   ****       break;
 482              		.loc 1 164 7 view .LVU135
 165:Src/usart.c   ****     }
 166:Src/usart.c   ****     else if (UART_RX_BUFF[i] == 8)
 167:Src/usart.c   ****     {
 168:Src/usart.c   ****       UART_RX_BUFF[i] = '\0';
 169:Src/usart.c   ****       if (i > 0)
 170:Src/usart.c   ****       {
 171:Src/usart.c   ****         UART_RX_BUFF[i - 1] = '\0';
 172:Src/usart.c   ****       }
 173:Src/usart.c   ****       HAL_UART_DMAStop(&huart2);
 174:Src/usart.c   ****       HAL_UART_Receive_DMA(&huart2, UART_RX_BUFF + i - 1, UART_RX_BUFFER_LENGTH - i);
 175:Src/usart.c   ****       break;
 176:Src/usart.c   ****     }
 177:Src/usart.c   ****   }
 178:Src/usart.c   ****   if (flag)
 483              		.loc 1 178 3 view .LVU136
 484 0030 54E0     		b	.L24
 485              	.LVL32:
 486              	.L30:
 151:Src/usart.c   ****   {
 487              		.loc 1 151 38 view .LVU137
 151:Src/usart.c   ****   {
 488              		.loc 1 151 39 is_stmt 0 view .LVU138
 489 0032 0134     		adds	r4, r4, #1
 490              	.LVL33:
 491              	.L25:
 151:Src/usart.c   ****   {
 492              		.loc 1 151 11 is_stmt 1 discriminator 1 view .LVU139
 151:Src/usart.c   ****   {
 493              		.loc 1 151 3 is_stmt 0 discriminator 1 view .LVU140
 494 0034 3F2C     		cmp	r4, #63
 495 0036 1BDC     		bgt	.L32
 153:Src/usart.c   ****     {
 496              		.loc 1 153 5 is_stmt 1 view .LVU141
 153:Src/usart.c   ****     {
 497              		.loc 1 153 21 is_stmt 0 view .LVU142
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 14


 498 0038 294B     		ldr	r3, .L36
 499 003a 1B5D     		ldrb	r3, [r3, r4]
 153:Src/usart.c   ****     {
 500              		.loc 1 153 8 view .LVU143
 501 003c 0D2B     		cmp	r3, #13
 502 003e E3D0     		beq	.L35
 166:Src/usart.c   ****     {
 503              		.loc 1 166 10 is_stmt 1 view .LVU144
 166:Src/usart.c   ****     {
 504              		.loc 1 166 13 is_stmt 0 view .LVU145
 505 0040 082B     		cmp	r3, #8
 506 0042 F6D1     		bne	.L30
 168:Src/usart.c   ****       if (i > 0)
 507              		.loc 1 168 7 is_stmt 1 view .LVU146
 168:Src/usart.c   ****       if (i > 0)
 508              		.loc 1 168 23 is_stmt 0 view .LVU147
 509 0044 264B     		ldr	r3, .L36
 510 0046 0022     		movs	r2, #0
 511 0048 1A55     		strb	r2, [r3, r4]
 169:Src/usart.c   ****       {
 512              		.loc 1 169 7 is_stmt 1 view .LVU148
 169:Src/usart.c   ****       {
 513              		.loc 1 169 10 is_stmt 0 view .LVU149
 514 004a 002C     		cmp	r4, #0
 515 004c 03DD     		ble	.L31
 171:Src/usart.c   ****       }
 516              		.loc 1 171 9 is_stmt 1 view .LVU150
 171:Src/usart.c   ****       }
 517              		.loc 1 171 24 is_stmt 0 view .LVU151
 518 004e 631E     		subs	r3, r4, #1
 171:Src/usart.c   ****       }
 519              		.loc 1 171 29 view .LVU152
 520 0050 234A     		ldr	r2, .L36
 521 0052 0021     		movs	r1, #0
 522 0054 D154     		strb	r1, [r2, r3]
 523              	.L31:
 173:Src/usart.c   ****       HAL_UART_Receive_DMA(&huart2, UART_RX_BUFF + i - 1, UART_RX_BUFFER_LENGTH - i);
 524              		.loc 1 173 7 is_stmt 1 view .LVU153
 525 0056 234D     		ldr	r5, .L36+4
 526 0058 2800     		movs	r0, r5
 527 005a FFF7FEFF 		bl	HAL_UART_DMAStop
 528              	.LVL34:
 174:Src/usart.c   ****       break;
 529              		.loc 1 174 7 view .LVU154
 174:Src/usart.c   ****       break;
 530              		.loc 1 174 54 is_stmt 0 view .LVU155
 531 005e 611E     		subs	r1, r4, #1
 174:Src/usart.c   ****       break;
 532              		.loc 1 174 7 view .LVU156
 533 0060 4022     		movs	r2, #64
 534 0062 121B     		subs	r2, r2, r4
 535 0064 92B2     		uxth	r2, r2
 536 0066 1E4B     		ldr	r3, .L36
 537 0068 C918     		adds	r1, r1, r3
 538 006a 2800     		movs	r0, r5
 539 006c FFF7FEFF 		bl	HAL_UART_Receive_DMA
 540              	.LVL35:
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 15


 175:Src/usart.c   ****     }
 541              		.loc 1 175 7 is_stmt 1 view .LVU157
 542              		.loc 1 178 3 view .LVU158
 543              	.L32:
 544              	.LBB4:
 179:Src/usart.c   ****   {
 180:Src/usart.c   ****     SERIAL_WRITE("%c[100D", 27);
 545              		.loc 1 180 5 view .LVU159
 546 0070 0026     		movs	r6, #0
 547 0072 0196     		str	r6, [sp, #4]
 548 0074 6022     		movs	r2, #96
 549 0076 0021     		movs	r1, #0
 550 0078 02A8     		add	r0, sp, #8
 551 007a FFF7FEFF 		bl	memset
 552              	.LVL36:
 553              		.loc 1 180 5 view .LVU160
 554 007e 1B22     		movs	r2, #27
 555 0080 1949     		ldr	r1, .L36+8
 556 0082 01A8     		add	r0, sp, #4
 557 0084 FFF7FEFF 		bl	sprintf
 558              	.LVL37:
 559              		.loc 1 180 5 view .LVU161
 560 0088 FA25     		movs	r5, #250
 561 008a AD00     		lsls	r5, r5, #2
 562 008c 154C     		ldr	r4, .L36+4
 563              	.LVL38:
 564              		.loc 1 180 5 is_stmt 0 view .LVU162
 565 008e 2B00     		movs	r3, r5
 566 0090 0622     		movs	r2, #6
 567 0092 01A9     		add	r1, sp, #4
 568 0094 2000     		movs	r0, r4
 569 0096 FFF7FEFF 		bl	HAL_UART_Transmit
 570              	.LVL39:
 571              	.LBE4:
 572              		.loc 1 180 32 is_stmt 1 view .LVU163
 573              	.LBB5:
 181:Src/usart.c   ****     SERIAL_WRITE("%c[2K", 27);
 574              		.loc 1 181 5 view .LVU164
 575 009a 0196     		str	r6, [sp, #4]
 576 009c 6022     		movs	r2, #96
 577 009e 0021     		movs	r1, #0
 578 00a0 02A8     		add	r0, sp, #8
 579 00a2 FFF7FEFF 		bl	memset
 580              	.LVL40:
 581              		.loc 1 181 5 view .LVU165
 582 00a6 1B22     		movs	r2, #27
 583 00a8 1049     		ldr	r1, .L36+12
 584 00aa 01A8     		add	r0, sp, #4
 585 00ac FFF7FEFF 		bl	sprintf
 586              	.LVL41:
 587              		.loc 1 181 5 view .LVU166
 588 00b0 2B00     		movs	r3, r5
 589 00b2 0422     		movs	r2, #4
 590 00b4 01A9     		add	r1, sp, #4
 591 00b6 2000     		movs	r0, r4
 592 00b8 FFF7FEFF 		bl	HAL_UART_Transmit
 593              	.LVL42:
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 16


 594              	.LBE5:
 595              		.loc 1 181 30 view .LVU167
 596              	.LBB6:
 182:Src/usart.c   ****     SERIAL_WRITE(UART_RX_BUFF);
 597              		.loc 1 182 5 view .LVU168
 598 00bc 0196     		str	r6, [sp, #4]
 599 00be 6022     		movs	r2, #96
 600 00c0 0021     		movs	r1, #0
 601 00c2 02A8     		add	r0, sp, #8
 602 00c4 FFF7FEFF 		bl	memset
 603              	.LVL43:
 604              		.loc 1 182 5 view .LVU169
 605 00c8 0549     		ldr	r1, .L36
 606 00ca 01A8     		add	r0, sp, #4
 607 00cc FFF7FEFF 		bl	sprintf
 608              	.LVL44:
 609              		.loc 1 182 5 view .LVU170
 610 00d0 82B2     		uxth	r2, r0
 611 00d2 2B00     		movs	r3, r5
 612 00d4 01A9     		add	r1, sp, #4
 613 00d6 2000     		movs	r0, r4
 614              	.LVL45:
 615              		.loc 1 182 5 is_stmt 0 view .LVU171
 616 00d8 FFF7FEFF 		bl	HAL_UART_Transmit
 617              	.LVL46:
 618              	.LBE6:
 619              		.loc 1 182 31 is_stmt 1 view .LVU172
 620              	.L24:
 183:Src/usart.c   ****   }
 184:Src/usart.c   **** }
 621              		.loc 1 184 1 is_stmt 0 view .LVU173
 622 00dc 1AB0     		add	sp, sp, #104
 623              		@ sp needed
 624 00de 70BD     		pop	{r4, r5, r6, pc}
 625              	.L37:
 626              		.align	2
 627              	.L36:
 628 00e0 00000000 		.word	UART_RX_BUFF
 629 00e4 00000000 		.word	huart2
 630 00e8 00000000 		.word	.LC5
 631 00ec 08000000 		.word	.LC7
 632              		.cfi_endproc
 633              	.LFE287:
 635              		.section	.rodata.IDLE_UART_IRQHandler.str1.4,"aMS",%progbits,1
 636              		.align	2
 637              	.LC10:
 638 0000 0D3C3C3C 		.ascii	"\015<<<<<<<<<<RESET>>>>>>>>\012\000"
 638      3C3C3C3C 
 638      3C3C3C52 
 638      45534554 
 638      3E3E3E3E 
 639              		.section	.text.IDLE_UART_IRQHandler,"ax",%progbits
 640              		.align	1
 641              		.global	IDLE_UART_IRQHandler
 642              		.syntax unified
 643              		.code	16
 644              		.thumb_func
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 17


 645              		.fpu softvfp
 647              	IDLE_UART_IRQHandler:
 648              	.LVL47:
 649              	.LFB288:
 185:Src/usart.c   **** 
 186:Src/usart.c   **** void IDLE_UART_IRQHandler(UART_HandleTypeDef *huart)
 187:Src/usart.c   **** {
 650              		.loc 1 187 1 is_stmt 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		.loc 1 187 1 is_stmt 0 view .LVU175
 655 0000 10B5     		push	{r4, lr}
 656              	.LCFI6:
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 4, -8
 659              		.cfi_offset 14, -4
 188:Src/usart.c   ****   if (USART2 == huart2.Instance) //Determine whether it is serial port 1
 660              		.loc 1 188 3 is_stmt 1 view .LVU176
 661              		.loc 1 188 23 is_stmt 0 view .LVU177
 662 0002 084B     		ldr	r3, .L42
 663 0004 1B68     		ldr	r3, [r3]
 664              		.loc 1 188 6 view .LVU178
 665 0006 084A     		ldr	r2, .L42+4
 666 0008 9342     		cmp	r3, r2
 667 000a 00D0     		beq	.L41
 668              	.LVL48:
 669              	.L38:
 189:Src/usart.c   ****   {
 190:Src/usart.c   ****     if (RESET != __HAL_UART_GET_FLAG(&huart2, UART_FLAG_IDLE)) //Judging whether it is idle interru
 191:Src/usart.c   ****     {
 192:Src/usart.c   ****       __HAL_UART_CLEAR_IDLEFLAG(&huart2); //Clear idle interrupt sign (otherwise it will continue t
 193:Src/usart.c   ****       CHECK_IF_END();
 194:Src/usart.c   ****     }
 195:Src/usart.c   ****   }
 196:Src/usart.c   **** }
 670              		.loc 1 196 1 view .LVU179
 671              		@ sp needed
 672 000c 10BD     		pop	{r4, pc}
 673              	.LVL49:
 674              	.L41:
 190:Src/usart.c   ****     {
 675              		.loc 1 190 5 is_stmt 1 view .LVU180
 190:Src/usart.c   ****     {
 676              		.loc 1 190 18 is_stmt 0 view .LVU181
 677 000e DA69     		ldr	r2, [r3, #28]
 190:Src/usart.c   ****     {
 678              		.loc 1 190 8 view .LVU182
 679 0010 D206     		lsls	r2, r2, #27
 680 0012 02D5     		bpl	.L40
 190:Src/usart.c   ****     {
 681              		.loc 1 190 15 discriminator 1 view .LVU183
 682 0014 054A     		ldr	r2, .L42+8
 683 0016 012A     		cmp	r2, #1
 684 0018 F8D0     		beq	.L38
 685              	.L40:
 192:Src/usart.c   ****       CHECK_IF_END();
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 18


 686              		.loc 1 192 7 is_stmt 1 view .LVU184
 687 001a 1022     		movs	r2, #16
 688 001c 1A62     		str	r2, [r3, #32]
 193:Src/usart.c   ****     }
 689              		.loc 1 193 7 view .LVU185
 690 001e FFF7FEFF 		bl	CHECK_IF_END
 691              	.LVL50:
 692              		.loc 1 196 1 is_stmt 0 view .LVU186
 693 0022 F3E7     		b	.L38
 694              	.L43:
 695              		.align	2
 696              	.L42:
 697 0024 00000000 		.word	huart2
 698 0028 00440040 		.word	1073759232
 699 002c 00000000 		.word	.LC10
 700              		.cfi_endproc
 701              	.LFE288:
 703              		.comm	hdma_usart2_rx,92,4
 704              		.comm	huart2,140,4
 705              		.text
 706              	.Letext0:
 707              		.file 2 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\machine\\_default_ty
 708              		.file 3 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 709              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 710              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 711              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 712              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 713              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 714              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 715              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 716              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 717              		.file 12 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 718              		.file 13 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 719              		.file 14 "c:\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\st
 720              		.file 15 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 721              		.file 16 "Inc/usart.h"
 722              		.file 17 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\stdio.h"
 723              		.file 18 "Inc/usart_utils.h"
 724              		.file 19 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_cortex.h"
 725              		.file 20 "Inc/main.h"
 726              		.file 21 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h"
 727              		.file 22 "<built-in>"
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:16     .text.MX_USART2_UART_Init:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:24     .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:139    .text.MX_USART2_UART_Init:00000068 $d
                            *COM*:0000008c huart2
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:145    .text.HAL_UART_MspInit:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:152    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:326    .text.HAL_UART_MspInit:000000a8 $d
                            *COM*:0000005c hdma_usart2_rx
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:335    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:342    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:398    .text.HAL_UART_MspDeInit:00000030 $d
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:405    .rodata.CHECK_IF_END.str1.4:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:412    .text.CHECK_IF_END:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:419    .text.CHECK_IF_END:00000000 CHECK_IF_END
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:628    .text.CHECK_IF_END:000000e0 $d
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:636    .rodata.IDLE_UART_IRQHandler.str1.4:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:640    .text.IDLE_UART_IRQHandler:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:647    .text.IDLE_UART_IRQHandler:00000000 IDLE_UART_IRQHandler
C:\Users\Mateusz\AppData\Local\Temp\cc0x8sDT.s:697    .text.IDLE_UART_IRQHandler:00000024 $d

UNDEFINED SYMBOLS
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
Error_Handler
memset
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
UART_PARSE
HAL_UART_DMAStop
HAL_UART_Receive_DMA
sprintf
HAL_UART_Transmit
UART_RX_BUFF
