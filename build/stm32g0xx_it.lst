ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB284:
  26              		.file 1 "Src/stm32g0xx_it.c"
   1:Src/stm32g0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32g0xx_it.c **** /**
   3:Src/stm32g0xx_it.c ****   ******************************************************************************
   4:Src/stm32g0xx_it.c ****   * @file    stm32g0xx_it.c
   5:Src/stm32g0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32g0xx_it.c ****   ******************************************************************************
   7:Src/stm32g0xx_it.c ****   * @attention
   8:Src/stm32g0xx_it.c ****   *
   9:Src/stm32g0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32g0xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32g0xx_it.c ****   *
  12:Src/stm32g0xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32g0xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32g0xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32g0xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32g0xx_it.c ****   *
  17:Src/stm32g0xx_it.c ****   ******************************************************************************
  18:Src/stm32g0xx_it.c ****   */
  19:Src/stm32g0xx_it.c **** /* USER CODE END Header */
  20:Src/stm32g0xx_it.c **** 
  21:Src/stm32g0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32g0xx_it.c **** #include "main.h"
  23:Src/stm32g0xx_it.c **** #include "stm32g0xx_it.h"
  24:Src/stm32g0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32g0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32g0xx_it.c **** #include "state.h"
  27:Src/stm32g0xx_it.c **** #include "usart_utils.h"
  28:Src/stm32g0xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32g0xx_it.c **** 
  30:Src/stm32g0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/stm32g0xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32g0xx_it.c **** 
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 2


  33:Src/stm32g0xx_it.c **** /* USER CODE END TD */
  34:Src/stm32g0xx_it.c **** 
  35:Src/stm32g0xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32g0xx_it.c **** 
  38:Src/stm32g0xx_it.c **** /* USER CODE END PD */
  39:Src/stm32g0xx_it.c **** 
  40:Src/stm32g0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32g0xx_it.c **** 
  43:Src/stm32g0xx_it.c **** /* USER CODE END PM */
  44:Src/stm32g0xx_it.c **** 
  45:Src/stm32g0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32g0xx_it.c **** extern state State;
  48:Src/stm32g0xx_it.c **** extern uint8_t UART_RX_INDEX;
  49:Src/stm32g0xx_it.c **** /* USER CODE END PV */
  50:Src/stm32g0xx_it.c **** 
  51:Src/stm32g0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  52:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PFP */
  53:Src/stm32g0xx_it.c **** 
  54:Src/stm32g0xx_it.c **** /* USER CODE END PFP */
  55:Src/stm32g0xx_it.c **** 
  56:Src/stm32g0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  57:Src/stm32g0xx_it.c **** /* USER CODE BEGIN 0 */
  58:Src/stm32g0xx_it.c **** 
  59:Src/stm32g0xx_it.c **** /* USER CODE END 0 */
  60:Src/stm32g0xx_it.c **** 
  61:Src/stm32g0xx_it.c **** /* External variables --------------------------------------------------------*/
  62:Src/stm32g0xx_it.c **** extern LPTIM_HandleTypeDef hlptim1;
  63:Src/stm32g0xx_it.c **** extern SPI_HandleTypeDef hspi2;
  64:Src/stm32g0xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  65:Src/stm32g0xx_it.c **** extern UART_HandleTypeDef huart2;
  66:Src/stm32g0xx_it.c **** /* USER CODE BEGIN EV */
  67:Src/stm32g0xx_it.c **** 
  68:Src/stm32g0xx_it.c **** /* USER CODE END EV */
  69:Src/stm32g0xx_it.c **** 
  70:Src/stm32g0xx_it.c **** /******************************************************************************/
  71:Src/stm32g0xx_it.c **** /*           Cortex-M0+ Processor Interruption and Exception Handlers          */
  72:Src/stm32g0xx_it.c **** /******************************************************************************/
  73:Src/stm32g0xx_it.c **** /**
  74:Src/stm32g0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  75:Src/stm32g0xx_it.c ****   */
  76:Src/stm32g0xx_it.c **** void NMI_Handler(void)
  77:Src/stm32g0xx_it.c **** {
  27              		.loc 1 77 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  78:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  79:Src/stm32g0xx_it.c **** 
  80:Src/stm32g0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  81:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  82:Src/stm32g0xx_it.c **** 
  83:Src/stm32g0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Src/stm32g0xx_it.c **** }
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 3


  32              		.loc 1 84 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE284:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	HardFault_Handler:
  47              	.LFB285:
  85:Src/stm32g0xx_it.c **** 
  86:Src/stm32g0xx_it.c **** /**
  87:Src/stm32g0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Src/stm32g0xx_it.c ****   */
  89:Src/stm32g0xx_it.c **** void HardFault_Handler(void)
  90:Src/stm32g0xx_it.c **** {
  48              		.loc 1 90 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  91:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Src/stm32g0xx_it.c **** 
  93:Src/stm32g0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Src/stm32g0xx_it.c ****   while (1)
  55              		.loc 1 94 3 discriminator 1 view .LVU3
  95:Src/stm32g0xx_it.c ****   {
  96:Src/stm32g0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Src/stm32g0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Src/stm32g0xx_it.c ****   }
  56              		.loc 1 98 3 discriminator 1 view .LVU4
  94:Src/stm32g0xx_it.c ****   {
  57              		.loc 1 94 9 discriminator 1 view .LVU5
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE285:
  62              		.section	.text.SVC_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	SVC_Handler
  65              		.syntax unified
  66              		.code	16
  67              		.thumb_func
  68              		.fpu softvfp
  70              	SVC_Handler:
  71              	.LFB286:
  99:Src/stm32g0xx_it.c **** }
 100:Src/stm32g0xx_it.c **** 
 101:Src/stm32g0xx_it.c **** /**
 102:Src/stm32g0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 103:Src/stm32g0xx_it.c ****   */
 104:Src/stm32g0xx_it.c **** void SVC_Handler(void)
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 4


 105:Src/stm32g0xx_it.c **** {
  72              		.loc 1 105 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 106:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 107:Src/stm32g0xx_it.c **** 
 108:Src/stm32g0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 109:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 110:Src/stm32g0xx_it.c **** 
 111:Src/stm32g0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 112:Src/stm32g0xx_it.c **** }
  77              		.loc 1 112 1 view .LVU7
  78              		@ sp needed
  79 0000 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE286:
  83              		.section	.text.PendSV_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	PendSV_Handler
  86              		.syntax unified
  87              		.code	16
  88              		.thumb_func
  89              		.fpu softvfp
  91              	PendSV_Handler:
  92              	.LFB287:
 113:Src/stm32g0xx_it.c **** 
 114:Src/stm32g0xx_it.c **** /**
 115:Src/stm32g0xx_it.c ****   * @brief This function handles Pendable request for system service.
 116:Src/stm32g0xx_it.c ****   */
 117:Src/stm32g0xx_it.c **** void PendSV_Handler(void)
 118:Src/stm32g0xx_it.c **** {
  93              		.loc 1 118 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 119:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 120:Src/stm32g0xx_it.c **** 
 121:Src/stm32g0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 122:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 123:Src/stm32g0xx_it.c **** 
 124:Src/stm32g0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 125:Src/stm32g0xx_it.c **** }
  98              		.loc 1 125 1 view .LVU9
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE287:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 110              		.fpu softvfp
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 5


 112              	SysTick_Handler:
 113              	.LFB288:
 126:Src/stm32g0xx_it.c **** 
 127:Src/stm32g0xx_it.c **** /**
 128:Src/stm32g0xx_it.c ****   * @brief This function handles System tick timer.
 129:Src/stm32g0xx_it.c ****   */
 130:Src/stm32g0xx_it.c **** void SysTick_Handler(void)
 131:Src/stm32g0xx_it.c **** {
 114              		.loc 1 131 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 10B5     		push	{r4, lr}
 119              	.LCFI0:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
 132:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 133:Src/stm32g0xx_it.c **** 
 134:Src/stm32g0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 135:Src/stm32g0xx_it.c ****   HAL_IncTick();
 123              		.loc 1 135 3 view .LVU11
 124 0002 FFF7FEFF 		bl	HAL_IncTick
 125              	.LVL0:
 136:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 137:Src/stm32g0xx_it.c **** 
 138:Src/stm32g0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 139:Src/stm32g0xx_it.c **** }
 126              		.loc 1 139 1 is_stmt 0 view .LVU12
 127              		@ sp needed
 128 0006 10BD     		pop	{r4, pc}
 129              		.cfi_endproc
 130              	.LFE288:
 132              		.section	.text.FLASH_IRQHandler,"ax",%progbits
 133              		.align	1
 134              		.global	FLASH_IRQHandler
 135              		.syntax unified
 136              		.code	16
 137              		.thumb_func
 138              		.fpu softvfp
 140              	FLASH_IRQHandler:
 141              	.LFB289:
 140:Src/stm32g0xx_it.c **** 
 141:Src/stm32g0xx_it.c **** /******************************************************************************/
 142:Src/stm32g0xx_it.c **** /* STM32G0xx Peripheral Interrupt Handlers                                    */
 143:Src/stm32g0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 144:Src/stm32g0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 145:Src/stm32g0xx_it.c **** /* please refer to the startup file (startup_stm32g0xx.s).                    */
 146:Src/stm32g0xx_it.c **** /******************************************************************************/
 147:Src/stm32g0xx_it.c **** 
 148:Src/stm32g0xx_it.c **** /**
 149:Src/stm32g0xx_it.c ****   * @brief This function handles Flash global interrupt.
 150:Src/stm32g0xx_it.c ****   */
 151:Src/stm32g0xx_it.c **** void FLASH_IRQHandler(void)
 152:Src/stm32g0xx_it.c **** {
 142              		.loc 1 152 1 is_stmt 1 view -0
 143              		.cfi_startproc
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 6


 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 10B5     		push	{r4, lr}
 147              	.LCFI1:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 153:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 0 */
 154:Src/stm32g0xx_it.c **** 
 155:Src/stm32g0xx_it.c ****   /* USER CODE END FLASH_IRQn 0 */
 156:Src/stm32g0xx_it.c ****   HAL_FLASH_IRQHandler();
 151              		.loc 1 156 3 view .LVU14
 152 0002 FFF7FEFF 		bl	HAL_FLASH_IRQHandler
 153              	.LVL1:
 157:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 1 */
 158:Src/stm32g0xx_it.c **** 
 159:Src/stm32g0xx_it.c ****   /* USER CODE END FLASH_IRQn 1 */
 160:Src/stm32g0xx_it.c **** }
 154              		.loc 1 160 1 is_stmt 0 view .LVU15
 155              		@ sp needed
 156 0006 10BD     		pop	{r4, pc}
 157              		.cfi_endproc
 158              	.LFE289:
 160              		.section	.text.RCC_IRQHandler,"ax",%progbits
 161              		.align	1
 162              		.global	RCC_IRQHandler
 163              		.syntax unified
 164              		.code	16
 165              		.thumb_func
 166              		.fpu softvfp
 168              	RCC_IRQHandler:
 169              	.LFB290:
 161:Src/stm32g0xx_it.c **** 
 162:Src/stm32g0xx_it.c **** /**
 163:Src/stm32g0xx_it.c ****   * @brief This function handles RCC global interrupt.
 164:Src/stm32g0xx_it.c ****   */
 165:Src/stm32g0xx_it.c **** void RCC_IRQHandler(void)
 166:Src/stm32g0xx_it.c **** {
 170              		.loc 1 166 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 167:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 0 */
 168:Src/stm32g0xx_it.c **** 
 169:Src/stm32g0xx_it.c ****   /* USER CODE END RCC_IRQn 0 */
 170:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 1 */
 171:Src/stm32g0xx_it.c **** 
 172:Src/stm32g0xx_it.c ****   /* USER CODE END RCC_IRQn 1 */
 173:Src/stm32g0xx_it.c **** }
 175              		.loc 1 173 1 view .LVU17
 176              		@ sp needed
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE290:
 181              		.section	.text.EXTI4_15_IRQHandler,"ax",%progbits
 182              		.align	1
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 7


 183              		.global	EXTI4_15_IRQHandler
 184              		.syntax unified
 185              		.code	16
 186              		.thumb_func
 187              		.fpu softvfp
 189              	EXTI4_15_IRQHandler:
 190              	.LFB291:
 174:Src/stm32g0xx_it.c **** 
 175:Src/stm32g0xx_it.c **** /**
 176:Src/stm32g0xx_it.c ****   * @brief This function handles EXTI line 4 to 15 interrupts.
 177:Src/stm32g0xx_it.c ****   */
 178:Src/stm32g0xx_it.c **** void EXTI4_15_IRQHandler(void)
 179:Src/stm32g0xx_it.c **** {
 191              		.loc 1 179 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 10B5     		push	{r4, lr}
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 4, -8
 199              		.cfi_offset 14, -4
 180:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN EXTI4_15_IRQn 0 */
 181:Src/stm32g0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(ADC_MISO_Pin);
 200              		.loc 1 181 3 view .LVU19
 201 0002 4020     		movs	r0, #64
 202 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 203              	.LVL2:
 182:Src/stm32g0xx_it.c **** 
 183:Src/stm32g0xx_it.c ****   /* USER CODE END EXTI4_15_IRQn 0 */
 184:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN EXTI4_15_IRQn 1 */
 185:Src/stm32g0xx_it.c **** 
 186:Src/stm32g0xx_it.c ****   /* USER CODE END EXTI4_15_IRQn 1 */
 187:Src/stm32g0xx_it.c **** }
 204              		.loc 1 187 1 is_stmt 0 view .LVU20
 205              		@ sp needed
 206 0008 10BD     		pop	{r4, pc}
 207              		.cfi_endproc
 208              	.LFE291:
 210              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 211              		.align	1
 212              		.global	DMA1_Channel1_IRQHandler
 213              		.syntax unified
 214              		.code	16
 215              		.thumb_func
 216              		.fpu softvfp
 218              	DMA1_Channel1_IRQHandler:
 219              	.LFB292:
 188:Src/stm32g0xx_it.c **** 
 189:Src/stm32g0xx_it.c **** /**
 190:Src/stm32g0xx_it.c ****   * @brief This function handles DMA1 channel 1 interrupt.
 191:Src/stm32g0xx_it.c ****   */
 192:Src/stm32g0xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 193:Src/stm32g0xx_it.c **** {
 220              		.loc 1 193 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 8


 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 10B5     		push	{r4, lr}
 225              	.LCFI3:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 4, -8
 228              		.cfi_offset 14, -4
 194:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 195:Src/stm32g0xx_it.c **** 
 196:Src/stm32g0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 197:Src/stm32g0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 229              		.loc 1 197 3 view .LVU22
 230 0002 0248     		ldr	r0, .L11
 231 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 232              	.LVL3:
 198:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 199:Src/stm32g0xx_it.c **** 
 200:Src/stm32g0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 201:Src/stm32g0xx_it.c **** }
 233              		.loc 1 201 1 is_stmt 0 view .LVU23
 234              		@ sp needed
 235 0008 10BD     		pop	{r4, pc}
 236              	.L12:
 237 000a C046     		.align	2
 238              	.L11:
 239 000c 00000000 		.word	hdma_usart2_rx
 240              		.cfi_endproc
 241              	.LFE292:
 243              		.section	.text.TIM6_DAC_LPTIM1_IRQHandler,"ax",%progbits
 244              		.align	1
 245              		.global	TIM6_DAC_LPTIM1_IRQHandler
 246              		.syntax unified
 247              		.code	16
 248              		.thumb_func
 249              		.fpu softvfp
 251              	TIM6_DAC_LPTIM1_IRQHandler:
 252              	.LFB293:
 202:Src/stm32g0xx_it.c **** 
 203:Src/stm32g0xx_it.c **** /**
 204:Src/stm32g0xx_it.c ****   * @brief This function handles TIM6, DAC1 and LPTIM1 interrupts (LPTIM1 interrupt through EXTI li
 205:Src/stm32g0xx_it.c ****   */
 206:Src/stm32g0xx_it.c **** void TIM6_DAC_LPTIM1_IRQHandler(void)
 207:Src/stm32g0xx_it.c **** {
 253              		.loc 1 207 1 is_stmt 1 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257 0000 10B5     		push	{r4, lr}
 258              	.LCFI4:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
 208:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_LPTIM1_IRQn 0 */
 209:Src/stm32g0xx_it.c ****   State.uptime++;
 262              		.loc 1 209 3 view .LVU25
 263              		.loc 1 209 8 is_stmt 0 view .LVU26
 264 0002 064A     		ldr	r2, .L14
 265              		.loc 1 209 15 view .LVU27
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 9


 266 0004 1368     		ldr	r3, [r2]
 267 0006 0133     		adds	r3, r3, #1
 268 0008 1360     		str	r3, [r2]
 210:Src/stm32g0xx_it.c ****   HAL_GPIO_TogglePin(LED_TEMP_GPIO_Port, LED_TEMP_Pin);
 269              		.loc 1 210 3 is_stmt 1 view .LVU28
 270 000a A020     		movs	r0, #160
 271 000c 0221     		movs	r1, #2
 272 000e C005     		lsls	r0, r0, #23
 273 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 274              	.LVL4:
 211:Src/stm32g0xx_it.c ****   /* USER CODE END TIM6_DAC_LPTIM1_IRQn 0 */
 212:Src/stm32g0xx_it.c ****   HAL_LPTIM_IRQHandler(&hlptim1);
 275              		.loc 1 212 3 view .LVU29
 276 0014 0248     		ldr	r0, .L14+4
 277 0016 FFF7FEFF 		bl	HAL_LPTIM_IRQHandler
 278              	.LVL5:
 213:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_LPTIM1_IRQn 1 */
 214:Src/stm32g0xx_it.c **** 
 215:Src/stm32g0xx_it.c ****   /* USER CODE END TIM6_DAC_LPTIM1_IRQn 1 */
 216:Src/stm32g0xx_it.c **** }
 279              		.loc 1 216 1 is_stmt 0 view .LVU30
 280              		@ sp needed
 281 001a 10BD     		pop	{r4, pc}
 282              	.L15:
 283              		.align	2
 284              	.L14:
 285 001c 00000000 		.word	State
 286 0020 00000000 		.word	hlptim1
 287              		.cfi_endproc
 288              	.LFE293:
 290              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 291              		.align	1
 292              		.global	SPI2_IRQHandler
 293              		.syntax unified
 294              		.code	16
 295              		.thumb_func
 296              		.fpu softvfp
 298              	SPI2_IRQHandler:
 299              	.LFB294:
 217:Src/stm32g0xx_it.c **** 
 218:Src/stm32g0xx_it.c **** /**
 219:Src/stm32g0xx_it.c ****   * @brief This function handles SPI2 global interrupt.
 220:Src/stm32g0xx_it.c ****   */
 221:Src/stm32g0xx_it.c **** void SPI2_IRQHandler(void)
 222:Src/stm32g0xx_it.c **** {
 300              		.loc 1 222 1 is_stmt 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304 0000 10B5     		push	{r4, lr}
 305              	.LCFI5:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 4, -8
 308              		.cfi_offset 14, -4
 223:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 224:Src/stm32g0xx_it.c **** 
 225:Src/stm32g0xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 10


 226:Src/stm32g0xx_it.c ****   HAL_SPI_IRQHandler(&hspi2);
 309              		.loc 1 226 3 view .LVU32
 310 0002 0248     		ldr	r0, .L17
 311 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 312              	.LVL6:
 227:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 1 */
 228:Src/stm32g0xx_it.c **** 
 229:Src/stm32g0xx_it.c ****   /* USER CODE END SPI2_IRQn 1 */
 230:Src/stm32g0xx_it.c **** }
 313              		.loc 1 230 1 is_stmt 0 view .LVU33
 314              		@ sp needed
 315 0008 10BD     		pop	{r4, pc}
 316              	.L18:
 317 000a C046     		.align	2
 318              	.L17:
 319 000c 00000000 		.word	hspi2
 320              		.cfi_endproc
 321              	.LFE294:
 323              		.section	.text.USART2_IRQHandler,"ax",%progbits
 324              		.align	1
 325              		.global	USART2_IRQHandler
 326              		.syntax unified
 327              		.code	16
 328              		.thumb_func
 329              		.fpu softvfp
 331              	USART2_IRQHandler:
 332              	.LFB295:
 231:Src/stm32g0xx_it.c **** 
 232:Src/stm32g0xx_it.c **** /**
 233:Src/stm32g0xx_it.c ****   * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXTI li
 234:Src/stm32g0xx_it.c ****   */
 235:Src/stm32g0xx_it.c **** void USART2_IRQHandler(void)
 236:Src/stm32g0xx_it.c **** {
 333              		.loc 1 236 1 is_stmt 1 view -0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 10B5     		push	{r4, lr}
 338              	.LCFI6:
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 4, -8
 341              		.cfi_offset 14, -4
 237:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 238:Src/stm32g0xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 239:Src/stm32g0xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 342              		.loc 1 239 3 view .LVU35
 343 0002 044C     		ldr	r4, .L20
 344 0004 2000     		movs	r0, r4
 345 0006 FFF7FEFF 		bl	HAL_UART_IRQHandler
 346              	.LVL7:
 240:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 241:Src/stm32g0xx_it.c ****   IDLE_UART_IRQHandler(&huart2);
 347              		.loc 1 241 3 view .LVU36
 348 000a 2000     		movs	r0, r4
 349 000c FFF7FEFF 		bl	IDLE_UART_IRQHandler
 350              	.LVL8:
 242:Src/stm32g0xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 11


 243:Src/stm32g0xx_it.c **** }
 351              		.loc 1 243 1 is_stmt 0 view .LVU37
 352              		@ sp needed
 353 0010 10BD     		pop	{r4, pc}
 354              	.L21:
 355 0012 C046     		.align	2
 356              	.L20:
 357 0014 00000000 		.word	huart2
 358              		.cfi_endproc
 359              	.LFE295:
 361              		.section	.text.HAL_GPIO_EXTI_Falling_Callback,"ax",%progbits
 362              		.align	1
 363              		.global	HAL_GPIO_EXTI_Falling_Callback
 364              		.syntax unified
 365              		.code	16
 366              		.thumb_func
 367              		.fpu softvfp
 369              	HAL_GPIO_EXTI_Falling_Callback:
 370              	.LVL9:
 371              	.LFB296:
 244:Src/stm32g0xx_it.c **** 
 245:Src/stm32g0xx_it.c **** /* USER CODE BEGIN 1 */
 246:Src/stm32g0xx_it.c **** void HAL_GPIO_EXTI_Falling_Callback(uint16_t GPIO_Pin)
 247:Src/stm32g0xx_it.c **** {
 372              		.loc 1 247 1 is_stmt 1 view -0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		.loc 1 247 1 is_stmt 0 view .LVU39
 377 0000 10B5     		push	{r4, lr}
 378              	.LCFI7:
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 4, -8
 381              		.cfi_offset 14, -4
 248:Src/stm32g0xx_it.c ****   if (GPIO_Pin == ADC_MISO_Pin)
 382              		.loc 1 248 3 is_stmt 1 view .LVU40
 383              		.loc 1 248 6 is_stmt 0 view .LVU41
 384 0002 4028     		cmp	r0, #64
 385 0004 00D0     		beq	.L24
 386              	.LVL10:
 387              	.L22:
 249:Src/stm32g0xx_it.c ****   {
 250:Src/stm32g0xx_it.c ****     ADC_update();
 251:Src/stm32g0xx_it.c ****   }
 252:Src/stm32g0xx_it.c **** };
 388              		.loc 1 252 1 view .LVU42
 389              		@ sp needed
 390 0006 10BD     		pop	{r4, pc}
 391              	.LVL11:
 392              	.L24:
 393              	.LBB2:
 250:Src/stm32g0xx_it.c ****   }
 394              		.loc 1 250 5 is_stmt 1 view .LVU43
 395 0008 FFF7FEFF 		bl	ADC_update
 396              	.LVL12:
 250:Src/stm32g0xx_it.c ****   }
 397              		.loc 1 250 5 is_stmt 0 view .LVU44
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 12


 398              	.LBE2:
 399              		.loc 1 252 1 view .LVU45
 400 000c FBE7     		b	.L22
 401              		.cfi_endproc
 402              	.LFE296:
 404              		.text
 405              	.Letext0:
 406              		.file 2 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 407              		.file 3 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 408              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 409              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 410              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 411              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 412              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 413              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_lptim.h"
 414              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h"
 415              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 416              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 417              		.file 13 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\lock.h"
 418              		.file 14 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\_types.h"
 419              		.file 15 "c:\\gnu tools arm embedded\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 420              		.file 16 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\reent.h"
 421              		.file 17 "Inc/usart.h"
 422              		.file 18 "Inc/state.h"
 423              		.file 19 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_it.c
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:16     .text.NMI_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:46     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:63     .text.SVC_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:70     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:84     .text.PendSV_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:91     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:105    .text.SysTick_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:112    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:133    .text.FLASH_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:140    .text.FLASH_IRQHandler:00000000 FLASH_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:161    .text.RCC_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:168    .text.RCC_IRQHandler:00000000 RCC_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:182    .text.EXTI4_15_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:189    .text.EXTI4_15_IRQHandler:00000000 EXTI4_15_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:211    .text.DMA1_Channel1_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:218    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:239    .text.DMA1_Channel1_IRQHandler:0000000c $d
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:244    .text.TIM6_DAC_LPTIM1_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:251    .text.TIM6_DAC_LPTIM1_IRQHandler:00000000 TIM6_DAC_LPTIM1_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:285    .text.TIM6_DAC_LPTIM1_IRQHandler:0000001c $d
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:291    .text.SPI2_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:298    .text.SPI2_IRQHandler:00000000 SPI2_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:319    .text.SPI2_IRQHandler:0000000c $d
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:324    .text.USART2_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:331    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:357    .text.USART2_IRQHandler:00000014 $d
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:362    .text.HAL_GPIO_EXTI_Falling_Callback:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccU9LeVt.s:369    .text.HAL_GPIO_EXTI_Falling_Callback:00000000 HAL_GPIO_EXTI_Falling_Callback

UNDEFINED SYMBOLS
HAL_IncTick
HAL_FLASH_IRQHandler
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
hdma_usart2_rx
HAL_GPIO_TogglePin
HAL_LPTIM_IRQHandler
State
hlptim1
HAL_SPI_IRQHandler
hspi2
HAL_UART_IRQHandler
IDLE_UART_IRQHandler
huart2
ADC_update
