ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB284:
  26              		.file 1 "Src/stm32g0xx_it.c"
   1:Src/stm32g0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32g0xx_it.c **** /**
   3:Src/stm32g0xx_it.c ****   ******************************************************************************
   4:Src/stm32g0xx_it.c ****   * @file    stm32g0xx_it.c
   5:Src/stm32g0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32g0xx_it.c ****   ******************************************************************************
   7:Src/stm32g0xx_it.c ****   * @attention
   8:Src/stm32g0xx_it.c ****   *
   9:Src/stm32g0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32g0xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32g0xx_it.c ****   *
  12:Src/stm32g0xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32g0xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32g0xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32g0xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32g0xx_it.c ****   *
  17:Src/stm32g0xx_it.c ****   ******************************************************************************
  18:Src/stm32g0xx_it.c ****   */
  19:Src/stm32g0xx_it.c **** /* USER CODE END Header */
  20:Src/stm32g0xx_it.c **** 
  21:Src/stm32g0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32g0xx_it.c **** #include "main.h"
  23:Src/stm32g0xx_it.c **** #include "stm32g0xx_it.h"
  24:Src/stm32g0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32g0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32g0xx_it.c **** #include "state.h"
  27:Src/stm32g0xx_it.c **** #include "usart_utils.h"
  28:Src/stm32g0xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32g0xx_it.c **** 
  30:Src/stm32g0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/stm32g0xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32g0xx_it.c **** 
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 2


  33:Src/stm32g0xx_it.c **** /* USER CODE END TD */
  34:Src/stm32g0xx_it.c **** 
  35:Src/stm32g0xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32g0xx_it.c **** 
  38:Src/stm32g0xx_it.c **** /* USER CODE END PD */
  39:Src/stm32g0xx_it.c **** 
  40:Src/stm32g0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32g0xx_it.c **** 
  43:Src/stm32g0xx_it.c **** /* USER CODE END PM */
  44:Src/stm32g0xx_it.c **** 
  45:Src/stm32g0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32g0xx_it.c **** extern state State;
  48:Src/stm32g0xx_it.c **** extern uint8_t UART_RX_INDEX;
  49:Src/stm32g0xx_it.c **** /* USER CODE END PV */
  50:Src/stm32g0xx_it.c **** 
  51:Src/stm32g0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  52:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PFP */
  53:Src/stm32g0xx_it.c **** 
  54:Src/stm32g0xx_it.c **** /* USER CODE END PFP */
  55:Src/stm32g0xx_it.c **** 
  56:Src/stm32g0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  57:Src/stm32g0xx_it.c **** /* USER CODE BEGIN 0 */
  58:Src/stm32g0xx_it.c **** 
  59:Src/stm32g0xx_it.c **** /* USER CODE END 0 */
  60:Src/stm32g0xx_it.c **** 
  61:Src/stm32g0xx_it.c **** /* External variables --------------------------------------------------------*/
  62:Src/stm32g0xx_it.c **** extern LPTIM_HandleTypeDef hlptim1;
  63:Src/stm32g0xx_it.c **** extern SPI_HandleTypeDef hspi2;
  64:Src/stm32g0xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  65:Src/stm32g0xx_it.c **** extern UART_HandleTypeDef huart2;
  66:Src/stm32g0xx_it.c **** /* USER CODE BEGIN EV */
  67:Src/stm32g0xx_it.c **** 
  68:Src/stm32g0xx_it.c **** /* USER CODE END EV */
  69:Src/stm32g0xx_it.c **** 
  70:Src/stm32g0xx_it.c **** /******************************************************************************/
  71:Src/stm32g0xx_it.c **** /*           Cortex-M0+ Processor Interruption and Exception Handlers          */ 
  72:Src/stm32g0xx_it.c **** /******************************************************************************/
  73:Src/stm32g0xx_it.c **** /**
  74:Src/stm32g0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  75:Src/stm32g0xx_it.c ****   */
  76:Src/stm32g0xx_it.c **** void NMI_Handler(void)
  77:Src/stm32g0xx_it.c **** {
  27              		.loc 1 77 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  78:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  79:Src/stm32g0xx_it.c **** 
  80:Src/stm32g0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  81:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  82:Src/stm32g0xx_it.c **** 
  83:Src/stm32g0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Src/stm32g0xx_it.c **** }
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 3


  32              		.loc 1 84 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE284:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	HardFault_Handler:
  47              	.LFB285:
  85:Src/stm32g0xx_it.c **** 
  86:Src/stm32g0xx_it.c **** /**
  87:Src/stm32g0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Src/stm32g0xx_it.c ****   */
  89:Src/stm32g0xx_it.c **** void HardFault_Handler(void)
  90:Src/stm32g0xx_it.c **** {
  48              		.loc 1 90 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  91:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Src/stm32g0xx_it.c **** 
  93:Src/stm32g0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Src/stm32g0xx_it.c ****   while (1)
  55              		.loc 1 94 3 discriminator 1 view .LVU3
  95:Src/stm32g0xx_it.c ****   {
  96:Src/stm32g0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Src/stm32g0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Src/stm32g0xx_it.c ****   }
  56              		.loc 1 98 3 discriminator 1 view .LVU4
  94:Src/stm32g0xx_it.c ****   {
  57              		.loc 1 94 9 discriminator 1 view .LVU5
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE285:
  62              		.section	.text.SVC_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	SVC_Handler
  65              		.syntax unified
  66              		.code	16
  67              		.thumb_func
  68              		.fpu softvfp
  70              	SVC_Handler:
  71              	.LFB286:
  99:Src/stm32g0xx_it.c **** }
 100:Src/stm32g0xx_it.c **** 
 101:Src/stm32g0xx_it.c **** /**
 102:Src/stm32g0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 103:Src/stm32g0xx_it.c ****   */
 104:Src/stm32g0xx_it.c **** void SVC_Handler(void)
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 4


 105:Src/stm32g0xx_it.c **** {
  72              		.loc 1 105 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 106:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 107:Src/stm32g0xx_it.c **** 
 108:Src/stm32g0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 109:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 110:Src/stm32g0xx_it.c **** 
 111:Src/stm32g0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 112:Src/stm32g0xx_it.c **** }
  77              		.loc 1 112 1 view .LVU7
  78              		@ sp needed
  79 0000 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE286:
  83              		.section	.text.PendSV_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	PendSV_Handler
  86              		.syntax unified
  87              		.code	16
  88              		.thumb_func
  89              		.fpu softvfp
  91              	PendSV_Handler:
  92              	.LFB287:
 113:Src/stm32g0xx_it.c **** 
 114:Src/stm32g0xx_it.c **** /**
 115:Src/stm32g0xx_it.c ****   * @brief This function handles Pendable request for system service.
 116:Src/stm32g0xx_it.c ****   */
 117:Src/stm32g0xx_it.c **** void PendSV_Handler(void)
 118:Src/stm32g0xx_it.c **** {
  93              		.loc 1 118 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 119:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 120:Src/stm32g0xx_it.c **** 
 121:Src/stm32g0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 122:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 123:Src/stm32g0xx_it.c **** 
 124:Src/stm32g0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 125:Src/stm32g0xx_it.c **** }
  98              		.loc 1 125 1 view .LVU9
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE287:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 110              		.fpu softvfp
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 5


 112              	SysTick_Handler:
 113              	.LFB288:
 126:Src/stm32g0xx_it.c **** 
 127:Src/stm32g0xx_it.c **** /**
 128:Src/stm32g0xx_it.c ****   * @brief This function handles System tick timer.
 129:Src/stm32g0xx_it.c ****   */
 130:Src/stm32g0xx_it.c **** void SysTick_Handler(void)
 131:Src/stm32g0xx_it.c **** {
 114              		.loc 1 131 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 10B5     		push	{r4, lr}
 119              	.LCFI0:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
 132:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 133:Src/stm32g0xx_it.c **** 
 134:Src/stm32g0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 135:Src/stm32g0xx_it.c ****   HAL_IncTick();
 123              		.loc 1 135 3 view .LVU11
 124 0002 FFF7FEFF 		bl	HAL_IncTick
 125              	.LVL0:
 136:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 137:Src/stm32g0xx_it.c **** 
 138:Src/stm32g0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 139:Src/stm32g0xx_it.c **** }
 126              		.loc 1 139 1 is_stmt 0 view .LVU12
 127              		@ sp needed
 128 0006 10BD     		pop	{r4, pc}
 129              		.cfi_endproc
 130              	.LFE288:
 132              		.section	.text.FLASH_IRQHandler,"ax",%progbits
 133              		.align	1
 134              		.global	FLASH_IRQHandler
 135              		.syntax unified
 136              		.code	16
 137              		.thumb_func
 138              		.fpu softvfp
 140              	FLASH_IRQHandler:
 141              	.LFB289:
 140:Src/stm32g0xx_it.c **** 
 141:Src/stm32g0xx_it.c **** /******************************************************************************/
 142:Src/stm32g0xx_it.c **** /* STM32G0xx Peripheral Interrupt Handlers                                    */
 143:Src/stm32g0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 144:Src/stm32g0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 145:Src/stm32g0xx_it.c **** /* please refer to the startup file (startup_stm32g0xx.s).                    */
 146:Src/stm32g0xx_it.c **** /******************************************************************************/
 147:Src/stm32g0xx_it.c **** 
 148:Src/stm32g0xx_it.c **** /**
 149:Src/stm32g0xx_it.c ****   * @brief This function handles Flash global interrupt.
 150:Src/stm32g0xx_it.c ****   */
 151:Src/stm32g0xx_it.c **** void FLASH_IRQHandler(void)
 152:Src/stm32g0xx_it.c **** {
 142              		.loc 1 152 1 is_stmt 1 view -0
 143              		.cfi_startproc
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 6


 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 10B5     		push	{r4, lr}
 147              	.LCFI1:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 153:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 0 */
 154:Src/stm32g0xx_it.c **** 
 155:Src/stm32g0xx_it.c ****   /* USER CODE END FLASH_IRQn 0 */
 156:Src/stm32g0xx_it.c ****   HAL_FLASH_IRQHandler();
 151              		.loc 1 156 3 view .LVU14
 152 0002 FFF7FEFF 		bl	HAL_FLASH_IRQHandler
 153              	.LVL1:
 157:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 1 */
 158:Src/stm32g0xx_it.c **** 
 159:Src/stm32g0xx_it.c ****   /* USER CODE END FLASH_IRQn 1 */
 160:Src/stm32g0xx_it.c **** }
 154              		.loc 1 160 1 is_stmt 0 view .LVU15
 155              		@ sp needed
 156 0006 10BD     		pop	{r4, pc}
 157              		.cfi_endproc
 158              	.LFE289:
 160              		.section	.text.RCC_IRQHandler,"ax",%progbits
 161              		.align	1
 162              		.global	RCC_IRQHandler
 163              		.syntax unified
 164              		.code	16
 165              		.thumb_func
 166              		.fpu softvfp
 168              	RCC_IRQHandler:
 169              	.LFB290:
 161:Src/stm32g0xx_it.c **** 
 162:Src/stm32g0xx_it.c **** /**
 163:Src/stm32g0xx_it.c ****   * @brief This function handles RCC global interrupt.
 164:Src/stm32g0xx_it.c ****   */
 165:Src/stm32g0xx_it.c **** void RCC_IRQHandler(void)
 166:Src/stm32g0xx_it.c **** {
 170              		.loc 1 166 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 167:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 0 */
 168:Src/stm32g0xx_it.c **** 
 169:Src/stm32g0xx_it.c ****   /* USER CODE END RCC_IRQn 0 */
 170:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 1 */
 171:Src/stm32g0xx_it.c **** 
 172:Src/stm32g0xx_it.c ****   /* USER CODE END RCC_IRQn 1 */
 173:Src/stm32g0xx_it.c **** }
 175              		.loc 1 173 1 view .LVU17
 176              		@ sp needed
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE290:
 181              		.section	.text.EXTI4_15_IRQHandler,"ax",%progbits
 182              		.align	1
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 7


 183              		.global	EXTI4_15_IRQHandler
 184              		.syntax unified
 185              		.code	16
 186              		.thumb_func
 187              		.fpu softvfp
 189              	EXTI4_15_IRQHandler:
 190              	.LFB291:
 174:Src/stm32g0xx_it.c **** 
 175:Src/stm32g0xx_it.c **** /**
 176:Src/stm32g0xx_it.c ****   * @brief This function handles EXTI line 4 to 15 interrupts.
 177:Src/stm32g0xx_it.c ****   */
 178:Src/stm32g0xx_it.c **** void EXTI4_15_IRQHandler(void)
 179:Src/stm32g0xx_it.c **** {
 191              		.loc 1 179 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 10B5     		push	{r4, lr}
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 4, -8
 199              		.cfi_offset 14, -4
 180:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN EXTI4_15_IRQn 0 */
 181:Src/stm32g0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(ADC_MISO_Pin);
 200              		.loc 1 181 3 view .LVU19
 201 0002 4020     		movs	r0, #64
 202 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 203              	.LVL2:
 182:Src/stm32g0xx_it.c **** 
 183:Src/stm32g0xx_it.c ****   /* USER CODE END EXTI4_15_IRQn 0 */
 184:Src/stm32g0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 204              		.loc 1 184 3 view .LVU20
 205 0008 8020     		movs	r0, #128
 206 000a 0001     		lsls	r0, r0, #4
 207 000c FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 208              	.LVL3:
 185:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN EXTI4_15_IRQn 1 */
 186:Src/stm32g0xx_it.c **** 
 187:Src/stm32g0xx_it.c ****   /* USER CODE END EXTI4_15_IRQn 1 */
 188:Src/stm32g0xx_it.c **** }
 209              		.loc 1 188 1 is_stmt 0 view .LVU21
 210              		@ sp needed
 211 0010 10BD     		pop	{r4, pc}
 212              		.cfi_endproc
 213              	.LFE291:
 215              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 216              		.align	1
 217              		.global	DMA1_Channel1_IRQHandler
 218              		.syntax unified
 219              		.code	16
 220              		.thumb_func
 221              		.fpu softvfp
 223              	DMA1_Channel1_IRQHandler:
 224              	.LFB292:
 189:Src/stm32g0xx_it.c **** 
 190:Src/stm32g0xx_it.c **** /**
 191:Src/stm32g0xx_it.c ****   * @brief This function handles DMA1 channel 1 interrupt.
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 8


 192:Src/stm32g0xx_it.c ****   */
 193:Src/stm32g0xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 194:Src/stm32g0xx_it.c **** {
 225              		.loc 1 194 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 10B5     		push	{r4, lr}
 230              	.LCFI3:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 4, -8
 233              		.cfi_offset 14, -4
 195:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 196:Src/stm32g0xx_it.c **** 
 197:Src/stm32g0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 198:Src/stm32g0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 234              		.loc 1 198 3 view .LVU23
 235 0002 0248     		ldr	r0, .L11
 236 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 237              	.LVL4:
 199:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 200:Src/stm32g0xx_it.c **** 
 201:Src/stm32g0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 202:Src/stm32g0xx_it.c **** }
 238              		.loc 1 202 1 is_stmt 0 view .LVU24
 239              		@ sp needed
 240 0008 10BD     		pop	{r4, pc}
 241              	.L12:
 242 000a C046     		.align	2
 243              	.L11:
 244 000c 00000000 		.word	hdma_usart2_rx
 245              		.cfi_endproc
 246              	.LFE292:
 248              		.section	.text.TIM6_DAC_LPTIM1_IRQHandler,"ax",%progbits
 249              		.align	1
 250              		.global	TIM6_DAC_LPTIM1_IRQHandler
 251              		.syntax unified
 252              		.code	16
 253              		.thumb_func
 254              		.fpu softvfp
 256              	TIM6_DAC_LPTIM1_IRQHandler:
 257              	.LFB293:
 203:Src/stm32g0xx_it.c **** 
 204:Src/stm32g0xx_it.c **** /**
 205:Src/stm32g0xx_it.c ****   * @brief This function handles TIM6, DAC1 and LPTIM1 interrupts (LPTIM1 interrupt through EXTI li
 206:Src/stm32g0xx_it.c ****   */
 207:Src/stm32g0xx_it.c **** void TIM6_DAC_LPTIM1_IRQHandler(void)
 208:Src/stm32g0xx_it.c **** {
 258              		.loc 1 208 1 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262 0000 70B5     		push	{r4, r5, r6, lr}
 263              	.LCFI4:
 264              		.cfi_def_cfa_offset 16
 265              		.cfi_offset 4, -16
 266              		.cfi_offset 5, -12
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 9


 267              		.cfi_offset 6, -8
 268              		.cfi_offset 14, -4
 209:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_LPTIM1_IRQn 0 */
 210:Src/stm32g0xx_it.c ****   State.uptime++;
 269              		.loc 1 210 3 view .LVU26
 270              		.loc 1 210 8 is_stmt 0 view .LVU27
 271 0002 0A4B     		ldr	r3, .L14
 272              		.loc 1 210 15 view .LVU28
 273 0004 0120     		movs	r0, #1
 274 0006 0021     		movs	r1, #0
 275 0008 1C68     		ldr	r4, [r3]
 276 000a 5D68     		ldr	r5, [r3, #4]
 277 000c 0019     		adds	r0, r0, r4
 278 000e 6941     		adcs	r1, r1, r5
 279 0010 1860     		str	r0, [r3]
 280 0012 5960     		str	r1, [r3, #4]
 211:Src/stm32g0xx_it.c ****   State.timer_1s_flag = 1;
 281              		.loc 1 211 3 is_stmt 1 view .LVU29
 282              		.loc 1 211 23 is_stmt 0 view .LVU30
 283 0014 0122     		movs	r2, #1
 284 0016 1A72     		strb	r2, [r3, #8]
 212:Src/stm32g0xx_it.c ****   HAL_GPIO_TogglePin(LED_TEMP_GPIO_Port, LED_TEMP_Pin);
 285              		.loc 1 212 3 is_stmt 1 view .LVU31
 286 0018 A020     		movs	r0, #160
 287 001a 0221     		movs	r1, #2
 288 001c C005     		lsls	r0, r0, #23
 289 001e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 290              	.LVL5:
 213:Src/stm32g0xx_it.c ****   /* USER CODE END TIM6_DAC_LPTIM1_IRQn 0 */
 214:Src/stm32g0xx_it.c ****   HAL_LPTIM_IRQHandler(&hlptim1);
 291              		.loc 1 214 3 view .LVU32
 292 0022 0348     		ldr	r0, .L14+4
 293 0024 FFF7FEFF 		bl	HAL_LPTIM_IRQHandler
 294              	.LVL6:
 215:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_LPTIM1_IRQn 1 */
 216:Src/stm32g0xx_it.c **** 
 217:Src/stm32g0xx_it.c ****   /* USER CODE END TIM6_DAC_LPTIM1_IRQn 1 */
 218:Src/stm32g0xx_it.c **** }
 295              		.loc 1 218 1 is_stmt 0 view .LVU33
 296              		@ sp needed
 297 0028 70BD     		pop	{r4, r5, r6, pc}
 298              	.L15:
 299 002a C046     		.align	2
 300              	.L14:
 301 002c 00000000 		.word	State
 302 0030 00000000 		.word	hlptim1
 303              		.cfi_endproc
 304              	.LFE293:
 306              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 307              		.align	1
 308              		.global	SPI2_IRQHandler
 309              		.syntax unified
 310              		.code	16
 311              		.thumb_func
 312              		.fpu softvfp
 314              	SPI2_IRQHandler:
 315              	.LFB294:
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 10


 219:Src/stm32g0xx_it.c **** 
 220:Src/stm32g0xx_it.c **** /**
 221:Src/stm32g0xx_it.c ****   * @brief This function handles SPI2 global interrupt.
 222:Src/stm32g0xx_it.c ****   */
 223:Src/stm32g0xx_it.c **** void SPI2_IRQHandler(void)
 224:Src/stm32g0xx_it.c **** {
 316              		.loc 1 224 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 10B5     		push	{r4, lr}
 321              	.LCFI5:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 4, -8
 324              		.cfi_offset 14, -4
 225:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 226:Src/stm32g0xx_it.c **** 
 227:Src/stm32g0xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
 228:Src/stm32g0xx_it.c ****   HAL_SPI_IRQHandler(&hspi2);
 325              		.loc 1 228 3 view .LVU35
 326 0002 0248     		ldr	r0, .L17
 327 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 328              	.LVL7:
 229:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 1 */
 230:Src/stm32g0xx_it.c **** 
 231:Src/stm32g0xx_it.c ****   /* USER CODE END SPI2_IRQn 1 */
 232:Src/stm32g0xx_it.c **** }
 329              		.loc 1 232 1 is_stmt 0 view .LVU36
 330              		@ sp needed
 331 0008 10BD     		pop	{r4, pc}
 332              	.L18:
 333 000a C046     		.align	2
 334              	.L17:
 335 000c 00000000 		.word	hspi2
 336              		.cfi_endproc
 337              	.LFE294:
 339              		.section	.text.USART2_IRQHandler,"ax",%progbits
 340              		.align	1
 341              		.global	USART2_IRQHandler
 342              		.syntax unified
 343              		.code	16
 344              		.thumb_func
 345              		.fpu softvfp
 347              	USART2_IRQHandler:
 348              	.LFB295:
 233:Src/stm32g0xx_it.c **** 
 234:Src/stm32g0xx_it.c **** /**
 235:Src/stm32g0xx_it.c ****   * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXTI li
 236:Src/stm32g0xx_it.c ****   */
 237:Src/stm32g0xx_it.c **** void USART2_IRQHandler(void)
 238:Src/stm32g0xx_it.c **** {
 349              		.loc 1 238 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 10B5     		push	{r4, lr}
 354              	.LCFI6:
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 11


 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 4, -8
 357              		.cfi_offset 14, -4
 239:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 240:Src/stm32g0xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 241:Src/stm32g0xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 358              		.loc 1 241 3 view .LVU38
 359 0002 044C     		ldr	r4, .L20
 360 0004 2000     		movs	r0, r4
 361 0006 FFF7FEFF 		bl	HAL_UART_IRQHandler
 362              	.LVL8:
 242:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 243:Src/stm32g0xx_it.c ****   IDLE_UART_IRQHandler(&huart2);
 363              		.loc 1 243 3 view .LVU39
 364 000a 2000     		movs	r0, r4
 365 000c FFF7FEFF 		bl	IDLE_UART_IRQHandler
 366              	.LVL9:
 244:Src/stm32g0xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 245:Src/stm32g0xx_it.c **** }
 367              		.loc 1 245 1 is_stmt 0 view .LVU40
 368              		@ sp needed
 369 0010 10BD     		pop	{r4, pc}
 370              	.L21:
 371 0012 C046     		.align	2
 372              	.L20:
 373 0014 00000000 		.word	huart2
 374              		.cfi_endproc
 375              	.LFE295:
 377              		.section	.text.HAL_GPIO_EXTI_Falling_Callback,"ax",%progbits
 378              		.align	1
 379              		.global	HAL_GPIO_EXTI_Falling_Callback
 380              		.syntax unified
 381              		.code	16
 382              		.thumb_func
 383              		.fpu softvfp
 385              	HAL_GPIO_EXTI_Falling_Callback:
 386              	.LVL10:
 387              	.LFB296:
 246:Src/stm32g0xx_it.c **** 
 247:Src/stm32g0xx_it.c **** /* USER CODE BEGIN 1 */
 248:Src/stm32g0xx_it.c **** void HAL_GPIO_EXTI_Falling_Callback(uint16_t GPIO_Pin)
 249:Src/stm32g0xx_it.c **** {
 388              		.loc 1 249 1 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		.loc 1 249 1 is_stmt 0 view .LVU42
 393 0000 10B5     		push	{r4, lr}
 394              	.LCFI7:
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 4, -8
 397              		.cfi_offset 14, -4
 250:Src/stm32g0xx_it.c ****   if (GPIO_Pin == ADC_MISO_Pin)
 398              		.loc 1 250 3 is_stmt 1 view .LVU43
 399              		.loc 1 250 6 is_stmt 0 view .LVU44
 400 0002 4028     		cmp	r0, #64
 401 0004 00D0     		beq	.L24
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 12


 402              	.LVL11:
 403              	.L22:
 251:Src/stm32g0xx_it.c ****   {
 252:Src/stm32g0xx_it.c ****     ADC_update();
 253:Src/stm32g0xx_it.c ****   }
 254:Src/stm32g0xx_it.c **** };
 404              		.loc 1 254 1 view .LVU45
 405              		@ sp needed
 406 0006 10BD     		pop	{r4, pc}
 407              	.LVL12:
 408              	.L24:
 409              	.LBB2:
 252:Src/stm32g0xx_it.c ****   }
 410              		.loc 1 252 5 is_stmt 1 view .LVU46
 411 0008 FFF7FEFF 		bl	ADC_update
 412              	.LVL13:
 252:Src/stm32g0xx_it.c ****   }
 413              		.loc 1 252 5 is_stmt 0 view .LVU47
 414              	.LBE2:
 415              		.loc 1 254 1 view .LVU48
 416 000c FBE7     		b	.L22
 417              		.cfi_endproc
 418              	.LFE296:
 420              		.text
 421              	.Letext0:
 422              		.file 2 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 423              		.file 3 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 424              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 425              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 426              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 427              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 428              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 429              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_lptim.h"
 430              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h"
 431              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 432              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 433              		.file 13 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\lock.h"
 434              		.file 14 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\_types.h"
 435              		.file 15 "c:\\gnu tools arm embedded\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 436              		.file 16 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\reent.h"
 437              		.file 17 "Inc/usart.h"
 438              		.file 18 "Inc/state.h"
 439              		.file 19 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_it.c
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:16     .text.NMI_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:46     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:63     .text.SVC_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:70     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:84     .text.PendSV_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:91     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:105    .text.SysTick_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:112    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:133    .text.FLASH_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:140    .text.FLASH_IRQHandler:00000000 FLASH_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:161    .text.RCC_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:168    .text.RCC_IRQHandler:00000000 RCC_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:182    .text.EXTI4_15_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:189    .text.EXTI4_15_IRQHandler:00000000 EXTI4_15_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:216    .text.DMA1_Channel1_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:223    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:244    .text.DMA1_Channel1_IRQHandler:0000000c $d
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:249    .text.TIM6_DAC_LPTIM1_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:256    .text.TIM6_DAC_LPTIM1_IRQHandler:00000000 TIM6_DAC_LPTIM1_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:301    .text.TIM6_DAC_LPTIM1_IRQHandler:0000002c $d
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:307    .text.SPI2_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:314    .text.SPI2_IRQHandler:00000000 SPI2_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:335    .text.SPI2_IRQHandler:0000000c $d
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:340    .text.USART2_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:347    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:373    .text.USART2_IRQHandler:00000014 $d
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:378    .text.HAL_GPIO_EXTI_Falling_Callback:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccV5FaqV.s:385    .text.HAL_GPIO_EXTI_Falling_Callback:00000000 HAL_GPIO_EXTI_Falling_Callback

UNDEFINED SYMBOLS
HAL_IncTick
HAL_FLASH_IRQHandler
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
hdma_usart2_rx
HAL_GPIO_TogglePin
HAL_LPTIM_IRQHandler
State
hlptim1
HAL_SPI_IRQHandler
hspi2
HAL_UART_IRQHandler
IDLE_UART_IRQHandler
huart2
ADC_update
