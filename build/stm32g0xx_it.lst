ARM GAS  C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB281:
  26              		.file 1 "Src/stm32g0xx_it.c"
   1:Src/stm32g0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32g0xx_it.c **** /**
   3:Src/stm32g0xx_it.c ****   ******************************************************************************
   4:Src/stm32g0xx_it.c ****   * @file    stm32g0xx_it.c
   5:Src/stm32g0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32g0xx_it.c ****   ******************************************************************************
   7:Src/stm32g0xx_it.c ****   * @attention
   8:Src/stm32g0xx_it.c ****   *
   9:Src/stm32g0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32g0xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32g0xx_it.c ****   *
  12:Src/stm32g0xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32g0xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32g0xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32g0xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32g0xx_it.c ****   *
  17:Src/stm32g0xx_it.c ****   ******************************************************************************
  18:Src/stm32g0xx_it.c ****   */
  19:Src/stm32g0xx_it.c **** /* USER CODE END Header */
  20:Src/stm32g0xx_it.c **** 
  21:Src/stm32g0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32g0xx_it.c **** #include "main.h"
  23:Src/stm32g0xx_it.c **** #include "stm32g0xx_it.h"
  24:Src/stm32g0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32g0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32g0xx_it.c **** #include "state.h"
  27:Src/stm32g0xx_it.c **** #include "usart_utils.h"
  28:Src/stm32g0xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32g0xx_it.c **** 
  30:Src/stm32g0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/stm32g0xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32g0xx_it.c **** 
ARM GAS  C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s 			page 2


  33:Src/stm32g0xx_it.c **** /* USER CODE END TD */
  34:Src/stm32g0xx_it.c **** 
  35:Src/stm32g0xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32g0xx_it.c **** 
  38:Src/stm32g0xx_it.c **** /* USER CODE END PD */
  39:Src/stm32g0xx_it.c **** 
  40:Src/stm32g0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32g0xx_it.c **** 
  43:Src/stm32g0xx_it.c **** /* USER CODE END PM */
  44:Src/stm32g0xx_it.c **** 
  45:Src/stm32g0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32g0xx_it.c **** extern state State;
  48:Src/stm32g0xx_it.c **** 
  49:Src/stm32g0xx_it.c **** /* USER CODE END PV */
  50:Src/stm32g0xx_it.c **** 
  51:Src/stm32g0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  52:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PFP */
  53:Src/stm32g0xx_it.c **** 
  54:Src/stm32g0xx_it.c **** /* USER CODE END PFP */
  55:Src/stm32g0xx_it.c **** 
  56:Src/stm32g0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  57:Src/stm32g0xx_it.c **** /* USER CODE BEGIN 0 */
  58:Src/stm32g0xx_it.c **** 
  59:Src/stm32g0xx_it.c **** /* USER CODE END 0 */
  60:Src/stm32g0xx_it.c **** 
  61:Src/stm32g0xx_it.c **** /* External variables --------------------------------------------------------*/
  62:Src/stm32g0xx_it.c **** extern LPTIM_HandleTypeDef hlptim1;
  63:Src/stm32g0xx_it.c **** /* USER CODE BEGIN EV */
  64:Src/stm32g0xx_it.c **** 
  65:Src/stm32g0xx_it.c **** /* USER CODE END EV */
  66:Src/stm32g0xx_it.c **** 
  67:Src/stm32g0xx_it.c **** /******************************************************************************/
  68:Src/stm32g0xx_it.c **** /*           Cortex-M0+ Processor Interruption and Exception Handlers          */ 
  69:Src/stm32g0xx_it.c **** /******************************************************************************/
  70:Src/stm32g0xx_it.c **** /**
  71:Src/stm32g0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Src/stm32g0xx_it.c ****   */
  73:Src/stm32g0xx_it.c **** void NMI_Handler(void)
  74:Src/stm32g0xx_it.c **** {
  27              		.loc 1 74 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  75:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Src/stm32g0xx_it.c **** 
  77:Src/stm32g0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Src/stm32g0xx_it.c **** 
  80:Src/stm32g0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Src/stm32g0xx_it.c **** }
  32              		.loc 1 81 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
ARM GAS  C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s 			page 3


  35              		.cfi_endproc
  36              	.LFE281:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	HardFault_Handler:
  47              	.LFB282:
  82:Src/stm32g0xx_it.c **** 
  83:Src/stm32g0xx_it.c **** /**
  84:Src/stm32g0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Src/stm32g0xx_it.c ****   */
  86:Src/stm32g0xx_it.c **** void HardFault_Handler(void)
  87:Src/stm32g0xx_it.c **** {
  48              		.loc 1 87 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  88:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Src/stm32g0xx_it.c **** 
  90:Src/stm32g0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Src/stm32g0xx_it.c ****   while (1)
  55              		.loc 1 91 3 discriminator 1 view .LVU3
  92:Src/stm32g0xx_it.c ****   {
  93:Src/stm32g0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Src/stm32g0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Src/stm32g0xx_it.c ****   }
  56              		.loc 1 95 3 discriminator 1 view .LVU4
  91:Src/stm32g0xx_it.c ****   {
  57              		.loc 1 91 9 discriminator 1 view .LVU5
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE282:
  62              		.section	.text.SVC_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	SVC_Handler
  65              		.syntax unified
  66              		.code	16
  67              		.thumb_func
  68              		.fpu softvfp
  70              	SVC_Handler:
  71              	.LFB283:
  96:Src/stm32g0xx_it.c **** }
  97:Src/stm32g0xx_it.c **** 
  98:Src/stm32g0xx_it.c **** /**
  99:Src/stm32g0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 100:Src/stm32g0xx_it.c ****   */
 101:Src/stm32g0xx_it.c **** void SVC_Handler(void)
 102:Src/stm32g0xx_it.c **** {
  72              		.loc 1 102 1 view -0
  73              		.cfi_startproc
ARM GAS  C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s 			page 4


  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 103:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 104:Src/stm32g0xx_it.c **** 
 105:Src/stm32g0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 106:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 107:Src/stm32g0xx_it.c **** 
 108:Src/stm32g0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 109:Src/stm32g0xx_it.c **** }
  77              		.loc 1 109 1 view .LVU7
  78              		@ sp needed
  79 0000 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE283:
  83              		.section	.text.PendSV_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	PendSV_Handler
  86              		.syntax unified
  87              		.code	16
  88              		.thumb_func
  89              		.fpu softvfp
  91              	PendSV_Handler:
  92              	.LFB284:
 110:Src/stm32g0xx_it.c **** 
 111:Src/stm32g0xx_it.c **** /**
 112:Src/stm32g0xx_it.c ****   * @brief This function handles Pendable request for system service.
 113:Src/stm32g0xx_it.c ****   */
 114:Src/stm32g0xx_it.c **** void PendSV_Handler(void)
 115:Src/stm32g0xx_it.c **** {
  93              		.loc 1 115 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 116:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 117:Src/stm32g0xx_it.c **** 
 118:Src/stm32g0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 119:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 120:Src/stm32g0xx_it.c **** 
 121:Src/stm32g0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 122:Src/stm32g0xx_it.c **** }
  98              		.loc 1 122 1 view .LVU9
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE284:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 110              		.fpu softvfp
 112              	SysTick_Handler:
 113              	.LFB285:
 123:Src/stm32g0xx_it.c **** 
ARM GAS  C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s 			page 5


 124:Src/stm32g0xx_it.c **** /**
 125:Src/stm32g0xx_it.c ****   * @brief This function handles System tick timer.
 126:Src/stm32g0xx_it.c ****   */
 127:Src/stm32g0xx_it.c **** void SysTick_Handler(void)
 128:Src/stm32g0xx_it.c **** {
 114              		.loc 1 128 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 10B5     		push	{r4, lr}
 119              	.LCFI0:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
 129:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 130:Src/stm32g0xx_it.c **** 
 131:Src/stm32g0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 132:Src/stm32g0xx_it.c ****   HAL_IncTick();
 123              		.loc 1 132 3 view .LVU11
 124 0002 FFF7FEFF 		bl	HAL_IncTick
 125              	.LVL0:
 133:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 134:Src/stm32g0xx_it.c **** 
 135:Src/stm32g0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 136:Src/stm32g0xx_it.c **** }
 126              		.loc 1 136 1 is_stmt 0 view .LVU12
 127              		@ sp needed
 128 0006 10BD     		pop	{r4, pc}
 129              		.cfi_endproc
 130              	.LFE285:
 132              		.section	.text.FLASH_IRQHandler,"ax",%progbits
 133              		.align	1
 134              		.global	FLASH_IRQHandler
 135              		.syntax unified
 136              		.code	16
 137              		.thumb_func
 138              		.fpu softvfp
 140              	FLASH_IRQHandler:
 141              	.LFB286:
 137:Src/stm32g0xx_it.c **** 
 138:Src/stm32g0xx_it.c **** /******************************************************************************/
 139:Src/stm32g0xx_it.c **** /* STM32G0xx Peripheral Interrupt Handlers                                    */
 140:Src/stm32g0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 141:Src/stm32g0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 142:Src/stm32g0xx_it.c **** /* please refer to the startup file (startup_stm32g0xx.s).                    */
 143:Src/stm32g0xx_it.c **** /******************************************************************************/
 144:Src/stm32g0xx_it.c **** 
 145:Src/stm32g0xx_it.c **** /**
 146:Src/stm32g0xx_it.c ****   * @brief This function handles Flash global interrupt.
 147:Src/stm32g0xx_it.c ****   */
 148:Src/stm32g0xx_it.c **** void FLASH_IRQHandler(void)
 149:Src/stm32g0xx_it.c **** {
 142              		.loc 1 149 1 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s 			page 6


 147              	.LCFI1:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 150:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 0 */
 151:Src/stm32g0xx_it.c **** 
 152:Src/stm32g0xx_it.c ****   /* USER CODE END FLASH_IRQn 0 */
 153:Src/stm32g0xx_it.c ****   HAL_FLASH_IRQHandler();
 151              		.loc 1 153 3 view .LVU14
 152 0002 FFF7FEFF 		bl	HAL_FLASH_IRQHandler
 153              	.LVL1:
 154:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 1 */
 155:Src/stm32g0xx_it.c **** 
 156:Src/stm32g0xx_it.c ****   /* USER CODE END FLASH_IRQn 1 */
 157:Src/stm32g0xx_it.c **** }
 154              		.loc 1 157 1 is_stmt 0 view .LVU15
 155              		@ sp needed
 156 0006 10BD     		pop	{r4, pc}
 157              		.cfi_endproc
 158              	.LFE286:
 160              		.section	.text.RCC_IRQHandler,"ax",%progbits
 161              		.align	1
 162              		.global	RCC_IRQHandler
 163              		.syntax unified
 164              		.code	16
 165              		.thumb_func
 166              		.fpu softvfp
 168              	RCC_IRQHandler:
 169              	.LFB287:
 158:Src/stm32g0xx_it.c **** 
 159:Src/stm32g0xx_it.c **** /**
 160:Src/stm32g0xx_it.c ****   * @brief This function handles RCC global interrupt.
 161:Src/stm32g0xx_it.c ****   */
 162:Src/stm32g0xx_it.c **** void RCC_IRQHandler(void)
 163:Src/stm32g0xx_it.c **** {
 170              		.loc 1 163 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 164:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 0 */
 165:Src/stm32g0xx_it.c **** 
 166:Src/stm32g0xx_it.c ****   /* USER CODE END RCC_IRQn 0 */
 167:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 1 */
 168:Src/stm32g0xx_it.c **** 
 169:Src/stm32g0xx_it.c ****   /* USER CODE END RCC_IRQn 1 */
 170:Src/stm32g0xx_it.c **** }
 175              		.loc 1 170 1 view .LVU17
 176              		@ sp needed
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE287:
 181              		.section	.text.TIM6_DAC_LPTIM1_IRQHandler,"ax",%progbits
 182              		.align	1
 183              		.global	TIM6_DAC_LPTIM1_IRQHandler
 184              		.syntax unified
 185              		.code	16
ARM GAS  C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s 			page 7


 186              		.thumb_func
 187              		.fpu softvfp
 189              	TIM6_DAC_LPTIM1_IRQHandler:
 190              	.LFB288:
 171:Src/stm32g0xx_it.c **** 
 172:Src/stm32g0xx_it.c **** /**
 173:Src/stm32g0xx_it.c ****   * @brief This function handles TIM6, DAC1 and LPTIM1 interrupts (LPTIM1 interrupt through EXTI li
 174:Src/stm32g0xx_it.c ****   */
 175:Src/stm32g0xx_it.c **** void TIM6_DAC_LPTIM1_IRQHandler(void)
 176:Src/stm32g0xx_it.c **** {
 191              		.loc 1 176 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 10B5     		push	{r4, lr}
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 4, -8
 199              		.cfi_offset 14, -4
 177:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_LPTIM1_IRQn 0 */
 178:Src/stm32g0xx_it.c ****   State.uptime++;
 200              		.loc 1 178 3 view .LVU19
 201              		.loc 1 178 8 is_stmt 0 view .LVU20
 202 0002 064A     		ldr	r2, .L10
 203              		.loc 1 178 15 view .LVU21
 204 0004 1368     		ldr	r3, [r2]
 205 0006 0133     		adds	r3, r3, #1
 206 0008 1360     		str	r3, [r2]
 179:Src/stm32g0xx_it.c ****   // TXState();
 180:Src/stm32g0xx_it.c ****   HAL_GPIO_TogglePin(LED_TEMP_GPIO_Port, LED_TEMP_Pin);
 207              		.loc 1 180 3 is_stmt 1 view .LVU22
 208 000a A020     		movs	r0, #160
 209 000c 0221     		movs	r1, #2
 210 000e C005     		lsls	r0, r0, #23
 211 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 212              	.LVL2:
 181:Src/stm32g0xx_it.c ****   /* USER CODE END TIM6_DAC_LPTIM1_IRQn 0 */
 182:Src/stm32g0xx_it.c ****   HAL_LPTIM_IRQHandler(&hlptim1);
 213              		.loc 1 182 3 view .LVU23
 214 0014 0248     		ldr	r0, .L10+4
 215 0016 FFF7FEFF 		bl	HAL_LPTIM_IRQHandler
 216              	.LVL3:
 183:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_LPTIM1_IRQn 1 */
 184:Src/stm32g0xx_it.c **** 
 185:Src/stm32g0xx_it.c ****   /* USER CODE END TIM6_DAC_LPTIM1_IRQn 1 */
 186:Src/stm32g0xx_it.c **** }
 217              		.loc 1 186 1 is_stmt 0 view .LVU24
 218              		@ sp needed
 219 001a 10BD     		pop	{r4, pc}
 220              	.L11:
 221              		.align	2
 222              	.L10:
 223 001c 00000000 		.word	State
 224 0020 00000000 		.word	hlptim1
 225              		.cfi_endproc
 226              	.LFE288:
 228              		.text
ARM GAS  C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s 			page 8


 229              	.Letext0:
 230              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 231              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 232              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 233              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 234              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 235              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 236              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_lptim.h"
 237              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 238              		.file 10 "Inc/state.h"
 239              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
ARM GAS  C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_it.c
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:16     .text.NMI_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:46     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:63     .text.SVC_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:70     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:84     .text.PendSV_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:91     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:105    .text.SysTick_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:112    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:133    .text.FLASH_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:140    .text.FLASH_IRQHandler:00000000 FLASH_IRQHandler
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:161    .text.RCC_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:168    .text.RCC_IRQHandler:00000000 RCC_IRQHandler
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:182    .text.TIM6_DAC_LPTIM1_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:189    .text.TIM6_DAC_LPTIM1_IRQHandler:00000000 TIM6_DAC_LPTIM1_IRQHandler
C:\Users\matil\AppData\Local\Temp\cc4j7CxA.s:223    .text.TIM6_DAC_LPTIM1_IRQHandler:0000001c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_FLASH_IRQHandler
HAL_GPIO_TogglePin
HAL_LPTIM_IRQHandler
State
hlptim1
