ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB284:
  26              		.file 1 "Src/stm32g0xx_it.c"
   1:Src/stm32g0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32g0xx_it.c **** /**
   3:Src/stm32g0xx_it.c ****   ******************************************************************************
   4:Src/stm32g0xx_it.c ****   * @file    stm32g0xx_it.c
   5:Src/stm32g0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32g0xx_it.c ****   ******************************************************************************
   7:Src/stm32g0xx_it.c ****   * @attention
   8:Src/stm32g0xx_it.c ****   *
   9:Src/stm32g0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32g0xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32g0xx_it.c ****   *
  12:Src/stm32g0xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32g0xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32g0xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32g0xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32g0xx_it.c ****   *
  17:Src/stm32g0xx_it.c ****   ******************************************************************************
  18:Src/stm32g0xx_it.c ****   */
  19:Src/stm32g0xx_it.c **** /* USER CODE END Header */
  20:Src/stm32g0xx_it.c **** 
  21:Src/stm32g0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32g0xx_it.c **** #include "main.h"
  23:Src/stm32g0xx_it.c **** #include "stm32g0xx_it.h"
  24:Src/stm32g0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32g0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32g0xx_it.c **** #include "state.h"
  27:Src/stm32g0xx_it.c **** #include "usart_utils.h"
  28:Src/stm32g0xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32g0xx_it.c **** 
  30:Src/stm32g0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/stm32g0xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32g0xx_it.c **** 
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 2


  33:Src/stm32g0xx_it.c **** /* USER CODE END TD */
  34:Src/stm32g0xx_it.c **** 
  35:Src/stm32g0xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32g0xx_it.c **** 
  38:Src/stm32g0xx_it.c **** /* USER CODE END PD */
  39:Src/stm32g0xx_it.c **** 
  40:Src/stm32g0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32g0xx_it.c **** 
  43:Src/stm32g0xx_it.c **** /* USER CODE END PM */
  44:Src/stm32g0xx_it.c **** 
  45:Src/stm32g0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32g0xx_it.c **** extern state State;
  48:Src/stm32g0xx_it.c **** extern uint8_t UART_RX_INDEX;
  49:Src/stm32g0xx_it.c **** /* USER CODE END PV */
  50:Src/stm32g0xx_it.c **** 
  51:Src/stm32g0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  52:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PFP */
  53:Src/stm32g0xx_it.c **** 
  54:Src/stm32g0xx_it.c **** /* USER CODE END PFP */
  55:Src/stm32g0xx_it.c **** 
  56:Src/stm32g0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  57:Src/stm32g0xx_it.c **** /* USER CODE BEGIN 0 */
  58:Src/stm32g0xx_it.c **** 
  59:Src/stm32g0xx_it.c **** /* USER CODE END 0 */
  60:Src/stm32g0xx_it.c **** 
  61:Src/stm32g0xx_it.c **** /* External variables --------------------------------------------------------*/
  62:Src/stm32g0xx_it.c **** extern LPTIM_HandleTypeDef hlptim1;
  63:Src/stm32g0xx_it.c **** extern SPI_HandleTypeDef hspi2;
  64:Src/stm32g0xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  65:Src/stm32g0xx_it.c **** extern UART_HandleTypeDef huart2;
  66:Src/stm32g0xx_it.c **** /* USER CODE BEGIN EV */
  67:Src/stm32g0xx_it.c **** 
  68:Src/stm32g0xx_it.c **** /* USER CODE END EV */
  69:Src/stm32g0xx_it.c **** 
  70:Src/stm32g0xx_it.c **** /******************************************************************************/
  71:Src/stm32g0xx_it.c **** /*           Cortex-M0+ Processor Interruption and Exception Handlers          */ 
  72:Src/stm32g0xx_it.c **** /******************************************************************************/
  73:Src/stm32g0xx_it.c **** /**
  74:Src/stm32g0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  75:Src/stm32g0xx_it.c ****   */
  76:Src/stm32g0xx_it.c **** void NMI_Handler(void)
  77:Src/stm32g0xx_it.c **** {
  27              		.loc 1 77 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  78:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  79:Src/stm32g0xx_it.c **** 
  80:Src/stm32g0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  81:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  82:Src/stm32g0xx_it.c **** 
  83:Src/stm32g0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Src/stm32g0xx_it.c **** }
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 3


  32              		.loc 1 84 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE284:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	HardFault_Handler:
  47              	.LFB285:
  85:Src/stm32g0xx_it.c **** 
  86:Src/stm32g0xx_it.c **** /**
  87:Src/stm32g0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Src/stm32g0xx_it.c ****   */
  89:Src/stm32g0xx_it.c **** void HardFault_Handler(void)
  90:Src/stm32g0xx_it.c **** {
  48              		.loc 1 90 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  91:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Src/stm32g0xx_it.c **** 
  93:Src/stm32g0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Src/stm32g0xx_it.c ****   while (1)
  55              		.loc 1 94 3 discriminator 1 view .LVU3
  95:Src/stm32g0xx_it.c ****   {
  96:Src/stm32g0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Src/stm32g0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Src/stm32g0xx_it.c ****   }
  56              		.loc 1 98 3 discriminator 1 view .LVU4
  94:Src/stm32g0xx_it.c ****   {
  57              		.loc 1 94 9 discriminator 1 view .LVU5
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE285:
  62              		.section	.text.SVC_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	SVC_Handler
  65              		.syntax unified
  66              		.code	16
  67              		.thumb_func
  68              		.fpu softvfp
  70              	SVC_Handler:
  71              	.LFB286:
  99:Src/stm32g0xx_it.c **** }
 100:Src/stm32g0xx_it.c **** 
 101:Src/stm32g0xx_it.c **** /**
 102:Src/stm32g0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 103:Src/stm32g0xx_it.c ****   */
 104:Src/stm32g0xx_it.c **** void SVC_Handler(void)
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 4


 105:Src/stm32g0xx_it.c **** {
  72              		.loc 1 105 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 106:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 107:Src/stm32g0xx_it.c **** 
 108:Src/stm32g0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 109:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 110:Src/stm32g0xx_it.c **** 
 111:Src/stm32g0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 112:Src/stm32g0xx_it.c **** }
  77              		.loc 1 112 1 view .LVU7
  78              		@ sp needed
  79 0000 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE286:
  83              		.section	.text.PendSV_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	PendSV_Handler
  86              		.syntax unified
  87              		.code	16
  88              		.thumb_func
  89              		.fpu softvfp
  91              	PendSV_Handler:
  92              	.LFB287:
 113:Src/stm32g0xx_it.c **** 
 114:Src/stm32g0xx_it.c **** /**
 115:Src/stm32g0xx_it.c ****   * @brief This function handles Pendable request for system service.
 116:Src/stm32g0xx_it.c ****   */
 117:Src/stm32g0xx_it.c **** void PendSV_Handler(void)
 118:Src/stm32g0xx_it.c **** {
  93              		.loc 1 118 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 119:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 120:Src/stm32g0xx_it.c **** 
 121:Src/stm32g0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 122:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 123:Src/stm32g0xx_it.c **** 
 124:Src/stm32g0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 125:Src/stm32g0xx_it.c **** }
  98              		.loc 1 125 1 view .LVU9
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE287:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 110              		.fpu softvfp
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 5


 112              	SysTick_Handler:
 113              	.LFB288:
 126:Src/stm32g0xx_it.c **** 
 127:Src/stm32g0xx_it.c **** /**
 128:Src/stm32g0xx_it.c ****   * @brief This function handles System tick timer.
 129:Src/stm32g0xx_it.c ****   */
 130:Src/stm32g0xx_it.c **** void SysTick_Handler(void)
 131:Src/stm32g0xx_it.c **** {
 114              		.loc 1 131 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 10B5     		push	{r4, lr}
 119              	.LCFI0:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
 132:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 133:Src/stm32g0xx_it.c **** 
 134:Src/stm32g0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 135:Src/stm32g0xx_it.c ****   HAL_IncTick();
 123              		.loc 1 135 3 view .LVU11
 124 0002 FFF7FEFF 		bl	HAL_IncTick
 125              	.LVL0:
 136:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 137:Src/stm32g0xx_it.c **** 
 138:Src/stm32g0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 139:Src/stm32g0xx_it.c **** }
 126              		.loc 1 139 1 is_stmt 0 view .LVU12
 127              		@ sp needed
 128 0006 10BD     		pop	{r4, pc}
 129              		.cfi_endproc
 130              	.LFE288:
 132              		.section	.text.FLASH_IRQHandler,"ax",%progbits
 133              		.align	1
 134              		.global	FLASH_IRQHandler
 135              		.syntax unified
 136              		.code	16
 137              		.thumb_func
 138              		.fpu softvfp
 140              	FLASH_IRQHandler:
 141              	.LFB289:
 140:Src/stm32g0xx_it.c **** 
 141:Src/stm32g0xx_it.c **** /******************************************************************************/
 142:Src/stm32g0xx_it.c **** /* STM32G0xx Peripheral Interrupt Handlers                                    */
 143:Src/stm32g0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 144:Src/stm32g0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 145:Src/stm32g0xx_it.c **** /* please refer to the startup file (startup_stm32g0xx.s).                    */
 146:Src/stm32g0xx_it.c **** /******************************************************************************/
 147:Src/stm32g0xx_it.c **** 
 148:Src/stm32g0xx_it.c **** /**
 149:Src/stm32g0xx_it.c ****   * @brief This function handles Flash global interrupt.
 150:Src/stm32g0xx_it.c ****   */
 151:Src/stm32g0xx_it.c **** void FLASH_IRQHandler(void)
 152:Src/stm32g0xx_it.c **** {
 142              		.loc 1 152 1 is_stmt 1 view -0
 143              		.cfi_startproc
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 6


 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 10B5     		push	{r4, lr}
 147              	.LCFI1:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 153:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 0 */
 154:Src/stm32g0xx_it.c **** 
 155:Src/stm32g0xx_it.c ****   /* USER CODE END FLASH_IRQn 0 */
 156:Src/stm32g0xx_it.c ****   HAL_FLASH_IRQHandler();
 151              		.loc 1 156 3 view .LVU14
 152 0002 FFF7FEFF 		bl	HAL_FLASH_IRQHandler
 153              	.LVL1:
 157:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 1 */
 158:Src/stm32g0xx_it.c **** 
 159:Src/stm32g0xx_it.c ****   /* USER CODE END FLASH_IRQn 1 */
 160:Src/stm32g0xx_it.c **** }
 154              		.loc 1 160 1 is_stmt 0 view .LVU15
 155              		@ sp needed
 156 0006 10BD     		pop	{r4, pc}
 157              		.cfi_endproc
 158              	.LFE289:
 160              		.section	.text.RCC_IRQHandler,"ax",%progbits
 161              		.align	1
 162              		.global	RCC_IRQHandler
 163              		.syntax unified
 164              		.code	16
 165              		.thumb_func
 166              		.fpu softvfp
 168              	RCC_IRQHandler:
 169              	.LFB290:
 161:Src/stm32g0xx_it.c **** 
 162:Src/stm32g0xx_it.c **** /**
 163:Src/stm32g0xx_it.c ****   * @brief This function handles RCC global interrupt.
 164:Src/stm32g0xx_it.c ****   */
 165:Src/stm32g0xx_it.c **** void RCC_IRQHandler(void)
 166:Src/stm32g0xx_it.c **** {
 170              		.loc 1 166 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 167:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 0 */
 168:Src/stm32g0xx_it.c **** 
 169:Src/stm32g0xx_it.c ****   /* USER CODE END RCC_IRQn 0 */
 170:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 1 */
 171:Src/stm32g0xx_it.c **** 
 172:Src/stm32g0xx_it.c ****   /* USER CODE END RCC_IRQn 1 */
 173:Src/stm32g0xx_it.c **** }
 175              		.loc 1 173 1 view .LVU17
 176              		@ sp needed
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE290:
 181              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 182              		.align	1
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 7


 183              		.global	DMA1_Channel1_IRQHandler
 184              		.syntax unified
 185              		.code	16
 186              		.thumb_func
 187              		.fpu softvfp
 189              	DMA1_Channel1_IRQHandler:
 190              	.LFB291:
 174:Src/stm32g0xx_it.c **** 
 175:Src/stm32g0xx_it.c **** /**
 176:Src/stm32g0xx_it.c ****   * @brief This function handles DMA1 channel 1 interrupt.
 177:Src/stm32g0xx_it.c ****   */
 178:Src/stm32g0xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 179:Src/stm32g0xx_it.c **** {
 191              		.loc 1 179 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 10B5     		push	{r4, lr}
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 4, -8
 199              		.cfi_offset 14, -4
 180:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 181:Src/stm32g0xx_it.c **** 
 182:Src/stm32g0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 183:Src/stm32g0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 200              		.loc 1 183 3 view .LVU19
 201 0002 0248     		ldr	r0, .L10
 202 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 203              	.LVL2:
 184:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 185:Src/stm32g0xx_it.c **** 
 186:Src/stm32g0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 187:Src/stm32g0xx_it.c **** }
 204              		.loc 1 187 1 is_stmt 0 view .LVU20
 205              		@ sp needed
 206 0008 10BD     		pop	{r4, pc}
 207              	.L11:
 208 000a C046     		.align	2
 209              	.L10:
 210 000c 00000000 		.word	hdma_usart2_rx
 211              		.cfi_endproc
 212              	.LFE291:
 214              		.section	.text.TIM6_DAC_LPTIM1_IRQHandler,"ax",%progbits
 215              		.align	1
 216              		.global	TIM6_DAC_LPTIM1_IRQHandler
 217              		.syntax unified
 218              		.code	16
 219              		.thumb_func
 220              		.fpu softvfp
 222              	TIM6_DAC_LPTIM1_IRQHandler:
 223              	.LFB292:
 188:Src/stm32g0xx_it.c **** 
 189:Src/stm32g0xx_it.c **** /**
 190:Src/stm32g0xx_it.c ****   * @brief This function handles TIM6, DAC1 and LPTIM1 interrupts (LPTIM1 interrupt through EXTI li
 191:Src/stm32g0xx_it.c ****   */
 192:Src/stm32g0xx_it.c **** void TIM6_DAC_LPTIM1_IRQHandler(void)
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 8


 193:Src/stm32g0xx_it.c **** {
 224              		.loc 1 193 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 70B5     		push	{r4, r5, r6, lr}
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 16
 231              		.cfi_offset 4, -16
 232              		.cfi_offset 5, -12
 233              		.cfi_offset 6, -8
 234              		.cfi_offset 14, -4
 194:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_LPTIM1_IRQn 0 */
 195:Src/stm32g0xx_it.c ****   State.uptime++;
 235              		.loc 1 195 3 view .LVU22
 236              		.loc 1 195 8 is_stmt 0 view .LVU23
 237 0002 194B     		ldr	r3, .L17
 238              		.loc 1 195 15 view .LVU24
 239 0004 0120     		movs	r0, #1
 240 0006 0021     		movs	r1, #0
 241 0008 1C68     		ldr	r4, [r3]
 242 000a 5D68     		ldr	r5, [r3, #4]
 243 000c 0019     		adds	r0, r0, r4
 244 000e 6941     		adcs	r1, r1, r5
 245 0010 1860     		str	r0, [r3]
 246 0012 5960     		str	r1, [r3, #4]
 196:Src/stm32g0xx_it.c ****   State.timer_1s_flag = 1;
 247              		.loc 1 196 3 is_stmt 1 view .LVU25
 248              		.loc 1 196 23 is_stmt 0 view .LVU26
 249 0014 0122     		movs	r2, #1
 250 0016 1A72     		strb	r2, [r3, #8]
 197:Src/stm32g0xx_it.c **** 
 198:Src/stm32g0xx_it.c ****   if (State.TEMP_PID_LOCK)
 251              		.loc 1 198 3 is_stmt 1 view .LVU27
 252              		.loc 1 198 12 is_stmt 0 view .LVU28
 253 0018 A922     		movs	r2, #169
 254 001a D200     		lsls	r2, r2, #3
 255 001c 9B58     		ldr	r3, [r3, r2]
 256              		.loc 1 198 6 view .LVU29
 257 001e 002B     		cmp	r3, #0
 258 0020 15D0     		beq	.L13
 199:Src/stm32g0xx_it.c ****   {
 200:Src/stm32g0xx_it.c ****     HAL_GPIO_WritePin(LED_TEMP_GPIO_Port, LED_TEMP_Pin, 1);
 259              		.loc 1 200 5 is_stmt 1 view .LVU30
 260 0022 A020     		movs	r0, #160
 261 0024 0122     		movs	r2, #1
 262 0026 0221     		movs	r1, #2
 263 0028 C005     		lsls	r0, r0, #23
 264 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 265              	.LVL3:
 266              	.L14:
 201:Src/stm32g0xx_it.c ****   }
 202:Src/stm32g0xx_it.c ****   else
 203:Src/stm32g0xx_it.c ****   {
 204:Src/stm32g0xx_it.c ****     HAL_GPIO_TogglePin(LED_TEMP_GPIO_Port, LED_TEMP_Pin);
 205:Src/stm32g0xx_it.c ****   }
 206:Src/stm32g0xx_it.c **** 
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 9


 207:Src/stm32g0xx_it.c ****   if (State.TEMP_PID_LOCK) //&& phase && power lock
 267              		.loc 1 207 3 view .LVU31
 268              		.loc 1 207 12 is_stmt 0 view .LVU32
 269 002e 0E4A     		ldr	r2, .L17
 270 0030 A923     		movs	r3, #169
 271 0032 DB00     		lsls	r3, r3, #3
 272 0034 D358     		ldr	r3, [r2, r3]
 273              		.loc 1 207 6 view .LVU33
 274 0036 002B     		cmp	r3, #0
 275 0038 0FD0     		beq	.L15
 208:Src/stm32g0xx_it.c ****   {
 209:Src/stm32g0xx_it.c ****     HAL_GPIO_WritePin(LED_STATUS_GPIO_Port, LED_STATUS_Pin, 1);
 276              		.loc 1 209 5 is_stmt 1 view .LVU34
 277 003a A020     		movs	r0, #160
 278 003c 0122     		movs	r2, #1
 279 003e 2021     		movs	r1, #32
 280 0040 C005     		lsls	r0, r0, #23
 281 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 282              	.LVL4:
 283              	.L16:
 210:Src/stm32g0xx_it.c ****   }
 211:Src/stm32g0xx_it.c ****   else
 212:Src/stm32g0xx_it.c ****   {
 213:Src/stm32g0xx_it.c ****     HAL_GPIO_TogglePin(LED_STATUS_GPIO_Port, LED_STATUS_Pin);
 214:Src/stm32g0xx_it.c ****   }
 215:Src/stm32g0xx_it.c **** 
 216:Src/stm32g0xx_it.c ****   /* USER CODE END TIM6_DAC_LPTIM1_IRQn 0 */
 217:Src/stm32g0xx_it.c ****   HAL_LPTIM_IRQHandler(&hlptim1);
 284              		.loc 1 217 3 view .LVU35
 285 0046 0948     		ldr	r0, .L17+4
 286 0048 FFF7FEFF 		bl	HAL_LPTIM_IRQHandler
 287              	.LVL5:
 218:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_LPTIM1_IRQn 1 */
 219:Src/stm32g0xx_it.c **** 
 220:Src/stm32g0xx_it.c ****   /* USER CODE END TIM6_DAC_LPTIM1_IRQn 1 */
 221:Src/stm32g0xx_it.c **** }
 288              		.loc 1 221 1 is_stmt 0 view .LVU36
 289              		@ sp needed
 290 004c 70BD     		pop	{r4, r5, r6, pc}
 291              	.L13:
 204:Src/stm32g0xx_it.c ****   }
 292              		.loc 1 204 5 is_stmt 1 view .LVU37
 293 004e A020     		movs	r0, #160
 294 0050 0221     		movs	r1, #2
 295 0052 C005     		lsls	r0, r0, #23
 296 0054 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 297              	.LVL6:
 298 0058 E9E7     		b	.L14
 299              	.L15:
 213:Src/stm32g0xx_it.c ****   }
 300              		.loc 1 213 5 view .LVU38
 301 005a A020     		movs	r0, #160
 302 005c 2021     		movs	r1, #32
 303 005e C005     		lsls	r0, r0, #23
 304 0060 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 305              	.LVL7:
 306 0064 EFE7     		b	.L16
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 10


 307              	.L18:
 308 0066 C046     		.align	2
 309              	.L17:
 310 0068 00000000 		.word	State
 311 006c 00000000 		.word	hlptim1
 312              		.cfi_endproc
 313              	.LFE292:
 315              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 316              		.align	1
 317              		.global	SPI2_IRQHandler
 318              		.syntax unified
 319              		.code	16
 320              		.thumb_func
 321              		.fpu softvfp
 323              	SPI2_IRQHandler:
 324              	.LFB293:
 222:Src/stm32g0xx_it.c **** 
 223:Src/stm32g0xx_it.c **** /**
 224:Src/stm32g0xx_it.c ****   * @brief This function handles SPI2 global interrupt.
 225:Src/stm32g0xx_it.c ****   */
 226:Src/stm32g0xx_it.c **** void SPI2_IRQHandler(void)
 227:Src/stm32g0xx_it.c **** {
 325              		.loc 1 227 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 10B5     		push	{r4, lr}
 330              	.LCFI4:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 4, -8
 333              		.cfi_offset 14, -4
 228:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 229:Src/stm32g0xx_it.c **** 
 230:Src/stm32g0xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
 231:Src/stm32g0xx_it.c ****   HAL_SPI_IRQHandler(&hspi2);
 334              		.loc 1 231 3 view .LVU40
 335 0002 0248     		ldr	r0, .L20
 336 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 337              	.LVL8:
 232:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 1 */
 233:Src/stm32g0xx_it.c **** 
 234:Src/stm32g0xx_it.c ****   /* USER CODE END SPI2_IRQn 1 */
 235:Src/stm32g0xx_it.c **** }
 338              		.loc 1 235 1 is_stmt 0 view .LVU41
 339              		@ sp needed
 340 0008 10BD     		pop	{r4, pc}
 341              	.L21:
 342 000a C046     		.align	2
 343              	.L20:
 344 000c 00000000 		.word	hspi2
 345              		.cfi_endproc
 346              	.LFE293:
 348              		.section	.text.USART2_IRQHandler,"ax",%progbits
 349              		.align	1
 350              		.global	USART2_IRQHandler
 351              		.syntax unified
 352              		.code	16
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 11


 353              		.thumb_func
 354              		.fpu softvfp
 356              	USART2_IRQHandler:
 357              	.LFB294:
 236:Src/stm32g0xx_it.c **** 
 237:Src/stm32g0xx_it.c **** /**
 238:Src/stm32g0xx_it.c ****   * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXTI li
 239:Src/stm32g0xx_it.c ****   */
 240:Src/stm32g0xx_it.c **** void USART2_IRQHandler(void)
 241:Src/stm32g0xx_it.c **** {
 358              		.loc 1 241 1 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362 0000 10B5     		push	{r4, lr}
 363              	.LCFI5:
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 4, -8
 366              		.cfi_offset 14, -4
 242:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 243:Src/stm32g0xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 244:Src/stm32g0xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 367              		.loc 1 244 3 view .LVU43
 368 0002 044C     		ldr	r4, .L23
 369 0004 2000     		movs	r0, r4
 370 0006 FFF7FEFF 		bl	HAL_UART_IRQHandler
 371              	.LVL9:
 245:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 246:Src/stm32g0xx_it.c ****   IDLE_UART_IRQHandler(&huart2);
 372              		.loc 1 246 3 view .LVU44
 373 000a 2000     		movs	r0, r4
 374 000c FFF7FEFF 		bl	IDLE_UART_IRQHandler
 375              	.LVL10:
 247:Src/stm32g0xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 248:Src/stm32g0xx_it.c **** }
 376              		.loc 1 248 1 is_stmt 0 view .LVU45
 377              		@ sp needed
 378 0010 10BD     		pop	{r4, pc}
 379              	.L24:
 380 0012 C046     		.align	2
 381              	.L23:
 382 0014 00000000 		.word	huart2
 383              		.cfi_endproc
 384              	.LFE294:
 386              		.section	.text.HAL_GPIO_EXTI_Falling_Callback,"ax",%progbits
 387              		.align	1
 388              		.global	HAL_GPIO_EXTI_Falling_Callback
 389              		.syntax unified
 390              		.code	16
 391              		.thumb_func
 392              		.fpu softvfp
 394              	HAL_GPIO_EXTI_Falling_Callback:
 395              	.LVL11:
 396              	.LFB295:
 249:Src/stm32g0xx_it.c **** 
 250:Src/stm32g0xx_it.c **** /* USER CODE BEGIN 1 */
 251:Src/stm32g0xx_it.c **** void HAL_GPIO_EXTI_Falling_Callback(uint16_t GPIO_Pin)
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 12


 252:Src/stm32g0xx_it.c **** {
 397              		.loc 1 252 1 is_stmt 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		.loc 1 252 1 is_stmt 0 view .LVU47
 402 0000 10B5     		push	{r4, lr}
 403              	.LCFI6:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 4, -8
 406              		.cfi_offset 14, -4
 253:Src/stm32g0xx_it.c ****   if (GPIO_Pin == ADC_MISO_Pin)
 407              		.loc 1 253 3 is_stmt 1 view .LVU48
 408              		.loc 1 253 6 is_stmt 0 view .LVU49
 409 0002 4028     		cmp	r0, #64
 410 0004 00D0     		beq	.L27
 411              	.LVL12:
 412              	.L25:
 254:Src/stm32g0xx_it.c ****   {
 255:Src/stm32g0xx_it.c ****     ADC_update();
 256:Src/stm32g0xx_it.c ****   }
 257:Src/stm32g0xx_it.c **** };
 413              		.loc 1 257 1 view .LVU50
 414              		@ sp needed
 415 0006 10BD     		pop	{r4, pc}
 416              	.LVL13:
 417              	.L27:
 418              	.LBB2:
 255:Src/stm32g0xx_it.c ****   }
 419              		.loc 1 255 5 is_stmt 1 view .LVU51
 420 0008 FFF7FEFF 		bl	ADC_update
 421              	.LVL14:
 255:Src/stm32g0xx_it.c ****   }
 422              		.loc 1 255 5 is_stmt 0 view .LVU52
 423              	.LBE2:
 424              		.loc 1 257 1 view .LVU53
 425 000c FBE7     		b	.L25
 426              		.cfi_endproc
 427              	.LFE295:
 429              		.text
 430              	.Letext0:
 431              		.file 2 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 432              		.file 3 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 433              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 434              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 435              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 436              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 437              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 438              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_lptim.h"
 439              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h"
 440              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 441              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 442              		.file 13 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\lock.h"
 443              		.file 14 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\_types.h"
 444              		.file 15 "c:\\gnu tools arm embedded\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 445              		.file 16 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\reent.h"
 446              		.file 17 "Inc/usart.h"
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 13


 447              		.file 18 "Inc/state.h"
 448              		.file 19 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
ARM GAS  C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_it.c
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:16     .text.NMI_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:46     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:63     .text.SVC_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:70     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:84     .text.PendSV_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:91     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:105    .text.SysTick_Handler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:112    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:133    .text.FLASH_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:140    .text.FLASH_IRQHandler:00000000 FLASH_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:161    .text.RCC_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:168    .text.RCC_IRQHandler:00000000 RCC_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:182    .text.DMA1_Channel1_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:189    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:210    .text.DMA1_Channel1_IRQHandler:0000000c $d
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:215    .text.TIM6_DAC_LPTIM1_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:222    .text.TIM6_DAC_LPTIM1_IRQHandler:00000000 TIM6_DAC_LPTIM1_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:310    .text.TIM6_DAC_LPTIM1_IRQHandler:00000068 $d
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:316    .text.SPI2_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:323    .text.SPI2_IRQHandler:00000000 SPI2_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:344    .text.SPI2_IRQHandler:0000000c $d
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:349    .text.USART2_IRQHandler:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:356    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:382    .text.USART2_IRQHandler:00000014 $d
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:387    .text.HAL_GPIO_EXTI_Falling_Callback:00000000 $t
C:\Users\matil\AppData\Local\Temp\ccEv9EKY.s:394    .text.HAL_GPIO_EXTI_Falling_Callback:00000000 HAL_GPIO_EXTI_Falling_Callback

UNDEFINED SYMBOLS
HAL_IncTick
HAL_FLASH_IRQHandler
HAL_DMA_IRQHandler
hdma_usart2_rx
HAL_GPIO_WritePin
HAL_LPTIM_IRQHandler
HAL_GPIO_TogglePin
State
hlptim1
HAL_SPI_IRQHandler
hspi2
HAL_UART_IRQHandler
IDLE_UART_IRQHandler
huart2
ADC_update
