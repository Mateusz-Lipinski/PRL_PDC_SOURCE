ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_TIM_Base_MspInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_TIM_Base_MspInit:
  25              	.LVL0:
  26              	.LFB285:
  27              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   * @attention
   8:Src/tim.c     ****   *
   9:Src/tim.c     ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/tim.c     ****   * All rights reserved.</center></h2>
  11:Src/tim.c     ****   *
  12:Src/tim.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/tim.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/tim.c     ****   * License. You may obtain a copy of the License at:
  15:Src/tim.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/tim.c     ****   *
  17:Src/tim.c     ****   ******************************************************************************
  18:Src/tim.c     ****   */
  19:Src/tim.c     **** 
  20:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/tim.c     **** #include "tim.h"
  22:Src/tim.c     **** 
  23:Src/tim.c     **** /* USER CODE BEGIN 0 */
  24:Src/tim.c     **** 
  25:Src/tim.c     **** /* USER CODE END 0 */
  26:Src/tim.c     **** 
  27:Src/tim.c     **** TIM_HandleTypeDef htim1;
  28:Src/tim.c     **** 
  29:Src/tim.c     **** /* TIM1 init function */
  30:Src/tim.c     **** void MX_TIM1_Init(void)
  31:Src/tim.c     **** {
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 2


  32:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  33:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  34:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
  35:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  36:Src/tim.c     **** 
  37:Src/tim.c     ****   htim1.Instance = TIM1;
  38:Src/tim.c     ****   htim1.Init.Prescaler = 640;
  39:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  40:Src/tim.c     ****   htim1.Init.Period = 100;
  41:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  42:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
  43:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  44:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  45:Src/tim.c     ****   {
  46:Src/tim.c     ****     Error_Handler();
  47:Src/tim.c     ****   }
  48:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  49:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  50:Src/tim.c     ****   {
  51:Src/tim.c     ****     Error_Handler();
  52:Src/tim.c     ****   }
  53:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  54:Src/tim.c     ****   {
  55:Src/tim.c     ****     Error_Handler();
  56:Src/tim.c     ****   }
  57:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  58:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
  59:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  60:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  61:Src/tim.c     ****   {
  62:Src/tim.c     ****     Error_Handler();
  63:Src/tim.c     ****   }
  64:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  65:Src/tim.c     ****   sConfigOC.Pulse = 0;
  66:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  67:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  68:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  69:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  70:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  71:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  72:Src/tim.c     ****   {
  73:Src/tim.c     ****     Error_Handler();
  74:Src/tim.c     ****   }
  75:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  76:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  77:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  78:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 0;
  79:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  80:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  81:Src/tim.c     ****   sBreakDeadTimeConfig.BreakFilter = 0;
  82:Src/tim.c     ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
  83:Src/tim.c     ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
  84:Src/tim.c     ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
  85:Src/tim.c     ****   sBreakDeadTimeConfig.Break2Filter = 0;
  86:Src/tim.c     ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
  87:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  88:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 3


  89:Src/tim.c     ****   {
  90:Src/tim.c     ****     Error_Handler();
  91:Src/tim.c     ****   }
  92:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim1);
  93:Src/tim.c     **** 
  94:Src/tim.c     **** }
  95:Src/tim.c     **** 
  96:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
  97:Src/tim.c     **** {
  28              		.loc 1 97 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 97 1 is_stmt 0 view .LVU1
  34 0000 82B0     		sub	sp, sp, #8
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  98:Src/tim.c     **** 
  99:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
  37              		.loc 1 99 3 is_stmt 1 view .LVU2
  38              		.loc 1 99 20 is_stmt 0 view .LVU3
  39 0002 0268     		ldr	r2, [r0]
  40              		.loc 1 99 5 view .LVU4
  41 0004 074B     		ldr	r3, .L4
  42 0006 9A42     		cmp	r2, r3
  43 0008 01D0     		beq	.L3
  44              	.LVL1:
  45              	.L1:
 100:Src/tim.c     ****   {
 101:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 102:Src/tim.c     **** 
 103:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 104:Src/tim.c     ****     /* TIM1 clock enable */
 105:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_ENABLE();
 106:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 107:Src/tim.c     **** 
 108:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 109:Src/tim.c     ****   }
 110:Src/tim.c     **** }
  46              		.loc 1 110 1 view .LVU5
  47 000a 02B0     		add	sp, sp, #8
  48              		@ sp needed
  49 000c 7047     		bx	lr
  50              	.LVL2:
  51              	.L3:
 105:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  52              		.loc 1 105 5 is_stmt 1 view .LVU6
  53              	.LBB2:
 105:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  54              		.loc 1 105 5 view .LVU7
 105:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  55              		.loc 1 105 5 view .LVU8
  56 000e 064A     		ldr	r2, .L4+4
  57 0010 116C     		ldr	r1, [r2, #64]
  58 0012 8020     		movs	r0, #128
  59              	.LVL3:
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 4


 105:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  60              		.loc 1 105 5 is_stmt 0 view .LVU9
  61 0014 0001     		lsls	r0, r0, #4
  62 0016 0143     		orrs	r1, r0
  63 0018 1164     		str	r1, [r2, #64]
 105:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  64              		.loc 1 105 5 is_stmt 1 view .LVU10
  65 001a 136C     		ldr	r3, [r2, #64]
  66 001c 0340     		ands	r3, r0
  67 001e 0193     		str	r3, [sp, #4]
 105:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  68              		.loc 1 105 5 view .LVU11
  69 0020 019B     		ldr	r3, [sp, #4]
  70              	.LBE2:
 105:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  71              		.loc 1 105 5 view .LVU12
  72              		.loc 1 110 1 is_stmt 0 view .LVU13
  73 0022 F2E7     		b	.L1
  74              	.L5:
  75              		.align	2
  76              	.L4:
  77 0024 002C0140 		.word	1073818624
  78 0028 00100240 		.word	1073876992
  79              		.cfi_endproc
  80              	.LFE285:
  82              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
  83              		.align	1
  84              		.global	HAL_TIM_MspPostInit
  85              		.syntax unified
  86              		.code	16
  87              		.thumb_func
  88              		.fpu softvfp
  90              	HAL_TIM_MspPostInit:
  91              	.LVL4:
  92              	.LFB286:
 111:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 112:Src/tim.c     **** {
  93              		.loc 1 112 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 24
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		.loc 1 112 1 is_stmt 0 view .LVU15
  98 0000 10B5     		push	{r4, lr}
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 4, -8
 102              		.cfi_offset 14, -4
 103 0002 86B0     		sub	sp, sp, #24
 104              	.LCFI2:
 105              		.cfi_def_cfa_offset 32
 106 0004 0400     		movs	r4, r0
 113:Src/tim.c     **** 
 114:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 107              		.loc 1 114 3 is_stmt 1 view .LVU16
 108              		.loc 1 114 20 is_stmt 0 view .LVU17
 109 0006 1422     		movs	r2, #20
 110 0008 0021     		movs	r1, #0
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 5


 111 000a 01A8     		add	r0, sp, #4
 112              	.LVL5:
 113              		.loc 1 114 20 view .LVU18
 114 000c FFF7FEFF 		bl	memset
 115              	.LVL6:
 115:Src/tim.c     ****   if(timHandle->Instance==TIM1)
 116              		.loc 1 115 3 is_stmt 1 view .LVU19
 117              		.loc 1 115 15 is_stmt 0 view .LVU20
 118 0010 2268     		ldr	r2, [r4]
 119              		.loc 1 115 5 view .LVU21
 120 0012 0E4B     		ldr	r3, .L9
 121 0014 9A42     		cmp	r2, r3
 122 0016 01D0     		beq	.L8
 123              	.L6:
 116:Src/tim.c     ****   {
 117:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 118:Src/tim.c     **** 
 119:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 0 */
 120:Src/tim.c     ****   
 121:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 122:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 123:Src/tim.c     ****     PA8     ------> TIM1_CH1 
 124:Src/tim.c     ****     */
 125:Src/tim.c     ****     GPIO_InitStruct.Pin = PEL_PWM_Pin;
 126:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 127:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 128:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 129:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 130:Src/tim.c     ****     HAL_GPIO_Init(PEL_PWM_GPIO_Port, &GPIO_InitStruct);
 131:Src/tim.c     **** 
 132:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 133:Src/tim.c     **** 
 134:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 1 */
 135:Src/tim.c     ****   }
 136:Src/tim.c     **** 
 137:Src/tim.c     **** }
 124              		.loc 1 137 1 view .LVU22
 125 0018 06B0     		add	sp, sp, #24
 126              		@ sp needed
 127              	.LVL7:
 128              		.loc 1 137 1 view .LVU23
 129 001a 10BD     		pop	{r4, pc}
 130              	.LVL8:
 131              	.L8:
 121:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 132              		.loc 1 121 5 is_stmt 1 view .LVU24
 133              	.LBB3:
 121:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 134              		.loc 1 121 5 view .LVU25
 121:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 135              		.loc 1 121 5 view .LVU26
 136 001c 0C4A     		ldr	r2, .L9+4
 137 001e 516B     		ldr	r1, [r2, #52]
 138 0020 0123     		movs	r3, #1
 139 0022 1943     		orrs	r1, r3
 140 0024 5163     		str	r1, [r2, #52]
 121:Src/tim.c     ****     /**TIM1 GPIO Configuration    
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 6


 141              		.loc 1 121 5 view .LVU27
 142 0026 526B     		ldr	r2, [r2, #52]
 143 0028 1340     		ands	r3, r2
 144 002a 0093     		str	r3, [sp]
 121:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 145              		.loc 1 121 5 view .LVU28
 146 002c 009B     		ldr	r3, [sp]
 147              	.LBE3:
 121:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 148              		.loc 1 121 5 view .LVU29
 125:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 149              		.loc 1 125 5 view .LVU30
 125:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 150              		.loc 1 125 25 is_stmt 0 view .LVU31
 151 002e 8023     		movs	r3, #128
 152 0030 5B00     		lsls	r3, r3, #1
 153 0032 0193     		str	r3, [sp, #4]
 126:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 154              		.loc 1 126 5 is_stmt 1 view .LVU32
 126:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 126 26 is_stmt 0 view .LVU33
 156 0034 FE3B     		subs	r3, r3, #254
 157 0036 0293     		str	r3, [sp, #8]
 127:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 158              		.loc 1 127 5 is_stmt 1 view .LVU34
 127:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 159              		.loc 1 127 26 is_stmt 0 view .LVU35
 160 0038 0022     		movs	r2, #0
 161 003a 0392     		str	r2, [sp, #12]
 128:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 162              		.loc 1 128 5 is_stmt 1 view .LVU36
 128:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 163              		.loc 1 128 27 is_stmt 0 view .LVU37
 164 003c 0492     		str	r2, [sp, #16]
 129:Src/tim.c     ****     HAL_GPIO_Init(PEL_PWM_GPIO_Port, &GPIO_InitStruct);
 165              		.loc 1 129 5 is_stmt 1 view .LVU38
 129:Src/tim.c     ****     HAL_GPIO_Init(PEL_PWM_GPIO_Port, &GPIO_InitStruct);
 166              		.loc 1 129 31 is_stmt 0 view .LVU39
 167 003e 0593     		str	r3, [sp, #20]
 130:Src/tim.c     **** 
 168              		.loc 1 130 5 is_stmt 1 view .LVU40
 169 0040 A020     		movs	r0, #160
 170 0042 01A9     		add	r1, sp, #4
 171 0044 C005     		lsls	r0, r0, #23
 172 0046 FFF7FEFF 		bl	HAL_GPIO_Init
 173              	.LVL9:
 174              		.loc 1 137 1 is_stmt 0 view .LVU41
 175 004a E5E7     		b	.L6
 176              	.L10:
 177              		.align	2
 178              	.L9:
 179 004c 002C0140 		.word	1073818624
 180 0050 00100240 		.word	1073876992
 181              		.cfi_endproc
 182              	.LFE286:
 184              		.section	.text.MX_TIM1_Init,"ax",%progbits
 185              		.align	1
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 7


 186              		.global	MX_TIM1_Init
 187              		.syntax unified
 188              		.code	16
 189              		.thumb_func
 190              		.fpu softvfp
 192              	MX_TIM1_Init:
 193              	.LFB284:
  31:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 194              		.loc 1 31 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 112
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 00B5     		push	{lr}
 199              	.LCFI3:
 200              		.cfi_def_cfa_offset 4
 201              		.cfi_offset 14, -4
 202 0002 9DB0     		sub	sp, sp, #116
 203              	.LCFI4:
 204              		.cfi_def_cfa_offset 120
  32:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 205              		.loc 1 32 3 view .LVU43
  32:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 206              		.loc 1 32 26 is_stmt 0 view .LVU44
 207 0004 1022     		movs	r2, #16
 208 0006 0021     		movs	r1, #0
 209 0008 18A8     		add	r0, sp, #96
 210 000a FFF7FEFF 		bl	memset
 211              	.LVL10:
  33:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 212              		.loc 1 33 3 is_stmt 1 view .LVU45
  33:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 213              		.loc 1 33 27 is_stmt 0 view .LVU46
 214 000e 0C22     		movs	r2, #12
 215 0010 0021     		movs	r1, #0
 216 0012 15A8     		add	r0, sp, #84
 217 0014 FFF7FEFF 		bl	memset
 218              	.LVL11:
  34:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 219              		.loc 1 34 3 is_stmt 1 view .LVU47
  34:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 220              		.loc 1 34 22 is_stmt 0 view .LVU48
 221 0018 1C22     		movs	r2, #28
 222 001a 0021     		movs	r1, #0
 223 001c 0EA8     		add	r0, sp, #56
 224 001e FFF7FEFF 		bl	memset
 225              	.LVL12:
  35:Src/tim.c     **** 
 226              		.loc 1 35 3 is_stmt 1 view .LVU49
  35:Src/tim.c     **** 
 227              		.loc 1 35 34 is_stmt 0 view .LVU50
 228 0022 3422     		movs	r2, #52
 229 0024 0021     		movs	r1, #0
 230 0026 01A8     		add	r0, sp, #4
 231 0028 FFF7FEFF 		bl	memset
 232              	.LVL13:
  37:Src/tim.c     ****   htim1.Init.Prescaler = 640;
 233              		.loc 1 37 3 is_stmt 1 view .LVU51
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 8


  37:Src/tim.c     ****   htim1.Init.Prescaler = 640;
 234              		.loc 1 37 18 is_stmt 0 view .LVU52
 235 002c 3348     		ldr	r0, .L24
 236 002e 344B     		ldr	r3, .L24+4
 237 0030 0360     		str	r3, [r0]
  38:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 238              		.loc 1 38 3 is_stmt 1 view .LVU53
  38:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 239              		.loc 1 38 24 is_stmt 0 view .LVU54
 240 0032 A023     		movs	r3, #160
 241 0034 9B00     		lsls	r3, r3, #2
 242 0036 4360     		str	r3, [r0, #4]
  39:Src/tim.c     ****   htim1.Init.Period = 100;
 243              		.loc 1 39 3 is_stmt 1 view .LVU55
  39:Src/tim.c     ****   htim1.Init.Period = 100;
 244              		.loc 1 39 26 is_stmt 0 view .LVU56
 245 0038 0023     		movs	r3, #0
 246 003a 8360     		str	r3, [r0, #8]
  40:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 247              		.loc 1 40 3 is_stmt 1 view .LVU57
  40:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 248              		.loc 1 40 21 is_stmt 0 view .LVU58
 249 003c 6422     		movs	r2, #100
 250 003e C260     		str	r2, [r0, #12]
  41:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
 251              		.loc 1 41 3 is_stmt 1 view .LVU59
  41:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
 252              		.loc 1 41 28 is_stmt 0 view .LVU60
 253 0040 0361     		str	r3, [r0, #16]
  42:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 254              		.loc 1 42 3 is_stmt 1 view .LVU61
  42:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 255              		.loc 1 42 32 is_stmt 0 view .LVU62
 256 0042 4361     		str	r3, [r0, #20]
  43:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 257              		.loc 1 43 3 is_stmt 1 view .LVU63
  43:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 258              		.loc 1 43 32 is_stmt 0 view .LVU64
 259 0044 8361     		str	r3, [r0, #24]
  44:Src/tim.c     ****   {
 260              		.loc 1 44 3 is_stmt 1 view .LVU65
  44:Src/tim.c     ****   {
 261              		.loc 1 44 7 is_stmt 0 view .LVU66
 262 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 263              	.LVL14:
  44:Src/tim.c     ****   {
 264              		.loc 1 44 6 view .LVU67
 265 004a 0028     		cmp	r0, #0
 266 004c 44D1     		bne	.L18
 267              	.L12:
  48:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 268              		.loc 1 48 3 is_stmt 1 view .LVU68
  48:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 269              		.loc 1 48 34 is_stmt 0 view .LVU69
 270 004e 8023     		movs	r3, #128
 271 0050 5B01     		lsls	r3, r3, #5
 272 0052 1893     		str	r3, [sp, #96]
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 9


  49:Src/tim.c     ****   {
 273              		.loc 1 49 3 is_stmt 1 view .LVU70
  49:Src/tim.c     ****   {
 274              		.loc 1 49 7 is_stmt 0 view .LVU71
 275 0054 18A9     		add	r1, sp, #96
 276 0056 2948     		ldr	r0, .L24
 277 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 278              	.LVL15:
  49:Src/tim.c     ****   {
 279              		.loc 1 49 6 view .LVU72
 280 005c 0028     		cmp	r0, #0
 281 005e 3ED1     		bne	.L19
 282              	.L13:
  53:Src/tim.c     ****   {
 283              		.loc 1 53 3 is_stmt 1 view .LVU73
  53:Src/tim.c     ****   {
 284              		.loc 1 53 7 is_stmt 0 view .LVU74
 285 0060 2648     		ldr	r0, .L24
 286 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 287              	.LVL16:
  53:Src/tim.c     ****   {
 288              		.loc 1 53 6 view .LVU75
 289 0066 0028     		cmp	r0, #0
 290 0068 3CD1     		bne	.L20
 291              	.L14:
  57:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 292              		.loc 1 57 3 is_stmt 1 view .LVU76
  57:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 293              		.loc 1 57 37 is_stmt 0 view .LVU77
 294 006a 0023     		movs	r3, #0
 295 006c 1593     		str	r3, [sp, #84]
  58:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 296              		.loc 1 58 3 is_stmt 1 view .LVU78
  58:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 297              		.loc 1 58 38 is_stmt 0 view .LVU79
 298 006e 1693     		str	r3, [sp, #88]
  59:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 299              		.loc 1 59 3 is_stmt 1 view .LVU80
  59:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 300              		.loc 1 59 33 is_stmt 0 view .LVU81
 301 0070 1793     		str	r3, [sp, #92]
  60:Src/tim.c     ****   {
 302              		.loc 1 60 3 is_stmt 1 view .LVU82
  60:Src/tim.c     ****   {
 303              		.loc 1 60 7 is_stmt 0 view .LVU83
 304 0072 15A9     		add	r1, sp, #84
 305 0074 2148     		ldr	r0, .L24
 306 0076 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 307              	.LVL17:
  60:Src/tim.c     ****   {
 308              		.loc 1 60 6 view .LVU84
 309 007a 0028     		cmp	r0, #0
 310 007c 35D1     		bne	.L21
 311              	.L15:
  64:Src/tim.c     ****   sConfigOC.Pulse = 0;
 312              		.loc 1 64 3 is_stmt 1 view .LVU85
  64:Src/tim.c     ****   sConfigOC.Pulse = 0;
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 10


 313              		.loc 1 64 20 is_stmt 0 view .LVU86
 314 007e 6023     		movs	r3, #96
 315 0080 0E93     		str	r3, [sp, #56]
  65:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 316              		.loc 1 65 3 is_stmt 1 view .LVU87
  65:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 317              		.loc 1 65 19 is_stmt 0 view .LVU88
 318 0082 0023     		movs	r3, #0
 319 0084 0F93     		str	r3, [sp, #60]
  66:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 320              		.loc 1 66 3 is_stmt 1 view .LVU89
  66:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 321              		.loc 1 66 24 is_stmt 0 view .LVU90
 322 0086 1093     		str	r3, [sp, #64]
  67:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 323              		.loc 1 67 3 is_stmt 1 view .LVU91
  67:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 324              		.loc 1 67 25 is_stmt 0 view .LVU92
 325 0088 1193     		str	r3, [sp, #68]
  68:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 326              		.loc 1 68 3 is_stmt 1 view .LVU93
  68:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 327              		.loc 1 68 24 is_stmt 0 view .LVU94
 328 008a 1293     		str	r3, [sp, #72]
  69:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 329              		.loc 1 69 3 is_stmt 1 view .LVU95
  69:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 330              		.loc 1 69 25 is_stmt 0 view .LVU96
 331 008c 1393     		str	r3, [sp, #76]
  70:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 332              		.loc 1 70 3 is_stmt 1 view .LVU97
  70:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 333              		.loc 1 70 26 is_stmt 0 view .LVU98
 334 008e 1493     		str	r3, [sp, #80]
  71:Src/tim.c     ****   {
 335              		.loc 1 71 3 is_stmt 1 view .LVU99
  71:Src/tim.c     ****   {
 336              		.loc 1 71 7 is_stmt 0 view .LVU100
 337 0090 0022     		movs	r2, #0
 338 0092 0EA9     		add	r1, sp, #56
 339 0094 1948     		ldr	r0, .L24
 340 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 341              	.LVL18:
  71:Src/tim.c     ****   {
 342              		.loc 1 71 6 view .LVU101
 343 009a 0028     		cmp	r0, #0
 344 009c 28D1     		bne	.L22
 345              	.L16:
  75:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 346              		.loc 1 75 3 is_stmt 1 view .LVU102
  75:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 347              		.loc 1 75 40 is_stmt 0 view .LVU103
 348 009e 0023     		movs	r3, #0
 349 00a0 0193     		str	r3, [sp, #4]
  76:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 350              		.loc 1 76 3 is_stmt 1 view .LVU104
  76:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 11


 351              		.loc 1 76 41 is_stmt 0 view .LVU105
 352 00a2 0293     		str	r3, [sp, #8]
  77:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 0;
 353              		.loc 1 77 3 is_stmt 1 view .LVU106
  77:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 0;
 354              		.loc 1 77 34 is_stmt 0 view .LVU107
 355 00a4 0393     		str	r3, [sp, #12]
  78:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 356              		.loc 1 78 3 is_stmt 1 view .LVU108
  78:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 357              		.loc 1 78 33 is_stmt 0 view .LVU109
 358 00a6 0493     		str	r3, [sp, #16]
  79:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 359              		.loc 1 79 3 is_stmt 1 view .LVU110
  79:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 360              		.loc 1 79 35 is_stmt 0 view .LVU111
 361 00a8 0593     		str	r3, [sp, #20]
  80:Src/tim.c     ****   sBreakDeadTimeConfig.BreakFilter = 0;
 362              		.loc 1 80 3 is_stmt 1 view .LVU112
  80:Src/tim.c     ****   sBreakDeadTimeConfig.BreakFilter = 0;
 363              		.loc 1 80 38 is_stmt 0 view .LVU113
 364 00aa 8022     		movs	r2, #128
 365 00ac 9201     		lsls	r2, r2, #6
 366 00ae 0692     		str	r2, [sp, #24]
  81:Src/tim.c     ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 367              		.loc 1 81 3 is_stmt 1 view .LVU114
  81:Src/tim.c     ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 368              		.loc 1 81 36 is_stmt 0 view .LVU115
 369 00b0 0793     		str	r3, [sp, #28]
  82:Src/tim.c     ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 370              		.loc 1 82 3 is_stmt 1 view .LVU116
  82:Src/tim.c     ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 371              		.loc 1 82 36 is_stmt 0 view .LVU117
 372 00b2 0893     		str	r3, [sp, #32]
  83:Src/tim.c     ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 373              		.loc 1 83 3 is_stmt 1 view .LVU118
  83:Src/tim.c     ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 374              		.loc 1 83 36 is_stmt 0 view .LVU119
 375 00b4 0993     		str	r3, [sp, #36]
  84:Src/tim.c     ****   sBreakDeadTimeConfig.Break2Filter = 0;
 376              		.loc 1 84 3 is_stmt 1 view .LVU120
  84:Src/tim.c     ****   sBreakDeadTimeConfig.Break2Filter = 0;
 377              		.loc 1 84 39 is_stmt 0 view .LVU121
 378 00b6 8022     		movs	r2, #128
 379 00b8 9204     		lsls	r2, r2, #18
 380 00ba 0A92     		str	r2, [sp, #40]
  85:Src/tim.c     ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 381              		.loc 1 85 3 is_stmt 1 view .LVU122
  85:Src/tim.c     ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 382              		.loc 1 85 37 is_stmt 0 view .LVU123
 383 00bc 0B93     		str	r3, [sp, #44]
  86:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 384              		.loc 1 86 3 is_stmt 1 view .LVU124
  86:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 385              		.loc 1 86 37 is_stmt 0 view .LVU125
 386 00be 0C93     		str	r3, [sp, #48]
  87:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 12


 387              		.loc 1 87 3 is_stmt 1 view .LVU126
  87:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 388              		.loc 1 87 40 is_stmt 0 view .LVU127
 389 00c0 0D93     		str	r3, [sp, #52]
  88:Src/tim.c     ****   {
 390              		.loc 1 88 3 is_stmt 1 view .LVU128
  88:Src/tim.c     ****   {
 391              		.loc 1 88 7 is_stmt 0 view .LVU129
 392 00c2 01A9     		add	r1, sp, #4
 393 00c4 0D48     		ldr	r0, .L24
 394 00c6 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 395              	.LVL19:
  88:Src/tim.c     ****   {
 396              		.loc 1 88 6 view .LVU130
 397 00ca 0028     		cmp	r0, #0
 398 00cc 13D1     		bne	.L23
 399              	.L17:
  92:Src/tim.c     **** 
 400              		.loc 1 92 3 is_stmt 1 view .LVU131
 401 00ce 0B48     		ldr	r0, .L24
 402 00d0 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 403              	.LVL20:
  94:Src/tim.c     **** 
 404              		.loc 1 94 1 is_stmt 0 view .LVU132
 405 00d4 1DB0     		add	sp, sp, #116
 406              		@ sp needed
 407 00d6 00BD     		pop	{pc}
 408              	.L18:
  46:Src/tim.c     ****   }
 409              		.loc 1 46 5 is_stmt 1 view .LVU133
 410 00d8 FFF7FEFF 		bl	Error_Handler
 411              	.LVL21:
 412 00dc B7E7     		b	.L12
 413              	.L19:
  51:Src/tim.c     ****   }
 414              		.loc 1 51 5 view .LVU134
 415 00de FFF7FEFF 		bl	Error_Handler
 416              	.LVL22:
 417 00e2 BDE7     		b	.L13
 418              	.L20:
  55:Src/tim.c     ****   }
 419              		.loc 1 55 5 view .LVU135
 420 00e4 FFF7FEFF 		bl	Error_Handler
 421              	.LVL23:
 422 00e8 BFE7     		b	.L14
 423              	.L21:
  62:Src/tim.c     ****   }
 424              		.loc 1 62 5 view .LVU136
 425 00ea FFF7FEFF 		bl	Error_Handler
 426              	.LVL24:
 427 00ee C6E7     		b	.L15
 428              	.L22:
  73:Src/tim.c     ****   }
 429              		.loc 1 73 5 view .LVU137
 430 00f0 FFF7FEFF 		bl	Error_Handler
 431              	.LVL25:
 432 00f4 D3E7     		b	.L16
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 13


 433              	.L23:
  90:Src/tim.c     ****   }
 434              		.loc 1 90 5 view .LVU138
 435 00f6 FFF7FEFF 		bl	Error_Handler
 436              	.LVL26:
 437 00fa E8E7     		b	.L17
 438              	.L25:
 439              		.align	2
 440              	.L24:
 441 00fc 00000000 		.word	htim1
 442 0100 002C0140 		.word	1073818624
 443              		.cfi_endproc
 444              	.LFE284:
 446              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 447              		.align	1
 448              		.global	HAL_TIM_Base_MspDeInit
 449              		.syntax unified
 450              		.code	16
 451              		.thumb_func
 452              		.fpu softvfp
 454              	HAL_TIM_Base_MspDeInit:
 455              	.LVL27:
 456              	.LFB287:
 138:Src/tim.c     **** 
 139:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 140:Src/tim.c     **** {
 457              		.loc 1 140 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 141:Src/tim.c     **** 
 142:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 462              		.loc 1 142 3 view .LVU140
 463              		.loc 1 142 20 is_stmt 0 view .LVU141
 464 0000 0268     		ldr	r2, [r0]
 465              		.loc 1 142 5 view .LVU142
 466 0002 054B     		ldr	r3, .L29
 467 0004 9A42     		cmp	r2, r3
 468 0006 00D0     		beq	.L28
 469              	.L26:
 143:Src/tim.c     ****   {
 144:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 145:Src/tim.c     **** 
 146:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
 147:Src/tim.c     ****     /* Peripheral clock disable */
 148:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_DISABLE();
 149:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 150:Src/tim.c     **** 
 151:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 152:Src/tim.c     ****   }
 153:Src/tim.c     **** } 
 470              		.loc 1 153 1 view .LVU143
 471              		@ sp needed
 472 0008 7047     		bx	lr
 473              	.L28:
 148:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 14


 474              		.loc 1 148 5 is_stmt 1 view .LVU144
 475 000a 044A     		ldr	r2, .L29+4
 476 000c 136C     		ldr	r3, [r2, #64]
 477 000e 0449     		ldr	r1, .L29+8
 478 0010 0B40     		ands	r3, r1
 479 0012 1364     		str	r3, [r2, #64]
 480              		.loc 1 153 1 is_stmt 0 view .LVU145
 481 0014 F8E7     		b	.L26
 482              	.L30:
 483 0016 C046     		.align	2
 484              	.L29:
 485 0018 002C0140 		.word	1073818624
 486 001c 00100240 		.word	1073876992
 487 0020 FFF7FFFF 		.word	-2049
 488              		.cfi_endproc
 489              	.LFE287:
 491              		.comm	htim1,64,4
 492              		.text
 493              	.Letext0:
 494              		.file 2 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 495              		.file 3 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 496              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 497              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 498              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 499              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 500              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 501              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 502              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim.h"
 503              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 504              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 505              		.file 13 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\lock.h"
 506              		.file 14 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\_types.h"
 507              		.file 15 "c:\\gnu tools arm embedded\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 508              		.file 16 "c:\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\reent.h"
 509              		.file 17 "Inc/usart.h"
 510              		.file 18 "Inc/tim.h"
 511              		.file 19 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim_ex.h"
 512              		.file 20 "Inc/main.h"
 513              		.file 21 "<built-in>"
ARM GAS  C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 tim.c
C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s:16     .text.HAL_TIM_Base_MspInit:00000000 $t
C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s:24     .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s:77     .text.HAL_TIM_Base_MspInit:00000024 $d
C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s:83     .text.HAL_TIM_MspPostInit:00000000 $t
C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s:90     .text.HAL_TIM_MspPostInit:00000000 HAL_TIM_MspPostInit
C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s:179    .text.HAL_TIM_MspPostInit:0000004c $d
C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s:185    .text.MX_TIM1_Init:00000000 $t
C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s:192    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s:441    .text.MX_TIM1_Init:000000fc $d
                            *COM*:00000040 htim1
C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s:447    .text.HAL_TIM_Base_MspDeInit:00000000 $t
C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s:454    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
C:\Users\matil\AppData\Local\Temp\cccrfKZ1.s:485    .text.HAL_TIM_Base_MspDeInit:00000018 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
