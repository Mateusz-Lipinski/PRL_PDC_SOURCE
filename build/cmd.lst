ARM GAS  /tmp/ccyflxTH.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"cmd.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_lmul
  16              		.global	__aeabi_uldivmod
  17              		.global	__aeabi_idiv
  18              		.global	__aeabi_idivmod
  19              		.section	.text.cmd,"ax",%progbits
  20              		.align	1
  21              		.global	cmd
  22              		.syntax unified
  23              		.code	16
  24              		.thumb_func
  25              		.fpu softvfp
  27              	cmd:
  28              	.LFB284:
  29              		.file 1 "Src/cmd.c"
   1:Src/cmd.c     **** #include "usart.h"
   2:Src/cmd.c     **** #include <stdio.h>
   3:Src/cmd.c     **** #include "state.h"
   4:Src/cmd.c     **** #include "usart_utils.h"
   5:Src/cmd.c     **** #include "ADC.h"
   6:Src/cmd.c     **** #include "spi.h"
   7:Src/cmd.c     **** #include "DAC.h"
   8:Src/cmd.c     **** #include "PID.h"
   9:Src/cmd.c     **** #include <stdlib.h>
  10:Src/cmd.c     **** extern state State;
  11:Src/cmd.c     **** 
  12:Src/cmd.c     **** void cmd()
  13:Src/cmd.c     **** {
  30              		.loc 1 13 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 112
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 C646     		mov	lr, r8
  43 0004 00B5     		push	{lr}
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccyflxTH.s 			page 2


  46              		.cfi_offset 8, -24
  47 0006 9CB0     		sub	sp, sp, #112
  48              	.LCFI2:
  49              		.cfi_def_cfa_offset 136
  14:Src/cmd.c     ****     HAL_GPIO_TogglePin(LED_PHASE_GPIO_Port, LED_PHASE_Pin);
  50              		.loc 1 14 0
  51 0008 A020     		movs	r0, #160
  52 000a 0121     		movs	r1, #1
  53 000c C005     		lsls	r0, r0, #23
  54 000e FFF7FEFF 		bl	HAL_GPIO_TogglePin
  55              	.LVL0:
  15:Src/cmd.c     ****     switch (State.cmd)
  56              		.loc 1 15 0
  57 0012 D54B     		ldr	r3, .L35
  58 0014 5B7A     		ldrb	r3, [r3, #9]
  59 0016 062B     		cmp	r3, #6
  60 0018 00D1     		bne	.LCB28
  61 001a 42E2     		b	.L29	@long jump
  62              	.LCB28:
  63 001c 26D9     		bls	.L34
  64 001e 082B     		cmp	r3, #8
  65 0020 00D1     		bne	.LCB32
  66 0022 72E2     		b	.L8	@long jump
  67              	.LCB32:
  68 0024 00D2     		bcs	.LCB34
  69 0026 3EE2     		b	.L9	@long jump
  70              	.LCB34:
  71 0028 092B     		cmp	r3, #9
  72 002a 00D1     		bne	.LCB36
  73 002c 9CE2     		b	.L10	@long jump
  74              	.LCB36:
  75 002e FF2B     		cmp	r3, #255
  76 0030 40D1     		bne	.L1
  16:Src/cmd.c     ****     {
  17:Src/cmd.c     ****     case cmd_blink:
  18:Src/cmd.c     ****     {
  19:Src/cmd.c     ****         State.cmd = 0;
  20:Src/cmd.c     ****         SERIAL_WRITE("ok\n");
  21:Src/cmd.c     ****         for (int i = 0; i < 10; i++)
  22:Src/cmd.c     ****         {
  23:Src/cmd.c     ****             HAL_GPIO_TogglePin(LED_PHASE_GPIO_Port, LED_PHASE_Pin);
  24:Src/cmd.c     ****             HAL_Delay(100);
  25:Src/cmd.c     ****         }
  26:Src/cmd.c     ****         break;
  27:Src/cmd.c     ****     }
  28:Src/cmd.c     ****     case cmd_adc_id:
  29:Src/cmd.c     ****     {
  30:Src/cmd.c     ****         SERIAL_WRITE("0x%06x\n", ADC_ID());
  31:Src/cmd.c     ****         State.cmd = 0;
  32:Src/cmd.c     ****         break;
  33:Src/cmd.c     ****     }
  34:Src/cmd.c     ****     // case cmd_adc_data:
  35:Src/cmd.c     ****     // {
  36:Src/cmd.c     ****     //     ADC_CMD(ADC_READ, ADC_DATA_REG);
  37:Src/cmd.c     ****     //     SERIAL_WRITE("0x%06x\n", ADC_SPI_READ_24());
  38:Src/cmd.c     ****     //     State.cmd = 0;
  39:Src/cmd.c     ****     //     break;
ARM GAS  /tmp/ccyflxTH.s 			page 3


  40:Src/cmd.c     ****     // }
  41:Src/cmd.c     ****     // case cmd_adc_reset:
  42:Src/cmd.c     ****     // {
  43:Src/cmd.c     ****     //     SERIAL_WRITE("ADC RESET\n");
  44:Src/cmd.c     ****     //     ADC_reset();
  45:Src/cmd.c     ****     //     State.cmd = 0;
  46:Src/cmd.c     ****     //     break;
  47:Src/cmd.c     ****     // }
  48:Src/cmd.c     ****     case cmd_adc_debug:
  49:Src/cmd.c     ****     {
  50:Src/cmd.c     ****         ADC_DATA_READY_EXTI_deInit();
  51:Src/cmd.c     ****         HAL_SPI_MspInit(&hspi2);
  52:Src/cmd.c     ****         SERIAL_WRITE("ADC DEBUG:\n\n");
  53:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_STATUS_REG);
  54:Src/cmd.c     ****         SERIAL_WRITE("\tADC_STATUS_REG:\t\t0x%02x\n", ADC_SPI_READ_8());
  55:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_MODE_REG);
  56:Src/cmd.c     ****         SERIAL_WRITE("\tADC_MODE_REG:\t\t0x%04x\n", ADC_SPI_READ_16());
  57:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_INTERFACE_REG);
  58:Src/cmd.c     ****         SERIAL_WRITE("\tADC_INTERFACE_REG:\t0x%04x\n", ADC_SPI_READ_16());
  59:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_CHECK_REG);
  60:Src/cmd.c     ****         SERIAL_WRITE("\tADC_CHECK_REG:\t\t0x%06x\n", ADC_SPI_READ_24());
  61:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_DATA_REG);
  62:Src/cmd.c     ****         SERIAL_WRITE("\tADC_DATA_REG:\t\t0x%06x\n", ADC_SPI_READ_24());
  63:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_GPIO_REG);
  64:Src/cmd.c     ****         SERIAL_WRITE("\tADC_GPIO_REG:\t\t0x%04x\n", ADC_SPI_READ_16());
  65:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_ID_REG);
  66:Src/cmd.c     ****         SERIAL_WRITE("\tADC_ID_REG:\t\t0x%04x\n", ADC_SPI_READ_16());
  67:Src/cmd.c     ****         for (int i = 0; i < 15; i++)
  68:Src/cmd.c     ****         {
  69:Src/cmd.c     ****             ADC_CMD(ADC_READ, ADC_CHx_REG(i));
  70:Src/cmd.c     ****             SERIAL_WRITE("\tADC_CH%i_REG:\t\t0x%04x\n", i, ADC_SPI_READ_16());
  71:Src/cmd.c     ****         }
  72:Src/cmd.c     ****         for (int i = 0; i < 7; i++)
  73:Src/cmd.c     ****         {
  74:Src/cmd.c     ****             ADC_CMD(ADC_READ, ADC_SETUPCONx_REG(i));
  75:Src/cmd.c     ****             SERIAL_WRITE("\tADC_SETUPCON%i_REG:\t0x%04x\n", i, ADC_SPI_READ_16());
  76:Src/cmd.c     ****         }
  77:Src/cmd.c     ****         for (int i = 0; i < 7; i++)
  78:Src/cmd.c     ****         {
  79:Src/cmd.c     ****             ADC_CMD(ADC_READ, ADC_FILTCONx_REG(i));
  80:Src/cmd.c     ****             SERIAL_WRITE("\tADC_FILTCON%i_REG:\t0x%04x\n", i, ADC_SPI_READ_16());
  81:Src/cmd.c     ****         }
  82:Src/cmd.c     ****         for (int i = 0; i < 7; i++)
  83:Src/cmd.c     ****         {
  84:Src/cmd.c     ****             ADC_CMD(ADC_READ, ADC_OFFSETx_REG(i));
  85:Src/cmd.c     ****             SERIAL_WRITE("\tADC_OFFSET%i_REG:\t0x%04x\n", i, ADC_SPI_READ_24());
  86:Src/cmd.c     ****         }
  87:Src/cmd.c     ****         for (int i = 0; i < 7; i++)
  88:Src/cmd.c     ****         {
  89:Src/cmd.c     ****             ADC_CMD(ADC_READ, ADC_GAINx_REG(i));
  90:Src/cmd.c     ****             SERIAL_WRITE("\tADC_GAIN%i_REG:\t\t0x%04x\n", i, ADC_SPI_READ_24());
  91:Src/cmd.c     ****         }
  92:Src/cmd.c     ****         State.cmd = 0;
  93:Src/cmd.c     ****         HAL_SPI_MspDeInit(&hspi2);
  94:Src/cmd.c     ****         ADC_DATA_READY_EXTI_Init();
  95:Src/cmd.c     ****         break;
  96:Src/cmd.c     ****     }
ARM GAS  /tmp/ccyflxTH.s 			page 4


  97:Src/cmd.c     ****     case cmd_adc_values:
  98:Src/cmd.c     ****     {
  99:Src/cmd.c     ****         for (int i = 0; i < 16; i++)
 100:Src/cmd.c     ****         {
 101:Src/cmd.c     ****             uint64_t voltage_uV = (((uint64_t)State.ADC_Values[i] * 1800000) / 0xffffff);
 102:Src/cmd.c     ****             SERIAL_WRITE("[%i]\t", i);
 103:Src/cmd.c     ****             SERIAL_WRITE("%10i uV\t\t", voltage_uV);
 104:Src/cmd.c     ****             SERIAL_WRITE("0x%06x\n", State.ADC_Values[i]);
 105:Src/cmd.c     ****         }
 106:Src/cmd.c     ****         State.cmd = 0;
 107:Src/cmd.c     ****         break;
 108:Src/cmd.c     ****     }
 109:Src/cmd.c     ****     case cmd_temperature:
 110:Src/cmd.c     ****     {
 111:Src/cmd.c     ****         SERIAL_WRITE("%i.", State.temperature / 1000000);             //-66.875 to +52.443 C
 112:Src/cmd.c     ****         SERIAL_WRITE("%03u *C\n", (State.temperature / 1000) % 1000); //-66.875 to +52.443 C
 113:Src/cmd.c     ****         State.cmd = 0;
 114:Src/cmd.c     ****         break;
 115:Src/cmd.c     ****     }
 116:Src/cmd.c     ****     case cmd_dac_test:
 117:Src/cmd.c     ****     {
 118:Src/cmd.c     ****         SERIAL_WRITE("\n");
 119:Src/cmd.c     ****         DAC_test();
 120:Src/cmd.c     ****         State.cmd = 0;
 121:Src/cmd.c     ****         break;
 122:Src/cmd.c     ****     }
 123:Src/cmd.c     ****     case cmd_rf_state:
 124:Src/cmd.c     ****     {
 125:Src/cmd.c     ****         SERIAL_WRITE("\n\n\n\n\n")
 126:Src/cmd.c     ****         SERIAL_WRITE("PD0 Phase:\t\t");
 127:Src/cmd.c     ****         SERIAL_WRITE("%3i.", Phase(ADC_PD0_Phase_CH) / 1000);
 128:Src/cmd.c     ****         SERIAL_WRITE("%03lu deg\t\t\n", Phase(ADC_PD0_Phase_CH) % 1000);
 129:Src/cmd.c     **** 
 130:Src/cmd.c     ****         SERIAL_WRITE("PD1 Phase:\t\t");
 131:Src/cmd.c     ****         SERIAL_WRITE("%3i.", Phase(ADC_PD1_Phase_CH) / 1000);
 132:Src/cmd.c     ****         SERIAL_WRITE("%03lu deg\t\t\n", Phase(ADC_PD1_Phase_CH) % 1000);
 133:Src/cmd.c     **** 
 134:Src/cmd.c     ****         SERIAL_WRITE("PD2 Phase:\t\t");
 135:Src/cmd.c     ****         SERIAL_WRITE("%3i.", Phase(ADC_PD2_Phase_CH) / 1000);
 136:Src/cmd.c     ****         SERIAL_WRITE("%03lu deg\t\t\n", Phase(ADC_PD2_Phase_CH) % 1000);
 137:Src/cmd.c     **** 
 138:Src/cmd.c     ****         SERIAL_WRITE("PD3 Phase:\t\t");
 139:Src/cmd.c     ****         SERIAL_WRITE("%3i.", Phase(ADC_PD3_Phase_CH) / 1000);
 140:Src/cmd.c     ****         SERIAL_WRITE("%03lu deg\t\t\n", Phase(ADC_PD3_Phase_CH) % 1000);
 141:Src/cmd.c     **** 
 142:Src/cmd.c     ****         SERIAL_WRITE("PD4 Phase:\t\t");
 143:Src/cmd.c     ****         SERIAL_WRITE("%3i.", Phase(ADC_PD4_Phase_CH) / 1000);
 144:Src/cmd.c     ****         SERIAL_WRITE("%03lu deg\t\t\n", Phase(ADC_PD4_Phase_CH) % 1000);
 145:Src/cmd.c     **** 
 146:Src/cmd.c     ****         // SERIAL_WRITE("PD0 Rel Power:\t\t");
 147:Src/cmd.c     ****         // SERIAL_WRITE("%3li.", Relative_Power(ADC_PD0_Power_CH) / 1000);
 148:Src/cmd.c     ****         // SERIAL_WRITE("%03u dB\t\t\n", abs(Relative_Power(ADC_PD0_Power_CH)) % 1000);
 149:Src/cmd.c     **** 
 150:Src/cmd.c     ****         // SERIAL_WRITE("PD1 Rel Power:\t\t");
 151:Src/cmd.c     ****         // SERIAL_WRITE("%3li.", Relative_Power(ADC_PD1_Power_CH) / 1000);
 152:Src/cmd.c     ****         // SERIAL_WRITE("%03u dB\t\t\n", abs(Relative_Power(ADC_PD1_Power_CH)) % 1000);
 153:Src/cmd.c     **** 
ARM GAS  /tmp/ccyflxTH.s 			page 5


 154:Src/cmd.c     ****         // SERIAL_WRITE("PD2 Rel Power:\t\t");
 155:Src/cmd.c     ****         // SERIAL_WRITE("%3li.", Relative_Power(ADC_PD2_Power_CH) / 1000);
 156:Src/cmd.c     ****         // SERIAL_WRITE("%03u dB\t\t\n", abs(Relative_Power(ADC_PD2_Power_CH)) % 1000);
 157:Src/cmd.c     **** 
 158:Src/cmd.c     ****         // SERIAL_WRITE("PD3 Rel Power:\t\t");
 159:Src/cmd.c     ****         // SERIAL_WRITE("%3li.", Relative_Power(ADC_PD3_Power_CH) / 1000);
 160:Src/cmd.c     ****         // SERIAL_WRITE("%03u dB\t\t\n", abs(Relative_Power(ADC_PD3_Power_CH)) % 1000);
 161:Src/cmd.c     **** 
 162:Src/cmd.c     ****         // SERIAL_WRITE("PD4 Rel Power:\t\t");
 163:Src/cmd.c     ****         // SERIAL_WRITE("%3li.", Relative_Power(ADC_PD4_Power_CH) / 1000);
 164:Src/cmd.c     ****         // SERIAL_WRITE("%03u dB\t\t\n", abs(Relative_Power(ADC_PD4_Power_CH)) % 1000);
 165:Src/cmd.c     **** 
 166:Src/cmd.c     ****         // SERIAL_WRITE("PWD0 Power:\t\t");
 167:Src/cmd.c     ****         // SERIAL_WRITE("%3li.", RMS_Power(ADC_PWD0_Power_CH) / 1000);
 168:Src/cmd.c     ****         // SERIAL_WRITE("%03u dBm\t\t\n", abs(RMS_Power(ADC_PWD0_Power_CH)) % 1000);
 169:Src/cmd.c     **** 
 170:Src/cmd.c     ****         // SERIAL_WRITE("PWD1 Power:\t\t");
 171:Src/cmd.c     ****         // SERIAL_WRITE("%3li.", RMS_Power(ADC_PWD1_Power_CH) / 1000);
 172:Src/cmd.c     ****         // SERIAL_WRITE("%03u dBm\t\t\n", abs(RMS_Power(ADC_PWD1_Power_CH)) % 1000);
 173:Src/cmd.c     **** 
 174:Src/cmd.c     ****         // SERIAL_WRITE("PWD2 Power:\t\t");
 175:Src/cmd.c     ****         // SERIAL_WRITE("%3li.", RMS_Power(ADC_PWD2_Power_CH) / 1000);
 176:Src/cmd.c     ****         // SERIAL_WRITE("%03u dBm\t\t\n", abs(RMS_Power(ADC_PWD2_Power_CH)) % 1000);
 177:Src/cmd.c     **** 
 178:Src/cmd.c     ****         // SERIAL_WRITE("PWD3 Power:\t\t");
 179:Src/cmd.c     ****         // SERIAL_WRITE("%3li.", RMS_Power(ADC_PWD3_Power_CH) / 1000);
 180:Src/cmd.c     ****         // SERIAL_WRITE("%03u dBm\t\t\n", abs(RMS_Power(ADC_PWD3_Power_CH)) % 1000);
 181:Src/cmd.c     ****         State.cmd = 0;
 182:Src/cmd.c     **** 
 183:Src/cmd.c     ****         break;
 184:Src/cmd.c     ****     }
 185:Src/cmd.c     ****     case cmd_undefined:
 186:Src/cmd.c     ****     {
 187:Src/cmd.c     ****         State.cmd = 0;
  77              		.loc 1 187 0
  78 0032 CD4B     		ldr	r3, .L35
  79 0034 0022     		movs	r2, #0
  80 0036 5A72     		strb	r2, [r3, #9]
  81              	.LBB2:
 188:Src/cmd.c     ****         SERIAL_WRITE("undefined\n");
  82              		.loc 1 188 0
  83 0038 03AC     		add	r4, sp, #12
  84 003a 5A32     		adds	r2, r2, #90
  85 003c 0021     		movs	r1, #0
  86 003e 0E20     		movs	r0, #14
  87 0040 02AB     		add	r3, sp, #8
  88 0042 9C46     		mov	ip, r3
  89 0044 6044     		add	r0, r0, ip
  90 0046 FFF7FEFF 		bl	memset
  91              	.LVL1:
  92 004a C84B     		ldr	r3, .L35+4
  93 004c 2200     		movs	r2, r4
  94 004e 03CB     		ldmia	r3!, {r0, r1}
  95 0050 03C2     		stmia	r2!, {r0, r1}
  96 0052 1900     		movs	r1, r3
  97 0054 1B88     		ldrh	r3, [r3]
  98 0056 1380     		strh	r3, [r2]
ARM GAS  /tmp/ccyflxTH.s 			page 6


  99 0058 8B78     		ldrb	r3, [r1, #2]
 100 005a 9370     		strb	r3, [r2, #2]
 101              	.LVL2:
 102 005c FA23     		movs	r3, #250
 103 005e 9B00     		lsls	r3, r3, #2
 104 0060 0A22     		movs	r2, #10
 105 0062 2100     		movs	r1, r4
 106 0064 C248     		ldr	r0, .L35+8
 107 0066 FFF7FEFF 		bl	HAL_UART_Transmit
 108              	.LVL3:
 109              	.LBE2:
 189:Src/cmd.c     ****         break;
 190:Src/cmd.c     ****     }
 191:Src/cmd.c     ****     default:
 192:Src/cmd.c     ****     {
 193:Src/cmd.c     ****         break;
 194:Src/cmd.c     ****     }
 195:Src/cmd.c     ****     }
 196:Src/cmd.c     **** }
 110              		.loc 1 196 0
 111 006a 23E0     		b	.L1
 112              	.LVL4:
 113              	.L34:
  15:Src/cmd.c     ****     {
 114              		.loc 1 15 0
 115 006c 022B     		cmp	r3, #2
 116 006e 25D0     		beq	.L5
 117 0070 042B     		cmp	r3, #4
 118 0072 3AD0     		beq	.L6
 119 0074 012B     		cmp	r3, #1
 120 0076 1DD1     		bne	.L1
  19:Src/cmd.c     ****         SERIAL_WRITE("ok\n");
 121              		.loc 1 19 0
 122 0078 BB4B     		ldr	r3, .L35
 123 007a 0022     		movs	r2, #0
 124 007c 5A72     		strb	r2, [r3, #9]
 125              	.LBB3:
  20:Src/cmd.c     ****         for (int i = 0; i < 10; i++)
 126              		.loc 1 20 0
 127 007e 6032     		adds	r2, r2, #96
 128 0080 0021     		movs	r1, #0
 129 0082 04A8     		add	r0, sp, #16
 130 0084 FFF7FEFF 		bl	memset
 131              	.LVL5:
 132 0088 BA4B     		ldr	r3, .L35+12
 133 008a 0393     		str	r3, [sp, #12]
 134              	.LVL6:
 135 008c FA23     		movs	r3, #250
 136 008e 9B00     		lsls	r3, r3, #2
 137 0090 0322     		movs	r2, #3
 138 0092 03A9     		add	r1, sp, #12
 139 0094 B648     		ldr	r0, .L35+8
 140 0096 FFF7FEFF 		bl	HAL_UART_Transmit
 141              	.LVL7:
 142              	.LBE3:
 143              	.LBB4:
  21:Src/cmd.c     ****         {
ARM GAS  /tmp/ccyflxTH.s 			page 7


 144              		.loc 1 21 0
 145 009a 0024     		movs	r4, #0
 146 009c 08E0     		b	.L12
 147              	.LVL8:
 148              	.L13:
  23:Src/cmd.c     ****             HAL_Delay(100);
 149              		.loc 1 23 0 discriminator 3
 150 009e A020     		movs	r0, #160
 151 00a0 0121     		movs	r1, #1
 152 00a2 C005     		lsls	r0, r0, #23
 153 00a4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 154              	.LVL9:
  24:Src/cmd.c     ****         }
 155              		.loc 1 24 0 discriminator 3
 156 00a8 6420     		movs	r0, #100
 157 00aa FFF7FEFF 		bl	HAL_Delay
 158              	.LVL10:
  21:Src/cmd.c     ****         {
 159              		.loc 1 21 0 discriminator 3
 160 00ae 0134     		adds	r4, r4, #1
 161              	.LVL11:
 162              	.L12:
  21:Src/cmd.c     ****         {
 163              		.loc 1 21 0 is_stmt 0 discriminator 1
 164 00b0 092C     		cmp	r4, #9
 165 00b2 F4DD     		ble	.L13
 166              	.LVL12:
 167              	.L1:
 168              	.LBE4:
 169              		.loc 1 196 0 is_stmt 1
 170 00b4 1CB0     		add	sp, sp, #112
 171              		@ sp needed
 172 00b6 04BC     		pop	{r2}
 173 00b8 9046     		mov	r8, r2
 174 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 175              	.L5:
 176              	.LBB5:
  30:Src/cmd.c     ****         State.cmd = 0;
 177              		.loc 1 30 0
 178 00bc 6422     		movs	r2, #100
 179 00be 0021     		movs	r1, #0
 180 00c0 03A8     		add	r0, sp, #12
 181 00c2 FFF7FEFF 		bl	memset
 182              	.LVL13:
 183 00c6 FFF7FEFF 		bl	ADC_ID
 184              	.LVL14:
 185 00ca 0200     		movs	r2, r0
 186 00cc AA49     		ldr	r1, .L35+16
 187 00ce 03A8     		add	r0, sp, #12
 188 00d0 FFF7FEFF 		bl	sprintf
 189              	.LVL15:
 190 00d4 FA23     		movs	r3, #250
 191 00d6 9B00     		lsls	r3, r3, #2
 192 00d8 0922     		movs	r2, #9
 193 00da 03A9     		add	r1, sp, #12
 194 00dc A448     		ldr	r0, .L35+8
 195 00de FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccyflxTH.s 			page 8


 196              	.LVL16:
 197              	.LBE5:
  31:Src/cmd.c     ****         break;
 198              		.loc 1 31 0
 199 00e2 A14B     		ldr	r3, .L35
 200 00e4 0022     		movs	r2, #0
 201 00e6 5A72     		strb	r2, [r3, #9]
  32:Src/cmd.c     ****     }
 202              		.loc 1 32 0
 203 00e8 E4E7     		b	.L1
 204              	.LVL17:
 205              	.L6:
  50:Src/cmd.c     ****         HAL_SPI_MspInit(&hspi2);
 206              		.loc 1 50 0
 207 00ea FFF7FEFF 		bl	ADC_DATA_READY_EXTI_deInit
 208              	.LVL18:
  51:Src/cmd.c     ****         SERIAL_WRITE("ADC DEBUG:\n\n");
 209              		.loc 1 51 0
 210 00ee A348     		ldr	r0, .L35+20
 211 00f0 FFF7FEFF 		bl	HAL_SPI_MspInit
 212              	.LVL19:
 213              	.LBB6:
  52:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_STATUS_REG);
 214              		.loc 1 52 0
 215 00f4 03AC     		add	r4, sp, #12
 216 00f6 5822     		movs	r2, #88
 217 00f8 0021     		movs	r1, #0
 218 00fa 06A8     		add	r0, sp, #24
 219 00fc FFF7FEFF 		bl	memset
 220              	.LVL20:
 221 0100 9F4B     		ldr	r3, .L35+24
 222 0102 2200     		movs	r2, r4
 223 0104 23CB     		ldmia	r3!, {r0, r1, r5}
 224 0106 23C2     		stmia	r2!, {r0, r1, r5}
 225 0108 1B78     		ldrb	r3, [r3]
 226 010a 1370     		strb	r3, [r2]
 227              	.LVL21:
 228 010c FA26     		movs	r6, #250
 229 010e B600     		lsls	r6, r6, #2
 230 0110 974D     		ldr	r5, .L35+8
 231 0112 3300     		movs	r3, r6
 232 0114 0C22     		movs	r2, #12
 233 0116 2100     		movs	r1, r4
 234 0118 2800     		movs	r0, r5
 235 011a FFF7FEFF 		bl	HAL_UART_Transmit
 236              	.LVL22:
 237              	.LBE6:
  53:Src/cmd.c     ****         SERIAL_WRITE("\tADC_STATUS_REG:\t\t0x%02x\n", ADC_SPI_READ_8());
 238              		.loc 1 53 0
 239 011e 0021     		movs	r1, #0
 240 0120 4020     		movs	r0, #64
 241 0122 FFF7FEFF 		bl	ADC_CMD
 242              	.LVL23:
 243              	.LBB7:
  54:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_MODE_REG);
 244              		.loc 1 54 0
 245 0126 6422     		movs	r2, #100
ARM GAS  /tmp/ccyflxTH.s 			page 9


 246 0128 0021     		movs	r1, #0
 247 012a 2000     		movs	r0, r4
 248 012c FFF7FEFF 		bl	memset
 249              	.LVL24:
 250 0130 FFF7FEFF 		bl	ADC_SPI_READ_8
 251              	.LVL25:
 252 0134 0200     		movs	r2, r0
 253 0136 9349     		ldr	r1, .L35+28
 254 0138 2000     		movs	r0, r4
 255 013a FFF7FEFF 		bl	sprintf
 256              	.LVL26:
 257 013e 3300     		movs	r3, r6
 258 0140 1722     		movs	r2, #23
 259 0142 2100     		movs	r1, r4
 260 0144 2800     		movs	r0, r5
 261 0146 FFF7FEFF 		bl	HAL_UART_Transmit
 262              	.LVL27:
 263              	.LBE7:
  55:Src/cmd.c     ****         SERIAL_WRITE("\tADC_MODE_REG:\t\t0x%04x\n", ADC_SPI_READ_16());
 264              		.loc 1 55 0
 265 014a 0121     		movs	r1, #1
 266 014c 4020     		movs	r0, #64
 267 014e FFF7FEFF 		bl	ADC_CMD
 268              	.LVL28:
 269              	.LBB8:
  56:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_INTERFACE_REG);
 270              		.loc 1 56 0
 271 0152 6422     		movs	r2, #100
 272 0154 0021     		movs	r1, #0
 273 0156 2000     		movs	r0, r4
 274 0158 FFF7FEFF 		bl	memset
 275              	.LVL29:
 276 015c FFF7FEFF 		bl	ADC_SPI_READ_16
 277              	.LVL30:
 278 0160 0200     		movs	r2, r0
 279 0162 8949     		ldr	r1, .L35+32
 280 0164 2000     		movs	r0, r4
 281 0166 FFF7FEFF 		bl	sprintf
 282              	.LVL31:
 283 016a 3300     		movs	r3, r6
 284 016c 1722     		movs	r2, #23
 285 016e 2100     		movs	r1, r4
 286 0170 2800     		movs	r0, r5
 287 0172 FFF7FEFF 		bl	HAL_UART_Transmit
 288              	.LVL32:
 289              	.LBE8:
  57:Src/cmd.c     ****         SERIAL_WRITE("\tADC_INTERFACE_REG:\t0x%04x\n", ADC_SPI_READ_16());
 290              		.loc 1 57 0
 291 0176 0221     		movs	r1, #2
 292 0178 4020     		movs	r0, #64
 293 017a FFF7FEFF 		bl	ADC_CMD
 294              	.LVL33:
 295              	.LBB9:
  58:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_CHECK_REG);
 296              		.loc 1 58 0
 297 017e 6422     		movs	r2, #100
 298 0180 0021     		movs	r1, #0
ARM GAS  /tmp/ccyflxTH.s 			page 10


 299 0182 2000     		movs	r0, r4
 300 0184 FFF7FEFF 		bl	memset
 301              	.LVL34:
 302 0188 FFF7FEFF 		bl	ADC_SPI_READ_16
 303              	.LVL35:
 304 018c 0200     		movs	r2, r0
 305 018e 7F49     		ldr	r1, .L35+36
 306 0190 2000     		movs	r0, r4
 307 0192 FFF7FEFF 		bl	sprintf
 308              	.LVL36:
 309 0196 3300     		movs	r3, r6
 310 0198 1B22     		movs	r2, #27
 311 019a 2100     		movs	r1, r4
 312 019c 2800     		movs	r0, r5
 313 019e FFF7FEFF 		bl	HAL_UART_Transmit
 314              	.LVL37:
 315              	.LBE9:
  59:Src/cmd.c     ****         SERIAL_WRITE("\tADC_CHECK_REG:\t\t0x%06x\n", ADC_SPI_READ_24());
 316              		.loc 1 59 0
 317 01a2 0321     		movs	r1, #3
 318 01a4 4020     		movs	r0, #64
 319 01a6 FFF7FEFF 		bl	ADC_CMD
 320              	.LVL38:
 321              	.LBB10:
  60:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_DATA_REG);
 322              		.loc 1 60 0
 323 01aa 6422     		movs	r2, #100
 324 01ac 0021     		movs	r1, #0
 325 01ae 2000     		movs	r0, r4
 326 01b0 FFF7FEFF 		bl	memset
 327              	.LVL39:
 328 01b4 FFF7FEFF 		bl	ADC_SPI_READ_24
 329              	.LVL40:
 330 01b8 0200     		movs	r2, r0
 331 01ba 7549     		ldr	r1, .L35+40
 332 01bc 2000     		movs	r0, r4
 333 01be FFF7FEFF 		bl	sprintf
 334              	.LVL41:
 335 01c2 82B2     		uxth	r2, r0
 336 01c4 3300     		movs	r3, r6
 337 01c6 2100     		movs	r1, r4
 338 01c8 2800     		movs	r0, r5
 339              	.LVL42:
 340 01ca FFF7FEFF 		bl	HAL_UART_Transmit
 341              	.LVL43:
 342              	.LBE10:
  61:Src/cmd.c     ****         SERIAL_WRITE("\tADC_DATA_REG:\t\t0x%06x\n", ADC_SPI_READ_24());
 343              		.loc 1 61 0
 344 01ce 0421     		movs	r1, #4
 345 01d0 4020     		movs	r0, #64
 346 01d2 FFF7FEFF 		bl	ADC_CMD
 347              	.LVL44:
 348              	.LBB11:
  62:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_GPIO_REG);
 349              		.loc 1 62 0
 350 01d6 6422     		movs	r2, #100
 351 01d8 0021     		movs	r1, #0
ARM GAS  /tmp/ccyflxTH.s 			page 11


 352 01da 2000     		movs	r0, r4
 353 01dc FFF7FEFF 		bl	memset
 354              	.LVL45:
 355 01e0 FFF7FEFF 		bl	ADC_SPI_READ_24
 356              	.LVL46:
 357 01e4 0200     		movs	r2, r0
 358 01e6 6B49     		ldr	r1, .L35+44
 359 01e8 2000     		movs	r0, r4
 360 01ea FFF7FEFF 		bl	sprintf
 361              	.LVL47:
 362 01ee 82B2     		uxth	r2, r0
 363 01f0 3300     		movs	r3, r6
 364 01f2 2100     		movs	r1, r4
 365 01f4 2800     		movs	r0, r5
 366              	.LVL48:
 367 01f6 FFF7FEFF 		bl	HAL_UART_Transmit
 368              	.LVL49:
 369              	.LBE11:
  63:Src/cmd.c     ****         SERIAL_WRITE("\tADC_GPIO_REG:\t\t0x%04x\n", ADC_SPI_READ_16());
 370              		.loc 1 63 0
 371 01fa 0621     		movs	r1, #6
 372 01fc 4020     		movs	r0, #64
 373 01fe FFF7FEFF 		bl	ADC_CMD
 374              	.LVL50:
 375              	.LBB12:
  64:Src/cmd.c     ****         ADC_CMD(ADC_READ, ADC_ID_REG);
 376              		.loc 1 64 0
 377 0202 6422     		movs	r2, #100
 378 0204 0021     		movs	r1, #0
 379 0206 2000     		movs	r0, r4
 380 0208 FFF7FEFF 		bl	memset
 381              	.LVL51:
 382 020c FFF7FEFF 		bl	ADC_SPI_READ_16
 383              	.LVL52:
 384 0210 0200     		movs	r2, r0
 385 0212 6149     		ldr	r1, .L35+48
 386 0214 2000     		movs	r0, r4
 387 0216 FFF7FEFF 		bl	sprintf
 388              	.LVL53:
 389 021a 3300     		movs	r3, r6
 390 021c 1722     		movs	r2, #23
 391 021e 2100     		movs	r1, r4
 392 0220 2800     		movs	r0, r5
 393 0222 FFF7FEFF 		bl	HAL_UART_Transmit
 394              	.LVL54:
 395              	.LBE12:
  65:Src/cmd.c     ****         SERIAL_WRITE("\tADC_ID_REG:\t\t0x%04x\n", ADC_SPI_READ_16());
 396              		.loc 1 65 0
 397 0226 0721     		movs	r1, #7
 398 0228 4020     		movs	r0, #64
 399 022a FFF7FEFF 		bl	ADC_CMD
 400              	.LVL55:
 401              	.LBB13:
  66:Src/cmd.c     ****         for (int i = 0; i < 15; i++)
 402              		.loc 1 66 0
 403 022e 6422     		movs	r2, #100
 404 0230 0021     		movs	r1, #0
ARM GAS  /tmp/ccyflxTH.s 			page 12


 405 0232 2000     		movs	r0, r4
 406 0234 FFF7FEFF 		bl	memset
 407              	.LVL56:
 408 0238 FFF7FEFF 		bl	ADC_SPI_READ_16
 409              	.LVL57:
 410 023c 0200     		movs	r2, r0
 411 023e 5749     		ldr	r1, .L35+52
 412 0240 2000     		movs	r0, r4
 413 0242 FFF7FEFF 		bl	sprintf
 414              	.LVL58:
 415 0246 3300     		movs	r3, r6
 416 0248 1522     		movs	r2, #21
 417 024a 2100     		movs	r1, r4
 418 024c 2800     		movs	r0, r5
 419 024e FFF7FEFF 		bl	HAL_UART_Transmit
 420              	.LVL59:
 421              	.LBE13:
 422              	.LBB14:
  67:Src/cmd.c     ****         {
 423              		.loc 1 67 0
 424 0252 0024     		movs	r4, #0
 425 0254 1AE0     		b	.L14
 426              	.LVL60:
 427              	.L15:
  69:Src/cmd.c     ****             SERIAL_WRITE("\tADC_CH%i_REG:\t\t0x%04x\n", i, ADC_SPI_READ_16());
 428              		.loc 1 69 0 discriminator 3
 429 0256 2100     		movs	r1, r4
 430 0258 1031     		adds	r1, r1, #16
 431 025a C9B2     		uxtb	r1, r1
 432 025c 4020     		movs	r0, #64
 433 025e FFF7FEFF 		bl	ADC_CMD
 434              	.LVL61:
 435              	.LBB15:
  70:Src/cmd.c     ****         }
 436              		.loc 1 70 0 discriminator 3
 437 0262 6422     		movs	r2, #100
 438 0264 0021     		movs	r1, #0
 439 0266 03A8     		add	r0, sp, #12
 440 0268 FFF7FEFF 		bl	memset
 441              	.LVL62:
 442 026c FFF7FEFF 		bl	ADC_SPI_READ_16
 443              	.LVL63:
 444 0270 0300     		movs	r3, r0
 445 0272 2200     		movs	r2, r4
 446 0274 4A49     		ldr	r1, .L35+56
 447 0276 03A8     		add	r0, sp, #12
 448 0278 FFF7FEFF 		bl	sprintf
 449              	.LVL64:
 450 027c FA23     		movs	r3, #250
 451 027e 82B2     		uxth	r2, r0
 452 0280 9B00     		lsls	r3, r3, #2
 453 0282 03A9     		add	r1, sp, #12
 454 0284 3A48     		ldr	r0, .L35+8
 455              	.LVL65:
 456 0286 FFF7FEFF 		bl	HAL_UART_Transmit
 457              	.LVL66:
 458              	.LBE15:
ARM GAS  /tmp/ccyflxTH.s 			page 13


  67:Src/cmd.c     ****         {
 459              		.loc 1 67 0 discriminator 3
 460 028a 0134     		adds	r4, r4, #1
 461              	.LVL67:
 462              	.L14:
  67:Src/cmd.c     ****         {
 463              		.loc 1 67 0 is_stmt 0 discriminator 1
 464 028c 0E2C     		cmp	r4, #14
 465 028e E2DD     		ble	.L15
 466              	.LBE14:
 467              	.LBB16:
  72:Src/cmd.c     ****         {
 468              		.loc 1 72 0 is_stmt 1
 469 0290 0024     		movs	r4, #0
 470              	.LVL68:
 471 0292 1CE0     		b	.L16
 472              	.LVL69:
 473              	.L18:
  74:Src/cmd.c     ****             SERIAL_WRITE("\tADC_SETUPCON%i_REG:\t0x%04x\n", i, ADC_SPI_READ_16());
 474              		.loc 1 74 0
 475 0294 072C     		cmp	r4, #7
 476 0296 1ED8     		bhi	.L30
  74:Src/cmd.c     ****             SERIAL_WRITE("\tADC_SETUPCON%i_REG:\t0x%04x\n", i, ADC_SPI_READ_16());
 477              		.loc 1 74 0 is_stmt 0 discriminator 1
 478 0298 2100     		movs	r1, r4
 479 029a 2031     		adds	r1, r1, #32
 480 029c C9B2     		uxtb	r1, r1
 481              	.L17:
  74:Src/cmd.c     ****             SERIAL_WRITE("\tADC_SETUPCON%i_REG:\t0x%04x\n", i, ADC_SPI_READ_16());
 482              		.loc 1 74 0 discriminator 4
 483 029e 4020     		movs	r0, #64
 484 02a0 FFF7FEFF 		bl	ADC_CMD
 485              	.LVL70:
 486              	.LBB17:
  75:Src/cmd.c     ****         }
 487              		.loc 1 75 0 is_stmt 1 discriminator 4
 488 02a4 6422     		movs	r2, #100
 489 02a6 0021     		movs	r1, #0
 490 02a8 03A8     		add	r0, sp, #12
 491 02aa FFF7FEFF 		bl	memset
 492              	.LVL71:
 493 02ae FFF7FEFF 		bl	ADC_SPI_READ_16
 494              	.LVL72:
 495 02b2 0300     		movs	r3, r0
 496 02b4 2200     		movs	r2, r4
 497 02b6 3B49     		ldr	r1, .L35+60
 498 02b8 03A8     		add	r0, sp, #12
 499 02ba FFF7FEFF 		bl	sprintf
 500              	.LVL73:
 501 02be FA23     		movs	r3, #250
 502 02c0 82B2     		uxth	r2, r0
 503 02c2 9B00     		lsls	r3, r3, #2
 504 02c4 03A9     		add	r1, sp, #12
 505 02c6 2A48     		ldr	r0, .L35+8
 506              	.LVL74:
 507 02c8 FFF7FEFF 		bl	HAL_UART_Transmit
 508              	.LVL75:
ARM GAS  /tmp/ccyflxTH.s 			page 14


 509              	.LBE17:
  72:Src/cmd.c     ****         {
 510              		.loc 1 72 0 discriminator 4
 511 02cc 0134     		adds	r4, r4, #1
 512              	.LVL76:
 513              	.L16:
  72:Src/cmd.c     ****         {
 514              		.loc 1 72 0 is_stmt 0 discriminator 2
 515 02ce 062C     		cmp	r4, #6
 516 02d0 E0DD     		ble	.L18
 517              	.LBE16:
 518              	.LBB18:
  77:Src/cmd.c     ****         {
 519              		.loc 1 77 0 is_stmt 1
 520 02d2 0024     		movs	r4, #0
 521              	.LVL77:
 522 02d4 1EE0     		b	.L19
 523              	.LVL78:
 524              	.L30:
 525              	.LBE18:
 526              	.LBB20:
  74:Src/cmd.c     ****             SERIAL_WRITE("\tADC_SETUPCON%i_REG:\t0x%04x\n", i, ADC_SPI_READ_16());
 527              		.loc 1 74 0
 528 02d6 0021     		movs	r1, #0
 529 02d8 E1E7     		b	.L17
 530              	.LVL79:
 531              	.L21:
 532              	.LBE20:
 533              	.LBB21:
  79:Src/cmd.c     ****             SERIAL_WRITE("\tADC_FILTCON%i_REG:\t0x%04x\n", i, ADC_SPI_READ_16());
 534              		.loc 1 79 0
 535 02da 072C     		cmp	r4, #7
 536 02dc 1ED8     		bhi	.L31
  79:Src/cmd.c     ****             SERIAL_WRITE("\tADC_FILTCON%i_REG:\t0x%04x\n", i, ADC_SPI_READ_16());
 537              		.loc 1 79 0 is_stmt 0 discriminator 1
 538 02de 2100     		movs	r1, r4
 539 02e0 2831     		adds	r1, r1, #40
 540 02e2 C9B2     		uxtb	r1, r1
 541              	.L20:
  79:Src/cmd.c     ****             SERIAL_WRITE("\tADC_FILTCON%i_REG:\t0x%04x\n", i, ADC_SPI_READ_16());
 542              		.loc 1 79 0 discriminator 4
 543 02e4 4020     		movs	r0, #64
 544 02e6 FFF7FEFF 		bl	ADC_CMD
 545              	.LVL80:
 546              	.LBB19:
  80:Src/cmd.c     ****         }
 547              		.loc 1 80 0 is_stmt 1 discriminator 4
 548 02ea 6422     		movs	r2, #100
 549 02ec 0021     		movs	r1, #0
 550 02ee 03A8     		add	r0, sp, #12
 551 02f0 FFF7FEFF 		bl	memset
 552              	.LVL81:
 553 02f4 FFF7FEFF 		bl	ADC_SPI_READ_16
 554              	.LVL82:
 555 02f8 0300     		movs	r3, r0
 556 02fa 2200     		movs	r2, r4
 557 02fc 2A49     		ldr	r1, .L35+64
ARM GAS  /tmp/ccyflxTH.s 			page 15


 558 02fe 03A8     		add	r0, sp, #12
 559 0300 FFF7FEFF 		bl	sprintf
 560              	.LVL83:
 561 0304 FA23     		movs	r3, #250
 562 0306 82B2     		uxth	r2, r0
 563 0308 9B00     		lsls	r3, r3, #2
 564 030a 03A9     		add	r1, sp, #12
 565 030c 1848     		ldr	r0, .L35+8
 566              	.LVL84:
 567 030e FFF7FEFF 		bl	HAL_UART_Transmit
 568              	.LVL85:
 569              	.LBE19:
  77:Src/cmd.c     ****         {
 570              		.loc 1 77 0 discriminator 4
 571 0312 0134     		adds	r4, r4, #1
 572              	.LVL86:
 573              	.L19:
  77:Src/cmd.c     ****         {
 574              		.loc 1 77 0 is_stmt 0 discriminator 2
 575 0314 062C     		cmp	r4, #6
 576 0316 E0DD     		ble	.L21
 577              	.LBE21:
 578              	.LBB22:
  82:Src/cmd.c     ****         {
 579              		.loc 1 82 0 is_stmt 1
 580 0318 0024     		movs	r4, #0
 581              	.LVL87:
 582 031a 1EE0     		b	.L22
 583              	.LVL88:
 584              	.L31:
 585              	.LBE22:
 586              	.LBB24:
  79:Src/cmd.c     ****             SERIAL_WRITE("\tADC_FILTCON%i_REG:\t0x%04x\n", i, ADC_SPI_READ_16());
 587              		.loc 1 79 0
 588 031c 0021     		movs	r1, #0
 589 031e E1E7     		b	.L20
 590              	.LVL89:
 591              	.L24:
 592              	.LBE24:
 593              	.LBB25:
  84:Src/cmd.c     ****             SERIAL_WRITE("\tADC_OFFSET%i_REG:\t0x%04x\n", i, ADC_SPI_READ_24());
 594              		.loc 1 84 0
 595 0320 072C     		cmp	r4, #7
 596 0322 1ED8     		bhi	.L32
  84:Src/cmd.c     ****             SERIAL_WRITE("\tADC_OFFSET%i_REG:\t0x%04x\n", i, ADC_SPI_READ_24());
 597              		.loc 1 84 0 is_stmt 0 discriminator 1
 598 0324 2100     		movs	r1, r4
 599 0326 3031     		adds	r1, r1, #48
 600 0328 C9B2     		uxtb	r1, r1
 601              	.L23:
  84:Src/cmd.c     ****             SERIAL_WRITE("\tADC_OFFSET%i_REG:\t0x%04x\n", i, ADC_SPI_READ_24());
 602              		.loc 1 84 0 discriminator 4
 603 032a 4020     		movs	r0, #64
 604 032c FFF7FEFF 		bl	ADC_CMD
 605              	.LVL90:
 606              	.LBB23:
  85:Src/cmd.c     ****         }
ARM GAS  /tmp/ccyflxTH.s 			page 16


 607              		.loc 1 85 0 is_stmt 1 discriminator 4
 608 0330 6422     		movs	r2, #100
 609 0332 0021     		movs	r1, #0
 610 0334 03A8     		add	r0, sp, #12
 611 0336 FFF7FEFF 		bl	memset
 612              	.LVL91:
 613 033a FFF7FEFF 		bl	ADC_SPI_READ_24
 614              	.LVL92:
 615 033e 0300     		movs	r3, r0
 616 0340 2200     		movs	r2, r4
 617 0342 1A49     		ldr	r1, .L35+68
 618 0344 03A8     		add	r0, sp, #12
 619 0346 FFF7FEFF 		bl	sprintf
 620              	.LVL93:
 621 034a FA23     		movs	r3, #250
 622 034c 82B2     		uxth	r2, r0
 623 034e 9B00     		lsls	r3, r3, #2
 624 0350 03A9     		add	r1, sp, #12
 625 0352 0748     		ldr	r0, .L35+8
 626              	.LVL94:
 627 0354 FFF7FEFF 		bl	HAL_UART_Transmit
 628              	.LVL95:
 629              	.LBE23:
  82:Src/cmd.c     ****         {
 630              		.loc 1 82 0 discriminator 4
 631 0358 0134     		adds	r4, r4, #1
 632              	.LVL96:
 633              	.L22:
  82:Src/cmd.c     ****         {
 634              		.loc 1 82 0 is_stmt 0 discriminator 2
 635 035a 062C     		cmp	r4, #6
 636 035c E0DD     		ble	.L24
 637              	.LBE25:
 638              	.LBB26:
  87:Src/cmd.c     ****         {
 639              		.loc 1 87 0 is_stmt 1
 640 035e 0024     		movs	r4, #0
 641              	.LVL97:
 642 0360 43E0     		b	.L25
 643              	.LVL98:
 644              	.L32:
 645              	.LBE26:
 646              	.LBB28:
  84:Src/cmd.c     ****             SERIAL_WRITE("\tADC_OFFSET%i_REG:\t0x%04x\n", i, ADC_SPI_READ_24());
 647              		.loc 1 84 0
 648 0362 0021     		movs	r1, #0
 649 0364 E1E7     		b	.L23
 650              	.L36:
 651 0366 C046     		.align	2
 652              	.L35:
 653 0368 00000000 		.word	State
 654 036c EC010000 		.word	.LC55
 655 0370 00000000 		.word	huart2
 656 0374 6F6B0A00 		.word	682863
 657 0378 00000000 		.word	.LC2
 658 037c 00000000 		.word	hspi2
 659 0380 08000000 		.word	.LC5
ARM GAS  /tmp/ccyflxTH.s 			page 17


 660 0384 18000000 		.word	.LC7
 661 0388 34000000 		.word	.LC9
 662 038c 4C000000 		.word	.LC11
 663 0390 68000000 		.word	.LC13
 664 0394 84000000 		.word	.LC15
 665 0398 9C000000 		.word	.LC17
 666 039c B4000000 		.word	.LC19
 667 03a0 CC000000 		.word	.LC21
 668 03a4 E4000000 		.word	.LC23
 669 03a8 04010000 		.word	.LC25
 670 03ac 20010000 		.word	.LC27
 671              	.LVL99:
 672              	.L27:
 673              	.LBE28:
 674              	.LBB29:
  89:Src/cmd.c     ****             SERIAL_WRITE("\tADC_GAIN%i_REG:\t\t0x%04x\n", i, ADC_SPI_READ_24());
 675              		.loc 1 89 0
 676 03b0 072C     		cmp	r4, #7
 677 03b2 25D8     		bhi	.L33
  89:Src/cmd.c     ****             SERIAL_WRITE("\tADC_GAIN%i_REG:\t\t0x%04x\n", i, ADC_SPI_READ_24());
 678              		.loc 1 89 0 is_stmt 0 discriminator 1
 679 03b4 2100     		movs	r1, r4
 680 03b6 3831     		adds	r1, r1, #56
 681 03b8 C9B2     		uxtb	r1, r1
 682              	.L26:
  89:Src/cmd.c     ****             SERIAL_WRITE("\tADC_GAIN%i_REG:\t\t0x%04x\n", i, ADC_SPI_READ_24());
 683              		.loc 1 89 0 discriminator 4
 684 03ba 4020     		movs	r0, #64
 685 03bc FFF7FEFF 		bl	ADC_CMD
 686              	.LVL100:
 687              	.LBB27:
  90:Src/cmd.c     ****         }
 688              		.loc 1 90 0 is_stmt 1 discriminator 4
 689 03c0 6422     		movs	r2, #100
 690 03c2 0021     		movs	r1, #0
 691 03c4 03A8     		add	r0, sp, #12
 692 03c6 FFF7FEFF 		bl	memset
 693              	.LVL101:
 694 03ca FFF7FEFF 		bl	ADC_SPI_READ_24
 695              	.LVL102:
 696 03ce 0300     		movs	r3, r0
 697 03d0 2200     		movs	r2, r4
 698 03d2 5949     		ldr	r1, .L37
 699 03d4 03A8     		add	r0, sp, #12
 700 03d6 FFF7FEFF 		bl	sprintf
 701              	.LVL103:
 702 03da FA23     		movs	r3, #250
 703 03dc 82B2     		uxth	r2, r0
 704 03de 9B00     		lsls	r3, r3, #2
 705 03e0 03A9     		add	r1, sp, #12
 706 03e2 5648     		ldr	r0, .L37+4
 707              	.LVL104:
 708 03e4 FFF7FEFF 		bl	HAL_UART_Transmit
 709              	.LVL105:
 710              	.LBE27:
  87:Src/cmd.c     ****         {
 711              		.loc 1 87 0 discriminator 4
ARM GAS  /tmp/ccyflxTH.s 			page 18


 712 03e8 0134     		adds	r4, r4, #1
 713              	.LVL106:
 714              	.L25:
  87:Src/cmd.c     ****         {
 715              		.loc 1 87 0 is_stmt 0 discriminator 2
 716 03ea 062C     		cmp	r4, #6
 717 03ec E0DD     		ble	.L27
 718              	.LBE29:
  92:Src/cmd.c     ****         HAL_SPI_MspDeInit(&hspi2);
 719              		.loc 1 92 0 is_stmt 1
 720 03ee 544B     		ldr	r3, .L37+8
 721 03f0 0022     		movs	r2, #0
 722 03f2 5A72     		strb	r2, [r3, #9]
  93:Src/cmd.c     ****         ADC_DATA_READY_EXTI_Init();
 723              		.loc 1 93 0
 724 03f4 5348     		ldr	r0, .L37+12
 725 03f6 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 726              	.LVL107:
  94:Src/cmd.c     ****         break;
 727              		.loc 1 94 0
 728 03fa FFF7FEFF 		bl	ADC_DATA_READY_EXTI_Init
 729              	.LVL108:
  95:Src/cmd.c     ****     }
 730              		.loc 1 95 0
 731 03fe 59E6     		b	.L1
 732              	.L33:
 733              	.LBB30:
  89:Src/cmd.c     ****             SERIAL_WRITE("\tADC_GAIN%i_REG:\t\t0x%04x\n", i, ADC_SPI_READ_24());
 734              		.loc 1 89 0
 735 0400 0021     		movs	r1, #0
 736 0402 DAE7     		b	.L26
 737              	.LVL109:
 738              	.L28:
 739              	.LBE30:
 740              	.LBB31:
 741              	.LBB32:
 101:Src/cmd.c     ****             SERIAL_WRITE("[%i]\t", i);
 742              		.loc 1 101 0 discriminator 3
 743 0404 3300     		movs	r3, r6
 744 0406 1233     		adds	r3, r3, #18
 745 0408 9B00     		lsls	r3, r3, #2
 746 040a 4D4F     		ldr	r7, .L37+8
 747 040c FF18     		adds	r7, r7, r3
 748 040e 4E4A     		ldr	r2, .L37+16
 749 0410 0023     		movs	r3, #0
 750 0412 7868     		ldr	r0, [r7, #4]
 751 0414 0021     		movs	r1, #0
 752 0416 FFF7FEFF 		bl	__aeabi_lmul
 753              	.LVL110:
 754 041a 4C4A     		ldr	r2, .L37+20
 755 041c 0023     		movs	r3, #0
 756 041e FFF7FEFF 		bl	__aeabi_uldivmod
 757              	.LVL111:
 758 0422 0090     		str	r0, [sp]
 759 0424 0191     		str	r1, [sp, #4]
 760              	.LVL112:
 761              	.LBB33:
ARM GAS  /tmp/ccyflxTH.s 			page 19


 102:Src/cmd.c     ****             SERIAL_WRITE("%10i uV\t\t", voltage_uV);
 762              		.loc 1 102 0 discriminator 3
 763 0426 6422     		movs	r2, #100
 764 0428 0021     		movs	r1, #0
 765 042a 03AB     		add	r3, sp, #12
 766 042c 1800     		movs	r0, r3
 767              	.LVL113:
 768 042e FFF7FEFF 		bl	memset
 769              	.LVL114:
 770 0432 3200     		movs	r2, r6
 771 0434 4649     		ldr	r1, .L37+24
 772 0436 03AB     		add	r3, sp, #12
 773 0438 1800     		movs	r0, r3
 774 043a FFF7FEFF 		bl	sprintf
 775              	.LVL115:
 776 043e FA25     		movs	r5, #250
 777 0440 AD00     		lsls	r5, r5, #2
 778 0442 82B2     		uxth	r2, r0
 779 0444 3D4C     		ldr	r4, .L37+4
 780 0446 2B00     		movs	r3, r5
 781 0448 03A9     		add	r1, sp, #12
 782 044a 2000     		movs	r0, r4
 783              	.LVL116:
 784 044c FFF7FEFF 		bl	HAL_UART_Transmit
 785              	.LVL117:
 786              	.LBE33:
 787              	.LBB34:
 103:Src/cmd.c     ****             SERIAL_WRITE("0x%06x\n", State.ADC_Values[i]);
 788              		.loc 1 103 0 discriminator 3
 789 0450 6422     		movs	r2, #100
 790 0452 0021     		movs	r1, #0
 791 0454 03AB     		add	r3, sp, #12
 792 0456 1800     		movs	r0, r3
 793 0458 FFF7FEFF 		bl	memset
 794              	.LVL118:
 795 045c 009A     		ldr	r2, [sp]
 796 045e 019B     		ldr	r3, [sp, #4]
 797 0460 3C49     		ldr	r1, .L37+28
 798 0462 03A8     		add	r0, sp, #12
 799 0464 FFF7FEFF 		bl	sprintf
 800              	.LVL119:
 801 0468 82B2     		uxth	r2, r0
 802 046a 2B00     		movs	r3, r5
 803 046c 03A9     		add	r1, sp, #12
 804 046e 2000     		movs	r0, r4
 805              	.LVL120:
 806 0470 FFF7FEFF 		bl	HAL_UART_Transmit
 807              	.LVL121:
 808              	.LBE34:
 809              	.LBB35:
 104:Src/cmd.c     ****         }
 810              		.loc 1 104 0 discriminator 3
 811 0474 6422     		movs	r2, #100
 812 0476 0021     		movs	r1, #0
 813 0478 03A8     		add	r0, sp, #12
 814 047a FFF7FEFF 		bl	memset
 815              	.LVL122:
ARM GAS  /tmp/ccyflxTH.s 			page 20


 816 047e 7A68     		ldr	r2, [r7, #4]
 817 0480 3549     		ldr	r1, .L37+32
 818 0482 03A8     		add	r0, sp, #12
 819 0484 FFF7FEFF 		bl	sprintf
 820              	.LVL123:
 821 0488 82B2     		uxth	r2, r0
 822 048a 2B00     		movs	r3, r5
 823 048c 03A9     		add	r1, sp, #12
 824 048e 2000     		movs	r0, r4
 825              	.LVL124:
 826 0490 FFF7FEFF 		bl	HAL_UART_Transmit
 827              	.LVL125:
 828              	.LBE35:
 829              	.LBE32:
  99:Src/cmd.c     ****         {
 830              		.loc 1 99 0 discriminator 3
 831 0494 0136     		adds	r6, r6, #1
 832              	.LVL126:
 833              	.L3:
  99:Src/cmd.c     ****         {
 834              		.loc 1 99 0 is_stmt 0 discriminator 1
 835 0496 0F2E     		cmp	r6, #15
 836 0498 B4DD     		ble	.L28
 837              	.LBE31:
 106:Src/cmd.c     ****         break;
 838              		.loc 1 106 0 is_stmt 1
 839 049a 294B     		ldr	r3, .L37+8
 840 049c 0022     		movs	r2, #0
 841 049e 5A72     		strb	r2, [r3, #9]
 107:Src/cmd.c     ****     }
 842              		.loc 1 107 0
 843 04a0 08E6     		b	.L1
 844              	.LVL127:
 845              	.L29:
 846              	.LBB36:
  99:Src/cmd.c     ****         {
 847              		.loc 1 99 0
 848 04a2 0026     		movs	r6, #0
 849 04a4 F7E7     		b	.L3
 850              	.L9:
 851              	.LBE36:
 852              	.LBB37:
 111:Src/cmd.c     ****         SERIAL_WRITE("%03u *C\n", (State.temperature / 1000) % 1000); //-66.875 to +52.443 C
 853              		.loc 1 111 0
 854 04a6 6422     		movs	r2, #100
 855 04a8 0021     		movs	r1, #0
 856 04aa 03A8     		add	r0, sp, #12
 857 04ac FFF7FEFF 		bl	memset
 858              	.LVL128:
 859 04b0 234D     		ldr	r5, .L37+8
 860 04b2 2A49     		ldr	r1, .L37+36
 861 04b4 6868     		ldr	r0, [r5, #4]
 862 04b6 FFF7FEFF 		bl	__aeabi_idiv
 863              	.LVL129:
 864 04ba 0200     		movs	r2, r0
 865 04bc 2849     		ldr	r1, .L37+40
 866 04be 03A8     		add	r0, sp, #12
ARM GAS  /tmp/ccyflxTH.s 			page 21


 867 04c0 FFF7FEFF 		bl	sprintf
 868              	.LVL130:
 869 04c4 FA24     		movs	r4, #250
 870 04c6 A400     		lsls	r4, r4, #2
 871 04c8 82B2     		uxth	r2, r0
 872 04ca 1C4E     		ldr	r6, .L37+4
 873 04cc 2300     		movs	r3, r4
 874 04ce 03A9     		add	r1, sp, #12
 875 04d0 3000     		movs	r0, r6
 876              	.LVL131:
 877 04d2 FFF7FEFF 		bl	HAL_UART_Transmit
 878              	.LVL132:
 879              	.LBE37:
 880              	.LBB38:
 112:Src/cmd.c     ****         State.cmd = 0;
 881              		.loc 1 112 0
 882 04d6 6422     		movs	r2, #100
 883 04d8 0021     		movs	r1, #0
 884 04da 03A8     		add	r0, sp, #12
 885 04dc FFF7FEFF 		bl	memset
 886              	.LVL133:
 887 04e0 2100     		movs	r1, r4
 888 04e2 6868     		ldr	r0, [r5, #4]
 889 04e4 FFF7FEFF 		bl	__aeabi_idiv
 890              	.LVL134:
 891 04e8 2100     		movs	r1, r4
 892 04ea FFF7FEFF 		bl	__aeabi_idivmod
 893              	.LVL135:
 894 04ee 0A00     		movs	r2, r1
 895 04f0 1C49     		ldr	r1, .L37+44
 896 04f2 03A8     		add	r0, sp, #12
 897 04f4 FFF7FEFF 		bl	sprintf
 898              	.LVL136:
 899 04f8 82B2     		uxth	r2, r0
 900 04fa 2300     		movs	r3, r4
 901 04fc 03A9     		add	r1, sp, #12
 902 04fe 3000     		movs	r0, r6
 903              	.LVL137:
 904 0500 FFF7FEFF 		bl	HAL_UART_Transmit
 905              	.LVL138:
 906              	.LBE38:
 113:Src/cmd.c     ****         break;
 907              		.loc 1 113 0
 908 0504 0023     		movs	r3, #0
 909 0506 6B72     		strb	r3, [r5, #9]
 114:Src/cmd.c     ****     }
 910              		.loc 1 114 0
 911 0508 D4E5     		b	.L1
 912              	.L8:
 913              	.LBB39:
 118:Src/cmd.c     ****         DAC_test();
 914              		.loc 1 118 0
 915 050a 03AC     		add	r4, sp, #12
 916 050c 6222     		movs	r2, #98
 917 050e 0021     		movs	r1, #0
 918 0510 02AB     		add	r3, sp, #8
 919 0512 981D     		adds	r0, r3, #6
ARM GAS  /tmp/ccyflxTH.s 			page 22


 920 0514 FFF7FEFF 		bl	memset
 921              	.LVL139:
 922 0518 0A23     		movs	r3, #10
 923 051a 2380     		strh	r3, [r4]
 924              	.LVL140:
 925 051c F033     		adds	r3, r3, #240
 926 051e 9B00     		lsls	r3, r3, #2
 927 0520 0122     		movs	r2, #1
 928 0522 2100     		movs	r1, r4
 929 0524 0548     		ldr	r0, .L37+4
 930 0526 FFF7FEFF 		bl	HAL_UART_Transmit
 931              	.LVL141:
 932              	.LBE39:
 119:Src/cmd.c     ****         State.cmd = 0;
 933              		.loc 1 119 0
 934 052a FFF7FEFF 		bl	DAC_test
 935              	.LVL142:
 120:Src/cmd.c     ****         break;
 936              		.loc 1 120 0
 937 052e 044B     		ldr	r3, .L37+8
 938 0530 0022     		movs	r2, #0
 939 0532 5A72     		strb	r2, [r3, #9]
 121:Src/cmd.c     ****     }
 940              		.loc 1 121 0
 941 0534 BEE5     		b	.L1
 942              	.L38:
 943 0536 C046     		.align	2
 944              	.L37:
 945 0538 3C010000 		.word	.LC29
 946 053c 00000000 		.word	huart2
 947 0540 00000000 		.word	State
 948 0544 00000000 		.word	hspi2
 949 0548 40771B00 		.word	1800000
 950 054c FFFFFF00 		.word	16777215
 951 0550 58010000 		.word	.LC31
 952 0554 60010000 		.word	.LC33
 953 0558 00000000 		.word	.LC2
 954 055c 40420F00 		.word	1000000
 955 0560 6C010000 		.word	.LC35
 956 0564 70010000 		.word	.LC37
 957              	.LVL143:
 958              	.L10:
 959              	.LBB40:
 125:Src/cmd.c     ****         SERIAL_WRITE("PD0 Phase:\t\t");
 960              		.loc 1 125 0
 961 0568 03AC     		add	r4, sp, #12
 962 056a 5E22     		movs	r2, #94
 963 056c 0021     		movs	r1, #0
 964 056e 0A20     		movs	r0, #10
 965 0570 02AB     		add	r3, sp, #8
 966 0572 9C46     		mov	ip, r3
 967 0574 6044     		add	r0, r0, ip
 968 0576 FFF7FEFF 		bl	memset
 969              	.LVL144:
 970 057a AE4B     		ldr	r3, .L39
 971 057c 1A68     		ldr	r2, [r3]
 972 057e 0392     		str	r2, [sp, #12]
ARM GAS  /tmp/ccyflxTH.s 			page 23


 973 0580 9B88     		ldrh	r3, [r3, #4]
 974 0582 A380     		strh	r3, [r4, #4]
 975              	.LVL145:
 976 0584 FA26     		movs	r6, #250
 977 0586 B600     		lsls	r6, r6, #2
 978 0588 AB4D     		ldr	r5, .L39+4
 979 058a 3300     		movs	r3, r6
 980 058c 0522     		movs	r2, #5
 981 058e 2100     		movs	r1, r4
 982 0590 2800     		movs	r0, r5
 983 0592 FFF7FEFF 		bl	HAL_UART_Transmit
 984              	.LVL146:
 985              	.LBE40:
 986              	.LBB41:
 126:Src/cmd.c     ****         SERIAL_WRITE("%3i.", Phase(ADC_PD0_Phase_CH) / 1000);
 987              		.loc 1 126 0
 988 0596 5822     		movs	r2, #88
 989 0598 0021     		movs	r1, #0
 990 059a 06A8     		add	r0, sp, #24
 991 059c FFF7FEFF 		bl	memset
 992              	.LVL147:
 993 05a0 A64B     		ldr	r3, .L39+8
 994 05a2 2700     		movs	r7, r4
 995 05a4 07CB     		ldmia	r3!, {r0, r1, r2}
 996 05a6 07C7     		stmia	r7!, {r0, r1, r2}
 997 05a8 B846     		mov	r8, r7
 998 05aa 1B78     		ldrb	r3, [r3]
 999 05ac 3B70     		strb	r3, [r7]
 1000              	.LVL148:
 1001 05ae 3300     		movs	r3, r6
 1002 05b0 0C22     		movs	r2, #12
 1003 05b2 2100     		movs	r1, r4
 1004 05b4 2800     		movs	r0, r5
 1005 05b6 FFF7FEFF 		bl	HAL_UART_Transmit
 1006              	.LVL149:
 1007              	.LBE41:
 1008              	.LBB42:
 127:Src/cmd.c     ****         SERIAL_WRITE("%03lu deg\t\t\n", Phase(ADC_PD0_Phase_CH) % 1000);
 1009              		.loc 1 127 0
 1010 05ba 6422     		movs	r2, #100
 1011 05bc 0021     		movs	r1, #0
 1012 05be 2000     		movs	r0, r4
 1013 05c0 FFF7FEFF 		bl	memset
 1014              	.LVL150:
 1015 05c4 0B20     		movs	r0, #11
 1016 05c6 FFF7FEFF 		bl	Phase
 1017              	.LVL151:
 1018 05ca FA22     		movs	r2, #250
 1019 05cc 9200     		lsls	r2, r2, #2
 1020 05ce 0023     		movs	r3, #0
 1021 05d0 FFF7FEFF 		bl	__aeabi_uldivmod
 1022              	.LVL152:
 1023 05d4 0200     		movs	r2, r0
 1024 05d6 0B00     		movs	r3, r1
 1025 05d8 9949     		ldr	r1, .L39+12
 1026 05da 2000     		movs	r0, r4
 1027 05dc FFF7FEFF 		bl	sprintf
ARM GAS  /tmp/ccyflxTH.s 			page 24


 1028              	.LVL153:
 1029 05e0 82B2     		uxth	r2, r0
 1030 05e2 3300     		movs	r3, r6
 1031 05e4 2100     		movs	r1, r4
 1032 05e6 2800     		movs	r0, r5
 1033              	.LVL154:
 1034 05e8 FFF7FEFF 		bl	HAL_UART_Transmit
 1035              	.LVL155:
 1036              	.LBE42:
 1037              	.LBB43:
 128:Src/cmd.c     **** 
 1038              		.loc 1 128 0
 1039 05ec 6422     		movs	r2, #100
 1040 05ee 0021     		movs	r1, #0
 1041 05f0 2000     		movs	r0, r4
 1042 05f2 FFF7FEFF 		bl	memset
 1043              	.LVL156:
 1044 05f6 0B20     		movs	r0, #11
 1045 05f8 FFF7FEFF 		bl	Phase
 1046              	.LVL157:
 1047 05fc FA22     		movs	r2, #250
 1048 05fe 9200     		lsls	r2, r2, #2
 1049 0600 0023     		movs	r3, #0
 1050 0602 FFF7FEFF 		bl	__aeabi_uldivmod
 1051              	.LVL158:
 1052 0606 8F49     		ldr	r1, .L39+16
 1053 0608 2000     		movs	r0, r4
 1054 060a FFF7FEFF 		bl	sprintf
 1055              	.LVL159:
 1056 060e 82B2     		uxth	r2, r0
 1057 0610 3300     		movs	r3, r6
 1058 0612 2100     		movs	r1, r4
 1059 0614 2800     		movs	r0, r5
 1060              	.LVL160:
 1061 0616 FFF7FEFF 		bl	HAL_UART_Transmit
 1062              	.LVL161:
 1063              	.LBE43:
 1064              	.LBB44:
 130:Src/cmd.c     ****         SERIAL_WRITE("%3i.", Phase(ADC_PD1_Phase_CH) / 1000);
 1065              		.loc 1 130 0
 1066 061a 5822     		movs	r2, #88
 1067 061c 0021     		movs	r1, #0
 1068 061e 3800     		movs	r0, r7
 1069 0620 FFF7FEFF 		bl	memset
 1070              	.LVL162:
 1071 0624 884B     		ldr	r3, .L39+20
 1072 0626 2200     		movs	r2, r4
 1073 0628 83CB     		ldmia	r3!, {r0, r1, r7}
 1074 062a 83C2     		stmia	r2!, {r0, r1, r7}
 1075 062c 1B78     		ldrb	r3, [r3]
 1076 062e 4246     		mov	r2, r8
 1077 0630 1370     		strb	r3, [r2]
 1078              	.LVL163:
 1079 0632 3300     		movs	r3, r6
 1080 0634 0C22     		movs	r2, #12
 1081 0636 2100     		movs	r1, r4
 1082 0638 2800     		movs	r0, r5
ARM GAS  /tmp/ccyflxTH.s 			page 25


 1083 063a FFF7FEFF 		bl	HAL_UART_Transmit
 1084              	.LVL164:
 1085              	.LBE44:
 1086              	.LBB45:
 131:Src/cmd.c     ****         SERIAL_WRITE("%03lu deg\t\t\n", Phase(ADC_PD1_Phase_CH) % 1000);
 1087              		.loc 1 131 0
 1088 063e 6422     		movs	r2, #100
 1089 0640 0021     		movs	r1, #0
 1090 0642 2000     		movs	r0, r4
 1091 0644 FFF7FEFF 		bl	memset
 1092              	.LVL165:
 1093 0648 0620     		movs	r0, #6
 1094 064a FFF7FEFF 		bl	Phase
 1095              	.LVL166:
 1096 064e FA22     		movs	r2, #250
 1097 0650 9200     		lsls	r2, r2, #2
 1098 0652 0023     		movs	r3, #0
 1099 0654 FFF7FEFF 		bl	__aeabi_uldivmod
 1100              	.LVL167:
 1101 0658 0200     		movs	r2, r0
 1102 065a 0B00     		movs	r3, r1
 1103 065c 7849     		ldr	r1, .L39+12
 1104 065e 2000     		movs	r0, r4
 1105 0660 FFF7FEFF 		bl	sprintf
 1106              	.LVL168:
 1107 0664 82B2     		uxth	r2, r0
 1108 0666 3300     		movs	r3, r6
 1109 0668 2100     		movs	r1, r4
 1110 066a 2800     		movs	r0, r5
 1111              	.LVL169:
 1112 066c FFF7FEFF 		bl	HAL_UART_Transmit
 1113              	.LVL170:
 1114              	.LBE45:
 1115              	.LBB46:
 132:Src/cmd.c     **** 
 1116              		.loc 1 132 0
 1117 0670 6422     		movs	r2, #100
 1118 0672 0021     		movs	r1, #0
 1119 0674 2000     		movs	r0, r4
 1120 0676 FFF7FEFF 		bl	memset
 1121              	.LVL171:
 1122 067a 0620     		movs	r0, #6
 1123 067c FFF7FEFF 		bl	Phase
 1124              	.LVL172:
 1125 0680 FA22     		movs	r2, #250
 1126 0682 9200     		lsls	r2, r2, #2
 1127 0684 0023     		movs	r3, #0
 1128 0686 FFF7FEFF 		bl	__aeabi_uldivmod
 1129              	.LVL173:
 1130 068a 6E49     		ldr	r1, .L39+16
 1131 068c 2000     		movs	r0, r4
 1132 068e FFF7FEFF 		bl	sprintf
 1133              	.LVL174:
 1134 0692 82B2     		uxth	r2, r0
 1135 0694 3300     		movs	r3, r6
 1136 0696 2100     		movs	r1, r4
 1137 0698 2800     		movs	r0, r5
ARM GAS  /tmp/ccyflxTH.s 			page 26


 1138              	.LVL175:
 1139 069a FFF7FEFF 		bl	HAL_UART_Transmit
 1140              	.LVL176:
 1141              	.LBE46:
 1142              	.LBB47:
 134:Src/cmd.c     ****         SERIAL_WRITE("%3i.", Phase(ADC_PD2_Phase_CH) / 1000);
 1143              		.loc 1 134 0
 1144 069e 5822     		movs	r2, #88
 1145 06a0 0021     		movs	r1, #0
 1146 06a2 4046     		mov	r0, r8
 1147 06a4 FFF7FEFF 		bl	memset
 1148              	.LVL177:
 1149 06a8 684B     		ldr	r3, .L39+24
 1150 06aa 2200     		movs	r2, r4
 1151 06ac 83CB     		ldmia	r3!, {r0, r1, r7}
 1152 06ae 83C2     		stmia	r2!, {r0, r1, r7}
 1153 06b0 1B78     		ldrb	r3, [r3]
 1154 06b2 4246     		mov	r2, r8
 1155 06b4 1370     		strb	r3, [r2]
 1156              	.LVL178:
 1157 06b6 3300     		movs	r3, r6
 1158 06b8 0C22     		movs	r2, #12
 1159 06ba 2100     		movs	r1, r4
 1160 06bc 2800     		movs	r0, r5
 1161 06be FFF7FEFF 		bl	HAL_UART_Transmit
 1162              	.LVL179:
 1163              	.LBE47:
 1164              	.LBB48:
 135:Src/cmd.c     ****         SERIAL_WRITE("%03lu deg\t\t\n", Phase(ADC_PD2_Phase_CH) % 1000);
 1165              		.loc 1 135 0
 1166 06c2 6422     		movs	r2, #100
 1167 06c4 0021     		movs	r1, #0
 1168 06c6 2000     		movs	r0, r4
 1169 06c8 FFF7FEFF 		bl	memset
 1170              	.LVL180:
 1171 06cc 0020     		movs	r0, #0
 1172 06ce FFF7FEFF 		bl	Phase
 1173              	.LVL181:
 1174 06d2 FA22     		movs	r2, #250
 1175 06d4 9200     		lsls	r2, r2, #2
 1176 06d6 0023     		movs	r3, #0
 1177 06d8 FFF7FEFF 		bl	__aeabi_uldivmod
 1178              	.LVL182:
 1179 06dc 0200     		movs	r2, r0
 1180 06de 0B00     		movs	r3, r1
 1181 06e0 5749     		ldr	r1, .L39+12
 1182 06e2 2000     		movs	r0, r4
 1183 06e4 FFF7FEFF 		bl	sprintf
 1184              	.LVL183:
 1185 06e8 82B2     		uxth	r2, r0
 1186 06ea 3300     		movs	r3, r6
 1187 06ec 2100     		movs	r1, r4
 1188 06ee 2800     		movs	r0, r5
 1189              	.LVL184:
 1190 06f0 FFF7FEFF 		bl	HAL_UART_Transmit
 1191              	.LVL185:
 1192              	.LBE48:
ARM GAS  /tmp/ccyflxTH.s 			page 27


 1193              	.LBB49:
 136:Src/cmd.c     **** 
 1194              		.loc 1 136 0
 1195 06f4 6422     		movs	r2, #100
 1196 06f6 0021     		movs	r1, #0
 1197 06f8 2000     		movs	r0, r4
 1198 06fa FFF7FEFF 		bl	memset
 1199              	.LVL186:
 1200 06fe 0020     		movs	r0, #0
 1201 0700 FFF7FEFF 		bl	Phase
 1202              	.LVL187:
 1203 0704 FA22     		movs	r2, #250
 1204 0706 9200     		lsls	r2, r2, #2
 1205 0708 0023     		movs	r3, #0
 1206 070a FFF7FEFF 		bl	__aeabi_uldivmod
 1207              	.LVL188:
 1208 070e 4D49     		ldr	r1, .L39+16
 1209 0710 2000     		movs	r0, r4
 1210 0712 FFF7FEFF 		bl	sprintf
 1211              	.LVL189:
 1212 0716 82B2     		uxth	r2, r0
 1213 0718 3300     		movs	r3, r6
 1214 071a 2100     		movs	r1, r4
 1215 071c 2800     		movs	r0, r5
 1216              	.LVL190:
 1217 071e FFF7FEFF 		bl	HAL_UART_Transmit
 1218              	.LVL191:
 1219              	.LBE49:
 1220              	.LBB50:
 138:Src/cmd.c     ****         SERIAL_WRITE("%3i.", Phase(ADC_PD3_Phase_CH) / 1000);
 1221              		.loc 1 138 0
 1222 0722 5822     		movs	r2, #88
 1223 0724 0021     		movs	r1, #0
 1224 0726 4046     		mov	r0, r8
 1225 0728 FFF7FEFF 		bl	memset
 1226              	.LVL192:
 1227 072c 484B     		ldr	r3, .L39+28
 1228 072e 2200     		movs	r2, r4
 1229 0730 83CB     		ldmia	r3!, {r0, r1, r7}
 1230 0732 83C2     		stmia	r2!, {r0, r1, r7}
 1231 0734 1B78     		ldrb	r3, [r3]
 1232 0736 4246     		mov	r2, r8
 1233 0738 1370     		strb	r3, [r2]
 1234              	.LVL193:
 1235 073a 3300     		movs	r3, r6
 1236 073c 0C22     		movs	r2, #12
 1237 073e 2100     		movs	r1, r4
 1238 0740 2800     		movs	r0, r5
 1239 0742 FFF7FEFF 		bl	HAL_UART_Transmit
 1240              	.LVL194:
 1241              	.LBE50:
 1242              	.LBB51:
 139:Src/cmd.c     ****         SERIAL_WRITE("%03lu deg\t\t\n", Phase(ADC_PD3_Phase_CH) % 1000);
 1243              		.loc 1 139 0
 1244 0746 6422     		movs	r2, #100
 1245 0748 0021     		movs	r1, #0
 1246 074a 2000     		movs	r0, r4
ARM GAS  /tmp/ccyflxTH.s 			page 28


 1247 074c FFF7FEFF 		bl	memset
 1248              	.LVL195:
 1249 0750 0E20     		movs	r0, #14
 1250 0752 FFF7FEFF 		bl	Phase
 1251              	.LVL196:
 1252 0756 FA22     		movs	r2, #250
 1253 0758 9200     		lsls	r2, r2, #2
 1254 075a 0023     		movs	r3, #0
 1255 075c FFF7FEFF 		bl	__aeabi_uldivmod
 1256              	.LVL197:
 1257 0760 0200     		movs	r2, r0
 1258 0762 0B00     		movs	r3, r1
 1259 0764 3649     		ldr	r1, .L39+12
 1260 0766 2000     		movs	r0, r4
 1261 0768 FFF7FEFF 		bl	sprintf
 1262              	.LVL198:
 1263 076c 82B2     		uxth	r2, r0
 1264 076e 3300     		movs	r3, r6
 1265 0770 2100     		movs	r1, r4
 1266 0772 2800     		movs	r0, r5
 1267              	.LVL199:
 1268 0774 FFF7FEFF 		bl	HAL_UART_Transmit
 1269              	.LVL200:
 1270              	.LBE51:
 1271              	.LBB52:
 140:Src/cmd.c     **** 
 1272              		.loc 1 140 0
 1273 0778 6422     		movs	r2, #100
 1274 077a 0021     		movs	r1, #0
 1275 077c 2000     		movs	r0, r4
 1276 077e FFF7FEFF 		bl	memset
 1277              	.LVL201:
 1278 0782 0E20     		movs	r0, #14
 1279 0784 FFF7FEFF 		bl	Phase
 1280              	.LVL202:
 1281 0788 FA22     		movs	r2, #250
 1282 078a 9200     		lsls	r2, r2, #2
 1283 078c 0023     		movs	r3, #0
 1284 078e FFF7FEFF 		bl	__aeabi_uldivmod
 1285              	.LVL203:
 1286 0792 2C49     		ldr	r1, .L39+16
 1287 0794 2000     		movs	r0, r4
 1288 0796 FFF7FEFF 		bl	sprintf
 1289              	.LVL204:
 1290 079a 82B2     		uxth	r2, r0
 1291 079c 3300     		movs	r3, r6
 1292 079e 2100     		movs	r1, r4
 1293 07a0 2800     		movs	r0, r5
 1294              	.LVL205:
 1295 07a2 FFF7FEFF 		bl	HAL_UART_Transmit
 1296              	.LVL206:
 1297              	.LBE52:
 1298              	.LBB53:
 142:Src/cmd.c     ****         SERIAL_WRITE("%3i.", Phase(ADC_PD4_Phase_CH) / 1000);
 1299              		.loc 1 142 0
 1300 07a6 5822     		movs	r2, #88
 1301 07a8 0021     		movs	r1, #0
ARM GAS  /tmp/ccyflxTH.s 			page 29


 1302 07aa 4046     		mov	r0, r8
 1303 07ac FFF7FEFF 		bl	memset
 1304              	.LVL207:
 1305 07b0 284B     		ldr	r3, .L39+32
 1306 07b2 2200     		movs	r2, r4
 1307 07b4 83CB     		ldmia	r3!, {r0, r1, r7}
 1308 07b6 83C2     		stmia	r2!, {r0, r1, r7}
 1309 07b8 1B78     		ldrb	r3, [r3]
 1310 07ba 4246     		mov	r2, r8
 1311 07bc 1370     		strb	r3, [r2]
 1312              	.LVL208:
 1313 07be 3300     		movs	r3, r6
 1314 07c0 0C22     		movs	r2, #12
 1315 07c2 2100     		movs	r1, r4
 1316 07c4 2800     		movs	r0, r5
 1317 07c6 FFF7FEFF 		bl	HAL_UART_Transmit
 1318              	.LVL209:
 1319              	.LBE53:
 1320              	.LBB54:
 143:Src/cmd.c     ****         SERIAL_WRITE("%03lu deg\t\t\n", Phase(ADC_PD4_Phase_CH) % 1000);
 1321              		.loc 1 143 0
 1322 07ca 6422     		movs	r2, #100
 1323 07cc 0021     		movs	r1, #0
 1324 07ce 2000     		movs	r0, r4
 1325 07d0 FFF7FEFF 		bl	memset
 1326              	.LVL210:
 1327 07d4 0220     		movs	r0, #2
 1328 07d6 FFF7FEFF 		bl	Phase
 1329              	.LVL211:
 1330 07da FA22     		movs	r2, #250
 1331 07dc 9200     		lsls	r2, r2, #2
 1332 07de 0023     		movs	r3, #0
 1333 07e0 FFF7FEFF 		bl	__aeabi_uldivmod
 1334              	.LVL212:
 1335 07e4 0200     		movs	r2, r0
 1336 07e6 0B00     		movs	r3, r1
 1337 07e8 1549     		ldr	r1, .L39+12
 1338 07ea 2000     		movs	r0, r4
 1339 07ec FFF7FEFF 		bl	sprintf
 1340              	.LVL213:
 1341 07f0 82B2     		uxth	r2, r0
 1342 07f2 3300     		movs	r3, r6
 1343 07f4 2100     		movs	r1, r4
 1344 07f6 2800     		movs	r0, r5
 1345              	.LVL214:
 1346 07f8 FFF7FEFF 		bl	HAL_UART_Transmit
 1347              	.LVL215:
 1348              	.LBE54:
 1349              	.LBB55:
 144:Src/cmd.c     **** 
 1350              		.loc 1 144 0
 1351 07fc 6422     		movs	r2, #100
 1352 07fe 0021     		movs	r1, #0
 1353 0800 2000     		movs	r0, r4
 1354 0802 FFF7FEFF 		bl	memset
 1355              	.LVL216:
 1356 0806 0220     		movs	r0, #2
ARM GAS  /tmp/ccyflxTH.s 			page 30


 1357 0808 FFF7FEFF 		bl	Phase
 1358              	.LVL217:
 1359 080c FA22     		movs	r2, #250
 1360 080e 9200     		lsls	r2, r2, #2
 1361 0810 0023     		movs	r3, #0
 1362 0812 FFF7FEFF 		bl	__aeabi_uldivmod
 1363              	.LVL218:
 1364 0816 0B49     		ldr	r1, .L39+16
 1365 0818 2000     		movs	r0, r4
 1366 081a FFF7FEFF 		bl	sprintf
 1367              	.LVL219:
 1368 081e 82B2     		uxth	r2, r0
 1369 0820 3300     		movs	r3, r6
 1370 0822 2100     		movs	r1, r4
 1371 0824 2800     		movs	r0, r5
 1372              	.LVL220:
 1373 0826 FFF7FEFF 		bl	HAL_UART_Transmit
 1374              	.LVL221:
 1375              	.LBE55:
 181:Src/cmd.c     **** 
 1376              		.loc 1 181 0
 1377 082a 0B4B     		ldr	r3, .L39+36
 1378 082c 0022     		movs	r2, #0
 1379 082e 5A72     		strb	r2, [r3, #9]
 183:Src/cmd.c     ****     }
 1380              		.loc 1 183 0
 1381 0830 40E4     		b	.L1
 1382              	.L40:
 1383 0832 C046     		.align	2
 1384              	.L39:
 1385 0834 7C010000 		.word	.LC39
 1386 0838 00000000 		.word	huart2
 1387 083c 84010000 		.word	.LC41
 1388 0840 94010000 		.word	.LC43
 1389 0844 9C010000 		.word	.LC45
 1390 0848 AC010000 		.word	.LC47
 1391 084c BC010000 		.word	.LC49
 1392 0850 CC010000 		.word	.LC51
 1393 0854 DC010000 		.word	.LC53
 1394 0858 00000000 		.word	State
 1395              		.cfi_endproc
 1396              	.LFE284:
 1398              		.section	.rodata.cmd.str1.4,"aMS",%progbits,1
 1399              		.align	2
 1400              	.LC2:
 1401 0000 30782530 		.ascii	"0x%06x\012\000"
 1401      36780A00 
 1402              	.LC5:
 1403 0008 41444320 		.ascii	"ADC DEBUG:\012\012\000"
 1403      44454255 
 1403      473A0A0A 
 1403      00
 1404 0015 000000   		.space	3
 1405              	.LC7:
 1406 0018 09414443 		.ascii	"\011ADC_STATUS_REG:\011\0110x%02x\012\000"
 1406      5F535441 
 1406      5455535F 
ARM GAS  /tmp/ccyflxTH.s 			page 31


 1406      5245473A 
 1406      09093078 
 1407 0032 0000     		.space	2
 1408              	.LC9:
 1409 0034 09414443 		.ascii	"\011ADC_MODE_REG:\011\0110x%04x\012\000"
 1409      5F4D4F44 
 1409      455F5245 
 1409      473A0909 
 1409      30782530 
 1410              	.LC11:
 1411 004c 09414443 		.ascii	"\011ADC_INTERFACE_REG:\0110x%04x\012\000"
 1411      5F494E54 
 1411      45524641 
 1411      43455F52 
 1411      45473A09 
 1412              	.LC13:
 1413 0068 09414443 		.ascii	"\011ADC_CHECK_REG:\011\0110x%06x\012\000"
 1413      5F434845 
 1413      434B5F52 
 1413      45473A09 
 1413      09307825 
 1414 0081 000000   		.space	3
 1415              	.LC15:
 1416 0084 09414443 		.ascii	"\011ADC_DATA_REG:\011\0110x%06x\012\000"
 1416      5F444154 
 1416      415F5245 
 1416      473A0909 
 1416      30782530 
 1417              	.LC17:
 1418 009c 09414443 		.ascii	"\011ADC_GPIO_REG:\011\0110x%04x\012\000"
 1418      5F475049 
 1418      4F5F5245 
 1418      473A0909 
 1418      30782530 
 1419              	.LC19:
 1420 00b4 09414443 		.ascii	"\011ADC_ID_REG:\011\0110x%04x\012\000"
 1420      5F49445F 
 1420      5245473A 
 1420      09093078 
 1420      25303478 
 1421 00ca 0000     		.space	2
 1422              	.LC21:
 1423 00cc 09414443 		.ascii	"\011ADC_CH%i_REG:\011\0110x%04x\012\000"
 1423      5F434825 
 1423      695F5245 
 1423      473A0909 
 1423      30782530 
 1424              	.LC23:
 1425 00e4 09414443 		.ascii	"\011ADC_SETUPCON%i_REG:\0110x%04x\012\000"
 1425      5F534554 
 1425      5550434F 
 1425      4E25695F 
 1425      5245473A 
 1426 0101 000000   		.space	3
 1427              	.LC25:
 1428 0104 09414443 		.ascii	"\011ADC_FILTCON%i_REG:\0110x%04x\012\000"
 1428      5F46494C 
ARM GAS  /tmp/ccyflxTH.s 			page 32


 1428      54434F4E 
 1428      25695F52 
 1428      45473A09 
 1429              	.LC27:
 1430 0120 09414443 		.ascii	"\011ADC_OFFSET%i_REG:\0110x%04x\012\000"
 1430      5F4F4646 
 1430      53455425 
 1430      695F5245 
 1430      473A0930 
 1431 013b 00       		.space	1
 1432              	.LC29:
 1433 013c 09414443 		.ascii	"\011ADC_GAIN%i_REG:\011\0110x%04x\012\000"
 1433      5F474149 
 1433      4E25695F 
 1433      5245473A 
 1433      09093078 
 1434 0156 0000     		.space	2
 1435              	.LC31:
 1436 0158 5B25695D 		.ascii	"[%i]\011\000"
 1436      0900
 1437 015e 0000     		.space	2
 1438              	.LC33:
 1439 0160 25313069 		.ascii	"%10i uV\011\011\000"
 1439      20755609 
 1439      0900
 1440 016a 0000     		.space	2
 1441              	.LC35:
 1442 016c 25692E00 		.ascii	"%i.\000"
 1443              	.LC37:
 1444 0170 25303375 		.ascii	"%03u *C\012\000"
 1444      202A430A 
 1444      00
 1445 0179 000000   		.space	3
 1446              	.LC39:
 1447 017c 0A0A0A0A 		.ascii	"\012\012\012\012\012\000"
 1447      0A00
 1448 0182 0000     		.space	2
 1449              	.LC41:
 1450 0184 50443020 		.ascii	"PD0 Phase:\011\011\000"
 1450      50686173 
 1450      653A0909 
 1450      00
 1451 0191 000000   		.space	3
 1452              	.LC43:
 1453 0194 2533692E 		.ascii	"%3i.\000"
 1453      00
 1454 0199 000000   		.space	3
 1455              	.LC45:
 1456 019c 2530336C 		.ascii	"%03lu deg\011\011\012\000"
 1456      75206465 
 1456      6709090A 
 1456      00
 1457 01a9 000000   		.space	3
 1458              	.LC47:
 1459 01ac 50443120 		.ascii	"PD1 Phase:\011\011\000"
 1459      50686173 
 1459      653A0909 
ARM GAS  /tmp/ccyflxTH.s 			page 33


 1459      00
 1460 01b9 000000   		.space	3
 1461              	.LC49:
 1462 01bc 50443220 		.ascii	"PD2 Phase:\011\011\000"
 1462      50686173 
 1462      653A0909 
 1462      00
 1463 01c9 000000   		.space	3
 1464              	.LC51:
 1465 01cc 50443320 		.ascii	"PD3 Phase:\011\011\000"
 1465      50686173 
 1465      653A0909 
 1465      00
 1466 01d9 000000   		.space	3
 1467              	.LC53:
 1468 01dc 50443420 		.ascii	"PD4 Phase:\011\011\000"
 1468      50686173 
 1468      653A0909 
 1468      00
 1469 01e9 000000   		.space	3
 1470              	.LC55:
 1471 01ec 756E6465 		.ascii	"undefined\012\000"
 1471      66696E65 
 1471      640A00
 1472              		.text
 1473              	.Letext0:
 1474              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1475              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1476              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 1477              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 1478              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 1479              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 1480              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 1481              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h"
 1482              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 1483              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 1484              		.file 12 "/usr/include/newlib/sys/lock.h"
 1485              		.file 13 "/usr/include/newlib/sys/_types.h"
 1486              		.file 14 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1487              		.file 15 "/usr/include/newlib/sys/reent.h"
 1488              		.file 16 "Inc/usart.h"
 1489              		.file 17 "Inc/state.h"
 1490              		.file 18 "Inc/spi.h"
 1491              		.file 19 "/usr/include/newlib/stdlib.h"
 1492              		.file 20 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 1493              		.file 21 "Inc/ADC.h"
 1494              		.file 22 "/usr/include/newlib/stdio.h"
 1495              		.file 23 "Inc/PID.h"
 1496              		.file 24 "Inc/DAC.h"
 1497              		.file 25 "<built-in>"
ARM GAS  /tmp/ccyflxTH.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 cmd.c
     /tmp/ccyflxTH.s:20     .text.cmd:00000000 $t
     /tmp/ccyflxTH.s:27     .text.cmd:00000000 cmd
     /tmp/ccyflxTH.s:653    .text.cmd:00000368 $d
     /tmp/ccyflxTH.s:676    .text.cmd:000003b0 $t
     /tmp/ccyflxTH.s:945    .text.cmd:00000538 $d
     /tmp/ccyflxTH.s:961    .text.cmd:00000568 $t
     /tmp/ccyflxTH.s:1385   .text.cmd:00000834 $d
     /tmp/ccyflxTH.s:1399   .rodata.cmd.str1.4:00000000 $d

UNDEFINED SYMBOLS
__aeabi_lmul
__aeabi_uldivmod
__aeabi_idiv
__aeabi_idivmod
HAL_GPIO_TogglePin
memset
HAL_UART_Transmit
HAL_Delay
ADC_ID
sprintf
ADC_DATA_READY_EXTI_deInit
HAL_SPI_MspInit
ADC_CMD
ADC_SPI_READ_8
ADC_SPI_READ_16
ADC_SPI_READ_24
State
huart2
hspi2
HAL_SPI_MspDeInit
ADC_DATA_READY_EXTI_Init
DAC_test
Phase
