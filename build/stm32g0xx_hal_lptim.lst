ARM GAS  /tmp/ccWF4qij.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_hal_lptim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_LPTIM_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_LPTIM_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_LPTIM_MspInit:
  24              	.LFB175:
  25              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @file    stm32g0xx_hal_lptim.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief   LPTIM HAL module driver. 
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          functionalities of the Low Power Timer (LPTIM) peripheral:
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *           + Initialization and de-initialization functions.
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *           + Start/Stop operation functions in polling mode.
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *           + Start/Stop operation functions in interrupt mode.
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *           + Reading operation functions.
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *           + Peripheral State functions.
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   @verbatim
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ==============================================================================
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                      ##### How to use this driver #####
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ==============================================================================
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     [..]
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       The LPTIM HAL driver can be used as follows:
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (#)Initialize the LPTIM low level resources by implementing the
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****         HAL_LPTIM_MspInit():
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) Enable the LPTIM interface clock using __HAL_RCC_LPTIMx_CLK_ENABLE().
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) In case of using interrupts (e.g. HAL_LPTIM_PWM_Start_IT()):
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****              (+++) Configure the LPTIM interrupt priority using HAL_NVIC_SetPriority().
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****              (+++) Enable the LPTIM IRQ handler using HAL_NVIC_EnableIRQ().
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****              (+++) In LPTIM IRQ handler, call HAL_LPTIM_IRQHandler().
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (#)Initialize the LPTIM HAL using HAL_LPTIM_Init(). This function
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          configures mainly:
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) The instance: LPTIM1 or LPTIM2.
  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) Clock: the counter clock.
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****              (+++) Source   : it can be either the ULPTIM input (IN1) or one of
ARM GAS  /tmp/ccWF4qij.s 			page 2


  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                               the internal clock; (APB, LSE, LSI or HSI).
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****              (+++) Prescaler: select the clock divider.
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++)  UltraLowPowerClock : To be used only if the ULPTIM is selected
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                as counter clock source.
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****              (+++) Polarity:   polarity of the active edge for the counter unit
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                                if the ULPTIM input is selected.
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****              (+++) SampleTime: clock sampling time to configure the clock glitch
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                                filter.              
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) Trigger: How the counter start.
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****              (+++) Source: trigger can be software or one of the hardware triggers.
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****              (+++) ActiveEdge : only for hardware trigger.
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****              (+++) SampleTime : trigger sampling time to configure the trigger
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                                 glitch filter.
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) OutputPolarity : 2 opposite polarities are possible.
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) UpdateMode: specifies whether the update of the autoreload and
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               the compare values is done immediately or after the end of current
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               period.   
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) Input1Source: Source selected for input1 (GPIO or comparator output).
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) Input2Source: Source selected for input2 (GPIO or comparator output). 
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               Input2 is used only for encoder feature so is used only for LPTIM1 instance.
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (#)Six modes are available:
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) PWM Mode: To generate a PWM signal with specified period and pulse,
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          call HAL_LPTIM_PWM_Start() or HAL_LPTIM_PWM_Start_IT() for interruption
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          mode.
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) One Pulse Mode: To generate pulse with specified width in response
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          to a stimulus, call HAL_LPTIM_OnePulse_Start() or
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          HAL_LPTIM_OnePulse_Start_IT() for interruption mode.
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) Set once Mode: In this mode, the output changes the level (from
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          low level to high level if the output polarity is configured high, else
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          the opposite) when a compare match occurs. To start this mode, call 
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          HAL_LPTIM_SetOnce_Start() or HAL_LPTIM_SetOnce_Start_IT() for
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          interruption mode.
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) Encoder Mode: To use the encoder interface call
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          HAL_LPTIM_Encoder_Start() or HAL_LPTIM_Encoder_Start_IT() for 
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          interruption mode. Only available for LPTIM1 instance.
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) Time out Mode: an active edge on one selected trigger input rests
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          the counter. The first trigger event will start the timer, any
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          successive trigger event will reset the counter and the timer will
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          restart. To start this mode call HAL_LPTIM_TimeOut_Start_IT() or 
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          HAL_LPTIM_TimeOut_Start_IT() for interruption mode.
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          (++) Counter Mode: counter can be used to count external events on
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          the LPTIM Input1 or it can be used to count internal clock cycles.
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          To start this mode, call HAL_LPTIM_Counter_Start() or 
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          HAL_LPTIM_Counter_Start_IT() for interruption mode.             
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (#) User can stop any process by calling the corresponding API:
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****           HAL_LPTIM_Xxx_Stop() or HAL_LPTIM_Xxx_Stop_IT() if the process is
  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****           already started in interruption mode.
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****          
ARM GAS  /tmp/ccWF4qij.s 			page 3


  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (#) De-initialize the LPTIM peripheral using HAL_LPTIM_DeInit().
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     *** Callback registration ***
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   =============================================
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   [..]
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   The compilation define  USE_HAL_LPTIM_REGISTER_CALLBACKS when set to 1
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   allows the user to configure dynamically the driver callbacks.
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   [..]
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   Use Function @ref HAL_LPTIM_RegisterCallback() to register a callback.
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   @ref HAL_LPTIM_RegisterCallback() takes as parameters the HAL peripheral handle,
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   the Callback ID and a pointer to the user callback function.
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   [..]
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   Use function @ref HAL_LPTIM_UnRegisterCallback() to reset a callback to the
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   default weak function.
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   @ref HAL_LPTIM_UnRegisterCallback takes as parameters the HAL peripheral handle,
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   and the Callback ID.
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   [..]
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   These functions allow to register/unregister following callbacks:
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     (+) MspInitCallback         : LPTIM Base Msp Init Callback.
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     (+) MspDeInitCallback       : LPTIM Base Msp DeInit Callback.
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     (+) CompareMatchCallback    : Compare match Callback.
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     (+) AutoReloadMatchCallback : Auto-reload match Callback.
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     (+) TriggerCallback         : External trigger event detection Callback.
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     (+) CompareWriteCallback    : Compare register write complete Callback.
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     (+) AutoReloadWriteCallback : Auto-reload register write complete Callback.
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     (+) DirectionUpCallback     : Up-counting direction change Callback.
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     (+) DirectionDownCallback   : Down-counting direction change Callback.
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   [..]
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   By default, after the Init and when the state is HAL_LPTIM_STATE_RESET
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   all interrupt callbacks are set to the corresponding weak functions:
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   examples @ref HAL_LPTIM_TriggerCallback(), @ref HAL_LPTIM_CompareMatchCallback().
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   [..]
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   Exception done for MspInit and MspDeInit functions that are reset to the legacy weak
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   functionalities in the Init/DeInit only when these callbacks are null
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   (not registered beforehand). If not, MspInit or MspDeInit are not null, the Init/DeInit
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   [..]
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   Callbacks can be registered/unregistered in HAL_LPTIM_STATE_READY state only.
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   in HAL_LPTIM_STATE_READY or HAL_LPTIM_STATE_RESET state,
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   In that case first register the MspInit/MspDeInit user callbacks
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   using @ref HAL_LPTIM_RegisterCallback() before calling DeInit or Init function.
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   [..]
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   When The compilation define USE_HAL_LPTIM_REGISTER_CALLBACKS is set to 0 or
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   not defined, the callback registration feature is not available and all callbacks
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   are set to the corresponding weak functions.
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   @endverbatim
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ******************************************************************************
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @attention
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *
ARM GAS  /tmp/ccWF4qij.s 			page 4


 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * All rights reserved.</center></h2>
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * the "License"; You may not use this file except in compliance with the
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * License. You may obtain a copy of the License at:
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *                        opensource.org/licenses/BSD-3-Clause
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ******************************************************************************
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */ 
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /* Includes ------------------------------------------------------------------*/
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #include "stm32g0xx_hal.h"
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /** @addtogroup STM32G0xx_HAL_Driver
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @{
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /** @defgroup LPTIM LPTIM
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief LPTIM HAL module driver.
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @{
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #ifdef HAL_LPTIM_MODULE_ENABLED
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #if defined (LPTIM1) || defined (LPTIM2)
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /* Private typedef -----------------------------------------------------------*/
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /* Private define ------------------------------------------------------------*/
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /* Private macro -------------------------------------------------------------*/
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /* Private variables ---------------------------------------------------------*/
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /* Private function prototypes -----------------------------------------------*/
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #if (USE_HAL_LPTIM_REGISTER_CALLBACKS == 1)
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** static void LPTIM_ResetCallback(LPTIM_HandleTypeDef *lptim);
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /* Exported functions --------------------------------------------------------*/
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /** @defgroup LPTIM_Exported_Functions LPTIM Exported Functions
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @{
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /** @defgroup LPTIM_Exported_Functions_Group1 Initialization/de-initialization functions
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  *  @brief    Initialization and Configuration functions. 
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  *
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** @verbatim    
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ==============================================================================
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               ##### Initialization and de-initialization functions #####
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ==============================================================================
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     [..]  This section provides functions allowing to:
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Initialize the LPTIM according to the specified parameters in the
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****           LPTIM_InitTypeDef and initialize the associated handle.
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) DeInitialize the LPTIM peripheral.
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Initialize the LPTIM MSP.
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) DeInitialize the LPTIM MSP. 
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** @endverbatim
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @{
ARM GAS  /tmp/ccWF4qij.s 			page 5


 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Initialize the LPTIM according to the specified parameters in the
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         LPTIM_InitTypeDef and initialize the associated handle.
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_Init(LPTIM_HandleTypeDef *hlptim)
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   uint32_t tmpcfgr;
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the LPTIM handle allocation */
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(hlptim == NULL)
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     return HAL_ERROR;
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_CLOCK_SOURCE(hlptim->Init.Clock.Source));
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_CLOCK_PRESCALER(hlptim->Init.Clock.Prescaler));  
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if ((hlptim->Init.Clock.Source) ==  LPTIM_CLOCKSOURCE_ULPTIM)
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     assert_param(IS_LPTIM_CLOCK_POLARITY(hlptim->Init.UltraLowPowerClock.Polarity));
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     assert_param(IS_LPTIM_CLOCK_SAMPLE_TIME(hlptim->Init.UltraLowPowerClock.SampleTime));
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }  
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_TRG_SOURCE(hlptim->Init.Trigger.Source));
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if ((hlptim->Init.Trigger.Source) !=  LPTIM_TRIGSOURCE_SOFTWARE)
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     assert_param(IS_LPTIM_TRIG_SAMPLE_TIME(hlptim->Init.Trigger.SampleTime));
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     assert_param(IS_LPTIM_EXT_TRG_POLARITY(hlptim->Init.Trigger.ActiveEdge));
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }  
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_OUTPUT_POLARITY(hlptim->Init.OutputPolarity));  
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_UPDATE_MODE(hlptim->Init.UpdateMode));
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_COUNTER_SOURCE(hlptim->Init.CounterSource));
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(hlptim->State == HAL_LPTIM_STATE_RESET)
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Allocate lock resource and initialize it */
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->Lock = HAL_UNLOCKED;
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #if (USE_HAL_LPTIM_REGISTER_CALLBACKS == 1)
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     LPTIM_ResetCallback(hlptim);
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     if(hlptim->MspInitCallback == NULL)
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->MspInitCallback = HAL_LPTIM_MspInit;
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     }
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->MspInitCallback(hlptim);
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #else
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     HAL_LPTIM_MspInit(hlptim);
ARM GAS  /tmp/ccWF4qij.s 			page 6


 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the LPTIM state */
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State = HAL_LPTIM_STATE_BUSY;
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Get the LPTIMx CFGR value */
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   tmpcfgr = hlptim->Instance->CFGR;
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if (((hlptim->Init.Clock.Source) == LPTIM_CLOCKSOURCE_ULPTIM) || ((hlptim->Init.CounterSource) ==
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     tmpcfgr &= (uint32_t)(~(LPTIM_CFGR_CKPOL | LPTIM_CFGR_CKFLT));
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if ((hlptim->Init.Trigger.Source) !=  LPTIM_TRIGSOURCE_SOFTWARE)
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     tmpcfgr &= (uint32_t)(~ (LPTIM_CFGR_TRGFLT | LPTIM_CFGR_TRIGSEL));
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Clear CKSEL, CKPOL, PRESC, TRIGEN, TRGFLT, WAVPOL, PRELOAD & COUNTMODE bits */
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   tmpcfgr &= (uint32_t)(~(LPTIM_CFGR_CKSEL | LPTIM_CFGR_CKPOL | LPTIM_CFGR_TRIGEN | LPTIM_CFGR_PREL
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                           LPTIM_CFGR_WAVPOL | LPTIM_CFGR_PRESC | LPTIM_CFGR_COUNTMODE ));
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set initialization parameters */
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   tmpcfgr |= (hlptim->Init.Clock.Source    |
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               hlptim->Init.Clock.Prescaler |
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               hlptim->Init.OutputPolarity  |
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               hlptim->Init.UpdateMode      |
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               hlptim->Init.CounterSource);
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if (((hlptim->Init.Clock.Source) == LPTIM_CLOCKSOURCE_ULPTIM) || ((hlptim->Init.CounterSource) ==
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     tmpcfgr |=  (hlptim->Init.UltraLowPowerClock.Polarity |
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                 hlptim->Init.UltraLowPowerClock.SampleTime);
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   } 
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if ((hlptim->Init.Trigger.Source) !=  LPTIM_TRIGSOURCE_SOFTWARE)
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Enable External trigger and set the trigger source */
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     tmpcfgr |= (hlptim->Init.Trigger.Source     |
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                 hlptim->Init.Trigger.ActiveEdge |
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                 hlptim->Init.Trigger.SampleTime);
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Write to LPTIMx CFGR */
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR = tmpcfgr;
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Configure LPTIM input sources */
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(hlptim->Instance == LPTIM1)
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Check LPTIM Input1 and Input2 sources */
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     assert_param(IS_LPTIM_INPUT1_SOURCE(hlptim->Instance,hlptim->Init.Input1Source));
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     assert_param(IS_LPTIM_INPUT2_SOURCE(hlptim->Instance,hlptim->Init.Input2Source));
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Configure LPTIM Input1 and Input2 sources */
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->Instance->CFGR2 = (hlptim->Init.Input1Source | hlptim->Init.Input2Source);
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   else
ARM GAS  /tmp/ccWF4qij.s 			page 7


 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Check LPTIM2 Input1 source */
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     assert_param(IS_LPTIM_INPUT1_SOURCE(hlptim->Instance,hlptim->Init.Input1Source));
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Configure LPTIM2 Input1 source */
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->Instance->CFGR2 = hlptim->Init.Input1Source;
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the LPTIM state */
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State = HAL_LPTIM_STATE_READY;
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  DeInitialize the LPTIM peripheral. 
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_DeInit(LPTIM_HandleTypeDef *hlptim)
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the LPTIM handle allocation */
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(hlptim == NULL)
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     return HAL_ERROR;
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the LPTIM state */
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State = HAL_LPTIM_STATE_BUSY;
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the LPTIM Peripheral Clock */
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #if (USE_HAL_LPTIM_REGISTER_CALLBACKS == 1)
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(hlptim->MspDeInitCallback == NULL)
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->MspDeInitCallback = HAL_LPTIM_MspDeInit;
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* DeInit the low level hardware: CLOCK, NVIC.*/
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->MspDeInitCallback(hlptim);
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #else
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* DeInit the low level hardware: CLOCK, NVIC.*/
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   HAL_LPTIM_MspDeInit(hlptim);
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the LPTIM state */
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State = HAL_LPTIM_STATE_RESET;
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Release Lock */
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_UNLOCK(hlptim);
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
ARM GAS  /tmp/ccWF4qij.s 			page 8


 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Initialize the LPTIM MSP.
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval None
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** __weak void HAL_LPTIM_MspInit(LPTIM_HandleTypeDef *hlptim)
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
  26              		.loc 1 382 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Prevent unused argument(s) compilation warning */
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   UNUSED(hlptim);
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****             the HAL_LPTIM_MspInit could be implemented in the user file
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    */
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
  32              		.loc 1 389 0
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE175:
  38              		.section	.text.HAL_LPTIM_Init,"ax",%progbits
  39              		.align	1
  40              		.global	HAL_LPTIM_Init
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	HAL_LPTIM_Init:
  47              	.LFB173:
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   uint32_t tmpcfgr;
  48              		.loc 1 214 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              	.LVL1:
  53 0000 70B5     		push	{r4, r5, r6, lr}
  54              	.LCFI0:
  55              		.cfi_def_cfa_offset 16
  56              		.cfi_offset 4, -16
  57              		.cfi_offset 5, -12
  58              		.cfi_offset 6, -8
  59              		.cfi_offset 14, -4
  60 0002 041E     		subs	r4, r0, #0
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
  61              		.loc 1 218 0
  62 0004 4CD0     		beq	.L13
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
  63              		.loc 1 243 0
  64 0006 3623     		movs	r3, #54
  65 0008 C35C     		ldrb	r3, [r0, r3]
  66 000a 002B     		cmp	r3, #0
  67 000c 3DD0     		beq	.L14
ARM GAS  /tmp/ccWF4qij.s 			page 9


  68              	.LVL2:
  69              	.L4:
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
  70              		.loc 1 266 0
  71 000e 3623     		movs	r3, #54
  72 0010 0222     		movs	r2, #2
  73 0012 E254     		strb	r2, [r4, r3]
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
  74              		.loc 1 269 0
  75 0014 2568     		ldr	r5, [r4]
  76 0016 EB68     		ldr	r3, [r5, #12]
  77              	.LVL3:
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
  78              		.loc 1 271 0
  79 0018 6068     		ldr	r0, [r4, #4]
  80 001a 0128     		cmp	r0, #1
  81 001c 04D0     		beq	.L5
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
  82              		.loc 1 271 0 is_stmt 0 discriminator 1
  83 001e 8022     		movs	r2, #128
  84 0020 1204     		lsls	r2, r2, #16
  85 0022 A16A     		ldr	r1, [r4, #40]
  86 0024 9142     		cmp	r1, r2
  87 0026 01D1     		bne	.L6
  88              	.L5:
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
  89              		.loc 1 273 0 is_stmt 1
  90 0028 1E22     		movs	r2, #30
  91 002a 9343     		bics	r3, r2
  92              	.LVL4:
  93              	.L6:
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
  94              		.loc 1 275 0
  95 002c 6169     		ldr	r1, [r4, #20]
  96 002e 1D4A     		ldr	r2, .L16
  97 0030 9142     		cmp	r1, r2
  98 0032 01D0     		beq	.L7
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
  99              		.loc 1 277 0
 100 0034 1C4A     		ldr	r2, .L16+4
 101 0036 1340     		ands	r3, r2
 102              	.LVL5:
 103              	.L7:
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                           LPTIM_CFGR_WAVPOL | LPTIM_CFGR_PRESC | LPTIM_CFGR_COUNTMODE ));
 104              		.loc 1 281 0
 105 0038 1C4A     		ldr	r2, .L16+8
 106 003a 1A40     		ands	r2, r3
 107              	.LVL6:
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               hlptim->Init.Clock.Prescaler |
 108              		.loc 1 285 0
 109 003c A368     		ldr	r3, [r4, #8]
 110 003e 0343     		orrs	r3, r0
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               hlptim->Init.OutputPolarity  |
 111              		.loc 1 286 0
 112 0040 266A     		ldr	r6, [r4, #32]
 113 0042 3343     		orrs	r3, r6
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               hlptim->Init.UpdateMode      |
ARM GAS  /tmp/ccWF4qij.s 			page 10


 114              		.loc 1 287 0
 115 0044 666A     		ldr	r6, [r4, #36]
 116 0046 3343     		orrs	r3, r6
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 117              		.loc 1 289 0
 118 0048 A66A     		ldr	r6, [r4, #40]
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               hlptim->Init.CounterSource);
 119              		.loc 1 288 0
 120 004a 3343     		orrs	r3, r6
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****               hlptim->Init.Clock.Prescaler |
 121              		.loc 1 285 0
 122 004c 1343     		orrs	r3, r2
 123              	.LVL7:
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 124              		.loc 1 291 0
 125 004e 0128     		cmp	r0, #1
 126 0050 03D0     		beq	.L8
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 127              		.loc 1 291 0 is_stmt 0 discriminator 1
 128 0052 8022     		movs	r2, #128
 129 0054 1204     		lsls	r2, r2, #16
 130 0056 9642     		cmp	r6, r2
 131 0058 03D1     		bne	.L9
 132              	.L8:
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                 hlptim->Init.UltraLowPowerClock.SampleTime);
 133              		.loc 1 293 0 is_stmt 1
 134 005a E268     		ldr	r2, [r4, #12]
 135 005c 2069     		ldr	r0, [r4, #16]
 136 005e 0243     		orrs	r2, r0
 137 0060 1343     		orrs	r3, r2
 138              	.LVL8:
 139              	.L9:
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 140              		.loc 1 297 0
 141 0062 104A     		ldr	r2, .L16
 142 0064 9142     		cmp	r1, r2
 143 0066 04D0     		beq	.L10
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                 hlptim->Init.Trigger.ActiveEdge |
 144              		.loc 1 300 0
 145 0068 A269     		ldr	r2, [r4, #24]
 146 006a 1143     		orrs	r1, r2
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                 hlptim->Init.Trigger.SampleTime);
 147              		.loc 1 301 0
 148 006c E269     		ldr	r2, [r4, #28]
 149 006e 1143     		orrs	r1, r2
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                 hlptim->Init.Trigger.ActiveEdge |
 150              		.loc 1 300 0
 151 0070 0B43     		orrs	r3, r1
 152              	.LVL9:
 153              	.L10:
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 154              		.loc 1 306 0
 155 0072 EB60     		str	r3, [r5, #12]
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 156              		.loc 1 309 0
 157 0074 2368     		ldr	r3, [r4]
 158              	.LVL10:
ARM GAS  /tmp/ccWF4qij.s 			page 11


 159 0076 0E4A     		ldr	r2, .L16+12
 160 0078 9342     		cmp	r3, r2
 161 007a 0CD0     		beq	.L15
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 162              		.loc 1 324 0
 163 007c E26A     		ldr	r2, [r4, #44]
 164 007e 5A62     		str	r2, [r3, #36]
 165              	.LVL11:
 166              	.L12:
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 167              		.loc 1 328 0
 168 0080 3623     		movs	r3, #54
 169 0082 0122     		movs	r2, #1
 170 0084 E254     		strb	r2, [r4, r3]
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 171              		.loc 1 331 0
 172 0086 0020     		movs	r0, #0
 173              	.L3:
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 174              		.loc 1 332 0
 175              		@ sp needed
 176              	.LVL12:
 177 0088 70BD     		pop	{r4, r5, r6, pc}
 178              	.LVL13:
 179              	.L14:
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 180              		.loc 1 246 0
 181 008a 3533     		adds	r3, r3, #53
 182 008c 0022     		movs	r2, #0
 183 008e C254     		strb	r2, [r0, r3]
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
 184              		.loc 1 261 0
 185 0090 FFF7FEFF 		bl	HAL_LPTIM_MspInit
 186              	.LVL14:
 187 0094 BBE7     		b	.L4
 188              	.LVL15:
 189              	.L15:
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 190              		.loc 1 316 0
 191 0096 E26A     		ldr	r2, [r4, #44]
 192 0098 216B     		ldr	r1, [r4, #48]
 193 009a 0A43     		orrs	r2, r1
 194 009c 5A62     		str	r2, [r3, #36]
 195              	.LVL16:
 196 009e EFE7     		b	.L12
 197              	.LVL17:
 198              	.L13:
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 199              		.loc 1 220 0
 200 00a0 0120     		movs	r0, #1
 201              	.LVL18:
 202 00a2 F1E7     		b	.L3
 203              	.L17:
 204              		.align	2
 205              	.L16:
 206 00a4 FFFF0000 		.word	65535
 207 00a8 3F1FFFFF 		.word	-57537
ARM GAS  /tmp/ccWF4qij.s 			page 12


 208 00ac F8F119FF 		.word	-15076872
 209 00b0 007C0040 		.word	1073773568
 210              		.cfi_endproc
 211              	.LFE173:
 213              		.section	.text.HAL_LPTIM_MspDeInit,"ax",%progbits
 214              		.align	1
 215              		.weak	HAL_LPTIM_MspDeInit
 216              		.syntax unified
 217              		.code	16
 218              		.thumb_func
 219              		.fpu softvfp
 221              	HAL_LPTIM_MspDeInit:
 222              	.LFB176:
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  DeInitialize LPTIM MSP.
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval None
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** __weak void HAL_LPTIM_MspDeInit(LPTIM_HandleTypeDef *hlptim)
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 223              		.loc 1 397 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LVL19:
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Prevent unused argument(s) compilation warning */
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   UNUSED(hlptim);
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****             the HAL_LPTIM_MspDeInit could be implemented in the user file
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    */
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 229              		.loc 1 404 0
 230              		@ sp needed
 231 0000 7047     		bx	lr
 232              		.cfi_endproc
 233              	.LFE176:
 235              		.section	.text.HAL_LPTIM_DeInit,"ax",%progbits
 236              		.align	1
 237              		.global	HAL_LPTIM_DeInit
 238              		.syntax unified
 239              		.code	16
 240              		.thumb_func
 241              		.fpu softvfp
 243              	HAL_LPTIM_DeInit:
 244              	.LFB174:
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the LPTIM handle allocation */
 245              		.loc 1 340 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              	.LVL20:
 250 0000 70B5     		push	{r4, r5, r6, lr}
 251              	.LCFI1:
 252              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccWF4qij.s 			page 13


 253              		.cfi_offset 4, -16
 254              		.cfi_offset 5, -12
 255              		.cfi_offset 6, -8
 256              		.cfi_offset 14, -4
 257 0002 041E     		subs	r4, r0, #0
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 258              		.loc 1 342 0
 259 0004 0FD0     		beq	.L21
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 260              		.loc 1 348 0
 261 0006 3625     		movs	r5, #54
 262 0008 0223     		movs	r3, #2
 263 000a 4355     		strb	r3, [r0, r5]
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 264              		.loc 1 351 0
 265 000c 0268     		ldr	r2, [r0]
 266 000e 1369     		ldr	r3, [r2, #16]
 267 0010 0121     		movs	r1, #1
 268 0012 8B43     		bics	r3, r1
 269 0014 1361     		str	r3, [r2, #16]
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
 270              		.loc 1 363 0
 271 0016 FFF7FEFF 		bl	HAL_LPTIM_MspDeInit
 272              	.LVL21:
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 273              		.loc 1 367 0
 274 001a 0023     		movs	r3, #0
 275 001c 6355     		strb	r3, [r4, r5]
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 276              		.loc 1 370 0
 277 001e 3522     		movs	r2, #53
 278 0020 A354     		strb	r3, [r4, r2]
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 279              		.loc 1 373 0
 280 0022 0020     		movs	r0, #0
 281              	.L20:
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 282              		.loc 1 374 0
 283              		@ sp needed
 284              	.LVL22:
 285 0024 70BD     		pop	{r4, r5, r6, pc}
 286              	.LVL23:
 287              	.L21:
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 288              		.loc 1 344 0
 289 0026 0120     		movs	r0, #1
 290              	.LVL24:
 291 0028 FCE7     		b	.L20
 292              		.cfi_endproc
 293              	.LFE174:
 295              		.section	.text.HAL_LPTIM_PWM_Start,"ax",%progbits
 296              		.align	1
 297              		.global	HAL_LPTIM_PWM_Start
 298              		.syntax unified
 299              		.code	16
 300              		.thumb_func
 301              		.fpu softvfp
ARM GAS  /tmp/ccWF4qij.s 			page 14


 303              	HAL_LPTIM_PWM_Start:
 304              	.LFB177:
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @}
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /** @defgroup LPTIM_Exported_Functions_Group2 LPTIM Start-Stop operation functions
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  *  @brief   Start-Stop operation functions. 
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  *
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** @verbatim   
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ==============================================================================
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                 ##### LPTIM Start Stop operation functions #####
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ==============================================================================  
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     [..]  This section provides functions allowing to:
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Start the PWM mode.
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Stop the PWM mode.
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Start the One pulse mode.
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Stop the One pulse mode.
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Start the Set once mode.
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Stop the Set once mode.
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Start the Encoder mode.
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Stop the Encoder mode.
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Start the Timeout mode.
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Stop the Timeout mode.      
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Start the Counter mode.
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Stop the Counter mode.
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** @endverbatim
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @{
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Start the LPTIM PWM generation.
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Period Specifies the Autoreload value.
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Pulse Specifies the compare value.
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_PWM_Start(LPTIM_HandleTypeDef *hlptim, uint32_t Period, uint32_t Pulse)
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 305              		.loc 1 446 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              	.LVL25:
 310 0000 70B5     		push	{r4, r5, r6, lr}
 311              	.LCFI2:
 312              		.cfi_def_cfa_offset 16
 313              		.cfi_offset 4, -16
 314              		.cfi_offset 5, -12
 315              		.cfi_offset 6, -8
 316              		.cfi_offset 14, -4
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
ARM GAS  /tmp/ccWF4qij.s 			page 15


 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PERIOD(Period));
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PULSE(Pulse));
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 317              		.loc 1 453 0
 318 0002 3624     		movs	r4, #54
 319 0004 0223     		movs	r3, #2
 320 0006 0355     		strb	r3, [r0, r4]
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Reset WAVE bit to set PWM mode */
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR &= ~LPTIM_CFGR_WAVE;
 321              		.loc 1 456 0
 322 0008 0568     		ldr	r5, [r0]
 323 000a EB68     		ldr	r3, [r5, #12]
 324 000c 094E     		ldr	r6, .L23
 325 000e 3340     		ands	r3, r6
 326 0010 EB60     		str	r3, [r5, #12]
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable the Peripheral */
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE(hlptim);
 327              		.loc 1 459 0
 328 0012 0668     		ldr	r6, [r0]
 329 0014 3369     		ldr	r3, [r6, #16]
 330 0016 0125     		movs	r5, #1
 331 0018 2B43     		orrs	r3, r5
 332 001a 3361     		str	r3, [r6, #16]
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the period value in the autoreload register */
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_AUTORELOAD_SET(hlptim, Period);
 333              		.loc 1 462 0
 334 001c 0368     		ldr	r3, [r0]
 335 001e 9961     		str	r1, [r3, #24]
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the pulse value in the compare register */
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_COMPARE_SET(hlptim, Pulse);
 336              		.loc 1 465 0
 337 0020 0368     		ldr	r3, [r0]
 338 0022 5A61     		str	r2, [r3, #20]
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Start timer in continuous mode */
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_START_CONTINUOUS(hlptim);
 339              		.loc 1 468 0
 340 0024 0268     		ldr	r2, [r0]
 341              	.LVL26:
 342 0026 1369     		ldr	r3, [r2, #16]
 343              	.LVL27:
 344 0028 0421     		movs	r1, #4
 345              	.LVL28:
 346 002a 0B43     		orrs	r3, r1
 347 002c 1361     		str	r3, [r2, #16]
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 348              		.loc 1 471 0
 349 002e 0555     		strb	r5, [r0, r4]
ARM GAS  /tmp/ccWF4qij.s 			page 16


 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 350              		.loc 1 475 0
 351 0030 0020     		movs	r0, #0
 352              	.LVL29:
 353              		@ sp needed
 354 0032 70BD     		pop	{r4, r5, r6, pc}
 355              	.L24:
 356              		.align	2
 357              	.L23:
 358 0034 FFFFEFFF 		.word	-1048577
 359              		.cfi_endproc
 360              	.LFE177:
 362              		.section	.text.HAL_LPTIM_PWM_Stop,"ax",%progbits
 363              		.align	1
 364              		.global	HAL_LPTIM_PWM_Stop
 365              		.syntax unified
 366              		.code	16
 367              		.thumb_func
 368              		.fpu softvfp
 370              	HAL_LPTIM_PWM_Stop:
 371              	.LFB178:
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Stop the LPTIM PWM generation.
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_PWM_Stop(LPTIM_HandleTypeDef *hlptim)
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 372              		.loc 1 483 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              	.LVL30:
 377 0000 10B5     		push	{r4, lr}
 378              	.LCFI3:
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 4, -8
 381              		.cfi_offset 14, -4
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 382              		.loc 1 488 0
 383 0002 3622     		movs	r2, #54
 384 0004 0223     		movs	r3, #2
 385 0006 8354     		strb	r3, [r0, r2]
 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the Peripheral */
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 386              		.loc 1 491 0
 387 0008 0468     		ldr	r4, [r0]
 388 000a 2369     		ldr	r3, [r4, #16]
ARM GAS  /tmp/ccWF4qij.s 			page 17


 389 000c 0121     		movs	r1, #1
 390 000e 8B43     		bics	r3, r1
 391 0010 2361     		str	r3, [r4, #16]
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 392              		.loc 1 494 0
 393 0012 8154     		strb	r1, [r0, r2]
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 394              		.loc 1 498 0
 395 0014 0020     		movs	r0, #0
 396              	.LVL31:
 397              		@ sp needed
 398 0016 10BD     		pop	{r4, pc}
 399              		.cfi_endproc
 400              	.LFE178:
 402              		.section	.text.HAL_LPTIM_PWM_Start_IT,"ax",%progbits
 403              		.align	1
 404              		.global	HAL_LPTIM_PWM_Start_IT
 405              		.syntax unified
 406              		.code	16
 407              		.thumb_func
 408              		.fpu softvfp
 410              	HAL_LPTIM_PWM_Start_IT:
 411              	.LFB179:
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Start the LPTIM PWM generation in interrupt mode.
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Period Specifies the Autoreload value.
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Pulse Specifies the compare value.
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_PWM_Start_IT(LPTIM_HandleTypeDef *hlptim, uint32_t Period, uint32_t Pul
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 412              		.loc 1 510 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              	.LVL32:
 417 0000 70B5     		push	{r4, r5, r6, lr}
 418              	.LCFI4:
 419              		.cfi_def_cfa_offset 16
 420              		.cfi_offset 4, -16
 421              		.cfi_offset 5, -12
 422              		.cfi_offset 6, -8
 423              		.cfi_offset 14, -4
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PERIOD(Period));
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PULSE(Pulse));
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
ARM GAS  /tmp/ccWF4qij.s 			page 18


 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 424              		.loc 1 517 0
 425 0002 0225     		movs	r5, #2
 426 0004 3623     		movs	r3, #54
 427 0006 C554     		strb	r5, [r0, r3]
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Reset WAVE bit to set PWM mode */
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR &= ~LPTIM_CFGR_WAVE;
 428              		.loc 1 520 0
 429 0008 0368     		ldr	r3, [r0]
 430 000a DC68     		ldr	r4, [r3, #12]
 431 000c 184E     		ldr	r6, .L28
 432 000e 3440     		ands	r4, r6
 433 0010 DC60     		str	r4, [r3, #12]
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Autoreload write complete interrupt */
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_ARROK);
 434              		.loc 1 523 0
 435 0012 0368     		ldr	r3, [r0]
 436 0014 9C68     		ldr	r4, [r3, #8]
 437 0016 1026     		movs	r6, #16
 438 0018 3443     		orrs	r4, r6
 439 001a 9C60     		str	r4, [r3, #8]
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Compare write complete interrupt */
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_CMPOK);
 440              		.loc 1 526 0
 441 001c 0368     		ldr	r3, [r0]
 442 001e 9C68     		ldr	r4, [r3, #8]
 443 0020 083E     		subs	r6, r6, #8
 444 0022 3443     		orrs	r4, r6
 445 0024 9C60     		str	r4, [r3, #8]
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Autoreload match interrupt */
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_ARRM);
 446              		.loc 1 529 0
 447 0026 0468     		ldr	r4, [r0]
 448 0028 A368     		ldr	r3, [r4, #8]
 449 002a 2B43     		orrs	r3, r5
 450 002c A360     		str	r3, [r4, #8]
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Compare match interrupt */
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_CMPM);
 451              		.loc 1 532 0
 452 002e 0468     		ldr	r4, [r0]
 453 0030 A368     		ldr	r3, [r4, #8]
 454 0032 013D     		subs	r5, r5, #1
 455 0034 2B43     		orrs	r3, r5
 456 0036 A360     		str	r3, [r4, #8]
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* If external trigger source is used, then enable external trigger interrupt */
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if ((hlptim->Init.Trigger.Source) !=  LPTIM_TRIGSOURCE_SOFTWARE)
 457              		.loc 1 535 0
 458 0038 0E4B     		ldr	r3, .L28+4
 459 003a 4469     		ldr	r4, [r0, #20]
 460 003c 9C42     		cmp	r4, r3
ARM GAS  /tmp/ccWF4qij.s 			page 19


 461 003e 04D0     		beq	.L27
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Enable external trigger interrupt */
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_EXTTRIG);
 462              		.loc 1 538 0
 463 0040 0468     		ldr	r4, [r0]
 464 0042 A368     		ldr	r3, [r4, #8]
 465 0044 0335     		adds	r5, r5, #3
 466 0046 2B43     		orrs	r3, r5
 467 0048 A360     		str	r3, [r4, #8]
 468              	.L27:
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }  
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable the Peripheral */
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE(hlptim);
 469              		.loc 1 542 0
 470 004a 0568     		ldr	r5, [r0]
 471 004c 2B69     		ldr	r3, [r5, #16]
 472 004e 0124     		movs	r4, #1
 473 0050 2343     		orrs	r3, r4
 474 0052 2B61     		str	r3, [r5, #16]
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the period value in the autoreload register */
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_AUTORELOAD_SET(hlptim, Period);
 475              		.loc 1 545 0
 476 0054 0368     		ldr	r3, [r0]
 477 0056 9961     		str	r1, [r3, #24]
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the pulse value in the compare register */
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_COMPARE_SET(hlptim, Pulse);
 478              		.loc 1 548 0
 479 0058 0368     		ldr	r3, [r0]
 480 005a 5A61     		str	r2, [r3, #20]
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Start timer in continuous mode */
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_START_CONTINUOUS(hlptim);
 481              		.loc 1 551 0
 482 005c 0268     		ldr	r2, [r0]
 483              	.LVL33:
 484 005e 1369     		ldr	r3, [r2, #16]
 485              	.LVL34:
 486 0060 0421     		movs	r1, #4
 487              	.LVL35:
 488 0062 0B43     		orrs	r3, r1
 489 0064 1361     		str	r3, [r2, #16]
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 490              		.loc 1 554 0
 491 0066 3623     		movs	r3, #54
 492 0068 C454     		strb	r4, [r0, r3]
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 493              		.loc 1 558 0
 494 006a 0020     		movs	r0, #0
ARM GAS  /tmp/ccWF4qij.s 			page 20


 495              	.LVL36:
 496              		@ sp needed
 497 006c 70BD     		pop	{r4, r5, r6, pc}
 498              	.L29:
 499 006e C046     		.align	2
 500              	.L28:
 501 0070 FFFFEFFF 		.word	-1048577
 502 0074 FFFF0000 		.word	65535
 503              		.cfi_endproc
 504              	.LFE179:
 506              		.section	.text.HAL_LPTIM_PWM_Stop_IT,"ax",%progbits
 507              		.align	1
 508              		.global	HAL_LPTIM_PWM_Stop_IT
 509              		.syntax unified
 510              		.code	16
 511              		.thumb_func
 512              		.fpu softvfp
 514              	HAL_LPTIM_PWM_Stop_IT:
 515              	.LFB180:
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Stop the LPTIM PWM generation in interrupt mode.
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_PWM_Stop_IT(LPTIM_HandleTypeDef *hlptim)
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 516              		.loc 1 566 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              	.LVL37:
 521 0000 30B5     		push	{r4, r5, lr}
 522              	.LCFI5:
 523              		.cfi_def_cfa_offset 12
 524              		.cfi_offset 4, -12
 525              		.cfi_offset 5, -8
 526              		.cfi_offset 14, -4
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 527              		.loc 1 571 0
 528 0002 0224     		movs	r4, #2
 529 0004 3623     		movs	r3, #54
 530 0006 C454     		strb	r4, [r0, r3]
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the Peripheral */
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 531              		.loc 1 574 0
 532 0008 0268     		ldr	r2, [r0]
 533 000a 1369     		ldr	r3, [r2, #16]
 534 000c 0121     		movs	r1, #1
 535 000e 8B43     		bics	r3, r1
 536 0010 1361     		str	r3, [r2, #16]
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
ARM GAS  /tmp/ccWF4qij.s 			page 21


 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Disable Autoreload write complete interrupt */
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_ARROK);
 537              		.loc 1 577 0
 538 0012 0268     		ldr	r2, [r0]
 539 0014 9368     		ldr	r3, [r2, #8]
 540 0016 1025     		movs	r5, #16
 541 0018 AB43     		bics	r3, r5
 542 001a 9360     		str	r3, [r2, #8]
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Compare write complete interrupt */
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_CMPOK);
 543              		.loc 1 580 0
 544 001c 0268     		ldr	r2, [r0]
 545 001e 9368     		ldr	r3, [r2, #8]
 546 0020 083D     		subs	r5, r5, #8
 547 0022 AB43     		bics	r3, r5
 548 0024 9360     		str	r3, [r2, #8]
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Autoreload match interrupt */
 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_ARRM);
 549              		.loc 1 583 0
 550 0026 0268     		ldr	r2, [r0]
 551 0028 9368     		ldr	r3, [r2, #8]
 552 002a A343     		bics	r3, r4
 553 002c 9360     		str	r3, [r2, #8]
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Compare match interrupt */
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_CMPM);
 554              		.loc 1 586 0
 555 002e 0268     		ldr	r2, [r0]
 556 0030 9368     		ldr	r3, [r2, #8]
 557 0032 8B43     		bics	r3, r1
 558 0034 9360     		str	r3, [r2, #8]
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* If external trigger source is used, then disable external trigger interrupt */
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if ((hlptim->Init.Trigger.Source) !=  LPTIM_TRIGSOURCE_SOFTWARE)
 559              		.loc 1 589 0
 560 0036 074B     		ldr	r3, .L32
 561 0038 4269     		ldr	r2, [r0, #20]
 562 003a 9A42     		cmp	r2, r3
 563 003c 04D0     		beq	.L31
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Disable external trigger interrupt */
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_EXTTRIG);
 564              		.loc 1 592 0
 565 003e 0268     		ldr	r2, [r0]
 566 0040 9368     		ldr	r3, [r2, #8]
 567 0042 0331     		adds	r1, r1, #3
 568 0044 8B43     		bics	r3, r1
 569 0046 9360     		str	r3, [r2, #8]
 570              	.L31:
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }  
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 571              		.loc 1 596 0
 572 0048 3623     		movs	r3, #54
ARM GAS  /tmp/ccWF4qij.s 			page 22


 573 004a 0122     		movs	r2, #1
 574 004c C254     		strb	r2, [r0, r3]
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 575              		.loc 1 600 0
 576 004e 0020     		movs	r0, #0
 577              	.LVL38:
 578              		@ sp needed
 579 0050 30BD     		pop	{r4, r5, pc}
 580              	.L33:
 581 0052 C046     		.align	2
 582              	.L32:
 583 0054 FFFF0000 		.word	65535
 584              		.cfi_endproc
 585              	.LFE180:
 587              		.section	.text.HAL_LPTIM_OnePulse_Start,"ax",%progbits
 588              		.align	1
 589              		.global	HAL_LPTIM_OnePulse_Start
 590              		.syntax unified
 591              		.code	16
 592              		.thumb_func
 593              		.fpu softvfp
 595              	HAL_LPTIM_OnePulse_Start:
 596              	.LFB181:
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Start the LPTIM One pulse generation.
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Period Specifies the Autoreload value.
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Pulse Specifies the compare value.
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_OnePulse_Start(LPTIM_HandleTypeDef *hlptim, uint32_t Period, uint32_t P
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 597              		.loc 1 612 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              	.LVL39:
 602 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 603              	.LCFI6:
 604              		.cfi_def_cfa_offset 20
 605              		.cfi_offset 4, -20
 606              		.cfi_offset 5, -16
 607              		.cfi_offset 6, -12
 608              		.cfi_offset 7, -8
 609              		.cfi_offset 14, -4
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PERIOD(Period));
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PULSE(Pulse));
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
ARM GAS  /tmp/ccWF4qij.s 			page 23


 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 610              		.loc 1 619 0
 611 0002 3625     		movs	r5, #54
 612 0004 0227     		movs	r7, #2
 613 0006 4755     		strb	r7, [r0, r5]
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Reset WAVE bit to set one pulse mode */
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR &= ~LPTIM_CFGR_WAVE;
 614              		.loc 1 622 0
 615 0008 0368     		ldr	r3, [r0]
 616 000a DC68     		ldr	r4, [r3, #12]
 617 000c 094E     		ldr	r6, .L35
 618 000e 3440     		ands	r4, r6
 619 0010 DC60     		str	r4, [r3, #12]
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable the Peripheral */
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE(hlptim);
 620              		.loc 1 625 0
 621 0012 0368     		ldr	r3, [r0]
 622 0014 1C69     		ldr	r4, [r3, #16]
 623 0016 0126     		movs	r6, #1
 624 0018 3443     		orrs	r4, r6
 625 001a 1C61     		str	r4, [r3, #16]
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the period value in the autoreload register */
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_AUTORELOAD_SET(hlptim, Period);
 626              		.loc 1 628 0
 627 001c 0368     		ldr	r3, [r0]
 628 001e 9961     		str	r1, [r3, #24]
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the pulse value in the compare register */
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_COMPARE_SET(hlptim, Pulse);
 629              		.loc 1 631 0
 630 0020 0368     		ldr	r3, [r0]
 631 0022 5A61     		str	r2, [r3, #20]
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Start timer in single (one shot) mode */
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_START_SINGLE(hlptim);
 632              		.loc 1 634 0
 633 0024 0268     		ldr	r2, [r0]
 634              	.LVL40:
 635 0026 1369     		ldr	r3, [r2, #16]
 636              	.LVL41:
 637 0028 3B43     		orrs	r3, r7
 638 002a 1361     		str	r3, [r2, #16]
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 639              		.loc 1 637 0
 640 002c 4655     		strb	r6, [r0, r5]
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 641              		.loc 1 641 0
 642 002e 0020     		movs	r0, #0
 643              	.LVL42:
ARM GAS  /tmp/ccWF4qij.s 			page 24


 644              		@ sp needed
 645 0030 F0BD     		pop	{r4, r5, r6, r7, pc}
 646              	.L36:
 647 0032 C046     		.align	2
 648              	.L35:
 649 0034 FFFFEFFF 		.word	-1048577
 650              		.cfi_endproc
 651              	.LFE181:
 653              		.section	.text.HAL_LPTIM_OnePulse_Stop,"ax",%progbits
 654              		.align	1
 655              		.global	HAL_LPTIM_OnePulse_Stop
 656              		.syntax unified
 657              		.code	16
 658              		.thumb_func
 659              		.fpu softvfp
 661              	HAL_LPTIM_OnePulse_Stop:
 662              	.LFB182:
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Stop the LPTIM One pulse generation.
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_OnePulse_Stop(LPTIM_HandleTypeDef *hlptim)
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 663              		.loc 1 649 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              	.LVL43:
 668 0000 10B5     		push	{r4, lr}
 669              	.LCFI7:
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 4, -8
 672              		.cfi_offset 14, -4
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 673              		.loc 1 654 0
 674 0002 3622     		movs	r2, #54
 675 0004 0223     		movs	r3, #2
 676 0006 8354     		strb	r3, [r0, r2]
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the Peripheral */
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 677              		.loc 1 657 0
 678 0008 0468     		ldr	r4, [r0]
 679 000a 2369     		ldr	r3, [r4, #16]
 680 000c 0121     		movs	r1, #1
 681 000e 8B43     		bics	r3, r1
 682 0010 2361     		str	r3, [r4, #16]
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 683              		.loc 1 660 0
ARM GAS  /tmp/ccWF4qij.s 			page 25


 684 0012 8154     		strb	r1, [r0, r2]
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 685              		.loc 1 664 0
 686 0014 0020     		movs	r0, #0
 687              	.LVL44:
 688              		@ sp needed
 689 0016 10BD     		pop	{r4, pc}
 690              		.cfi_endproc
 691              	.LFE182:
 693              		.section	.text.HAL_LPTIM_OnePulse_Start_IT,"ax",%progbits
 694              		.align	1
 695              		.global	HAL_LPTIM_OnePulse_Start_IT
 696              		.syntax unified
 697              		.code	16
 698              		.thumb_func
 699              		.fpu softvfp
 701              	HAL_LPTIM_OnePulse_Start_IT:
 702              	.LFB183:
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Start the LPTIM One pulse generation in interrupt mode.
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Period Specifies the Autoreload value.
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Pulse Specifies the compare value.
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_OnePulse_Start_IT(LPTIM_HandleTypeDef *hlptim, uint32_t Period, uint32_
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 703              		.loc 1 676 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              	.LVL45:
 708 0000 70B5     		push	{r4, r5, r6, lr}
 709              	.LCFI8:
 710              		.cfi_def_cfa_offset 16
 711              		.cfi_offset 4, -16
 712              		.cfi_offset 5, -12
 713              		.cfi_offset 6, -8
 714              		.cfi_offset 14, -4
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PERIOD(Period));
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PULSE(Pulse));
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 715              		.loc 1 683 0
 716 0002 0225     		movs	r5, #2
 717 0004 3623     		movs	r3, #54
 718 0006 C554     		strb	r5, [r0, r3]
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
ARM GAS  /tmp/ccWF4qij.s 			page 26


 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Reset WAVE bit to set one pulse mode */
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR &= ~LPTIM_CFGR_WAVE;
 719              		.loc 1 686 0
 720 0008 0368     		ldr	r3, [r0]
 721 000a DC68     		ldr	r4, [r3, #12]
 722 000c 184E     		ldr	r6, .L40
 723 000e 3440     		ands	r4, r6
 724 0010 DC60     		str	r4, [r3, #12]
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Autoreload write complete interrupt */
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_ARROK);
 725              		.loc 1 689 0
 726 0012 0368     		ldr	r3, [r0]
 727 0014 9C68     		ldr	r4, [r3, #8]
 728 0016 1026     		movs	r6, #16
 729 0018 3443     		orrs	r4, r6
 730 001a 9C60     		str	r4, [r3, #8]
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Compare write complete interrupt */
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_CMPOK);
 731              		.loc 1 692 0
 732 001c 0368     		ldr	r3, [r0]
 733 001e 9C68     		ldr	r4, [r3, #8]
 734 0020 083E     		subs	r6, r6, #8
 735 0022 3443     		orrs	r4, r6
 736 0024 9C60     		str	r4, [r3, #8]
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Autoreload match interrupt */
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_ARRM);
 737              		.loc 1 695 0
 738 0026 0468     		ldr	r4, [r0]
 739 0028 A368     		ldr	r3, [r4, #8]
 740 002a 2B43     		orrs	r3, r5
 741 002c A360     		str	r3, [r4, #8]
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Compare match interrupt */
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_CMPM);
 742              		.loc 1 698 0
 743 002e 0468     		ldr	r4, [r0]
 744 0030 A368     		ldr	r3, [r4, #8]
 745 0032 013D     		subs	r5, r5, #1
 746 0034 2B43     		orrs	r3, r5
 747 0036 A360     		str	r3, [r4, #8]
 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* If external trigger source is used, then enable external trigger interrupt */
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if ((hlptim->Init.Trigger.Source) !=  LPTIM_TRIGSOURCE_SOFTWARE)
 748              		.loc 1 701 0
 749 0038 0E4B     		ldr	r3, .L40+4
 750 003a 4469     		ldr	r4, [r0, #20]
 751 003c 9C42     		cmp	r4, r3
 752 003e 04D0     		beq	.L39
 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Enable external trigger interrupt */
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_EXTTRIG);
 753              		.loc 1 704 0
 754 0040 0468     		ldr	r4, [r0]
 755 0042 A368     		ldr	r3, [r4, #8]
ARM GAS  /tmp/ccWF4qij.s 			page 27


 756 0044 0335     		adds	r5, r5, #3
 757 0046 2B43     		orrs	r3, r5
 758 0048 A360     		str	r3, [r4, #8]
 759              	.L39:
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable the Peripheral */
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE(hlptim);
 760              		.loc 1 708 0
 761 004a 0568     		ldr	r5, [r0]
 762 004c 2B69     		ldr	r3, [r5, #16]
 763 004e 0124     		movs	r4, #1
 764 0050 2343     		orrs	r3, r4
 765 0052 2B61     		str	r3, [r5, #16]
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the period value in the autoreload register */
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_AUTORELOAD_SET(hlptim, Period);
 766              		.loc 1 711 0
 767 0054 0368     		ldr	r3, [r0]
 768 0056 9961     		str	r1, [r3, #24]
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the pulse value in the compare register */
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_COMPARE_SET(hlptim, Pulse);
 769              		.loc 1 714 0
 770 0058 0368     		ldr	r3, [r0]
 771 005a 5A61     		str	r2, [r3, #20]
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Start timer in single (one shot) mode */
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_START_SINGLE(hlptim);
 772              		.loc 1 717 0
 773 005c 0268     		ldr	r2, [r0]
 774              	.LVL46:
 775 005e 1369     		ldr	r3, [r2, #16]
 776              	.LVL47:
 777 0060 0221     		movs	r1, #2
 778              	.LVL48:
 779 0062 0B43     		orrs	r3, r1
 780 0064 1361     		str	r3, [r2, #16]
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 781              		.loc 1 720 0
 782 0066 3623     		movs	r3, #54
 783 0068 C454     		strb	r4, [r0, r3]
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 784              		.loc 1 724 0
 785 006a 0020     		movs	r0, #0
 786              	.LVL49:
 787              		@ sp needed
 788 006c 70BD     		pop	{r4, r5, r6, pc}
 789              	.L41:
 790 006e C046     		.align	2
 791              	.L40:
 792 0070 FFFFEFFF 		.word	-1048577
ARM GAS  /tmp/ccWF4qij.s 			page 28


 793 0074 FFFF0000 		.word	65535
 794              		.cfi_endproc
 795              	.LFE183:
 797              		.section	.text.HAL_LPTIM_OnePulse_Stop_IT,"ax",%progbits
 798              		.align	1
 799              		.global	HAL_LPTIM_OnePulse_Stop_IT
 800              		.syntax unified
 801              		.code	16
 802              		.thumb_func
 803              		.fpu softvfp
 805              	HAL_LPTIM_OnePulse_Stop_IT:
 806              	.LFB184:
 725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Stop the LPTIM One pulse generation in interrupt mode.
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_OnePulse_Stop_IT(LPTIM_HandleTypeDef *hlptim)
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 807              		.loc 1 732 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              	.LVL50:
 812 0000 30B5     		push	{r4, r5, lr}
 813              	.LCFI9:
 814              		.cfi_def_cfa_offset 12
 815              		.cfi_offset 4, -12
 816              		.cfi_offset 5, -8
 817              		.cfi_offset 14, -4
 733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
 736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
 737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 818              		.loc 1 737 0
 819 0002 0224     		movs	r4, #2
 820 0004 3623     		movs	r3, #54
 821 0006 C454     		strb	r4, [r0, r3]
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the Peripheral */
 740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 822              		.loc 1 740 0
 823 0008 0268     		ldr	r2, [r0]
 824 000a 1369     		ldr	r3, [r2, #16]
 825 000c 0121     		movs	r1, #1
 826 000e 8B43     		bics	r3, r1
 827 0010 1361     		str	r3, [r2, #16]
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Autoreload write complete interrupt */
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_ARROK);
 828              		.loc 1 743 0
 829 0012 0268     		ldr	r2, [r0]
 830 0014 9368     		ldr	r3, [r2, #8]
 831 0016 1025     		movs	r5, #16
 832 0018 AB43     		bics	r3, r5
ARM GAS  /tmp/ccTSedjh.s 			page 29


 833 001a 9360     		str	r3, [r2, #8]
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Compare write complete interrupt */
 746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_CMPOK);
 834              		.loc 1 746 0
 835 001c 0268     		ldr	r2, [r0]
 836 001e 9368     		ldr	r3, [r2, #8]
 837 0020 083D     		subs	r5, r5, #8
 838 0022 AB43     		bics	r3, r5
 839 0024 9360     		str	r3, [r2, #8]
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Autoreload match interrupt */
 749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_ARRM);
 840              		.loc 1 749 0
 841 0026 0268     		ldr	r2, [r0]
 842 0028 9368     		ldr	r3, [r2, #8]
 843 002a A343     		bics	r3, r4
 844 002c 9360     		str	r3, [r2, #8]
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Compare match interrupt */
 752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_CMPM);
 845              		.loc 1 752 0
 846 002e 0268     		ldr	r2, [r0]
 847 0030 9368     		ldr	r3, [r2, #8]
 848 0032 8B43     		bics	r3, r1
 849 0034 9360     		str	r3, [r2, #8]
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* If external trigger source is used, then disable external trigger interrupt */
 755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if ((hlptim->Init.Trigger.Source) !=  LPTIM_TRIGSOURCE_SOFTWARE)
 850              		.loc 1 755 0
 851 0036 074B     		ldr	r3, .L44
 852 0038 4269     		ldr	r2, [r0, #20]
 853 003a 9A42     		cmp	r2, r3
 854 003c 04D0     		beq	.L43
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Disable external trigger interrupt */
 758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_EXTTRIG);
 855              		.loc 1 758 0
 856 003e 0268     		ldr	r2, [r0]
 857 0040 9368     		ldr	r3, [r2, #8]
 858 0042 0331     		adds	r1, r1, #3
 859 0044 8B43     		bics	r3, r1
 860 0046 9360     		str	r3, [r2, #8]
 861              	.L43:
 759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
 762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 862              		.loc 1 762 0
 863 0048 3623     		movs	r3, #54
 864 004a 0122     		movs	r2, #1
 865 004c C254     		strb	r2, [r0, r3]
 763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 866              		.loc 1 766 0
ARM GAS  /tmp/ccTSedjh.s 			page 30


 867 004e 0020     		movs	r0, #0
 868              	.LVL51:
 869              		@ sp needed
 870 0050 30BD     		pop	{r4, r5, pc}
 871              	.L45:
 872 0052 C046     		.align	2
 873              	.L44:
 874 0054 FFFF0000 		.word	65535
 875              		.cfi_endproc
 876              	.LFE184:
 878              		.section	.text.HAL_LPTIM_SetOnce_Start,"ax",%progbits
 879              		.align	1
 880              		.global	HAL_LPTIM_SetOnce_Start
 881              		.syntax unified
 882              		.code	16
 883              		.thumb_func
 884              		.fpu softvfp
 886              	HAL_LPTIM_SetOnce_Start:
 887              	.LFB185:
 767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Start the LPTIM in Set once mode.
 770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Period Specifies the Autoreload value.
 772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Pulse Specifies the compare value.
 774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
 775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_SetOnce_Start(LPTIM_HandleTypeDef *hlptim, uint32_t Period, uint32_t Pu
 778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 888              		.loc 1 778 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              	.LVL52:
 893 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 894              	.LCFI10:
 895              		.cfi_def_cfa_offset 20
 896              		.cfi_offset 4, -20
 897              		.cfi_offset 5, -16
 898              		.cfi_offset 6, -12
 899              		.cfi_offset 7, -8
 900              		.cfi_offset 14, -4
 779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PERIOD(Period));
 782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PULSE(Pulse));
 783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
 784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 901              		.loc 1 785 0
 902 0002 3625     		movs	r5, #54
 903 0004 0227     		movs	r7, #2
 904 0006 4755     		strb	r7, [r0, r5]
 786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set WAVE bit to enable the set once mode */
ARM GAS  /tmp/ccTSedjh.s 			page 31


 788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR |= LPTIM_CFGR_WAVE;
 905              		.loc 1 788 0
 906 0008 0368     		ldr	r3, [r0]
 907 000a DE68     		ldr	r6, [r3, #12]
 908 000c 8024     		movs	r4, #128
 909 000e 6403     		lsls	r4, r4, #13
 910 0010 3443     		orrs	r4, r6
 911 0012 DC60     		str	r4, [r3, #12]
 789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable the Peripheral */
 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE(hlptim);
 912              		.loc 1 791 0
 913 0014 0368     		ldr	r3, [r0]
 914 0016 1C69     		ldr	r4, [r3, #16]
 915 0018 0126     		movs	r6, #1
 916 001a 3443     		orrs	r4, r6
 917 001c 1C61     		str	r4, [r3, #16]
 792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the period value in the autoreload register */
 794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_AUTORELOAD_SET(hlptim, Period);
 918              		.loc 1 794 0
 919 001e 0368     		ldr	r3, [r0]
 920 0020 9961     		str	r1, [r3, #24]
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the pulse value in the compare register */
 797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_COMPARE_SET(hlptim, Pulse);
 921              		.loc 1 797 0
 922 0022 0368     		ldr	r3, [r0]
 923 0024 5A61     		str	r2, [r3, #20]
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Start timer in single (one shot) mode */
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_START_SINGLE(hlptim);
 924              		.loc 1 800 0
 925 0026 0268     		ldr	r2, [r0]
 926              	.LVL53:
 927 0028 1369     		ldr	r3, [r2, #16]
 928              	.LVL54:
 929 002a 3B43     		orrs	r3, r7
 930 002c 1361     		str	r3, [r2, #16]
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 931              		.loc 1 803 0
 932 002e 4655     		strb	r6, [r0, r5]
 804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 933              		.loc 1 807 0
 934 0030 0020     		movs	r0, #0
 935              	.LVL55:
 936              		@ sp needed
 937 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 938              		.cfi_endproc
 939              	.LFE185:
 941              		.section	.text.HAL_LPTIM_SetOnce_Stop,"ax",%progbits
 942              		.align	1
ARM GAS  /tmp/ccTSedjh.s 			page 32


 943              		.global	HAL_LPTIM_SetOnce_Stop
 944              		.syntax unified
 945              		.code	16
 946              		.thumb_func
 947              		.fpu softvfp
 949              	HAL_LPTIM_SetOnce_Stop:
 950              	.LFB186:
 808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Stop the LPTIM Set once mode.
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_SetOnce_Stop(LPTIM_HandleTypeDef *hlptim)
 815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 951              		.loc 1 815 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              	.LVL56:
 956 0000 10B5     		push	{r4, lr}
 957              	.LCFI11:
 958              		.cfi_def_cfa_offset 8
 959              		.cfi_offset 4, -8
 960              		.cfi_offset 14, -4
 816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
 819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 961              		.loc 1 820 0
 962 0002 3622     		movs	r2, #54
 963 0004 0223     		movs	r3, #2
 964 0006 8354     		strb	r3, [r0, r2]
 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the Peripheral */
 823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 965              		.loc 1 823 0
 966 0008 0468     		ldr	r4, [r0]
 967 000a 2369     		ldr	r3, [r4, #16]
 968 000c 0121     		movs	r1, #1
 969 000e 8B43     		bics	r3, r1
 970 0010 2361     		str	r3, [r4, #16]
 824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
 826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 971              		.loc 1 826 0
 972 0012 8154     		strb	r1, [r0, r2]
 827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 973              		.loc 1 830 0
 974 0014 0020     		movs	r0, #0
 975              	.LVL57:
 976              		@ sp needed
 977 0016 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccTSedjh.s 			page 33


 978              		.cfi_endproc
 979              	.LFE186:
 981              		.section	.text.HAL_LPTIM_SetOnce_Start_IT,"ax",%progbits
 982              		.align	1
 983              		.global	HAL_LPTIM_SetOnce_Start_IT
 984              		.syntax unified
 985              		.code	16
 986              		.thumb_func
 987              		.fpu softvfp
 989              	HAL_LPTIM_SetOnce_Start_IT:
 990              	.LFB187:
 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Start the LPTIM Set once mode in interrupt mode.
 834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Period Specifies the Autoreload value.
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
 837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Pulse Specifies the compare value.
 838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_SetOnce_Start_IT(LPTIM_HandleTypeDef *hlptim, uint32_t Period, uint32_t
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 991              		.loc 1 842 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              	.LVL58:
 996 0000 70B5     		push	{r4, r5, r6, lr}
 997              	.LCFI12:
 998              		.cfi_def_cfa_offset 16
 999              		.cfi_offset 4, -16
 1000              		.cfi_offset 5, -12
 1001              		.cfi_offset 6, -8
 1002              		.cfi_offset 14, -4
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PERIOD(Period));
 846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PULSE(Pulse));
 847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 1003              		.loc 1 849 0
 1004 0002 0225     		movs	r5, #2
 1005 0004 3623     		movs	r3, #54
 1006 0006 C554     		strb	r5, [r0, r3]
 850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set WAVE bit to enable the set once mode */
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR |= LPTIM_CFGR_WAVE;
 1007              		.loc 1 852 0
 1008 0008 0368     		ldr	r3, [r0]
 1009 000a DE68     		ldr	r6, [r3, #12]
 1010 000c 8024     		movs	r4, #128
 1011 000e 6403     		lsls	r4, r4, #13
 1012 0010 3443     		orrs	r4, r6
 1013 0012 DC60     		str	r4, [r3, #12]
 853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
ARM GAS  /tmp/ccTSedjh.s 			page 34


 854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Autoreload write complete interrupt */
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_ARROK);
 1014              		.loc 1 855 0
 1015 0014 0368     		ldr	r3, [r0]
 1016 0016 9C68     		ldr	r4, [r3, #8]
 1017 0018 1026     		movs	r6, #16
 1018 001a 3443     		orrs	r4, r6
 1019 001c 9C60     		str	r4, [r3, #8]
 856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Compare write complete interrupt */
 858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_CMPOK);
 1020              		.loc 1 858 0
 1021 001e 0368     		ldr	r3, [r0]
 1022 0020 9C68     		ldr	r4, [r3, #8]
 1023 0022 083E     		subs	r6, r6, #8
 1024 0024 3443     		orrs	r4, r6
 1025 0026 9C60     		str	r4, [r3, #8]
 859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Autoreload match interrupt */
 861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_ARRM);
 1026              		.loc 1 861 0
 1027 0028 0468     		ldr	r4, [r0]
 1028 002a A368     		ldr	r3, [r4, #8]
 1029 002c 2B43     		orrs	r3, r5
 1030 002e A360     		str	r3, [r4, #8]
 862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Compare match interrupt */
 864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_CMPM);
 1031              		.loc 1 864 0
 1032 0030 0468     		ldr	r4, [r0]
 1033 0032 A368     		ldr	r3, [r4, #8]
 1034 0034 013D     		subs	r5, r5, #1
 1035 0036 2B43     		orrs	r3, r5
 1036 0038 A360     		str	r3, [r4, #8]
 865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* If external trigger source is used, then enable external trigger interrupt */
 867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if ((hlptim->Init.Trigger.Source) !=  LPTIM_TRIGSOURCE_SOFTWARE)
 1037              		.loc 1 867 0
 1038 003a 0D4B     		ldr	r3, .L50
 1039 003c 4469     		ldr	r4, [r0, #20]
 1040 003e 9C42     		cmp	r4, r3
 1041 0040 04D0     		beq	.L49
 868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Enable external trigger interrupt */
 870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_EXTTRIG);
 1042              		.loc 1 870 0
 1043 0042 0468     		ldr	r4, [r0]
 1044 0044 A368     		ldr	r3, [r4, #8]
 1045 0046 0335     		adds	r5, r5, #3
 1046 0048 2B43     		orrs	r3, r5
 1047 004a A360     		str	r3, [r4, #8]
 1048              	.L49:
 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }  
 872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable the Peripheral */
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE(hlptim);
 1049              		.loc 1 874 0
ARM GAS  /tmp/ccTSedjh.s 			page 35


 1050 004c 0568     		ldr	r5, [r0]
 1051 004e 2B69     		ldr	r3, [r5, #16]
 1052 0050 0124     		movs	r4, #1
 1053 0052 2343     		orrs	r3, r4
 1054 0054 2B61     		str	r3, [r5, #16]
 875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the period value in the autoreload register */
 877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_AUTORELOAD_SET(hlptim, Period);
 1055              		.loc 1 877 0
 1056 0056 0368     		ldr	r3, [r0]
 1057 0058 9961     		str	r1, [r3, #24]
 878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the pulse value in the compare register */
 880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_COMPARE_SET(hlptim, Pulse);
 1058              		.loc 1 880 0
 1059 005a 0368     		ldr	r3, [r0]
 1060 005c 5A61     		str	r2, [r3, #20]
 881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Start timer in single (one shot) mode */
 883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_START_SINGLE(hlptim);
 1061              		.loc 1 883 0
 1062 005e 0268     		ldr	r2, [r0]
 1063              	.LVL59:
 1064 0060 1369     		ldr	r3, [r2, #16]
 1065              	.LVL60:
 1066 0062 0221     		movs	r1, #2
 1067              	.LVL61:
 1068 0064 0B43     		orrs	r3, r1
 1069 0066 1361     		str	r3, [r2, #16]
 884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
 886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 1070              		.loc 1 886 0
 1071 0068 3623     		movs	r3, #54
 1072 006a C454     		strb	r4, [r0, r3]
 887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1073              		.loc 1 890 0
 1074 006c 0020     		movs	r0, #0
 1075              	.LVL62:
 1076              		@ sp needed
 1077 006e 70BD     		pop	{r4, r5, r6, pc}
 1078              	.L51:
 1079              		.align	2
 1080              	.L50:
 1081 0070 FFFF0000 		.word	65535
 1082              		.cfi_endproc
 1083              	.LFE187:
 1085              		.section	.text.HAL_LPTIM_SetOnce_Stop_IT,"ax",%progbits
 1086              		.align	1
 1087              		.global	HAL_LPTIM_SetOnce_Stop_IT
 1088              		.syntax unified
 1089              		.code	16
 1090              		.thumb_func
 1091              		.fpu softvfp
ARM GAS  /tmp/ccTSedjh.s 			page 36


 1093              	HAL_LPTIM_SetOnce_Stop_IT:
 1094              	.LFB188:
 891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Stop the LPTIM Set once mode in interrupt mode.
 894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_SetOnce_Stop_IT(LPTIM_HandleTypeDef *hlptim)
 898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1095              		.loc 1 898 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 0
 1098              		@ frame_needed = 0, uses_anonymous_args = 0
 1099              	.LVL63:
 1100 0000 30B5     		push	{r4, r5, lr}
 1101              	.LCFI13:
 1102              		.cfi_def_cfa_offset 12
 1103              		.cfi_offset 4, -12
 1104              		.cfi_offset 5, -8
 1105              		.cfi_offset 14, -4
 899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
 901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
 902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
 903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 1106              		.loc 1 903 0
 1107 0002 0224     		movs	r4, #2
 1108 0004 3623     		movs	r3, #54
 1109 0006 C454     		strb	r4, [r0, r3]
 904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the Peripheral */
 906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 1110              		.loc 1 906 0
 1111 0008 0268     		ldr	r2, [r0]
 1112 000a 1369     		ldr	r3, [r2, #16]
 1113 000c 0121     		movs	r1, #1
 1114 000e 8B43     		bics	r3, r1
 1115 0010 1361     		str	r3, [r2, #16]
 907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Autoreload write complete interrupt */
 909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_ARROK);
 1116              		.loc 1 909 0
 1117 0012 0268     		ldr	r2, [r0]
 1118 0014 9368     		ldr	r3, [r2, #8]
 1119 0016 1025     		movs	r5, #16
 1120 0018 AB43     		bics	r3, r5
 1121 001a 9360     		str	r3, [r2, #8]
 910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Compare write complete interrupt */
 912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_CMPOK);
 1122              		.loc 1 912 0
 1123 001c 0268     		ldr	r2, [r0]
 1124 001e 9368     		ldr	r3, [r2, #8]
 1125 0020 083D     		subs	r5, r5, #8
 1126 0022 AB43     		bics	r3, r5
 1127 0024 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccTSedjh.s 			page 37


 913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Autoreload match interrupt */
 915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_ARRM);
 1128              		.loc 1 915 0
 1129 0026 0268     		ldr	r2, [r0]
 1130 0028 9368     		ldr	r3, [r2, #8]
 1131 002a A343     		bics	r3, r4
 1132 002c 9360     		str	r3, [r2, #8]
 916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Compare match interrupt */
 918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_CMPM);
 1133              		.loc 1 918 0
 1134 002e 0268     		ldr	r2, [r0]
 1135 0030 9368     		ldr	r3, [r2, #8]
 1136 0032 8B43     		bics	r3, r1
 1137 0034 9360     		str	r3, [r2, #8]
 919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* If external trigger source is used, then disable external trigger interrupt */
 921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if ((hlptim->Init.Trigger.Source) !=  LPTIM_TRIGSOURCE_SOFTWARE)
 1138              		.loc 1 921 0
 1139 0036 074B     		ldr	r3, .L54
 1140 0038 4269     		ldr	r2, [r0, #20]
 1141 003a 9A42     		cmp	r2, r3
 1142 003c 04D0     		beq	.L53
 922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Disable external trigger interrupt */
 924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_EXTTRIG);
 1143              		.loc 1 924 0
 1144 003e 0268     		ldr	r2, [r0]
 1145 0040 9368     		ldr	r3, [r2, #8]
 1146 0042 0331     		adds	r1, r1, #3
 1147 0044 8B43     		bics	r3, r1
 1148 0046 9360     		str	r3, [r2, #8]
 1149              	.L53:
 925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   } 
 926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
 928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 1150              		.loc 1 928 0
 1151 0048 3623     		movs	r3, #54
 1152 004a 0122     		movs	r2, #1
 1153 004c C254     		strb	r2, [r0, r3]
 929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1154              		.loc 1 932 0
 1155 004e 0020     		movs	r0, #0
 1156              	.LVL64:
 1157              		@ sp needed
 1158 0050 30BD     		pop	{r4, r5, pc}
 1159              	.L55:
 1160 0052 C046     		.align	2
 1161              	.L54:
 1162 0054 FFFF0000 		.word	65535
 1163              		.cfi_endproc
 1164              	.LFE188:
ARM GAS  /tmp/ccTSedjh.s 			page 38


 1166              		.section	.text.HAL_LPTIM_Encoder_Start,"ax",%progbits
 1167              		.align	1
 1168              		.global	HAL_LPTIM_Encoder_Start
 1169              		.syntax unified
 1170              		.code	16
 1171              		.thumb_func
 1172              		.fpu softvfp
 1174              	HAL_LPTIM_Encoder_Start:
 1175              	.LFB189:
 933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Start the Encoder interface.
 936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Period Specifies the Autoreload value.
 938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
 939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_Encoder_Start(LPTIM_HandleTypeDef *hlptim, uint32_t Period)
 942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1176              		.loc 1 942 0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180              	.LVL65:
 1181 0000 30B5     		push	{r4, r5, lr}
 1182              	.LCFI14:
 1183              		.cfi_def_cfa_offset 12
 1184              		.cfi_offset 4, -12
 1185              		.cfi_offset 5, -8
 1186              		.cfi_offset 14, -4
 943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   uint32_t          tmpcfgr;
 944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_ENCODER_INTERFACE_INSTANCE(hlptim->Instance));
 947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PERIOD(Period));
 948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(hlptim->Init.Clock.Source == LPTIM_CLOCKSOURCE_APBCLOCK_LPOSC);
 949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(hlptim->Init.Clock.Prescaler == LPTIM_PRESCALER_DIV1);
 950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_CLOCK_POLARITY(hlptim->Init.UltraLowPowerClock.Polarity));
 951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Set the LPTIM state */
 953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->State= HAL_LPTIM_STATE_BUSY;
 1187              		.loc 1 953 0
 1188 0002 3622     		movs	r2, #54
 1189 0004 0223     		movs	r3, #2
 1190 0006 8354     		strb	r3, [r0, r2]
 954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Get the LPTIMx CFGR value */
 956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     tmpcfgr = hlptim->Instance->CFGR;
 1191              		.loc 1 956 0
 1192 0008 0468     		ldr	r4, [r0]
 1193 000a E368     		ldr	r3, [r4, #12]
 1194              	.LVL66:
 957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Clear CKPOL bits */
 959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     tmpcfgr &= (uint32_t)(~LPTIM_CFGR_CKPOL);
 1195              		.loc 1 959 0
 1196 000c 0625     		movs	r5, #6
ARM GAS  /tmp/ccTSedjh.s 			page 39


 1197 000e AB43     		bics	r3, r5
 1198              	.LVL67:
 960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Set Input polarity */
 962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     tmpcfgr |=  hlptim->Init.UltraLowPowerClock.Polarity;
 1199              		.loc 1 962 0
 1200 0010 C568     		ldr	r5, [r0, #12]
 1201 0012 2B43     		orrs	r3, r5
 1202              	.LVL68:
 963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Write to LPTIMx CFGR */
 965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->Instance->CFGR = tmpcfgr;
 1203              		.loc 1 965 0
 1204 0014 E360     		str	r3, [r4, #12]
 966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Set ENC bit to enable the encoder interface */
 968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->Instance->CFGR |= LPTIM_CFGR_ENC;
 1205              		.loc 1 968 0
 1206 0016 0468     		ldr	r4, [r0]
 1207 0018 E568     		ldr	r5, [r4, #12]
 1208 001a 8023     		movs	r3, #128
 1209              	.LVL69:
 1210 001c 5B04     		lsls	r3, r3, #17
 1211 001e 2B43     		orrs	r3, r5
 1212 0020 E360     		str	r3, [r4, #12]
 969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Enable the Peripheral */
 971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_ENABLE(hlptim);
 1213              		.loc 1 971 0
 1214 0022 0568     		ldr	r5, [r0]
 1215 0024 2B69     		ldr	r3, [r5, #16]
 1216 0026 0124     		movs	r4, #1
 1217 0028 2343     		orrs	r3, r4
 1218 002a 2B61     		str	r3, [r5, #16]
 972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Load the period value in the autoreload register */
 974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_AUTORELOAD_SET(hlptim, Period);
 1219              		.loc 1 974 0
 1220 002c 0368     		ldr	r3, [r0]
 1221 002e 9961     		str	r1, [r3, #24]
 975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Start timer in continuous mode */
 977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_START_CONTINUOUS(hlptim);
 1222              		.loc 1 977 0
 1223 0030 0168     		ldr	r1, [r0]
 1224              	.LVL70:
 1225 0032 0B69     		ldr	r3, [r1, #16]
 1226              	.LVL71:
 1227 0034 0425     		movs	r5, #4
 1228 0036 2B43     		orrs	r3, r5
 1229 0038 0B61     		str	r3, [r1, #16]
 978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Change the TIM state*/
 980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->State= HAL_LPTIM_STATE_READY;
 1230              		.loc 1 980 0
 1231 003a 8454     		strb	r4, [r0, r2]
 981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
ARM GAS  /tmp/ccTSedjh.s 			page 40


 982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
 983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
 984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1232              		.loc 1 984 0
 1233 003c 0020     		movs	r0, #0
 1234              	.LVL72:
 1235              		@ sp needed
 1236 003e 30BD     		pop	{r4, r5, pc}
 1237              		.cfi_endproc
 1238              	.LFE189:
 1240              		.section	.text.HAL_LPTIM_Encoder_Stop,"ax",%progbits
 1241              		.align	1
 1242              		.global	HAL_LPTIM_Encoder_Stop
 1243              		.syntax unified
 1244              		.code	16
 1245              		.thumb_func
 1246              		.fpu softvfp
 1248              	HAL_LPTIM_Encoder_Stop:
 1249              	.LFB190:
 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
 987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Stop the Encoder interface.
 988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
 989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
 990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
 991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_Encoder_Stop(LPTIM_HandleTypeDef *hlptim)
 992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1250              		.loc 1 992 0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 0
 1253              		@ frame_needed = 0, uses_anonymous_args = 0
 1254              	.LVL73:
 1255 0000 30B5     		push	{r4, r5, lr}
 1256              	.LCFI15:
 1257              		.cfi_def_cfa_offset 12
 1258              		.cfi_offset 4, -12
 1259              		.cfi_offset 5, -8
 1260              		.cfi_offset 14, -4
 993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
 994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_ENCODER_INTERFACE_INSTANCE(hlptim->Instance));
 995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
 996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
 997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 1261              		.loc 1 997 0
 1262 0002 3622     		movs	r2, #54
 1263 0004 0223     		movs	r3, #2
 1264 0006 8354     		strb	r3, [r0, r2]
 998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
 999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the Peripheral */
1000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 1265              		.loc 1 1000 0
 1266 0008 0468     		ldr	r4, [r0]
 1267 000a 2369     		ldr	r3, [r4, #16]
 1268 000c 0121     		movs	r1, #1
 1269 000e 8B43     		bics	r3, r1
 1270 0010 2361     		str	r3, [r4, #16]
1001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
ARM GAS  /tmp/ccTSedjh.s 			page 41


1002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Reset ENC bit to disable the encoder interface */
1003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR &= ~LPTIM_CFGR_ENC;
 1271              		.loc 1 1003 0
 1272 0012 0468     		ldr	r4, [r0]
 1273 0014 E368     		ldr	r3, [r4, #12]
 1274 0016 034D     		ldr	r5, .L58
 1275 0018 2B40     		ands	r3, r5
 1276 001a E360     		str	r3, [r4, #12]
1004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
1006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 1277              		.loc 1 1006 0
 1278 001c 8154     		strb	r1, [r0, r2]
1007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
1009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
1010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1279              		.loc 1 1010 0
 1280 001e 0020     		movs	r0, #0
 1281              	.LVL74:
 1282              		@ sp needed
 1283 0020 30BD     		pop	{r4, r5, pc}
 1284              	.L59:
 1285 0022 C046     		.align	2
 1286              	.L58:
 1287 0024 FFFFFFFE 		.word	-16777217
 1288              		.cfi_endproc
 1289              	.LFE190:
 1291              		.section	.text.HAL_LPTIM_Encoder_Start_IT,"ax",%progbits
 1292              		.align	1
 1293              		.global	HAL_LPTIM_Encoder_Start_IT
 1294              		.syntax unified
 1295              		.code	16
 1296              		.thumb_func
 1297              		.fpu softvfp
 1299              	HAL_LPTIM_Encoder_Start_IT:
 1300              	.LFB191:
1011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Start the Encoder interface in interrupt mode.
1014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Period Specifies the Autoreload value.
1016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
1017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
1018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_Encoder_Start_IT(LPTIM_HandleTypeDef *hlptim, uint32_t Period)
1020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1301              		.loc 1 1020 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              	.LVL75:
 1306 0000 30B5     		push	{r4, r5, lr}
 1307              	.LCFI16:
 1308              		.cfi_def_cfa_offset 12
 1309              		.cfi_offset 4, -12
 1310              		.cfi_offset 5, -8
ARM GAS  /tmp/ccWF4qij.s 			page 42


 1311              		.cfi_offset 14, -4
1021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   uint32_t          tmpcfgr;
1022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
1024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_ENCODER_INTERFACE_INSTANCE(hlptim->Instance));
1025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PERIOD(Period));
1026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(hlptim->Init.Clock.Source == LPTIM_CLOCKSOURCE_APBCLOCK_LPOSC);
1027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(hlptim->Init.Clock.Prescaler == LPTIM_PRESCALER_DIV1);
1028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_CLOCK_POLARITY(hlptim->Init.UltraLowPowerClock.Polarity));
1029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Set the LPTIM state */
1031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->State= HAL_LPTIM_STATE_BUSY;
 1312              		.loc 1 1031 0
 1313 0002 3622     		movs	r2, #54
 1314 0004 0223     		movs	r3, #2
 1315 0006 8354     		strb	r3, [r0, r2]
1032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Configure edge sensitivity for encoder mode */
1034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Get the LPTIMx CFGR value */
1035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     tmpcfgr = hlptim->Instance->CFGR;
 1316              		.loc 1 1035 0
 1317 0008 0468     		ldr	r4, [r0]
 1318 000a E368     		ldr	r3, [r4, #12]
 1319              	.LVL76:
1036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Clear CKPOL bits */
1038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     tmpcfgr &= (uint32_t)(~LPTIM_CFGR_CKPOL);
 1320              		.loc 1 1038 0
 1321 000c 0625     		movs	r5, #6
 1322 000e AB43     		bics	r3, r5
 1323              	.LVL77:
1039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Set Input polarity */
1041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     tmpcfgr |=  hlptim->Init.UltraLowPowerClock.Polarity;
 1324              		.loc 1 1041 0
 1325 0010 C568     		ldr	r5, [r0, #12]
 1326 0012 2B43     		orrs	r3, r5
 1327              	.LVL78:
1042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Write to LPTIMx CFGR */
1044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->Instance->CFGR = tmpcfgr;
 1328              		.loc 1 1044 0
 1329 0014 E360     		str	r3, [r4, #12]
1045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Set ENC bit to enable the encoder interface */
1047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->Instance->CFGR |= LPTIM_CFGR_ENC;
 1330              		.loc 1 1047 0
 1331 0016 0468     		ldr	r4, [r0]
 1332 0018 E568     		ldr	r5, [r4, #12]
 1333 001a 8023     		movs	r3, #128
 1334              	.LVL79:
 1335 001c 5B04     		lsls	r3, r3, #17
 1336 001e 2B43     		orrs	r3, r5
 1337 0020 E360     		str	r3, [r4, #12]
1048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Enable "switch to down direction" interrupt */
1050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_DOWN);
ARM GAS  /tmp/ccWF4qij.s 			page 43


 1338              		.loc 1 1050 0
 1339 0022 0468     		ldr	r4, [r0]
 1340 0024 A368     		ldr	r3, [r4, #8]
 1341 0026 4025     		movs	r5, #64
 1342 0028 2B43     		orrs	r3, r5
 1343 002a A360     		str	r3, [r4, #8]
1051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Enable "switch to up direction" interrupt */
1053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_UP);  
 1344              		.loc 1 1053 0
 1345 002c 0468     		ldr	r4, [r0]
 1346 002e A368     		ldr	r3, [r4, #8]
 1347 0030 203D     		subs	r5, r5, #32
 1348 0032 2B43     		orrs	r3, r5
 1349 0034 A360     		str	r3, [r4, #8]
1054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Enable the Peripheral */
1056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_ENABLE(hlptim);
 1350              		.loc 1 1056 0
 1351 0036 0568     		ldr	r5, [r0]
 1352 0038 2B69     		ldr	r3, [r5, #16]
 1353 003a 0124     		movs	r4, #1
 1354 003c 2343     		orrs	r3, r4
 1355 003e 2B61     		str	r3, [r5, #16]
1057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Load the period value in the autoreload register */
1059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_AUTORELOAD_SET(hlptim, Period);
 1356              		.loc 1 1059 0
 1357 0040 0368     		ldr	r3, [r0]
 1358 0042 9961     		str	r1, [r3, #24]
1060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Start timer in continuous mode */
1062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     __HAL_LPTIM_START_CONTINUOUS(hlptim);
 1359              		.loc 1 1062 0
 1360 0044 0168     		ldr	r1, [r0]
 1361              	.LVL80:
 1362 0046 0B69     		ldr	r3, [r1, #16]
 1363              	.LVL81:
 1364 0048 0425     		movs	r5, #4
 1365 004a 2B43     		orrs	r3, r5
 1366 004c 0B61     		str	r3, [r1, #16]
1063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Change the TIM state*/
1065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->State= HAL_LPTIM_STATE_READY;
 1367              		.loc 1 1065 0
 1368 004e 8454     		strb	r4, [r0, r2]
1066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
1069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1369              		.loc 1 1069 0
 1370 0050 0020     		movs	r0, #0
 1371              	.LVL82:
 1372              		@ sp needed
 1373 0052 30BD     		pop	{r4, r5, pc}
 1374              		.cfi_endproc
 1375              	.LFE191:
ARM GAS  /tmp/ccWF4qij.s 			page 44


 1377              		.section	.text.HAL_LPTIM_Encoder_Stop_IT,"ax",%progbits
 1378              		.align	1
 1379              		.global	HAL_LPTIM_Encoder_Stop_IT
 1380              		.syntax unified
 1381              		.code	16
 1382              		.thumb_func
 1383              		.fpu softvfp
 1385              	HAL_LPTIM_Encoder_Stop_IT:
 1386              	.LFB192:
1070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Stop the Encoder interface in interrupt mode.
1073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
1075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_Encoder_Stop_IT(LPTIM_HandleTypeDef *hlptim)
1077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1387              		.loc 1 1077 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 0
 1390              		@ frame_needed = 0, uses_anonymous_args = 0
 1391              	.LVL83:
 1392 0000 30B5     		push	{r4, r5, lr}
 1393              	.LCFI17:
 1394              		.cfi_def_cfa_offset 12
 1395              		.cfi_offset 4, -12
 1396              		.cfi_offset 5, -8
 1397              		.cfi_offset 14, -4
1078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
1079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_ENCODER_INTERFACE_INSTANCE(hlptim->Instance));
1080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
1081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
1082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 1398              		.loc 1 1082 0
 1399 0002 3622     		movs	r2, #54
 1400 0004 0223     		movs	r3, #2
 1401 0006 8354     		strb	r3, [r0, r2]
1083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the Peripheral */
1085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 1402              		.loc 1 1085 0
 1403 0008 0468     		ldr	r4, [r0]
 1404 000a 2369     		ldr	r3, [r4, #16]
 1405 000c 0121     		movs	r1, #1
 1406 000e 8B43     		bics	r3, r1
 1407 0010 2361     		str	r3, [r4, #16]
1086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Reset ENC bit to disable the encoder interface */
1088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR &= ~LPTIM_CFGR_ENC;
 1408              		.loc 1 1088 0
 1409 0012 0468     		ldr	r4, [r0]
 1410 0014 E368     		ldr	r3, [r4, #12]
 1411 0016 084D     		ldr	r5, .L62
 1412 0018 2B40     		ands	r3, r5
 1413 001a E360     		str	r3, [r4, #12]
1089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable "switch to down direction" interrupt */
ARM GAS  /tmp/ccWF4qij.s 			page 45


1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_DOWN);
 1414              		.loc 1 1091 0
 1415 001c 0468     		ldr	r4, [r0]
 1416 001e A368     		ldr	r3, [r4, #8]
 1417 0020 4025     		movs	r5, #64
 1418 0022 AB43     		bics	r3, r5
 1419 0024 A360     		str	r3, [r4, #8]
1092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable "switch to up direction" interrupt */
1094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_UP); 
 1420              		.loc 1 1094 0
 1421 0026 0468     		ldr	r4, [r0]
 1422 0028 A368     		ldr	r3, [r4, #8]
 1423 002a 203D     		subs	r5, r5, #32
 1424 002c AB43     		bics	r3, r5
 1425 002e A360     		str	r3, [r4, #8]
1095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
1097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 1426              		.loc 1 1097 0
 1427 0030 8154     		strb	r1, [r0, r2]
1098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
1100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
1101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1428              		.loc 1 1101 0
 1429 0032 0020     		movs	r0, #0
 1430              	.LVL84:
 1431              		@ sp needed
 1432 0034 30BD     		pop	{r4, r5, pc}
 1433              	.L63:
 1434 0036 C046     		.align	2
 1435              	.L62:
 1436 0038 FFFFFFFE 		.word	-16777217
 1437              		.cfi_endproc
 1438              	.LFE192:
 1440              		.section	.text.HAL_LPTIM_TimeOut_Start,"ax",%progbits
 1441              		.align	1
 1442              		.global	HAL_LPTIM_TimeOut_Start
 1443              		.syntax unified
 1444              		.code	16
 1445              		.thumb_func
 1446              		.fpu softvfp
 1448              	HAL_LPTIM_TimeOut_Start:
 1449              	.LFB193:
1102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Start the Timeout function.
1105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @note   The first trigger event will start the timer, any successive
1106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         trigger event will reset the counter and the timer restarts.
1107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Period Specifies the Autoreload value.
1109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
1110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Timeout Specifies the TimeOut value to reset the counter.
1111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
1112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
1113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
ARM GAS  /tmp/ccWF4qij.s 			page 46


1114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_TimeOut_Start(LPTIM_HandleTypeDef *hlptim, uint32_t Period, uint32_t Ti
1115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1450              		.loc 1 1115 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 0
 1453              		@ frame_needed = 0, uses_anonymous_args = 0
 1454              	.LVL85:
 1455 0000 70B5     		push	{r4, r5, r6, lr}
 1456              	.LCFI18:
 1457              		.cfi_def_cfa_offset 16
 1458              		.cfi_offset 4, -16
 1459              		.cfi_offset 5, -12
 1460              		.cfi_offset 6, -8
 1461              		.cfi_offset 14, -4
1116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
1117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
1118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PERIOD(Period));
1119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PULSE(Timeout));
1120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
1121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
1122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 1462              		.loc 1 1122 0
 1463 0002 3624     		movs	r4, #54
 1464 0004 0223     		movs	r3, #2
 1465 0006 0355     		strb	r3, [r0, r4]
1123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  
1124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set TIMOUT bit to enable the timeout function */
1125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR |= LPTIM_CFGR_TIMOUT;
 1466              		.loc 1 1125 0
 1467 0008 0568     		ldr	r5, [r0]
 1468 000a EE68     		ldr	r6, [r5, #12]
 1469 000c 8023     		movs	r3, #128
 1470 000e 1B03     		lsls	r3, r3, #12
 1471 0010 3343     		orrs	r3, r6
 1472 0012 EB60     		str	r3, [r5, #12]
1126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable the Peripheral */
1128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE(hlptim);
 1473              		.loc 1 1128 0
 1474 0014 0668     		ldr	r6, [r0]
 1475 0016 3369     		ldr	r3, [r6, #16]
 1476 0018 0125     		movs	r5, #1
 1477 001a 2B43     		orrs	r3, r5
 1478 001c 3361     		str	r3, [r6, #16]
1129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the period value in the autoreload register */
1131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_AUTORELOAD_SET(hlptim, Period);
 1479              		.loc 1 1131 0
 1480 001e 0368     		ldr	r3, [r0]
 1481 0020 9961     		str	r1, [r3, #24]
1132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the Timeout value in the compare register */
1134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_COMPARE_SET(hlptim, Timeout);
 1482              		.loc 1 1134 0
 1483 0022 0368     		ldr	r3, [r0]
 1484 0024 5A61     		str	r2, [r3, #20]
1135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
ARM GAS  /tmp/ccWF4qij.s 			page 47


1136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Start timer in continuous mode */
1137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_START_CONTINUOUS(hlptim);
 1485              		.loc 1 1137 0
 1486 0026 0268     		ldr	r2, [r0]
 1487              	.LVL86:
 1488 0028 1369     		ldr	r3, [r2, #16]
 1489              	.LVL87:
 1490 002a 0421     		movs	r1, #4
 1491              	.LVL88:
 1492 002c 0B43     		orrs	r3, r1
 1493 002e 1361     		str	r3, [r2, #16]
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
1139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
1140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 1494              		.loc 1 1140 0
 1495 0030 0555     		strb	r5, [r0, r4]
1141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
1143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
1144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1496              		.loc 1 1144 0
 1497 0032 0020     		movs	r0, #0
 1498              	.LVL89:
 1499              		@ sp needed
 1500 0034 70BD     		pop	{r4, r5, r6, pc}
 1501              		.cfi_endproc
 1502              	.LFE193:
 1504              		.section	.text.HAL_LPTIM_TimeOut_Stop,"ax",%progbits
 1505              		.align	1
 1506              		.global	HAL_LPTIM_TimeOut_Stop
 1507              		.syntax unified
 1508              		.code	16
 1509              		.thumb_func
 1510              		.fpu softvfp
 1512              	HAL_LPTIM_TimeOut_Stop:
 1513              	.LFB194:
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Stop the Timeout function.
1148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
1150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_TimeOut_Stop(LPTIM_HandleTypeDef *hlptim)
1152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1514              		.loc 1 1152 0
 1515              		.cfi_startproc
 1516              		@ args = 0, pretend = 0, frame = 0
 1517              		@ frame_needed = 0, uses_anonymous_args = 0
 1518              	.LVL90:
 1519 0000 30B5     		push	{r4, r5, lr}
 1520              	.LCFI19:
 1521              		.cfi_def_cfa_offset 12
 1522              		.cfi_offset 4, -12
 1523              		.cfi_offset 5, -8
 1524              		.cfi_offset 14, -4
1153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
1154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
ARM GAS  /tmp/ccWF4qij.s 			page 48


1155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
1157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 1525              		.loc 1 1157 0
 1526 0002 3622     		movs	r2, #54
 1527 0004 0223     		movs	r3, #2
 1528 0006 8354     		strb	r3, [r0, r2]
1158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the Peripheral */
1160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 1529              		.loc 1 1160 0
 1530 0008 0468     		ldr	r4, [r0]
 1531 000a 2369     		ldr	r3, [r4, #16]
 1532 000c 0121     		movs	r1, #1
 1533 000e 8B43     		bics	r3, r1
 1534 0010 2361     		str	r3, [r4, #16]
1161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Reset TIMOUT bit to enable the timeout function */
1163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR &= ~LPTIM_CFGR_TIMOUT;
 1535              		.loc 1 1163 0
 1536 0012 0468     		ldr	r4, [r0]
 1537 0014 E368     		ldr	r3, [r4, #12]
 1538 0016 034D     		ldr	r5, .L66
 1539 0018 2B40     		ands	r3, r5
 1540 001a E360     		str	r3, [r4, #12]
1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
1166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 1541              		.loc 1 1166 0
 1542 001c 8154     		strb	r1, [r0, r2]
1167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
1169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
1170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1543              		.loc 1 1170 0
 1544 001e 0020     		movs	r0, #0
 1545              	.LVL91:
 1546              		@ sp needed
 1547 0020 30BD     		pop	{r4, r5, pc}
 1548              	.L67:
 1549 0022 C046     		.align	2
 1550              	.L66:
 1551 0024 FFFFF7FF 		.word	-524289
 1552              		.cfi_endproc
 1553              	.LFE194:
 1555              		.section	.text.HAL_LPTIM_TimeOut_Start_IT,"ax",%progbits
 1556              		.align	1
 1557              		.global	HAL_LPTIM_TimeOut_Start_IT
 1558              		.syntax unified
 1559              		.code	16
 1560              		.thumb_func
 1561              		.fpu softvfp
 1563              	HAL_LPTIM_TimeOut_Start_IT:
 1564              	.LFB195:
1171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Start the Timeout function in interrupt mode.
ARM GAS  /tmp/ccWF4qij.s 			page 49


1174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @note   The first trigger event will start the timer, any successive
1175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         trigger event will reset the counter and the timer restarts.
1176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Period Specifies the Autoreload value.
1178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
1179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Timeout Specifies the TimeOut value to reset the counter.
1180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
1181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_TimeOut_Start_IT(LPTIM_HandleTypeDef *hlptim, uint32_t Period, uint32_t
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1565              		.loc 1 1184 0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569              	.LVL92:
 1570 0000 70B5     		push	{r4, r5, r6, lr}
 1571              	.LCFI20:
 1572              		.cfi_def_cfa_offset 16
 1573              		.cfi_offset 4, -16
 1574              		.cfi_offset 5, -12
 1575              		.cfi_offset 6, -8
 1576              		.cfi_offset 14, -4
1185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
1186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PERIOD(Period));
1188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PULSE(Timeout));
1189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
1190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
1191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 1577              		.loc 1 1191 0
 1578 0002 3625     		movs	r5, #54
 1579 0004 0223     		movs	r3, #2
 1580 0006 4355     		strb	r3, [r0, r5]
1192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set TIMOUT bit to enable the timeout function */
1194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR |= LPTIM_CFGR_TIMOUT;
 1581              		.loc 1 1194 0
 1582 0008 0468     		ldr	r4, [r0]
 1583 000a E668     		ldr	r6, [r4, #12]
 1584 000c 8023     		movs	r3, #128
 1585 000e 1B03     		lsls	r3, r3, #12
 1586 0010 3343     		orrs	r3, r6
 1587 0012 E360     		str	r3, [r4, #12]
1195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Compare match interrupt */
1197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_CMPM);
 1588              		.loc 1 1197 0
 1589 0014 0668     		ldr	r6, [r0]
 1590 0016 B468     		ldr	r4, [r6, #8]
 1591 0018 0123     		movs	r3, #1
 1592 001a 1C43     		orrs	r4, r3
 1593 001c B460     		str	r4, [r6, #8]
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable the Peripheral */
1200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE(hlptim);
 1594              		.loc 1 1200 0
ARM GAS  /tmp/ccTSedjh.s 			page 50


 1595 001e 0668     		ldr	r6, [r0]
 1596 0020 3469     		ldr	r4, [r6, #16]
 1597 0022 1C43     		orrs	r4, r3
 1598 0024 3461     		str	r4, [r6, #16]
1201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the period value in the autoreload register */
1203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_AUTORELOAD_SET(hlptim, Period);
 1599              		.loc 1 1203 0
 1600 0026 0468     		ldr	r4, [r0]
 1601 0028 A161     		str	r1, [r4, #24]
1204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the Timeout value in the compare register */
1206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_COMPARE_SET(hlptim, Timeout);
 1602              		.loc 1 1206 0
 1603 002a 0168     		ldr	r1, [r0]
 1604              	.LVL93:
 1605 002c 4A61     		str	r2, [r1, #20]
 1606              	.LVL94:
1207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Start timer in continuous mode */
1209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_START_CONTINUOUS(hlptim);
 1607              		.loc 1 1209 0
 1608 002e 0168     		ldr	r1, [r0]
 1609 0030 0A69     		ldr	r2, [r1, #16]
 1610              	.LVL95:
 1611 0032 0424     		movs	r4, #4
 1612 0034 2243     		orrs	r2, r4
 1613 0036 0A61     		str	r2, [r1, #16]
1210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
1212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 1614              		.loc 1 1212 0
 1615 0038 4355     		strb	r3, [r0, r5]
1213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
1215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
1216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1616              		.loc 1 1216 0
 1617 003a 0020     		movs	r0, #0
 1618              	.LVL96:
 1619              		@ sp needed
 1620 003c 70BD     		pop	{r4, r5, r6, pc}
 1621              		.cfi_endproc
 1622              	.LFE195:
 1624              		.section	.text.HAL_LPTIM_TimeOut_Stop_IT,"ax",%progbits
 1625              		.align	1
 1626              		.global	HAL_LPTIM_TimeOut_Stop_IT
 1627              		.syntax unified
 1628              		.code	16
 1629              		.thumb_func
 1630              		.fpu softvfp
 1632              	HAL_LPTIM_TimeOut_Stop_IT:
 1633              	.LFB196:
1217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Stop the Timeout function in interrupt mode.
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
ARM GAS  /tmp/ccTSedjh.s 			page 51


1221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
1222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_TimeOut_Stop_IT(LPTIM_HandleTypeDef *hlptim)
1224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1634              		.loc 1 1224 0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 0
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
 1638              	.LVL97:
 1639 0000 30B5     		push	{r4, r5, lr}
 1640              	.LCFI21:
 1641              		.cfi_def_cfa_offset 12
 1642              		.cfi_offset 4, -12
 1643              		.cfi_offset 5, -8
 1644              		.cfi_offset 14, -4
1225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
1226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
1227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
1229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 1645              		.loc 1 1229 0
 1646 0002 3621     		movs	r1, #54
 1647 0004 0223     		movs	r3, #2
 1648 0006 4354     		strb	r3, [r0, r1]
1230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the Peripheral */
1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 1649              		.loc 1 1232 0
 1650 0008 0468     		ldr	r4, [r0]
 1651 000a 2269     		ldr	r2, [r4, #16]
 1652 000c 013B     		subs	r3, r3, #1
 1653 000e 9A43     		bics	r2, r3
 1654 0010 2261     		str	r2, [r4, #16]
1233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Reset TIMOUT bit to enable the timeout function */
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->Instance->CFGR &= ~LPTIM_CFGR_TIMOUT;
 1655              		.loc 1 1235 0
 1656 0012 0468     		ldr	r4, [r0]
 1657 0014 E268     		ldr	r2, [r4, #12]
 1658 0016 054D     		ldr	r5, .L70
 1659 0018 2A40     		ands	r2, r5
 1660 001a E260     		str	r2, [r4, #12]
1236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Compare match interrupt */
1238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_CMPM);
 1661              		.loc 1 1238 0
 1662 001c 0468     		ldr	r4, [r0]
 1663 001e A268     		ldr	r2, [r4, #8]
 1664 0020 9A43     		bics	r2, r3
 1665 0022 A260     		str	r2, [r4, #8]
1239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
1241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 1666              		.loc 1 1241 0
 1667 0024 4354     		strb	r3, [r0, r1]
1242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
ARM GAS  /tmp/ccTSedjh.s 			page 52


1244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
1245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1668              		.loc 1 1245 0
 1669 0026 0020     		movs	r0, #0
 1670              	.LVL98:
 1671              		@ sp needed
 1672 0028 30BD     		pop	{r4, r5, pc}
 1673              	.L71:
 1674 002a C046     		.align	2
 1675              	.L70:
 1676 002c FFFFF7FF 		.word	-524289
 1677              		.cfi_endproc
 1678              	.LFE196:
 1680              		.section	.text.HAL_LPTIM_Counter_Start,"ax",%progbits
 1681              		.align	1
 1682              		.global	HAL_LPTIM_Counter_Start
 1683              		.syntax unified
 1684              		.code	16
 1685              		.thumb_func
 1686              		.fpu softvfp
 1688              	HAL_LPTIM_Counter_Start:
 1689              	.LFB197:
1246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Start the Counter mode.
1249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Period Specifies the Autoreload value.
1251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
1252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
1253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_Counter_Start(LPTIM_HandleTypeDef *hlptim, uint32_t Period)
1255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1690              		.loc 1 1255 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              	.LVL99:
 1695 0000 10B5     		push	{r4, lr}
 1696              	.LCFI22:
 1697              		.cfi_def_cfa_offset 8
 1698              		.cfi_offset 4, -8
 1699              		.cfi_offset 14, -4
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
1257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
1258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PERIOD(Period));
1259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
1261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 1700              		.loc 1 1261 0
 1701 0002 3623     		movs	r3, #54
 1702 0004 0222     		movs	r2, #2
 1703 0006 C254     		strb	r2, [r0, r3]
1262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* If clock source is not ULPTIM clock and counter source is external, then it must not be presca
1264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if((hlptim->Init.Clock.Source != LPTIM_CLOCKSOURCE_ULPTIM) && (hlptim->Init.CounterSource == LPTI
 1704              		.loc 1 1264 0
 1705 0008 4368     		ldr	r3, [r0, #4]
ARM GAS  /tmp/ccTSedjh.s 			page 53


 1706 000a 012B     		cmp	r3, #1
 1707 000c 04D0     		beq	.L73
 1708              		.loc 1 1264 0 is_stmt 0 discriminator 1
 1709 000e 8023     		movs	r3, #128
 1710 0010 1B04     		lsls	r3, r3, #16
 1711 0012 826A     		ldr	r2, [r0, #40]
 1712 0014 9A42     		cmp	r2, r3
 1713 0016 0FD0     		beq	.L74
 1714              	.L73:
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Check if clock is prescaled */
1267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     assert_param(IS_LPTIM_CLOCK_PRESCALERDIV1(hlptim->Init.Clock.Prescaler));
1268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Set clock prescaler to 0 */
1269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->Instance->CFGR &= ~LPTIM_CFGR_PRESC;
1270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable the Peripheral */
1273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE(hlptim);
 1715              		.loc 1 1273 0 is_stmt 1
 1716 0018 0468     		ldr	r4, [r0]
 1717 001a 2369     		ldr	r3, [r4, #16]
 1718 001c 0122     		movs	r2, #1
 1719 001e 1343     		orrs	r3, r2
 1720 0020 2361     		str	r3, [r4, #16]
1274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the period value in the autoreload register */
1276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_AUTORELOAD_SET(hlptim, Period);
 1721              		.loc 1 1276 0
 1722 0022 0368     		ldr	r3, [r0]
 1723 0024 9961     		str	r1, [r3, #24]
1277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Start timer in continuous mode */
1279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_START_CONTINUOUS(hlptim);
 1724              		.loc 1 1279 0
 1725 0026 0168     		ldr	r1, [r0]
 1726              	.LVL100:
 1727 0028 0B69     		ldr	r3, [r1, #16]
 1728              	.LVL101:
 1729 002a 0424     		movs	r4, #4
 1730 002c 2343     		orrs	r3, r4
 1731 002e 0B61     		str	r3, [r1, #16]
1280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
1281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
1282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 1732              		.loc 1 1282 0
 1733 0030 3623     		movs	r3, #54
 1734 0032 C254     		strb	r2, [r0, r3]
1283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
1285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
1286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1735              		.loc 1 1286 0
 1736 0034 0020     		movs	r0, #0
 1737              	.LVL102:
 1738              		@ sp needed
 1739 0036 10BD     		pop	{r4, pc}
 1740              	.LVL103:
ARM GAS  /tmp/ccTSedjh.s 			page 54


 1741              	.L74:
1269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 1742              		.loc 1 1269 0
 1743 0038 0268     		ldr	r2, [r0]
 1744 003a D368     		ldr	r3, [r2, #12]
 1745 003c 014C     		ldr	r4, .L75
 1746 003e 2340     		ands	r3, r4
 1747 0040 D360     		str	r3, [r2, #12]
 1748 0042 E9E7     		b	.L73
 1749              	.L76:
 1750              		.align	2
 1751              	.L75:
 1752 0044 FFF1FFFF 		.word	-3585
 1753              		.cfi_endproc
 1754              	.LFE197:
 1756              		.section	.text.HAL_LPTIM_Counter_Stop,"ax",%progbits
 1757              		.align	1
 1758              		.global	HAL_LPTIM_Counter_Stop
 1759              		.syntax unified
 1760              		.code	16
 1761              		.thumb_func
 1762              		.fpu softvfp
 1764              	HAL_LPTIM_Counter_Stop:
 1765              	.LFB198:
1287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Stop the Counter mode.
1290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
1292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_Counter_Stop(LPTIM_HandleTypeDef *hlptim)
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1766              		.loc 1 1294 0
 1767              		.cfi_startproc
 1768              		@ args = 0, pretend = 0, frame = 0
 1769              		@ frame_needed = 0, uses_anonymous_args = 0
 1770              	.LVL104:
 1771 0000 10B5     		push	{r4, lr}
 1772              	.LCFI23:
 1773              		.cfi_def_cfa_offset 8
 1774              		.cfi_offset 4, -8
 1775              		.cfi_offset 14, -4
1295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
1296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
1297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 1776              		.loc 1 1299 0
 1777 0002 3622     		movs	r2, #54
 1778 0004 0223     		movs	r3, #2
 1779 0006 8354     		strb	r3, [r0, r2]
1300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the Peripheral */
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 1780              		.loc 1 1302 0
 1781 0008 0468     		ldr	r4, [r0]
 1782 000a 2369     		ldr	r3, [r4, #16]
ARM GAS  /tmp/ccTSedjh.s 			page 55


 1783 000c 0121     		movs	r1, #1
 1784 000e 8B43     		bics	r3, r1
 1785 0010 2361     		str	r3, [r4, #16]
1303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
1305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 1786              		.loc 1 1305 0
 1787 0012 8154     		strb	r1, [r0, r2]
1306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
1308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
1309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1788              		.loc 1 1309 0
 1789 0014 0020     		movs	r0, #0
 1790              	.LVL105:
 1791              		@ sp needed
 1792 0016 10BD     		pop	{r4, pc}
 1793              		.cfi_endproc
 1794              	.LFE198:
 1796              		.section	.text.HAL_LPTIM_Counter_Start_IT,"ax",%progbits
 1797              		.align	1
 1798              		.global	HAL_LPTIM_Counter_Start_IT
 1799              		.syntax unified
 1800              		.code	16
 1801              		.thumb_func
 1802              		.fpu softvfp
 1804              	HAL_LPTIM_Counter_Start_IT:
 1805              	.LFB199:
1310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Start the Counter mode in interrupt mode.
1313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  Period Specifies the Autoreload value.
1315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         This parameter must be a value between 0x0000 and 0xFFFF.
1316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
1317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_Counter_Start_IT(LPTIM_HandleTypeDef *hlptim, uint32_t Period)
1319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1806              		.loc 1 1319 0
 1807              		.cfi_startproc
 1808              		@ args = 0, pretend = 0, frame = 0
 1809              		@ frame_needed = 0, uses_anonymous_args = 0
 1810              	.LVL106:
 1811 0000 10B5     		push	{r4, lr}
 1812              	.LCFI24:
 1813              		.cfi_def_cfa_offset 8
 1814              		.cfi_offset 4, -8
 1815              		.cfi_offset 14, -4
1320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
1321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
1322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_PERIOD(Period));
1323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                
1324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
1325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 1816              		.loc 1 1325 0
 1817 0002 3623     		movs	r3, #54
 1818 0004 0222     		movs	r2, #2
ARM GAS  /tmp/ccTSedjh.s 			page 56


 1819 0006 C254     		strb	r2, [r0, r3]
1326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* If clock source is not ULPTIM clock and counter source is external, then it must not be presca
1328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if((hlptim->Init.Clock.Source != LPTIM_CLOCKSOURCE_ULPTIM) && (hlptim->Init.CounterSource == LPTI
 1820              		.loc 1 1328 0
 1821 0008 4368     		ldr	r3, [r0, #4]
 1822 000a 012B     		cmp	r3, #1
 1823 000c 04D0     		beq	.L79
 1824              		.loc 1 1328 0 is_stmt 0 discriminator 1
 1825 000e 8023     		movs	r3, #128
 1826 0010 1B04     		lsls	r3, r3, #16
 1827 0012 826A     		ldr	r2, [r0, #40]
 1828 0014 9A42     		cmp	r2, r3
 1829 0016 19D0     		beq	.L80
 1830              	.L79:
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Check if clock is prescaled */
1331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     assert_param(IS_LPTIM_CLOCK_PRESCALERDIV1(hlptim->Init.Clock.Prescaler));
1332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Set clock prescaler to 0 */
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     hlptim->Instance->CFGR &= ~LPTIM_CFGR_PRESC;
1334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Autoreload write complete interrupt */
1337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_ARROK);
 1831              		.loc 1 1337 0 is_stmt 1
 1832 0018 0268     		ldr	r2, [r0]
 1833 001a 9368     		ldr	r3, [r2, #8]
 1834 001c 1024     		movs	r4, #16
 1835 001e 2343     		orrs	r3, r4
 1836 0020 9360     		str	r3, [r2, #8]
1338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable Autoreload match interrupt */
1340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE_IT(hlptim, LPTIM_IT_ARRM);
 1837              		.loc 1 1340 0
 1838 0022 0268     		ldr	r2, [r0]
 1839 0024 9368     		ldr	r3, [r2, #8]
 1840 0026 0E3C     		subs	r4, r4, #14
 1841 0028 2343     		orrs	r3, r4
 1842 002a 9360     		str	r3, [r2, #8]
1341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Enable the Peripheral */
1343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_ENABLE(hlptim);
 1843              		.loc 1 1343 0
 1844 002c 0468     		ldr	r4, [r0]
 1845 002e 2369     		ldr	r3, [r4, #16]
 1846 0030 0122     		movs	r2, #1
 1847 0032 1343     		orrs	r3, r2
 1848 0034 2361     		str	r3, [r4, #16]
1344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Load the period value in the autoreload register */
1346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_AUTORELOAD_SET(hlptim, Period);
 1849              		.loc 1 1346 0
 1850 0036 0368     		ldr	r3, [r0]
 1851 0038 9961     		str	r1, [r3, #24]
1347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Start timer in continuous mode */
1349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_START_CONTINUOUS(hlptim);
ARM GAS  /tmp/ccTSedjh.s 			page 57


 1852              		.loc 1 1349 0
 1853 003a 0168     		ldr	r1, [r0]
 1854              	.LVL107:
 1855 003c 0B69     		ldr	r3, [r1, #16]
 1856              	.LVL108:
 1857 003e 0424     		movs	r4, #4
 1858 0040 2343     		orrs	r3, r4
 1859 0042 0B61     		str	r3, [r1, #16]
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
1351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
1352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 1860              		.loc 1 1352 0
 1861 0044 3623     		movs	r3, #54
 1862 0046 C254     		strb	r2, [r0, r3]
1353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
1355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
1356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1863              		.loc 1 1356 0
 1864 0048 0020     		movs	r0, #0
 1865              	.LVL109:
 1866              		@ sp needed
 1867 004a 10BD     		pop	{r4, pc}
 1868              	.LVL110:
 1869              	.L80:
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
 1870              		.loc 1 1333 0
 1871 004c 0268     		ldr	r2, [r0]
 1872 004e D368     		ldr	r3, [r2, #12]
 1873 0050 014C     		ldr	r4, .L81
 1874 0052 2340     		ands	r3, r4
 1875 0054 D360     		str	r3, [r2, #12]
 1876 0056 DFE7     		b	.L79
 1877              	.L82:
 1878              		.align	2
 1879              	.L81:
 1880 0058 FFF1FFFF 		.word	-3585
 1881              		.cfi_endproc
 1882              	.LFE199:
 1884              		.section	.text.HAL_LPTIM_Counter_Stop_IT,"ax",%progbits
 1885              		.align	1
 1886              		.global	HAL_LPTIM_Counter_Stop_IT
 1887              		.syntax unified
 1888              		.code	16
 1889              		.thumb_func
 1890              		.fpu softvfp
 1892              	HAL_LPTIM_Counter_Stop_IT:
 1893              	.LFB200:
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Stop the Counter mode in interrupt mode.
1360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL status
1362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_Counter_Stop_IT(LPTIM_HandleTypeDef *hlptim)
1364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1894              		.loc 1 1364 0
ARM GAS  /tmp/ccTSedjh.s 			page 58


 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 1898              	.LVL111:
 1899 0000 70B5     		push	{r4, r5, r6, lr}
 1900              	.LCFI25:
 1901              		.cfi_def_cfa_offset 16
 1902              		.cfi_offset 4, -16
 1903              		.cfi_offset 5, -12
 1904              		.cfi_offset 6, -8
 1905              		.cfi_offset 14, -4
1365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Check the parameters */
1366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
1367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Set the LPTIM state */
1369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_BUSY;
 1906              		.loc 1 1369 0
 1907 0002 3622     		movs	r2, #54
 1908 0004 0225     		movs	r5, #2
 1909 0006 8554     		strb	r5, [r0, r2]
1370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable the Peripheral */
1372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE(hlptim);
 1910              		.loc 1 1372 0
 1911 0008 0468     		ldr	r4, [r0]
 1912 000a 2369     		ldr	r3, [r4, #16]
 1913 000c 0121     		movs	r1, #1
 1914 000e 8B43     		bics	r3, r1
 1915 0010 2361     		str	r3, [r4, #16]
1373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Autoreload write complete interrupt */
1375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_ARROK);
 1916              		.loc 1 1375 0
 1917 0012 0468     		ldr	r4, [r0]
 1918 0014 A368     		ldr	r3, [r4, #8]
 1919 0016 1026     		movs	r6, #16
 1920 0018 B343     		bics	r3, r6
 1921 001a A360     		str	r3, [r4, #8]
1376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Disable Autoreload match interrupt */
1378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LPTIM_DISABLE_IT(hlptim, LPTIM_IT_ARRM);
 1922              		.loc 1 1378 0
 1923 001c 0468     		ldr	r4, [r0]
 1924 001e A368     		ldr	r3, [r4, #8]
 1925 0020 AB43     		bics	r3, r5
 1926 0022 A360     		str	r3, [r4, #8]
1379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Change the TIM state*/
1381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   hlptim->State= HAL_LPTIM_STATE_READY;
 1927              		.loc 1 1381 0
 1928 0024 8154     		strb	r1, [r0, r2]
1382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return function status */
1384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return HAL_OK;
1385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1929              		.loc 1 1385 0
 1930 0026 0020     		movs	r0, #0
ARM GAS  /tmp/ccTSedjh.s 			page 59


 1931              	.LVL112:
 1932              		@ sp needed
 1933 0028 70BD     		pop	{r4, r5, r6, pc}
 1934              		.cfi_endproc
 1935              	.LFE200:
 1937              		.section	.text.HAL_LPTIM_ReadCounter,"ax",%progbits
 1938              		.align	1
 1939              		.global	HAL_LPTIM_ReadCounter
 1940              		.syntax unified
 1941              		.code	16
 1942              		.thumb_func
 1943              		.fpu softvfp
 1945              	HAL_LPTIM_ReadCounter:
 1946              	.LFB201:
1386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @}
1389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /** @defgroup LPTIM_Exported_Functions_Group3 LPTIM Read operation functions
1392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  *  @brief  Read operation functions.
1393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  *
1394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** @verbatim   
1395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ==============================================================================
1396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                   ##### LPTIM Read operation functions #####
1397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ==============================================================================  
1398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** [..]  This section provides LPTIM Reading functions.
1399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Read the counter value.
1400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Read the period (Auto-reload) value.
1401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       (+) Read the pulse (Compare)value.
1402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** @endverbatim
1403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @{
1404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Return the current counter value.
1408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval Counter value.
1410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** uint32_t HAL_LPTIM_ReadCounter(LPTIM_HandleTypeDef *hlptim)
1412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1947              		.loc 1 1412 0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 0
 1950              		@ frame_needed = 0, uses_anonymous_args = 0
 1951              		@ link register save eliminated.
 1952              	.LVL113:
1413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Check the parameters */
1414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return (hlptim->Instance->CNT);
 1953              		.loc 1 1416 0
 1954 0000 0368     		ldr	r3, [r0]
 1955 0002 D869     		ldr	r0, [r3, #28]
 1956              	.LVL114:
1417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1957              		.loc 1 1417 0
ARM GAS  /tmp/ccWF4qij.s 			page 60


 1958              		@ sp needed
 1959 0004 7047     		bx	lr
 1960              		.cfi_endproc
 1961              	.LFE201:
 1963              		.section	.text.HAL_LPTIM_ReadAutoReload,"ax",%progbits
 1964              		.align	1
 1965              		.global	HAL_LPTIM_ReadAutoReload
 1966              		.syntax unified
 1967              		.code	16
 1968              		.thumb_func
 1969              		.fpu softvfp
 1971              	HAL_LPTIM_ReadAutoReload:
 1972              	.LFB202:
1418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Return the current Autoreload (Period) value.
1421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval Autoreload value.
1423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** uint32_t HAL_LPTIM_ReadAutoReload(LPTIM_HandleTypeDef *hlptim)
1425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1973              		.loc 1 1425 0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 0
 1976              		@ frame_needed = 0, uses_anonymous_args = 0
 1977              		@ link register save eliminated.
 1978              	.LVL115:
1426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Check the parameters */
1427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
1428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return (hlptim->Instance->ARR);
 1979              		.loc 1 1429 0
 1980 0000 0368     		ldr	r3, [r0]
 1981 0002 9869     		ldr	r0, [r3, #24]
 1982              	.LVL116:
1430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 1983              		.loc 1 1430 0
 1984              		@ sp needed
 1985 0004 7047     		bx	lr
 1986              		.cfi_endproc
 1987              	.LFE202:
 1989              		.section	.text.HAL_LPTIM_ReadCompare,"ax",%progbits
 1990              		.align	1
 1991              		.global	HAL_LPTIM_ReadCompare
 1992              		.syntax unified
 1993              		.code	16
 1994              		.thumb_func
 1995              		.fpu softvfp
 1997              	HAL_LPTIM_ReadCompare:
 1998              	.LFB203:
1431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Return the current Compare (Pulse) value.
1434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval Compare value.
1436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** uint32_t HAL_LPTIM_ReadCompare(LPTIM_HandleTypeDef *hlptim)
ARM GAS  /tmp/ccWF4qij.s 			page 61


1438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 1999              		.loc 1 1438 0
 2000              		.cfi_startproc
 2001              		@ args = 0, pretend = 0, frame = 0
 2002              		@ frame_needed = 0, uses_anonymous_args = 0
 2003              		@ link register save eliminated.
 2004              	.LVL117:
1439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Check the parameters */
1440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   assert_param(IS_LPTIM_INSTANCE(hlptim->Instance));
1441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return (hlptim->Instance->CMP);
 2005              		.loc 1 1442 0
 2006 0000 0368     		ldr	r3, [r0]
 2007 0002 5869     		ldr	r0, [r3, #20]
 2008              	.LVL118:
1443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 2009              		.loc 1 1443 0
 2010              		@ sp needed
 2011 0004 7047     		bx	lr
 2012              		.cfi_endproc
 2013              	.LFE203:
 2015              		.section	.text.HAL_LPTIM_CompareMatchCallback,"ax",%progbits
 2016              		.align	1
 2017              		.weak	HAL_LPTIM_CompareMatchCallback
 2018              		.syntax unified
 2019              		.code	16
 2020              		.thumb_func
 2021              		.fpu softvfp
 2023              	HAL_LPTIM_CompareMatchCallback:
 2024              	.LFB205:
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @}
1447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /** @defgroup LPTIM_Exported_Functions_Group4 LPTIM IRQ handler and callbacks
1452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  *  @brief  LPTIM  IRQ handler.
1453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  *
1454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** @verbatim   
1455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ==============================================================================
1456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                       ##### LPTIM IRQ handler and callbacks  #####
1457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ==============================================================================  
1458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** [..]  This section provides LPTIM IRQ handler and callback functions called within 
1459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       the IRQ handler:
1460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    (+) LPTIM interrupt request handler
1461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    (+) Compare match Callback
1462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    (+) Auto-reload match Callback
1463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    (+) External trigger event detection Callback
1464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    (+) Compare register write complete Callback
1465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    (+) Auto-reload register write complete Callback
1466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    (+) Up-counting direction change Callback
1467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    (+) Down-counting direction change Callback
1468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** @endverbatim
1470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @{
ARM GAS  /tmp/ccWF4qij.s 			page 62


1471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Handle LPTIM interrupt request.
1475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval None
1477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** void HAL_LPTIM_IRQHandler(LPTIM_HandleTypeDef *hlptim)
1479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
1480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Compare match interrupt */
1481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(__HAL_LPTIM_GET_FLAG(hlptim, LPTIM_FLAG_CMPM) != RESET)
1482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     if(__HAL_LPTIM_GET_IT_SOURCE(hlptim, LPTIM_IT_CMPM) != RESET)
1484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
1485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Clear Compare match flag */
1486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       __HAL_LPTIM_CLEAR_FLAG(hlptim, LPTIM_FLAG_CMPM);
1487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
1488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Compare match Callback */
1489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #if (USE_HAL_LPTIM_REGISTER_CALLBACKS == 1)
1490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****           hlptim->CompareMatchCallback(hlptim);
1491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #else
1492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       HAL_LPTIM_CompareMatchCallback(hlptim);
1493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
1494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     }
1495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Autoreload match interrupt */
1498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(__HAL_LPTIM_GET_FLAG(hlptim, LPTIM_FLAG_ARRM) != RESET)
1499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     if(__HAL_LPTIM_GET_IT_SOURCE(hlptim, LPTIM_IT_ARRM) != RESET)
1501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
1502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Clear Autoreload match flag */
1503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       __HAL_LPTIM_CLEAR_FLAG(hlptim, LPTIM_FLAG_ARRM);
1504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
1505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Autoreload match Callback */
1506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #if (USE_HAL_LPTIM_REGISTER_CALLBACKS == 1)
1507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->AutoReloadMatchCallback(hlptim);
1508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #else
1509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       HAL_LPTIM_AutoReloadMatchCallback(hlptim);      
1510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
1511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     }
1512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Trigger detected interrupt */
1515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(__HAL_LPTIM_GET_FLAG(hlptim, LPTIM_FLAG_EXTTRIG) != RESET)
1516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     if(__HAL_LPTIM_GET_IT_SOURCE(hlptim, LPTIM_IT_EXTTRIG) != RESET)
1518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
1519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Clear Trigger detected flag */
1520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       __HAL_LPTIM_CLEAR_FLAG(hlptim, LPTIM_FLAG_EXTTRIG);
1521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
1522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Trigger detected callback */
1523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #if (USE_HAL_LPTIM_REGISTER_CALLBACKS == 1)
1524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->TriggerCallback(hlptim);
1525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #else
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       HAL_LPTIM_TriggerCallback(hlptim);      
1527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccWF4qij.s 			page 63


1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     }
1529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Compare write interrupt */
1532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(__HAL_LPTIM_GET_FLAG(hlptim, LPTIM_FLAG_CMPOK) != RESET)
1533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     if(__HAL_LPTIM_GET_IT_SOURCE(hlptim, LPTIM_IT_CMPOK) != RESET)
1535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
1536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Clear Compare write flag */
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       __HAL_LPTIM_CLEAR_FLAG(hlptim, LPTIM_FLAG_CMPOK);
1538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
1539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Compare write Callback */
1540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #if (USE_HAL_LPTIM_REGISTER_CALLBACKS == 1)
1541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->CompareWriteCallback(hlptim);
1542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #else
1543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       HAL_LPTIM_CompareWriteCallback(hlptim);      
1544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
1545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     }
1546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Autoreload write interrupt */
1549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(__HAL_LPTIM_GET_FLAG(hlptim, LPTIM_FLAG_ARROK) != RESET)
1550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     if(__HAL_LPTIM_GET_IT_SOURCE(hlptim, LPTIM_IT_ARROK) != RESET)
1552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
1553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Clear Autoreload write flag */
1554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       __HAL_LPTIM_CLEAR_FLAG(hlptim, LPTIM_FLAG_ARROK);
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
1556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Autoreload write Callback */
1557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #if (USE_HAL_LPTIM_REGISTER_CALLBACKS == 1)
1558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->AutoReloadWriteCallback(hlptim);
1559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #else
1560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       HAL_LPTIM_AutoReloadWriteCallback(hlptim);      
1561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     }
1563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Direction counter changed from Down to Up interrupt */
1566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(__HAL_LPTIM_GET_FLAG(hlptim, LPTIM_FLAG_UP) != RESET)
1567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     if(__HAL_LPTIM_GET_IT_SOURCE(hlptim, LPTIM_IT_UP) != RESET)
1569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
1570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Clear Direction counter changed from Down to Up flag */
1571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       __HAL_LPTIM_CLEAR_FLAG(hlptim, LPTIM_FLAG_UP);
1572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
1573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Direction counter changed from Down to Up Callback */
1574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #if (USE_HAL_LPTIM_REGISTER_CALLBACKS == 1)
1575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->DirectionUpCallback(hlptim);
1576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #else
1577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       HAL_LPTIM_DirectionUpCallback(hlptim);      
1578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
1579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     }
1580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Direction counter changed from Up to Down interrupt */
1583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(__HAL_LPTIM_GET_FLAG(hlptim, LPTIM_FLAG_DOWN) != RESET)
1584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
ARM GAS  /tmp/ccWF4qij.s 			page 64


1585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     if(__HAL_LPTIM_GET_IT_SOURCE(hlptim, LPTIM_IT_DOWN) != RESET)
1586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
1587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Clear Direction counter changed from Up to Down flag */
1588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       __HAL_LPTIM_CLEAR_FLAG(hlptim, LPTIM_FLAG_DOWN);
1589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Direction counter changed from Up to Down Callback */
1591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #if (USE_HAL_LPTIM_REGISTER_CALLBACKS == 1)
1592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->DirectionDownCallback(hlptim);
1593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #else
1594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       HAL_LPTIM_DirectionDownCallback(hlptim);      
1595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
1596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     }
1597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
1599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Compare match callback in non-blocking mode.
1602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval None
1604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** __weak void HAL_LPTIM_CompareMatchCallback(LPTIM_HandleTypeDef *hlptim)
1606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 2025              		.loc 1 1606 0
 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 0
 2028              		@ frame_needed = 0, uses_anonymous_args = 0
 2029              		@ link register save eliminated.
 2030              	.LVL119:
1607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Prevent unused argument(s) compilation warning */
1608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   UNUSED(hlptim);
1609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
1610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****             the HAL_LPTIM_CompareMatchCallback could be implemented in the user file
1612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    */  
1613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 2031              		.loc 1 1613 0
 2032              		@ sp needed
 2033 0000 7047     		bx	lr
 2034              		.cfi_endproc
 2035              	.LFE205:
 2037              		.section	.text.HAL_LPTIM_AutoReloadMatchCallback,"ax",%progbits
 2038              		.align	1
 2039              		.weak	HAL_LPTIM_AutoReloadMatchCallback
 2040              		.syntax unified
 2041              		.code	16
 2042              		.thumb_func
 2043              		.fpu softvfp
 2045              	HAL_LPTIM_AutoReloadMatchCallback:
 2046              	.LFB206:
1614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Autoreload match callback in non-blocking mode.
1617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval None
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** __weak void HAL_LPTIM_AutoReloadMatchCallback(LPTIM_HandleTypeDef *hlptim)
1621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
ARM GAS  /tmp/ccWF4qij.s 			page 65


 2047              		.loc 1 1621 0
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 0
 2050              		@ frame_needed = 0, uses_anonymous_args = 0
 2051              		@ link register save eliminated.
 2052              	.LVL120:
1622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Prevent unused argument(s) compilation warning */
1623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   UNUSED(hlptim);
1624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****             the HAL_LPTIM_AutoReloadMatchCallback could be implemented in the user file
1627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    */  
1628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 2053              		.loc 1 1628 0
 2054              		@ sp needed
 2055 0000 7047     		bx	lr
 2056              		.cfi_endproc
 2057              	.LFE206:
 2059              		.section	.text.HAL_LPTIM_TriggerCallback,"ax",%progbits
 2060              		.align	1
 2061              		.weak	HAL_LPTIM_TriggerCallback
 2062              		.syntax unified
 2063              		.code	16
 2064              		.thumb_func
 2065              		.fpu softvfp
 2067              	HAL_LPTIM_TriggerCallback:
 2068              	.LFB207:
1629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Trigger detected callback in non-blocking mode.
1632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval None
1634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** __weak void HAL_LPTIM_TriggerCallback(LPTIM_HandleTypeDef *hlptim)
1636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 2069              		.loc 1 1636 0
 2070              		.cfi_startproc
 2071              		@ args = 0, pretend = 0, frame = 0
 2072              		@ frame_needed = 0, uses_anonymous_args = 0
 2073              		@ link register save eliminated.
 2074              	.LVL121:
1637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Prevent unused argument(s) compilation warning */
1638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   UNUSED(hlptim);
1639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
1640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****             the HAL_LPTIM_TriggerCallback could be implemented in the user file
1642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    */  
1643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 2075              		.loc 1 1643 0
 2076              		@ sp needed
 2077 0000 7047     		bx	lr
 2078              		.cfi_endproc
 2079              	.LFE207:
 2081              		.section	.text.HAL_LPTIM_CompareWriteCallback,"ax",%progbits
 2082              		.align	1
 2083              		.weak	HAL_LPTIM_CompareWriteCallback
 2084              		.syntax unified
ARM GAS  /tmp/ccWF4qij.s 			page 66


 2085              		.code	16
 2086              		.thumb_func
 2087              		.fpu softvfp
 2089              	HAL_LPTIM_CompareWriteCallback:
 2090              	.LFB208:
1644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Compare write callback in non-blocking mode.
1647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval None
1649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** __weak void HAL_LPTIM_CompareWriteCallback(LPTIM_HandleTypeDef *hlptim)
1651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 2091              		.loc 1 1651 0
 2092              		.cfi_startproc
 2093              		@ args = 0, pretend = 0, frame = 0
 2094              		@ frame_needed = 0, uses_anonymous_args = 0
 2095              		@ link register save eliminated.
 2096              	.LVL122:
1652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Prevent unused argument(s) compilation warning */
1653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   UNUSED(hlptim);
1654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
1655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****             the HAL_LPTIM_CompareWriteCallback could be implemented in the user file
1657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    */  
1658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 2097              		.loc 1 1658 0
 2098              		@ sp needed
 2099 0000 7047     		bx	lr
 2100              		.cfi_endproc
 2101              	.LFE208:
 2103              		.section	.text.HAL_LPTIM_AutoReloadWriteCallback,"ax",%progbits
 2104              		.align	1
 2105              		.weak	HAL_LPTIM_AutoReloadWriteCallback
 2106              		.syntax unified
 2107              		.code	16
 2108              		.thumb_func
 2109              		.fpu softvfp
 2111              	HAL_LPTIM_AutoReloadWriteCallback:
 2112              	.LFB209:
1659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Autoreload write callback in non-blocking mode. 
1662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval None
1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** __weak void HAL_LPTIM_AutoReloadWriteCallback(LPTIM_HandleTypeDef *hlptim)
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 2113              		.loc 1 1666 0
 2114              		.cfi_startproc
 2115              		@ args = 0, pretend = 0, frame = 0
 2116              		@ frame_needed = 0, uses_anonymous_args = 0
 2117              		@ link register save eliminated.
 2118              	.LVL123:
1667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Prevent unused argument(s) compilation warning */
1668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   UNUSED(hlptim);
1669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
ARM GAS  /tmp/ccWF4qij.s 			page 67


1670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****             the HAL_LPTIM_AutoReloadWriteCallback could be implemented in the user file
1672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    */  
1673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 2119              		.loc 1 1673 0
 2120              		@ sp needed
 2121 0000 7047     		bx	lr
 2122              		.cfi_endproc
 2123              	.LFE209:
 2125              		.section	.text.HAL_LPTIM_DirectionUpCallback,"ax",%progbits
 2126              		.align	1
 2127              		.weak	HAL_LPTIM_DirectionUpCallback
 2128              		.syntax unified
 2129              		.code	16
 2130              		.thumb_func
 2131              		.fpu softvfp
 2133              	HAL_LPTIM_DirectionUpCallback:
 2134              	.LFB210:
1674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Direction counter changed from Down to Up callback in non-blocking mode.
1677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval None
1679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** __weak void HAL_LPTIM_DirectionUpCallback(LPTIM_HandleTypeDef *hlptim)
1681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 2135              		.loc 1 1681 0
 2136              		.cfi_startproc
 2137              		@ args = 0, pretend = 0, frame = 0
 2138              		@ frame_needed = 0, uses_anonymous_args = 0
 2139              		@ link register save eliminated.
 2140              	.LVL124:
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Prevent unused argument(s) compilation warning */
1683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   UNUSED(hlptim);
1684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
1685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****             the HAL_LPTIM_DirectionUpCallback could be implemented in the user file
1687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    */  
1688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 2141              		.loc 1 1688 0
 2142              		@ sp needed
 2143 0000 7047     		bx	lr
 2144              		.cfi_endproc
 2145              	.LFE210:
 2147              		.section	.text.HAL_LPTIM_DirectionDownCallback,"ax",%progbits
 2148              		.align	1
 2149              		.weak	HAL_LPTIM_DirectionDownCallback
 2150              		.syntax unified
 2151              		.code	16
 2152              		.thumb_func
 2153              		.fpu softvfp
 2155              	HAL_LPTIM_DirectionDownCallback:
 2156              	.LFB211:
1689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Direction counter changed from Up to Down callback in non-blocking mode.
1692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
ARM GAS  /tmp/ccWF4qij.s 			page 68


1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval None
1694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** __weak void HAL_LPTIM_DirectionDownCallback(LPTIM_HandleTypeDef *hlptim)
1696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 2157              		.loc 1 1696 0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 0, uses_anonymous_args = 0
 2161              		@ link register save eliminated.
 2162              	.LVL125:
1697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Prevent unused argument(s) compilation warning */
1698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   UNUSED(hlptim);
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     
1700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****             the HAL_LPTIM_DirectionDownCallback could be implemented in the user file
1702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****    */  
1703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 2163              		.loc 1 1703 0
 2164              		@ sp needed
 2165 0000 7047     		bx	lr
 2166              		.cfi_endproc
 2167              	.LFE211:
 2169              		.section	.text.HAL_LPTIM_IRQHandler,"ax",%progbits
 2170              		.align	1
 2171              		.global	HAL_LPTIM_IRQHandler
 2172              		.syntax unified
 2173              		.code	16
 2174              		.thumb_func
 2175              		.fpu softvfp
 2177              	HAL_LPTIM_IRQHandler:
 2178              	.LFB204:
1479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Compare match interrupt */
 2179              		.loc 1 1479 0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 0
 2182              		@ frame_needed = 0, uses_anonymous_args = 0
 2183              	.LVL126:
 2184 0000 10B5     		push	{r4, lr}
 2185              	.LCFI26:
 2186              		.cfi_def_cfa_offset 8
 2187              		.cfi_offset 4, -8
 2188              		.cfi_offset 14, -4
 2189 0002 0400     		movs	r4, r0
1481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 2190              		.loc 1 1481 0
 2191 0004 0368     		ldr	r3, [r0]
 2192 0006 1A68     		ldr	r2, [r3]
 2193 0008 D207     		lsls	r2, r2, #31
 2194 000a 02D5     		bpl	.L95
1483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
 2195              		.loc 1 1483 0
 2196 000c 9A68     		ldr	r2, [r3, #8]
 2197 000e D207     		lsls	r2, r2, #31
 2198 0010 2AD4     		bmi	.L102
 2199              	.LVL127:
 2200              	.L95:
1498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
ARM GAS  /tmp/ccTSedjh.s 			page 69


 2201              		.loc 1 1498 0
 2202 0012 2368     		ldr	r3, [r4]
 2203 0014 1A68     		ldr	r2, [r3]
 2204 0016 9207     		lsls	r2, r2, #30
 2205 0018 02D5     		bpl	.L96
1500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
 2206              		.loc 1 1500 0
 2207 001a 9A68     		ldr	r2, [r3, #8]
 2208 001c 9207     		lsls	r2, r2, #30
 2209 001e 28D4     		bmi	.L103
 2210              	.L96:
1515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 2211              		.loc 1 1515 0
 2212 0020 2368     		ldr	r3, [r4]
 2213 0022 1A68     		ldr	r2, [r3]
 2214 0024 5207     		lsls	r2, r2, #29
 2215 0026 02D5     		bpl	.L97
1517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
 2216              		.loc 1 1517 0
 2217 0028 9A68     		ldr	r2, [r3, #8]
 2218 002a 5207     		lsls	r2, r2, #29
 2219 002c 27D4     		bmi	.L104
 2220              	.L97:
1532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 2221              		.loc 1 1532 0
 2222 002e 2368     		ldr	r3, [r4]
 2223 0030 1A68     		ldr	r2, [r3]
 2224 0032 1207     		lsls	r2, r2, #28
 2225 0034 02D5     		bpl	.L98
1534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
 2226              		.loc 1 1534 0
 2227 0036 9A68     		ldr	r2, [r3, #8]
 2228 0038 1207     		lsls	r2, r2, #28
 2229 003a 26D4     		bmi	.L105
 2230              	.L98:
1549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 2231              		.loc 1 1549 0
 2232 003c 2368     		ldr	r3, [r4]
 2233 003e 1A68     		ldr	r2, [r3]
 2234 0040 D206     		lsls	r2, r2, #27
 2235 0042 02D5     		bpl	.L99
1551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
 2236              		.loc 1 1551 0
 2237 0044 9A68     		ldr	r2, [r3, #8]
 2238 0046 D206     		lsls	r2, r2, #27
 2239 0048 25D4     		bmi	.L106
 2240              	.L99:
1566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 2241              		.loc 1 1566 0
 2242 004a 2368     		ldr	r3, [r4]
 2243 004c 1A68     		ldr	r2, [r3]
 2244 004e 9206     		lsls	r2, r2, #26
 2245 0050 02D5     		bpl	.L100
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
 2246              		.loc 1 1568 0
 2247 0052 9A68     		ldr	r2, [r3, #8]
 2248 0054 9206     		lsls	r2, r2, #26
ARM GAS  /tmp/ccTSedjh.s 			page 70


 2249 0056 24D4     		bmi	.L107
 2250              	.L100:
1583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
 2251              		.loc 1 1583 0
 2252 0058 2368     		ldr	r3, [r4]
 2253 005a 1A68     		ldr	r2, [r3]
 2254 005c 5206     		lsls	r2, r2, #25
 2255 005e 02D5     		bpl	.L94
1585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
 2256              		.loc 1 1585 0
 2257 0060 9A68     		ldr	r2, [r3, #8]
 2258 0062 5206     		lsls	r2, r2, #25
 2259 0064 23D4     		bmi	.L108
 2260              	.L94:
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 2261              		.loc 1 1598 0
 2262              		@ sp needed
 2263              	.LVL128:
 2264 0066 10BD     		pop	{r4, pc}
 2265              	.LVL129:
 2266              	.L102:
1486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
 2267              		.loc 1 1486 0
 2268 0068 0122     		movs	r2, #1
 2269 006a 5A60     		str	r2, [r3, #4]
1492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
 2270              		.loc 1 1492 0
 2271 006c FFF7FEFF 		bl	HAL_LPTIM_CompareMatchCallback
 2272              	.LVL130:
 2273 0070 CFE7     		b	.L95
 2274              	.L103:
1503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
 2275              		.loc 1 1503 0
 2276 0072 0222     		movs	r2, #2
 2277 0074 5A60     		str	r2, [r3, #4]
1509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
 2278              		.loc 1 1509 0
 2279 0076 2000     		movs	r0, r4
 2280 0078 FFF7FEFF 		bl	HAL_LPTIM_AutoReloadMatchCallback
 2281              	.LVL131:
 2282 007c D0E7     		b	.L96
 2283              	.L104:
1520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
 2284              		.loc 1 1520 0
 2285 007e 0422     		movs	r2, #4
 2286 0080 5A60     		str	r2, [r3, #4]
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
 2287              		.loc 1 1526 0
 2288 0082 2000     		movs	r0, r4
 2289 0084 FFF7FEFF 		bl	HAL_LPTIM_TriggerCallback
 2290              	.LVL132:
 2291 0088 D1E7     		b	.L97
 2292              	.L105:
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
 2293              		.loc 1 1537 0
 2294 008a 0822     		movs	r2, #8
 2295 008c 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccTSedjh.s 			page 71


1543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
 2296              		.loc 1 1543 0
 2297 008e 2000     		movs	r0, r4
 2298 0090 FFF7FEFF 		bl	HAL_LPTIM_CompareWriteCallback
 2299              	.LVL133:
 2300 0094 D2E7     		b	.L98
 2301              	.L106:
1554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
 2302              		.loc 1 1554 0
 2303 0096 1022     		movs	r2, #16
 2304 0098 5A60     		str	r2, [r3, #4]
1560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
 2305              		.loc 1 1560 0
 2306 009a 2000     		movs	r0, r4
 2307 009c FFF7FEFF 		bl	HAL_LPTIM_AutoReloadWriteCallback
 2308              	.LVL134:
 2309 00a0 D3E7     		b	.L99
 2310              	.L107:
1571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
 2311              		.loc 1 1571 0
 2312 00a2 2022     		movs	r2, #32
 2313 00a4 5A60     		str	r2, [r3, #4]
1577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
 2314              		.loc 1 1577 0
 2315 00a6 2000     		movs	r0, r4
 2316 00a8 FFF7FEFF 		bl	HAL_LPTIM_DirectionUpCallback
 2317              	.LVL135:
 2318 00ac D4E7     		b	.L100
 2319              	.L108:
1588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
 2320              		.loc 1 1588 0
 2321 00ae 4022     		movs	r2, #64
 2322 00b0 5A60     		str	r2, [r3, #4]
1594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
 2323              		.loc 1 1594 0
 2324 00b2 2000     		movs	r0, r4
 2325 00b4 FFF7FEFF 		bl	HAL_LPTIM_DirectionDownCallback
 2326              	.LVL136:
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
 2327              		.loc 1 1598 0
 2328 00b8 D5E7     		b	.L94
 2329              		.cfi_endproc
 2330              	.LFE204:
 2332              		.section	.text.HAL_LPTIM_GetState,"ax",%progbits
 2333              		.align	1
 2334              		.global	HAL_LPTIM_GetState
 2335              		.syntax unified
 2336              		.code	16
 2337              		.thumb_func
 2338              		.fpu softvfp
 2340              	HAL_LPTIM_GetState:
 2341              	.LFB212:
1704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #if (USE_HAL_LPTIM_REGISTER_CALLBACKS == 1)
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Register a User LPTIM callback to be used instead of the weak predefined callback
1708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param hlptim LPTIM handle
ARM GAS  /tmp/ccTSedjh.s 			page 72


1709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param CallbackID ID of the callback to be registered
1710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *        This parameter can be one of the following values:
1711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_MSPINIT_CB_ID          LPTIM Base Msp Init Callback ID
1712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_MSPDEINIT_CB_ID        LPTIM Base Msp DeInit Callback ID
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_COMPARE_MATCH_CB_ID    Compare match Callback ID
1714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_AUTORELOAD_MATCH_CB_ID Auto-reload match Callback ID
1715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_TRIGGER_CB_ID          External trigger event detection Callback I
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_COMPARE_WRITE_CB_ID    Compare register write complete Callback ID
1717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_AUTORELOAD_WRITE_CB_ID Auto-reload register write complete Callbac
1718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_DIRECTION_UP_CB_ID     Up-counting direction change Callback ID
1719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_DIRECTION_DOWN_CB_ID   Down-counting direction change Callback ID
1720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param pCallback pointer to the callback function
1721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval status
1722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_RegisterCallback(LPTIM_HandleTypeDef *       hlptim,
1724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                                              HAL_LPTIM_CallbackIDTypeDef CallbackID,
1725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                                              pLPTIM_CallbackTypeDef      pCallback)
1726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   HAL_StatusTypeDef status = HAL_OK;
1728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(pCallback == NULL)
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     return HAL_ERROR;
1732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   
1734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Process locked */
1735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LOCK(hlptim);
1736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(hlptim->State == HAL_LPTIM_STATE_READY)
1738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     switch (CallbackID)
1740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
1741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_MSPINIT_CB_ID :
1742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->MspInitCallback = pCallback;
1743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_MSPDEINIT_CB_ID :
1746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->MspDeInitCallback = pCallback;
1747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_COMPARE_MATCH_CB_ID :
1750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->CompareMatchCallback = pCallback;
1751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_AUTORELOAD_MATCH_CB_ID :
1754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->AutoReloadMatchCallback = pCallback;
1755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_TRIGGER_CB_ID :
1758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->TriggerCallback = pCallback;
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_COMPARE_WRITE_CB_ID :
1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->CompareWriteCallback = pCallback;
1763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_AUTORELOAD_WRITE_CB_ID :
ARM GAS  /tmp/ccTSedjh.s 			page 73


1766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->AutoReloadWriteCallback = pCallback;
1767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_DIRECTION_UP_CB_ID :
1770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->DirectionUpCallback = pCallback;
1771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_DIRECTION_DOWN_CB_ID :
1774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->DirectionDownCallback = pCallback;
1775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     default :
1778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Return error status */
1779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       status =  HAL_ERROR;
1780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     }
1782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   else if(hlptim->State == HAL_LPTIM_STATE_RESET)
1784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     switch (CallbackID)
1786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
1787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_MSPINIT_CB_ID :
1788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->MspInitCallback = pCallback;
1789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_MSPDEINIT_CB_ID :
1792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->MspDeInitCallback = pCallback;
1793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     default :
1796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Return error status */
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       status =  HAL_ERROR;
1798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     }
1800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   else
1802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Return error status */
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     status =  HAL_ERROR;
1805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Release Lock */
1808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_UNLOCK(hlptim);
1809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return status;
1811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
1812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Unregister a LPTIM callback
1815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *         LLPTIM callback is redirected to the weak predefined callback
1816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param hlptim LPTIM handle
1817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param CallbackID ID of the callback to be unregistered
1818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *        This parameter can be one of the following values:
1819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_MSPINIT_CB_ID          LPTIM Base Msp Init Callback ID
1820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_MSPDEINIT_CB_ID        LPTIM Base Msp DeInit Callback ID
1821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_COMPARE_MATCH_CB_ID    Compare match Callback ID
1822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_AUTORELOAD_MATCH_CB_ID Auto-reload match Callback ID
ARM GAS  /tmp/ccTSedjh.s 			page 74


1823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_TRIGGER_CB_ID          External trigger event detection Callback I
1824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_COMPARE_WRITE_CB_ID    Compare register write complete Callback ID
1825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_AUTORELOAD_WRITE_CB_ID Auto-reload register write complete Callbac
1826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_DIRECTION_UP_CB_ID     Up-counting direction change Callback ID
1827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   *          @arg @ref HAL_LPTIM_DIRECTION_DOWN_CB_ID   Down-counting direction change Callback ID
1828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval status
1829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_StatusTypeDef HAL_LPTIM_UnRegisterCallback(LPTIM_HandleTypeDef *       hlptim,
1831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                                                HAL_LPTIM_CallbackIDTypeDef CallbackID)
1832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
1833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   HAL_StatusTypeDef status = HAL_OK;
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Process locked */
1836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_LOCK(hlptim);
1837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   if(hlptim->State == HAL_LPTIM_STATE_READY)
1839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     switch (CallbackID)
1841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
1842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_MSPINIT_CB_ID :
1843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->MspInitCallback = HAL_LPTIM_MspInit;                          /* Legacy weak MspInit 
1844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_MSPDEINIT_CB_ID :
1847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->MspDeInitCallback = HAL_LPTIM_MspDeInit;                       /* Legacy weak Msp DeI
1848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_COMPARE_MATCH_CB_ID :
1851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->CompareMatchCallback = HAL_LPTIM_CompareMatchCallback;         /* Legacy weak IC Msp 
1852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_AUTORELOAD_MATCH_CB_ID :
1855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->AutoReloadMatchCallback = HAL_LPTIM_AutoReloadMatchCallback;   /* Legacy weak IC Msp 
1856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_TRIGGER_CB_ID :
1859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->TriggerCallback = HAL_LPTIM_TriggerCallback;                   /* Legacy weak OC Msp 
1860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_COMPARE_WRITE_CB_ID :
1863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->CompareWriteCallback = HAL_LPTIM_CompareWriteCallback;         /* Legacy weak OC Msp 
1864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_AUTORELOAD_WRITE_CB_ID :
1867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->AutoReloadWriteCallback = HAL_LPTIM_AutoReloadWriteCallback;   /* Legacy weak PWM Msp
1868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_DIRECTION_UP_CB_ID :
1871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->DirectionUpCallback = HAL_LPTIM_DirectionUpCallback;           /* Legacy weak PWM Msp
1872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_DIRECTION_DOWN_CB_ID :
1875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->DirectionDownCallback = HAL_LPTIM_DirectionDownCallback;       /* Legacy weak One Pul
1876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     default :
1879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****      /* Return error status */
ARM GAS  /tmp/ccTSedjh.s 			page 75


1880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       status =  HAL_ERROR;
1881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     }
1883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   else if(hlptim->State == HAL_LPTIM_STATE_RESET)
1885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     switch (CallbackID)
1887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     {
1888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_MSPINIT_CB_ID :
1889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->MspInitCallback = HAL_LPTIM_MspInit;                           /* Legacy weak MspInit
1890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
1892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     case HAL_LPTIM_MSPDEINIT_CB_ID :
1893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       hlptim->MspDeInitCallback = HAL_LPTIM_MspDeInit;                        /* Legacy weak Msp De
1894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       
1896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     default :
1897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       /* Return error status */
1898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       status =  HAL_ERROR;
1899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****       break;
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     }
1901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   else
1903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   {
1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     /* Return error status */
1905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     status =  HAL_ERROR;
1906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   }
1907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Release Lock */
1909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   __HAL_UNLOCK(hlptim);
1910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return status;
1912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
1913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** #endif /* USE_HAL_LPTIM_REGISTER_CALLBACKS */
1914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @}
1917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /** @defgroup LPTIM_Group5 Peripheral State functions 
1920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  *  @brief   Peripheral State functions. 
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****  *
1922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** @verbatim   
1923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ==============================================================================
1924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****                       ##### Peripheral State functions #####
1925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   ==============================================================================  
1926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     [..]
1927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****     This subsection permits to get in run-time the status of the peripheral.
1928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** @endverbatim
1930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @{
1931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** 
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** /**
1934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @brief  Return the LPTIM handle state.
1935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @param  hlptim LPTIM handle
1936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   * @retval HAL state
ARM GAS  /tmp/ccTSedjh.s 			page 76


1937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   */
1938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** HAL_LPTIM_StateTypeDef HAL_LPTIM_GetState(LPTIM_HandleTypeDef *hlptim)
1939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** {
 2342              		.loc 1 1939 0
 2343              		.cfi_startproc
 2344              		@ args = 0, pretend = 0, frame = 0
 2345              		@ frame_needed = 0, uses_anonymous_args = 0
 2346              		@ link register save eliminated.
 2347              	.LVL137:
1940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   /* Return LPTIM handle state */
1941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c ****   return hlptim->State;
 2348              		.loc 1 1941 0
 2349 0000 3623     		movs	r3, #54
 2350 0002 C05C     		ldrb	r0, [r0, r3]
 2351              	.LVL138:
 2352 0004 C0B2     		uxtb	r0, r0
1942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_lptim.c **** }
 2353              		.loc 1 1942 0
 2354              		@ sp needed
 2355 0006 7047     		bx	lr
 2356              		.cfi_endproc
 2357              	.LFE212:
 2359              		.text
 2360              	.Letext0:
 2361              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2362              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2363              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 2364              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 2365              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 2366              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 2367              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 2368              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_lptim.h"
 2369              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
ARM GAS  /tmp/ccTSedjh.s 			page 77


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_lptim.c
     /tmp/ccTSedjh.s:16     .text.HAL_LPTIM_MspInit:00000000 $t
     /tmp/ccTSedjh.s:23     .text.HAL_LPTIM_MspInit:00000000 HAL_LPTIM_MspInit
     /tmp/ccTSedjh.s:39     .text.HAL_LPTIM_Init:00000000 $t
     /tmp/ccTSedjh.s:46     .text.HAL_LPTIM_Init:00000000 HAL_LPTIM_Init
     /tmp/ccTSedjh.s:206    .text.HAL_LPTIM_Init:000000a4 $d
     /tmp/ccTSedjh.s:214    .text.HAL_LPTIM_MspDeInit:00000000 $t
     /tmp/ccTSedjh.s:221    .text.HAL_LPTIM_MspDeInit:00000000 HAL_LPTIM_MspDeInit
     /tmp/ccTSedjh.s:236    .text.HAL_LPTIM_DeInit:00000000 $t
     /tmp/ccTSedjh.s:243    .text.HAL_LPTIM_DeInit:00000000 HAL_LPTIM_DeInit
     /tmp/ccTSedjh.s:296    .text.HAL_LPTIM_PWM_Start:00000000 $t
     /tmp/ccTSedjh.s:303    .text.HAL_LPTIM_PWM_Start:00000000 HAL_LPTIM_PWM_Start
     /tmp/ccTSedjh.s:358    .text.HAL_LPTIM_PWM_Start:00000034 $d
     /tmp/ccTSedjh.s:363    .text.HAL_LPTIM_PWM_Stop:00000000 $t
     /tmp/ccTSedjh.s:370    .text.HAL_LPTIM_PWM_Stop:00000000 HAL_LPTIM_PWM_Stop
     /tmp/ccTSedjh.s:403    .text.HAL_LPTIM_PWM_Start_IT:00000000 $t
     /tmp/ccTSedjh.s:410    .text.HAL_LPTIM_PWM_Start_IT:00000000 HAL_LPTIM_PWM_Start_IT
     /tmp/ccTSedjh.s:501    .text.HAL_LPTIM_PWM_Start_IT:00000070 $d
     /tmp/ccTSedjh.s:507    .text.HAL_LPTIM_PWM_Stop_IT:00000000 $t
     /tmp/ccTSedjh.s:514    .text.HAL_LPTIM_PWM_Stop_IT:00000000 HAL_LPTIM_PWM_Stop_IT
     /tmp/ccTSedjh.s:583    .text.HAL_LPTIM_PWM_Stop_IT:00000054 $d
     /tmp/ccTSedjh.s:588    .text.HAL_LPTIM_OnePulse_Start:00000000 $t
     /tmp/ccTSedjh.s:595    .text.HAL_LPTIM_OnePulse_Start:00000000 HAL_LPTIM_OnePulse_Start
     /tmp/ccTSedjh.s:649    .text.HAL_LPTIM_OnePulse_Start:00000034 $d
     /tmp/ccTSedjh.s:654    .text.HAL_LPTIM_OnePulse_Stop:00000000 $t
     /tmp/ccTSedjh.s:661    .text.HAL_LPTIM_OnePulse_Stop:00000000 HAL_LPTIM_OnePulse_Stop
     /tmp/ccTSedjh.s:694    .text.HAL_LPTIM_OnePulse_Start_IT:00000000 $t
     /tmp/ccTSedjh.s:701    .text.HAL_LPTIM_OnePulse_Start_IT:00000000 HAL_LPTIM_OnePulse_Start_IT
     /tmp/ccTSedjh.s:792    .text.HAL_LPTIM_OnePulse_Start_IT:00000070 $d
     /tmp/ccTSedjh.s:798    .text.HAL_LPTIM_OnePulse_Stop_IT:00000000 $t
     /tmp/ccTSedjh.s:805    .text.HAL_LPTIM_OnePulse_Stop_IT:00000000 HAL_LPTIM_OnePulse_Stop_IT
     /tmp/ccTSedjh.s:874    .text.HAL_LPTIM_OnePulse_Stop_IT:00000054 $d
     /tmp/ccTSedjh.s:879    .text.HAL_LPTIM_SetOnce_Start:00000000 $t
     /tmp/ccTSedjh.s:886    .text.HAL_LPTIM_SetOnce_Start:00000000 HAL_LPTIM_SetOnce_Start
     /tmp/ccTSedjh.s:942    .text.HAL_LPTIM_SetOnce_Stop:00000000 $t
     /tmp/ccTSedjh.s:949    .text.HAL_LPTIM_SetOnce_Stop:00000000 HAL_LPTIM_SetOnce_Stop
     /tmp/ccTSedjh.s:982    .text.HAL_LPTIM_SetOnce_Start_IT:00000000 $t
     /tmp/ccTSedjh.s:989    .text.HAL_LPTIM_SetOnce_Start_IT:00000000 HAL_LPTIM_SetOnce_Start_IT
     /tmp/ccTSedjh.s:1081   .text.HAL_LPTIM_SetOnce_Start_IT:00000070 $d
     /tmp/ccTSedjh.s:1086   .text.HAL_LPTIM_SetOnce_Stop_IT:00000000 $t
     /tmp/ccTSedjh.s:1093   .text.HAL_LPTIM_SetOnce_Stop_IT:00000000 HAL_LPTIM_SetOnce_Stop_IT
     /tmp/ccTSedjh.s:1162   .text.HAL_LPTIM_SetOnce_Stop_IT:00000054 $d
     /tmp/ccTSedjh.s:1167   .text.HAL_LPTIM_Encoder_Start:00000000 $t
     /tmp/ccTSedjh.s:1174   .text.HAL_LPTIM_Encoder_Start:00000000 HAL_LPTIM_Encoder_Start
     /tmp/ccTSedjh.s:1241   .text.HAL_LPTIM_Encoder_Stop:00000000 $t
     /tmp/ccTSedjh.s:1248   .text.HAL_LPTIM_Encoder_Stop:00000000 HAL_LPTIM_Encoder_Stop
     /tmp/ccTSedjh.s:1287   .text.HAL_LPTIM_Encoder_Stop:00000024 $d
     /tmp/ccTSedjh.s:1292   .text.HAL_LPTIM_Encoder_Start_IT:00000000 $t
     /tmp/ccTSedjh.s:1299   .text.HAL_LPTIM_Encoder_Start_IT:00000000 HAL_LPTIM_Encoder_Start_IT
     /tmp/ccTSedjh.s:1378   .text.HAL_LPTIM_Encoder_Stop_IT:00000000 $t
     /tmp/ccTSedjh.s:1385   .text.HAL_LPTIM_Encoder_Stop_IT:00000000 HAL_LPTIM_Encoder_Stop_IT
     /tmp/ccTSedjh.s:1436   .text.HAL_LPTIM_Encoder_Stop_IT:00000038 $d
     /tmp/ccTSedjh.s:1441   .text.HAL_LPTIM_TimeOut_Start:00000000 $t
     /tmp/ccTSedjh.s:1448   .text.HAL_LPTIM_TimeOut_Start:00000000 HAL_LPTIM_TimeOut_Start
     /tmp/ccTSedjh.s:1505   .text.HAL_LPTIM_TimeOut_Stop:00000000 $t
     /tmp/ccTSedjh.s:1512   .text.HAL_LPTIM_TimeOut_Stop:00000000 HAL_LPTIM_TimeOut_Stop
ARM GAS  /tmp/ccTSedjh.s 			page 78


     /tmp/ccTSedjh.s:1551   .text.HAL_LPTIM_TimeOut_Stop:00000024 $d
     /tmp/ccTSedjh.s:1556   .text.HAL_LPTIM_TimeOut_Start_IT:00000000 $t
     /tmp/ccTSedjh.s:1563   .text.HAL_LPTIM_TimeOut_Start_IT:00000000 HAL_LPTIM_TimeOut_Start_IT
     /tmp/ccTSedjh.s:1625   .text.HAL_LPTIM_TimeOut_Stop_IT:00000000 $t
     /tmp/ccTSedjh.s:1632   .text.HAL_LPTIM_TimeOut_Stop_IT:00000000 HAL_LPTIM_TimeOut_Stop_IT
     /tmp/ccTSedjh.s:1676   .text.HAL_LPTIM_TimeOut_Stop_IT:0000002c $d
     /tmp/ccTSedjh.s:1681   .text.HAL_LPTIM_Counter_Start:00000000 $t
     /tmp/ccTSedjh.s:1688   .text.HAL_LPTIM_Counter_Start:00000000 HAL_LPTIM_Counter_Start
     /tmp/ccTSedjh.s:1752   .text.HAL_LPTIM_Counter_Start:00000044 $d
     /tmp/ccTSedjh.s:1757   .text.HAL_LPTIM_Counter_Stop:00000000 $t
     /tmp/ccTSedjh.s:1764   .text.HAL_LPTIM_Counter_Stop:00000000 HAL_LPTIM_Counter_Stop
     /tmp/ccTSedjh.s:1797   .text.HAL_LPTIM_Counter_Start_IT:00000000 $t
     /tmp/ccTSedjh.s:1804   .text.HAL_LPTIM_Counter_Start_IT:00000000 HAL_LPTIM_Counter_Start_IT
     /tmp/ccTSedjh.s:1880   .text.HAL_LPTIM_Counter_Start_IT:00000058 $d
     /tmp/ccTSedjh.s:1885   .text.HAL_LPTIM_Counter_Stop_IT:00000000 $t
     /tmp/ccTSedjh.s:1892   .text.HAL_LPTIM_Counter_Stop_IT:00000000 HAL_LPTIM_Counter_Stop_IT
     /tmp/ccTSedjh.s:1938   .text.HAL_LPTIM_ReadCounter:00000000 $t
     /tmp/ccTSedjh.s:1945   .text.HAL_LPTIM_ReadCounter:00000000 HAL_LPTIM_ReadCounter
     /tmp/ccTSedjh.s:1964   .text.HAL_LPTIM_ReadAutoReload:00000000 $t
     /tmp/ccTSedjh.s:1971   .text.HAL_LPTIM_ReadAutoReload:00000000 HAL_LPTIM_ReadAutoReload
     /tmp/ccTSedjh.s:1990   .text.HAL_LPTIM_ReadCompare:00000000 $t
     /tmp/ccTSedjh.s:1997   .text.HAL_LPTIM_ReadCompare:00000000 HAL_LPTIM_ReadCompare
     /tmp/ccTSedjh.s:2016   .text.HAL_LPTIM_CompareMatchCallback:00000000 $t
     /tmp/ccTSedjh.s:2023   .text.HAL_LPTIM_CompareMatchCallback:00000000 HAL_LPTIM_CompareMatchCallback
     /tmp/ccTSedjh.s:2038   .text.HAL_LPTIM_AutoReloadMatchCallback:00000000 $t
     /tmp/ccTSedjh.s:2045   .text.HAL_LPTIM_AutoReloadMatchCallback:00000000 HAL_LPTIM_AutoReloadMatchCallback
     /tmp/ccTSedjh.s:2060   .text.HAL_LPTIM_TriggerCallback:00000000 $t
     /tmp/ccTSedjh.s:2067   .text.HAL_LPTIM_TriggerCallback:00000000 HAL_LPTIM_TriggerCallback
     /tmp/ccTSedjh.s:2082   .text.HAL_LPTIM_CompareWriteCallback:00000000 $t
     /tmp/ccTSedjh.s:2089   .text.HAL_LPTIM_CompareWriteCallback:00000000 HAL_LPTIM_CompareWriteCallback
     /tmp/ccTSedjh.s:2104   .text.HAL_LPTIM_AutoReloadWriteCallback:00000000 $t
     /tmp/ccTSedjh.s:2111   .text.HAL_LPTIM_AutoReloadWriteCallback:00000000 HAL_LPTIM_AutoReloadWriteCallback
     /tmp/ccTSedjh.s:2126   .text.HAL_LPTIM_DirectionUpCallback:00000000 $t
     /tmp/ccTSedjh.s:2133   .text.HAL_LPTIM_DirectionUpCallback:00000000 HAL_LPTIM_DirectionUpCallback
     /tmp/ccTSedjh.s:2148   .text.HAL_LPTIM_DirectionDownCallback:00000000 $t
     /tmp/ccTSedjh.s:2155   .text.HAL_LPTIM_DirectionDownCallback:00000000 HAL_LPTIM_DirectionDownCallback
     /tmp/ccTSedjh.s:2170   .text.HAL_LPTIM_IRQHandler:00000000 $t
     /tmp/ccTSedjh.s:2177   .text.HAL_LPTIM_IRQHandler:00000000 HAL_LPTIM_IRQHandler
     /tmp/ccTSedjh.s:2333   .text.HAL_LPTIM_GetState:00000000 $t
     /tmp/ccTSedjh.s:2340   .text.HAL_LPTIM_GetState:00000000 HAL_LPTIM_GetState

NO UNDEFINED SYMBOLS
