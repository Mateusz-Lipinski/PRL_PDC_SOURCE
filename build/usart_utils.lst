ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccVvxMcq.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usart_utils.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata.UART_PARSE.str1.4,"aMS",%progbits,1
  16              		.align	2
  17              	.LC0:
  18 0000 5B554152 		.ascii	"[UART_PARSE]: \000"
  18      545F5041 
  18      5253455D 
  18      3A2000
  19 000f 00       		.align	2
  20              	.LC3:
  21 0010 203D3E20 		.ascii	" => \000"
  21      00
  22 0015 000000   		.align	2
  23              	.LC5:
  24 0018 626C696E 		.ascii	"blink\000"
  24      6B00
  25 001e 0000     		.align	2
  26              	.LC7:
  27 0020 6F6B00   		.ascii	"ok\000"
  28 0023 00       		.align	2
  29              	.LC10:
  30 0024 61646320 		.ascii	"adc id\000"
  30      696400
  31 002b 00       		.align	2
  32              	.LC12:
  33 002c 61646320 		.ascii	"adc reset\000"
  33      72657365 
  33      7400
  34 0036 0000     		.align	2
  35              	.LC14:
  36 0038 756E6465 		.ascii	"undefined\012\000"
  36      66696E65 
  36      640A00
  37              		.section	.text.UART_PARSE,"ax",%progbits
  38              		.align	1
  39              		.global	UART_PARSE
  40              		.arch armv6s-m
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	UART_PARSE:
  47              	.LVL0:
  48              	.LFB284:
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccVvxMcq.s 			page 2


  49              		.file 1 "Src/usart_utils.c"
   1:Src/usart_utils.c **** #include "usart.h"
   2:Src/usart_utils.c **** #include <stdio.h>
   3:Src/usart_utils.c **** #include "state.h"
   4:Src/usart_utils.c **** #include "usart_utils.h"
   5:Src/usart_utils.c **** 
   6:Src/usart_utils.c **** extern state State;
   7:Src/usart_utils.c **** extern uint8_t UART_RX_BUFF[UART_RX_BUFFER_LENGTH];
   8:Src/usart_utils.c **** extern uint8_t COMMAND;
   9:Src/usart_utils.c **** 
  10:Src/usart_utils.c **** void UART_PARSE(uint8_t buffer[UART_RX_BUFFER_LENGTH])
  11:Src/usart_utils.c **** {
  50              		.loc 1 11 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 104
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		.loc 1 11 1 is_stmt 0 view .LVU1
  55 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 20
  58              		.cfi_offset 4, -20
  59              		.cfi_offset 5, -16
  60              		.cfi_offset 6, -12
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 9BB0     		sub	sp, sp, #108
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 128
  66 0004 0500     		movs	r5, r0
  67              	.LBB2:
  12:Src/usart_utils.c ****     SERIAL_WRITE("[UART_PARSE]: ");
  68              		.loc 1 12 5 is_stmt 1 view .LVU2
  69 0006 01AC     		add	r4, sp, #4
  70 0008 6022     		movs	r2, #96
  71 000a 0021     		movs	r1, #0
  72 000c 02A8     		add	r0, sp, #8
  73              	.LVL1:
  74              		.loc 1 12 5 is_stmt 0 view .LVU3
  75 000e FFF7FEFF 		bl	memset
  76              	.LVL2:
  77              		.loc 1 12 5 is_stmt 1 view .LVU4
  78 0012 3D4B     		ldr	r3, .L7
  79 0014 2200     		movs	r2, r4
  80 0016 43CB     		ldmia	r3!, {r0, r1, r6}
  81 0018 43C2     		stmia	r2!, {r0, r1, r6}
  82 001a 1988     		ldrh	r1, [r3]
  83 001c 1180     		strh	r1, [r2]
  84 001e 9B78     		ldrb	r3, [r3, #2]
  85 0020 9370     		strb	r3, [r2, #2]
  86              	.LVL3:
  87              		.loc 1 12 5 view .LVU5
  88 0022 FA27     		movs	r7, #250
  89 0024 BF00     		lsls	r7, r7, #2
  90 0026 394E     		ldr	r6, .L7+4
  91 0028 3B00     		movs	r3, r7
  92 002a 0E22     		movs	r2, #14
  93 002c 2100     		movs	r1, r4
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccVvxMcq.s 			page 3


  94 002e 3000     		movs	r0, r6
  95 0030 FFF7FEFF 		bl	HAL_UART_Transmit
  96              	.LVL4:
  97              	.LBE2:
  98              		.loc 1 12 35 view .LVU6
  99              	.LBB3:
  13:Src/usart_utils.c ****     SERIAL_WRITE(buffer);
 100              		.loc 1 13 5 view .LVU7
 101 0034 0023     		movs	r3, #0
 102 0036 0193     		str	r3, [sp, #4]
 103 0038 6022     		movs	r2, #96
 104 003a 0021     		movs	r1, #0
 105 003c 02A8     		add	r0, sp, #8
 106 003e FFF7FEFF 		bl	memset
 107              	.LVL5:
 108              		.loc 1 13 5 view .LVU8
 109 0042 2900     		movs	r1, r5
 110 0044 2000     		movs	r0, r4
 111 0046 FFF7FEFF 		bl	sprintf
 112              	.LVL6:
 113              		.loc 1 13 5 view .LVU9
 114 004a 82B2     		uxth	r2, r0
 115 004c 3B00     		movs	r3, r7
 116 004e 2100     		movs	r1, r4
 117 0050 3000     		movs	r0, r6
 118              	.LVL7:
 119              		.loc 1 13 5 is_stmt 0 view .LVU10
 120 0052 FFF7FEFF 		bl	HAL_UART_Transmit
 121              	.LVL8:
 122              	.LBE3:
 123              		.loc 1 13 25 is_stmt 1 view .LVU11
 124              	.LBB4:
  14:Src/usart_utils.c ****     SERIAL_WRITE(" => ");
 125              		.loc 1 14 5 view .LVU12
 126 0056 6022     		movs	r2, #96
 127 0058 0021     		movs	r1, #0
 128 005a 02A8     		add	r0, sp, #8
 129 005c FFF7FEFF 		bl	memset
 130              	.LVL9:
 131              		.loc 1 14 5 view .LVU13
 132 0060 2B4B     		ldr	r3, .L7+8
 133 0062 1A68     		ldr	r2, [r3]
 134 0064 0192     		str	r2, [sp, #4]
 135 0066 1B79     		ldrb	r3, [r3, #4]
 136 0068 2371     		strb	r3, [r4, #4]
 137              	.LVL10:
 138              		.loc 1 14 5 view .LVU14
 139 006a 3B00     		movs	r3, r7
 140 006c 0422     		movs	r2, #4
 141 006e 2100     		movs	r1, r4
 142 0070 3000     		movs	r0, r6
 143 0072 FFF7FEFF 		bl	HAL_UART_Transmit
 144              	.LVL11:
 145              	.LBE4:
 146              		.loc 1 14 25 view .LVU15
  15:Src/usart_utils.c ****     if (strcmp(buffer, "blink") == 0)
 147              		.loc 1 15 5 view .LVU16
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccVvxMcq.s 			page 4


 148              	.LBB5:
 149              		.loc 1 15 9 is_stmt 0 view .LVU17
 150 0076 2749     		ldr	r1, .L7+12
 151 0078 2800     		movs	r0, r5
 152 007a FFF7FEFF 		bl	strcmp
 153              	.LVL12:
 154              		.loc 1 15 8 view .LVU18
 155 007e 0028     		cmp	r0, #0
 156 0080 0AD0     		beq	.L6
  16:Src/usart_utils.c ****     {
  17:Src/usart_utils.c ****         SERIAL_WRITE("ok");
  18:Src/usart_utils.c ****         COMMAND = cmd_blink;
  19:Src/usart_utils.c ****     }
  20:Src/usart_utils.c ****     else if (strcmp(buffer, "adc id") == 0)
 157              		.loc 1 20 10 is_stmt 1 view .LVU19
 158              		.loc 1 20 14 is_stmt 0 view .LVU20
 159 0082 2549     		ldr	r1, .L7+16
 160 0084 2800     		movs	r0, r5
 161 0086 FFF7FEFF 		bl	strcmp
 162              	.LVL13:
 163              		.loc 1 20 13 view .LVU21
 164 008a 0028     		cmp	r0, #0
 165 008c 1CD1     		bne	.L4
  21:Src/usart_utils.c ****     {
  22:Src/usart_utils.c ****         COMMAND = cmd_adc_id;
 166              		.loc 1 22 9 is_stmt 1 view .LVU22
 167              		.loc 1 22 17 is_stmt 0 view .LVU23
 168 008e 234B     		ldr	r3, .L7+20
 169 0090 0222     		movs	r2, #2
 170 0092 1A70     		strb	r2, [r3]
 171              	.L1:
 172              	.LBE5:
  23:Src/usart_utils.c ****     }
  24:Src/usart_utils.c ****     else if (strcmp(buffer, "adc reset") == 0)
  25:Src/usart_utils.c ****     {
  26:Src/usart_utils.c ****         COMMAND = cmd_adc_reset;
  27:Src/usart_utils.c ****     }
  28:Src/usart_utils.c ****     else
  29:Src/usart_utils.c ****     {
  30:Src/usart_utils.c ****         SERIAL_WRITE("undefined\n");
  31:Src/usart_utils.c ****     }
  32:Src/usart_utils.c **** }...
 173              		.loc 1 32 1 view .LVU24
 174 0094 1BB0     		add	sp, sp, #108
 175              		@ sp needed
 176              	.LVL14:
 177              		.loc 1 32 1 view .LVU25
 178 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 179              	.LVL15:
 180              	.L6:
 181              	.LBB8:
 182              	.LBB6:
  17:Src/usart_utils.c ****         SERIAL_WRITE("ok");
 183              		.loc 1 17 9 is_stmt 1 view .LVU26
 184 0098 0023     		movs	r3, #0
 185 009a 0193     		str	r3, [sp, #4]
 186 009c 6022     		movs	r2, #96
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccVvxMcq.s 			page 5


 187 009e 0021     		movs	r1, #0
 188 00a0 02A8     		add	r0, sp, #8
 189 00a2 FFF7FEFF 		bl	memset
 190              	.LVL16:
  17:Src/usart_utils.c ****         SERIAL_WRITE("ok");
 191              		.loc 1 17 9 view .LVU27
 192 00a6 1E4B     		ldr	r3, .L7+24
 193 00a8 1A88     		ldrh	r2, [r3]
 194 00aa 6946     		mov	r1, sp
 195 00ac 8A80     		strh	r2, [r1, #4]
 196 00ae 9B78     		ldrb	r3, [r3, #2]
 197 00b0 8B71     		strb	r3, [r1, #6]
 198              	.LVL17:
  17:Src/usart_utils.c ****         SERIAL_WRITE("ok");
 199              		.loc 1 17 9 view .LVU28
 200 00b2 FA23     		movs	r3, #250
 201 00b4 9B00     		lsls	r3, r3, #2
 202 00b6 0222     		movs	r2, #2
 203 00b8 01A9     		add	r1, sp, #4
 204 00ba 1448     		ldr	r0, .L7+4
 205 00bc FFF7FEFF 		bl	HAL_UART_Transmit
 206              	.LVL18:
 207              	.LBE6:
  17:Src/usart_utils.c ****         SERIAL_WRITE("ok");
 208              		.loc 1 17 27 view .LVU29
  18:Src/usart_utils.c ****         COMMAND = cmd_blink;
 209              		.loc 1 18 9 view .LVU30
  18:Src/usart_utils.c ****         COMMAND = cmd_blink;
 210              		.loc 1 18 17 is_stmt 0 view .LVU31
 211 00c0 164B     		ldr	r3, .L7+20
 212 00c2 0122     		movs	r2, #1
 213 00c4 1A70     		strb	r2, [r3]
 214 00c6 E5E7     		b	.L1
 215              	.LVL19:
 216              	.L4:
  24:Src/usart_utils.c ****     else if (strcmp(buffer, "adc reset") == 0)
 217              		.loc 1 24 10 is_stmt 1 view .LVU32
  24:Src/usart_utils.c ****     else if (strcmp(buffer, "adc reset") == 0)
 218              		.loc 1 24 14 is_stmt 0 view .LVU33
 219 00c8 1649     		ldr	r1, .L7+28
 220 00ca 2800     		movs	r0, r5
 221 00cc FFF7FEFF 		bl	strcmp
 222              	.LVL20:
  24:Src/usart_utils.c ****     else if (strcmp(buffer, "adc reset") == 0)
 223              		.loc 1 24 13 view .LVU34
 224 00d0 0028     		cmp	r0, #0
 225 00d2 03D1     		bne	.L5
  26:Src/usart_utils.c ****         COMMAND = cmd_adc_reset;
 226              		.loc 1 26 9 is_stmt 1 view .LVU35
  26:Src/usart_utils.c ****         COMMAND = cmd_adc_reset;
 227              		.loc 1 26 17 is_stmt 0 view .LVU36
 228 00d4 114B     		ldr	r3, .L7+20
 229 00d6 0322     		movs	r2, #3
 230 00d8 1A70     		strb	r2, [r3]
 231 00da DBE7     		b	.L1
 232              	.L5:
 233              	.LBB7:
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccVvxMcq.s 			page 6


  30:Src/usart_utils.c ****         SERIAL_WRITE("undefined\n");
 234              		.loc 1 30 9 is_stmt 1 view .LVU37
 235 00dc 01AC     		add	r4, sp, #4
 236 00de 6022     		movs	r2, #96
 237 00e0 0021     		movs	r1, #0
 238 00e2 02A8     		add	r0, sp, #8
 239 00e4 FFF7FEFF 		bl	memset
 240              	.LVL21:
  30:Src/usart_utils.c ****         SERIAL_WRITE("undefined\n");
 241              		.loc 1 30 9 view .LVU38
 242 00e8 0F4B     		ldr	r3, .L7+32
 243 00ea 2200     		movs	r2, r4
 244 00ec 03CB     		ldmia	r3!, {r0, r1}
 245 00ee 03C2     		stmia	r2!, {r0, r1}
 246 00f0 1988     		ldrh	r1, [r3]
 247 00f2 1180     		strh	r1, [r2]
 248 00f4 9B78     		ldrb	r3, [r3, #2]
 249 00f6 9370     		strb	r3, [r2, #2]
 250              	.LVL22:
  30:Src/usart_utils.c ****         SERIAL_WRITE("undefined\n");
 251              		.loc 1 30 9 view .LVU39
 252 00f8 FA23     		movs	r3, #250
 253 00fa 9B00     		lsls	r3, r3, #2
 254 00fc 0A22     		movs	r2, #10
 255 00fe 2100     		movs	r1, r4
 256 0100 0248     		ldr	r0, .L7+4
 257 0102 FFF7FEFF 		bl	HAL_UART_Transmit
 258              	.LVL23:
 259              	.LBE7:
  30:Src/usart_utils.c ****         SERIAL_WRITE("undefined\n");
 260              		.loc 1 30 36 view .LVU40
 261              	.LBE8:
 262              		.loc 1 32 1 is_stmt 0 view .LVU41
 263 0106 C5E7     		b	.L1
 264              	.L8:
 265              		.align	2
 266              	.L7:
 267 0108 00000000 		.word	.LC0
 268 010c 00000000 		.word	huart2
 269 0110 10000000 		.word	.LC3
 270 0114 18000000 		.word	.LC5
 271 0118 24000000 		.word	.LC10
 272 011c 00000000 		.word	COMMAND
 273 0120 20000000 		.word	.LC7
 274 0124 2C000000 		.word	.LC12
 275 0128 38000000 		.word	.LC14
 276              		.cfi_endproc
 277              	.LFE284:
 279              		.text
 280              	.Letext0:
 281              		.file 2 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\machine\\_default_ty
 282              		.file 3 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 283              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 284              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 285              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 286              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 287              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccVvxMcq.s 			page 7


 288              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 289              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 290              		.file 11 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 291              		.file 12 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 292              		.file 13 "c:\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\st
 293              		.file 14 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 294              		.file 15 "Inc/usart.h"
 295              		.file 16 "Inc/state.h"
 296              		.file 17 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\stdio.h"
 297              		.file 18 "<built-in>"
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccVvxMcq.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 usart_utils.c
C:\Users\Mateusz\AppData\Local\Temp\ccVvxMcq.s:16     .rodata.UART_PARSE.str1.4:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\ccVvxMcq.s:38     .text.UART_PARSE:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccVvxMcq.s:46     .text.UART_PARSE:00000000 UART_PARSE
C:\Users\Mateusz\AppData\Local\Temp\ccVvxMcq.s:267    .text.UART_PARSE:00000108 $d

UNDEFINED SYMBOLS
memset
HAL_UART_Transmit
sprintf
strcmp
huart2
COMMAND
