ARM GAS  /tmp/ccoGswsS.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	UART_EndTxTransfer:
  23              	.LFB216:
  24              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @file    stm32g0xx_hal_uart.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   [..]
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                 inside the transmit and receive processes.
ARM GAS  /tmp/ccoGswsS.s 			page 2


  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ==================================
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
ARM GAS  /tmp/ccoGswsS.s 			page 3


  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @attention
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * All rights reserved.</center></h2>
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
ARM GAS  /tmp/ccoGswsS.s 			page 4


 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #include "stm32g0xx_hal.h"
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @addtogroup STM32G0xx_HAL_Driver
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccoGswsS.s 			page 5


 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @verbatim
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** ===============================================================================
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     in asynchronous mode.
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Baud Rate
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Word Length
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Stop Bit
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Hardware flow control
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Over Sampling Method
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) data logical level inversion
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) RX and TX pins swap
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) RX overrun detection disabling
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) DMA disabling on RX error
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) MSB first on communication line
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) auto Baud rate detection
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     are available in reference manual).
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 6


 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @endverbatim
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   following table.
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   Table 1. UART frame format.
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart == NULL)
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Check the parameters */
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Check the parameters */
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/ccoGswsS.s 			page 7


 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware */
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart == NULL)
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check UART instance */
ARM GAS  /tmp/ccoGswsS.s 			page 8


 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware */
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
ARM GAS  /tmp/ccoGswsS.s 			page 9


 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart             UART handle.
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart == NULL)
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the LIN UART instance */
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the Break detection length parameter */
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware */
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Set the UART Communication parameters */
ARM GAS  /tmp/ccoGswsS.s 			page 10


 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart        UART handle.
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart == NULL)
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the wake up method parameter */
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
ARM GAS  /tmp/ccoGswsS.s 			page 11


 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware */
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
ARM GAS  /tmp/ccoGswsS.s 			page 12


 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart == NULL)
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the parameters */
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DeInit the low level hardware */
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DeInit the low level hardware */
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 13


 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Register a User UART Callback
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart uart handle
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (pCallback == NULL)
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 14


 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (CallbackID)
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default :
ARM GAS  /tmp/ccoGswsS.s 			page 15


 776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         status =  HAL_ERROR;
 779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (CallbackID)
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default :
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         status =  HAL_ERROR;
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     status =  HAL_ERROR;
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return status;
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart uart handle
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccoGswsS.s 			page 16


 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (CallbackID)
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
ARM GAS  /tmp/ccoGswsS.s 			page 17


 890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default :
 897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         status =  HAL_ERROR;
 900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (CallbackID)
 906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default :
 916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         status =  HAL_ERROR;
 919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     status =  HAL_ERROR;
 927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return status;
 932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
 937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
 942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @verbatim
 943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
 944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                       ##### IO operation functions #####
 945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
 946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
ARM GAS  /tmp/ccoGswsS.s 			page 18


 947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     and Half duplex data transfers.
 948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) There are two mode of transfer:
 950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            after finishing transfer.
 953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            using DMA mode.
 958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Blocking mode API's are :
 963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Receive()
 965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Abort()
 987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         Errors are handled as follows :
1000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
ARM GAS  /tmp/ccoGswsS.s 			page 19


1004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @endverbatim
1013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
1014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         of u16 provided through pData.
1021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart   UART handle.
1030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t *pdata16bits;
1039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t tickstart;
1040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return  HAL_ERROR;
1047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        handled through a u16 cast. */
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return  HAL_ERROR;
1057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_LOCK(huart);
ARM GAS  /tmp/ccoGswsS.s 			page 20


1061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     tickstart = HAL_GetTick();
1067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = Size;
1070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata8bits  = NULL;
1075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
1078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata8bits  = pData;
1080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata16bits = NULL;
1081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return HAL_TIMEOUT;
1088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (pdata8bits == NULL)
1090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata16bits++;
1093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
1095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata8bits++;
1098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxXferCount--;
1100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_TIMEOUT;
1105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_OK;
1113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_BUSY;
1117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccoGswsS.s 			page 21


1118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         of u16 available through pData.
1125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart   UART handle.
1134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t *pdata16bits;
1143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t uhMask;
1144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t tickstart;
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return  HAL_ERROR;
1152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        handled through a u16 cast. */
1157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return  HAL_ERROR;
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_LOCK(huart);
1166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     tickstart = HAL_GetTick();
1172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferSize  = Size;
1174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = Size;
ARM GAS  /tmp/ccoGswsS.s 			page 22


1175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
1179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata8bits  = NULL;
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata8bits  = pData;
1189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata16bits = NULL;
1190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* as long as data have to be received */
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return HAL_TIMEOUT;
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (pdata8bits == NULL)
1200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata16bits++;
1203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
1205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata8bits++;
1208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxXferCount--;
1210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_OK;
1218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_BUSY;
1222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         of u16 provided through pData.
1230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
ARM GAS  /tmp/ccoGswsS.s 			page 23


1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_ERROR;
1247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        handled through a u16 cast. */
1252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return  HAL_ERROR;
1257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_LOCK(huart);
1261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = Size;
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxISR       = NULL;
1266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
1279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
ARM GAS  /tmp/ccoGswsS.s 			page 24


1289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
1296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_OK;
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_BUSY;
1311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         of u16 available through pData.
1319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_ERROR;
1336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        handled through a u16 cast. */
1341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return  HAL_ERROR;
ARM GAS  /tmp/ccoGswsS.s 			page 25


1346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_LOCK(huart);
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferSize  = Size;
1353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = Size;
1354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxISR       = NULL;
1355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
1366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
1367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
1372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
1374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
1376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
1383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
1385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
1390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
1392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
1394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
1400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_OK;
ARM GAS  /tmp/ccoGswsS.s 			page 26


1403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_BUSY;
1407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         of u16 provided through pData.
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
1418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_ERROR;
1432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be
1436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return  HAL_ERROR;
1442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_LOCK(huart);
1446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = Size;
1450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
ARM GAS  /tmp/ccoGswsS.s 			page 27


1460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the DMA error callback */
1463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the DMA abort callback */
1466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Set error code to DMA */
1472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return HAL_ERROR;
1480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     in the UART CR3 register */
1489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_OK;
1492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_BUSY;
1496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the parity bit (MSB position).
1503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         of u16 available through pData.
1506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
ARM GAS  /tmp/ccoGswsS.s 			page 28


1517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_ERROR;
1523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be
1527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return  HAL_ERROR;
1533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_LOCK(huart);
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferSize = Size;
1540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the DMA error callback */
1553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
1554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the DMA abort callback */
1556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the DMA channel */
1559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
1560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Set error code to DMA */
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return HAL_ERROR;
1570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 29


1574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     in the UART CR3 register */
1582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_OK;
1585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_BUSY;
1589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
1603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
1624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
ARM GAS  /tmp/ccoGswsS.s 			page 30


1631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
1634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
ARM GAS  /tmp/ccoGswsS.s 			page 31


1688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set error code to DMA */
1689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
1692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
1712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set error code to DMA */
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
1717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
1724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
1729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This procedure performs following operations :
1731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Set handle State to READY
1735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
ARM GAS  /tmp/ccoGswsS.s 			page 32


1745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
1760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set error code to DMA */
1761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
1764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
1765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
1785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set error code to DMA */
1786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
1789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
1790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
1796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
ARM GAS  /tmp/ccoGswsS.s 			page 33


1802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Discard the received data */
1808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
1817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
1822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This procedure performs following operations :
1824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Set handle State to READY
1828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
1853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set error code to DMA */
1854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
1857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
1858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
ARM GAS  /tmp/ccoGswsS.s 			page 34


1859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
1864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
1875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
1880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This procedure performs following operations :
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Set handle State to READY
1886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
1911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set error code to DMA */
1912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
1915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
ARM GAS  /tmp/ccoGswsS.s 			page 35


1916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
1922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Discard the received data */
1927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
1938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This procedure performs following operations :
1940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Set handle State to READY
1944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable interrupts */
1954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE | USA
1955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      before any call to DMA Abort functions */
1959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        Otherwise, set it to NULL */
1964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
1969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccoGswsS.s 			page 36


1973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        Otherwise, set it to NULL */
1978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
1983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Abort DMA TX */
2001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
2004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
2006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         abortcplt = 0U;
2008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Abort DMA RX */
2024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
2027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         abortcplt = 1U;
2028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
ARM GAS  /tmp/ccoGswsS.s 			page 37


2030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         abortcplt = 0U;
2032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (abortcplt == 1U)
2038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear ISR function pointers */
2044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxISR = NULL;
2045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxISR = NULL;
2046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Reset errorCode */
2048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
2049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Discard the received data */
2060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
2064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call registered Abort complete callback */
2069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
2077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This procedure performs following operations :
2084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
ARM GAS  /tmp/ccoGswsS.s 			page 38


2087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Set handle State to READY
2088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable interrupts */
2096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Abort DMA TX */
2112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
2119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Reset Tx transfer counter */
2121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxXferCount = 0U;
2122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Clear TxISR function pointers */
2124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxISR = NULL;
2125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
2140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Reset Tx transfer counter */
2142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 39


2144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear TxISR function pointers */
2145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxISR = NULL;
2146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
2167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This procedure performs following operations :
2174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Set handle State to READY
2178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 40


2201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Abort DMA RX */
2202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
2209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Reset Rx transfer counter */
2211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxXferCount = 0U;
2212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Clear RxISR function pointer */
2214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Discard the received data */
2220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
2236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Reset Rx transfer counter */
2238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear RxISR function pointer */
2241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccoGswsS.s 			page 41


2258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
2260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
2265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t errorflags;
2274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t errorcode;
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* If no error occurs */
2277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
2278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (errorflags == 0U)
2279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (huart->RxISR != NULL)
2286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxISR(huart);
2288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return;
2290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* If some errors occur */
2294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((errorflags != 0U)
2295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE)) != 0U))))
2297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
ARM GAS  /tmp/ccoGswsS.s 			page 42


2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
2336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (huart->RxISR != NULL)
2341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
2342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->RxISR(huart);
2343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
2344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          consider error as blocking */
2348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ((errorcode & HAL_UART_ERROR_ORE) != 0U))
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
2360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           {
2365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             /* Abort DMA RX */
2370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             {
ARM GAS  /tmp/ccoGswsS.s 			page 43


2372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             }
2375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           }
2376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           else
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           {
2378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             /* Call user error callback */
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             /*Call registered error callback*/
2381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             huart->ErrorCallback(huart);
2382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             /*Call legacy weak error callback*/
2384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           }
2388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
2389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         else
2390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
2391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Call user error callback */
2392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call registered error callback*/
2394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCallback(huart);
2395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call legacy weak error callback*/
2397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
2402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            Error is notified to user through user error callback */
2405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call registered error callback*/
2407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCallback(huart);
2408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call legacy weak error callback*/
2410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
2416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   } /* End if some error occurs */
2418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call registered Wakeup Callback */
ARM GAS  /tmp/ccoGswsS.s 			page 44


2429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->WakeupCallback(huart);
2430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
2435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
2439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->TxISR != NULL)
2443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxISR(huart);
2445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
2447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
2454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
2467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/ccoGswsS.s 			page 45


2486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 46


2543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  UART error callback.
2545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
ARM GAS  /tmp/ccoGswsS.s 			page 47


2600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
2605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  @brief   UART control functions
2609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
2610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @verbatim
2611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
2612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
2614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
2615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @endverbatim
2626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
2627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
2638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
ARM GAS  /tmp/ccoGswsS.s 			page 48


2657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
2658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
2673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear TE and RE bits */
2691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
2701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status.
2707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
2711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear TE and RE bits */
ARM GAS  /tmp/ccoGswsS.s 			page 49


2714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
2724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Transmit break characters.
2729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the parameters */
2735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
2738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Send break characters */
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
2743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
2749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
2753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
2758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @verbatim
2759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ==============================================================================
2760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ==============================================================================
2762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
2763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     This subsection provides functions allowing to :
2764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (+) Return the UART handle state.
2765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (+) Return the UART handle error code
2766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @endverbatim
2768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
2769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 50


2771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Return the UART handle state.
2773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL state
2776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t temp1;
2780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t temp2;
2781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   temp1 = huart->gState;
2782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   temp2 = huart->RxState;
2783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval UART Error Code
2792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return huart->ErrorCode;
2796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
2799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
2803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
2807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval none
2813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Init the UART Callback settings */
2818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
ARM GAS  /tmp/ccoGswsS.s 			page 51


2828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
2836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t tmpreg;
2841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t brrtemp;
2842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
2846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t pclk;
2847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the parameters */
2849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
2856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
2866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
2876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * to huart->Init.StopBits value */
2881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Configure
ARM GAS  /tmp/ccoGswsS.s 			page 52


2885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Configure
2899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
2900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
2901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check LPUART instance */
2906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Retrieve frequency clock */
2909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (clocksource)
2910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetPCLK1Freq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescal
2913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
2914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
2917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetSysClockFreq() / UART_GET_DIV_FACTOR(huart->Init.ClockPres
2919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
2920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
2923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default:
2924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ret = HAL_ERROR;
2925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
2926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* if proper clock source reported */
2929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (lpuart_ker_ck_pres != 0U)
2930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
2933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
2934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ret = HAL_ERROR;
2936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
2938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         switch (clocksource)
2940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
2941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           case UART_CLOCKSOURCE_PCLK1:
ARM GAS  /tmp/ccoGswsS.s 			page 53


2942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             pclk = HAL_RCC_GetPCLK1Freq();
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPres
2944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
2945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
2947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
2948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           case UART_CLOCKSOURCE_SYSCLK:
2949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             pclk = HAL_RCC_GetSysClockFreq();
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPres
2951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
2952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.Cloc
2954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
2955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           default:
2956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             ret = HAL_ERROR;
2957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
2958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
2959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
2961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
2962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
2963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
2964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
2965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         else
2966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
2967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ret = HAL_ERROR;
2968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
2969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       } /*   if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096
2970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     } /* if (lpuart_ker_ck_pres != 0) */
2971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (clocksource)
2976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
2980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
2981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.Clock
2983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
2984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
2987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
2988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->
2990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
2991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default:
2992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ret = HAL_ERROR;
2993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
2994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccoGswsS.s 			page 54


2999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
3000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
3002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
3004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ret = HAL_ERROR;
3006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
3009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (clocksource)
3011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
3015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
3022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart-
3025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default:
3027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ret = HAL_ERROR;
3028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
3035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
3037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ret = HAL_ERROR;
3039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear ISR function pointers */
3047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxISR = NULL;
3048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxISR = NULL;
3049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return ret;
3051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/ccoGswsS.s 			page 55


3056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure data inversion */
3078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
ARM GAS  /tmp/ccoGswsS.s 			page 56


3113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Check the UART Idle State.
3129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
3130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
3131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t tickstart;
3135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   tickstart = HAL_GetTick();
3141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Timeout occurred */
3149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_TIMEOUT;
3150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Wait until REACK flag is set */
3157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Timeout occurred */
3160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_TIMEOUT;
3161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Initialize the UART State */
3165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 57


3170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
3171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart     UART handle.
3176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Tickstart Tick start value
3179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Timeout   Timeout duration
3180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
3181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Wait until flag is set */
3186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Check for the Timeout */
3189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return HAL_TIMEOUT;
3203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
3207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
3213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
  25              		.loc 1 3216 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
3217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
  31              		.loc 1 3218 0
  32 0000 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccoGswsS.s 			page 58


  33 0002 1368     		ldr	r3, [r2]
  34 0004 C021     		movs	r1, #192
  35 0006 8B43     		bics	r3, r1
  36 0008 1360     		str	r3, [r2]
3219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
  37              		.loc 1 3219 0
  38 000a 0268     		ldr	r2, [r0]
  39 000c 9368     		ldr	r3, [r2, #8]
  40 000e 0349     		ldr	r1, .L2
  41 0010 0B40     		ands	r3, r1
  42 0012 9360     		str	r3, [r2, #8]
3220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  43              		.loc 1 3222 0
  44 0014 8023     		movs	r3, #128
  45 0016 2022     		movs	r2, #32
  46 0018 C250     		str	r2, [r0, r3]
3223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
  47              		.loc 1 3223 0
  48              		@ sp needed
  49 001a 7047     		bx	lr
  50              	.L3:
  51              		.align	2
  52              	.L2:
  53 001c FFFF7FFF 		.word	-8388609
  54              		.cfi_endproc
  55              	.LFE216:
  57              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  58              		.align	1
  59              		.syntax unified
  60              		.code	16
  61              		.thumb_func
  62              		.fpu softvfp
  64              	UART_EndRxTransfer:
  65              	.LFB217:
3224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
3229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
  66              		.loc 1 3232 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71              	.LVL1:
3233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
  72              		.loc 1 3234 0
  73 0000 0268     		ldr	r2, [r0]
  74 0002 1368     		ldr	r3, [r2]
  75 0004 0649     		ldr	r1, .L5
ARM GAS  /tmp/ccoGswsS.s 			page 59


  76 0006 0B40     		ands	r3, r1
  77 0008 1360     		str	r3, [r2]
3235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
  78              		.loc 1 3235 0
  79 000a 0268     		ldr	r2, [r0]
  80 000c 9368     		ldr	r3, [r2, #8]
  81 000e 0549     		ldr	r1, .L5+4
  82 0010 0B40     		ands	r3, r1
  83 0012 9360     		str	r3, [r2, #8]
3236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  84              		.loc 1 3238 0
  85 0014 8423     		movs	r3, #132
  86 0016 2022     		movs	r2, #32
  87 0018 C250     		str	r2, [r0, r3]
3239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxISR = NULL;
  88              		.loc 1 3241 0
  89 001a 0023     		movs	r3, #0
  90 001c C366     		str	r3, [r0, #108]
3242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
  91              		.loc 1 3242 0
  92              		@ sp needed
  93 001e 7047     		bx	lr
  94              	.L6:
  95              		.align	2
  96              	.L5:
  97 0020 DFFEFFFF 		.word	-289
  98 0024 FEFFFFEF 		.word	-268435458
  99              		.cfi_endproc
 100              	.LFE217:
 102              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 103              		.align	1
 104              		.syntax unified
 105              		.code	16
 106              		.thumb_func
 107              		.fpu softvfp
 109              	UART_TxISR_8BIT:
 110              	.LFB228:
3243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param hdma DMA handle.
3248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DMA Normal mode */
3255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = 0U;
3258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 60


3259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        in the UART CR3 register */
3261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DMA Circular mode */
3267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
3268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param hdma DMA handle.
3282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param hdma DMA handle.
3300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DMA Normal mode */
3307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = 0U;
3310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
ARM GAS  /tmp/ccoGswsS.s 			page 61


3316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        in the UART CR3 register */
3317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param hdma DMA handle.
3335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param hdma DMA handle.
3353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = 0U;
3367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
ARM GAS  /tmp/ccoGswsS.s 			page 62


3373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = 0U;
3375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call registered error callback*/
3382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  hdma DMA handle.
3393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call registered error callback*/
3403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  hdma DMA handle.
3416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return;
ARM GAS  /tmp/ccoGswsS.s 			page 63


3430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Reset errorCode */
3438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call user Abort complete callback */
3454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  hdma DMA handle.
3470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return;
3484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 64


3487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Reset errorCode */
3492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Discard the received data */
3498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call user Abort complete callback */
3505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  hdma DMA handle.
3521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call user Abort complete callback */
3539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
ARM GAS  /tmp/ccoGswsS.s 			page 65


3544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  hdma DMA handle.
3554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Discard the received data */
3566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call user Abort complete callback */
3572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
3586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 111              		.loc 1 3589 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.LVL2:
3590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 117              		.loc 1 3591 0
 118 0000 8023     		movs	r3, #128
 119 0002 C358     		ldr	r3, [r0, r3]
ARM GAS  /tmp/ccoGswsS.s 			page 66


 120 0004 212B     		cmp	r3, #33
 121 0006 00D0     		beq	.L10
 122              	.L7:
3592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
3594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
3602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pTxBuffPtr++;
3605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxXferCount--;
3606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 123              		.loc 1 3608 0
 124              		@ sp needed
 125 0008 7047     		bx	lr
 126              	.L10:
3593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 127              		.loc 1 3593 0
 128 000a 3533     		adds	r3, r3, #53
 129 000c C35A     		ldrh	r3, [r0, r3]
 130 000e 9BB2     		uxth	r3, r3
 131 0010 002B     		cmp	r3, #0
 132 0012 0CD0     		beq	.L11
3603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 133              		.loc 1 3603 0
 134 0014 036D     		ldr	r3, [r0, #80]
 135 0016 1A78     		ldrb	r2, [r3]
 136 0018 0368     		ldr	r3, [r0]
 137 001a 9A62     		str	r2, [r3, #40]
3604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxXferCount--;
 138              		.loc 1 3604 0
 139 001c 036D     		ldr	r3, [r0, #80]
 140 001e 0133     		adds	r3, r3, #1
 141 0020 0365     		str	r3, [r0, #80]
3605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 142              		.loc 1 3605 0
 143 0022 5622     		movs	r2, #86
 144 0024 835A     		ldrh	r3, [r0, r2]
 145 0026 013B     		subs	r3, r3, #1
 146 0028 9BB2     		uxth	r3, r3
 147 002a 8352     		strh	r3, [r0, r2]
 148              		.loc 1 3608 0
 149 002c ECE7     		b	.L7
 150              	.L11:
3596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 151              		.loc 1 3596 0
 152 002e 0268     		ldr	r2, [r0]
 153 0030 1368     		ldr	r3, [r2]
 154 0032 8021     		movs	r1, #128
ARM GAS  /tmp/ccoGswsS.s 			page 67


 155 0034 8B43     		bics	r3, r1
 156 0036 1360     		str	r3, [r2]
3599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 157              		.loc 1 3599 0
 158 0038 0268     		ldr	r2, [r0]
 159 003a 1368     		ldr	r3, [r2]
 160 003c 4039     		subs	r1, r1, #64
 161 003e 0B43     		orrs	r3, r1
 162 0040 1360     		str	r3, [r2]
 163 0042 E1E7     		b	.L7
 164              		.cfi_endproc
 165              	.LFE228:
 167              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 168              		.align	1
 169              		.syntax unified
 170              		.code	16
 171              		.thumb_func
 172              		.fpu softvfp
 174              	UART_TxISR_16BIT:
 175              	.LFB229:
3609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
3615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 176              		.loc 1 3618 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 181              	.LVL3:
3619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t *tmp;
3620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 182              		.loc 1 3622 0
 183 0000 8023     		movs	r3, #128
 184 0002 C358     		ldr	r3, [r0, r3]
 185 0004 212B     		cmp	r3, #33
 186 0006 00D0     		beq	.L15
 187              	.L12:
3623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
3625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
3633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccoGswsS.s 			page 68


3634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxXferCount--;
3638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 188              		.loc 1 3640 0
 189              		@ sp needed
 190 0008 7047     		bx	lr
 191              	.L15:
3624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 192              		.loc 1 3624 0
 193 000a 3533     		adds	r3, r3, #53
 194 000c C35A     		ldrh	r3, [r0, r3]
 195 000e 9BB2     		uxth	r3, r3
 196 0010 002B     		cmp	r3, #0
 197 0012 0ED0     		beq	.L16
 198              	.LVL4:
3635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 199              		.loc 1 3635 0
 200 0014 036D     		ldr	r3, [r0, #80]
 201 0016 1B88     		ldrh	r3, [r3]
 202 0018 0268     		ldr	r2, [r0]
 203 001a DB05     		lsls	r3, r3, #23
 204 001c DB0D     		lsrs	r3, r3, #23
 205 001e 9362     		str	r3, [r2, #40]
 206              	.LVL5:
3636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxXferCount--;
 207              		.loc 1 3636 0
 208 0020 036D     		ldr	r3, [r0, #80]
 209 0022 0233     		adds	r3, r3, #2
 210 0024 0365     		str	r3, [r0, #80]
3637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 211              		.loc 1 3637 0
 212 0026 5622     		movs	r2, #86
 213 0028 835A     		ldrh	r3, [r0, r2]
 214 002a 013B     		subs	r3, r3, #1
 215 002c 9BB2     		uxth	r3, r3
 216 002e 8352     		strh	r3, [r0, r2]
 217              		.loc 1 3640 0
 218 0030 EAE7     		b	.L12
 219              	.L16:
3627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 220              		.loc 1 3627 0
 221 0032 0268     		ldr	r2, [r0]
 222 0034 1368     		ldr	r3, [r2]
 223 0036 8021     		movs	r1, #128
 224 0038 8B43     		bics	r3, r1
 225 003a 1360     		str	r3, [r2]
3630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 226              		.loc 1 3630 0
 227 003c 0268     		ldr	r2, [r0]
 228 003e 1368     		ldr	r3, [r2]
 229 0040 4039     		subs	r1, r1, #64
 230 0042 0B43     		orrs	r3, r1
 231 0044 1360     		str	r3, [r2]
ARM GAS  /tmp/ccoGswsS.s 			page 69


 232 0046 DFE7     		b	.L12
 233              		.cfi_endproc
 234              	.LFE229:
 236              		.section	.text.UART_TxISR_8BIT_FIFOEN,"ax",%progbits
 237              		.align	1
 238              		.syntax unified
 239              		.code	16
 240              		.thumb_func
 241              		.fpu softvfp
 243              	UART_TxISR_8BIT_FIFOEN:
 244              	.LFB230:
3641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
3647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 245              		.loc 1 3650 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250              	.LVL6:
3651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  nb_tx_data;
3652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 251              		.loc 1 3654 0
 252 0000 8023     		movs	r3, #128
 253 0002 C358     		ldr	r3, [r0, r3]
 254 0004 212B     		cmp	r3, #33
 255 0006 00D0     		beq	.L23
 256              	.L17:
3655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break; /* force exit loop */
3667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->pTxBuffPtr++;
3672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxXferCount--;
3673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
ARM GAS  /tmp/ccoGswsS.s 			page 70


3675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Nothing to do */
3677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 257              		.loc 1 3680 0
 258              		@ sp needed
 259 0008 7047     		bx	lr
 260              	.L23:
3656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 261              		.loc 1 3656 0
 262 000a 4933     		adds	r3, r3, #73
 263 000c C35A     		ldrh	r3, [r0, r3]
 264              	.LVL7:
 265 000e 0CE0     		b	.L19
 266              	.L24:
3661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 267              		.loc 1 3661 0
 268 0010 0268     		ldr	r2, [r0]
 269 0012 9368     		ldr	r3, [r2, #8]
 270              	.LVL8:
 271 0014 1049     		ldr	r1, .L25
 272 0016 0B40     		ands	r3, r1
 273 0018 9360     		str	r3, [r2, #8]
3664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 274              		.loc 1 3664 0
 275 001a 0268     		ldr	r2, [r0]
 276 001c 1368     		ldr	r3, [r2]
 277 001e 4021     		movs	r1, #64
 278 0020 0B43     		orrs	r3, r1
 279 0022 1360     		str	r3, [r2]
3666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 280              		.loc 1 3666 0
 281 0024 F0E7     		b	.L17
 282              	.LVL9:
 283              	.L21:
3656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 284              		.loc 1 3656 0 discriminator 2
 285 0026 013B     		subs	r3, r3, #1
 286              	.LVL10:
 287 0028 9BB2     		uxth	r3, r3
 288              	.LVL11:
 289              	.L19:
3656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 290              		.loc 1 3656 0 is_stmt 0 discriminator 1
 291 002a 002B     		cmp	r3, #0
 292 002c ECD0     		beq	.L17
3658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 293              		.loc 1 3658 0 is_stmt 1
 294 002e 5622     		movs	r2, #86
 295 0030 825A     		ldrh	r2, [r0, r2]
 296 0032 92B2     		uxth	r2, r2
 297 0034 002A     		cmp	r2, #0
 298 0036 EBD0     		beq	.L24
3668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 299              		.loc 1 3668 0
ARM GAS  /tmp/ccoGswsS.s 			page 71


 300 0038 0268     		ldr	r2, [r0]
 301 003a D169     		ldr	r1, [r2, #28]
 302 003c 0906     		lsls	r1, r1, #24
 303 003e F2D5     		bpl	.L21
3670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->pTxBuffPtr++;
 304              		.loc 1 3670 0
 305 0040 016D     		ldr	r1, [r0, #80]
 306 0042 0978     		ldrb	r1, [r1]
 307 0044 9162     		str	r1, [r2, #40]
3671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxXferCount--;
 308              		.loc 1 3671 0
 309 0046 026D     		ldr	r2, [r0, #80]
 310 0048 0132     		adds	r2, r2, #1
 311 004a 0265     		str	r2, [r0, #80]
3672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 312              		.loc 1 3672 0
 313 004c 5621     		movs	r1, #86
 314 004e 425A     		ldrh	r2, [r0, r1]
 315 0050 013A     		subs	r2, r2, #1
 316 0052 92B2     		uxth	r2, r2
 317 0054 4252     		strh	r2, [r0, r1]
 318 0056 E6E7     		b	.L21
 319              	.L26:
 320              		.align	2
 321              	.L25:
 322 0058 FFFF7FFF 		.word	-8388609
 323              		.cfi_endproc
 324              	.LFE230:
 326              		.section	.text.UART_TxISR_16BIT_FIFOEN,"ax",%progbits
 327              		.align	1
 328              		.syntax unified
 329              		.code	16
 330              		.thumb_func
 331              		.fpu softvfp
 333              	UART_TxISR_16BIT_FIFOEN:
 334              	.LFB231:
3681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
3687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 335              		.loc 1 3690 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 340              	.LVL12:
3691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t *tmp;
3692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  nb_tx_data;
3693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
ARM GAS  /tmp/ccoGswsS.s 			page 72


 341              		.loc 1 3695 0
 342 0000 8023     		movs	r3, #128
 343 0002 C358     		ldr	r3, [r0, r3]
 344 0004 212B     		cmp	r3, #33
 345 0006 00D0     		beq	.L33
 346              	.L27:
3696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break; /* force exit loop */
3708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
3712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
3714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxXferCount--;
3715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
3717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Nothing to do */
3719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 347              		.loc 1 3722 0
 348              		@ sp needed
 349 0008 7047     		bx	lr
 350              	.L33:
3697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 351              		.loc 1 3697 0
 352 000a 4933     		adds	r3, r3, #73
 353 000c C35A     		ldrh	r3, [r0, r3]
 354              	.LVL13:
 355 000e 0CE0     		b	.L29
 356              	.L34:
3702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 357              		.loc 1 3702 0
 358 0010 0268     		ldr	r2, [r0]
 359 0012 9368     		ldr	r3, [r2, #8]
 360              	.LVL14:
 361 0014 1149     		ldr	r1, .L35
 362 0016 0B40     		ands	r3, r1
 363 0018 9360     		str	r3, [r2, #8]
3705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 364              		.loc 1 3705 0
 365 001a 0268     		ldr	r2, [r0]
 366 001c 1368     		ldr	r3, [r2]
 367 001e 4021     		movs	r1, #64
ARM GAS  /tmp/ccoGswsS.s 			page 73


 368 0020 0B43     		orrs	r3, r1
 369 0022 1360     		str	r3, [r2]
3707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 370              		.loc 1 3707 0
 371 0024 F0E7     		b	.L27
 372              	.LVL15:
 373              	.L31:
3697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 374              		.loc 1 3697 0 discriminator 2
 375 0026 013B     		subs	r3, r3, #1
 376              	.LVL16:
 377 0028 9BB2     		uxth	r3, r3
 378              	.LVL17:
 379              	.L29:
3697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 380              		.loc 1 3697 0 is_stmt 0 discriminator 1
 381 002a 002B     		cmp	r3, #0
 382 002c ECD0     		beq	.L27
3699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 383              		.loc 1 3699 0 is_stmt 1
 384 002e 5622     		movs	r2, #86
 385 0030 825A     		ldrh	r2, [r0, r2]
 386 0032 92B2     		uxth	r2, r2
 387 0034 002A     		cmp	r2, #0
 388 0036 EBD0     		beq	.L34
3709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 389              		.loc 1 3709 0
 390 0038 0168     		ldr	r1, [r0]
 391 003a CA69     		ldr	r2, [r1, #28]
 392 003c 1206     		lsls	r2, r2, #24
 393 003e F2D5     		bpl	.L31
 394              	.LVL18:
3712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 395              		.loc 1 3712 0
 396 0040 026D     		ldr	r2, [r0, #80]
 397 0042 1288     		ldrh	r2, [r2]
 398 0044 D205     		lsls	r2, r2, #23
 399 0046 D20D     		lsrs	r2, r2, #23
 400 0048 8A62     		str	r2, [r1, #40]
 401              	.LVL19:
3713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxXferCount--;
 402              		.loc 1 3713 0
 403 004a 026D     		ldr	r2, [r0, #80]
 404 004c 0232     		adds	r2, r2, #2
 405 004e 0265     		str	r2, [r0, #80]
3714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 406              		.loc 1 3714 0
 407 0050 5621     		movs	r1, #86
 408 0052 425A     		ldrh	r2, [r0, r1]
 409 0054 013A     		subs	r2, r2, #1
 410 0056 92B2     		uxth	r2, r2
 411 0058 4252     		strh	r2, [r0, r1]
 412 005a E4E7     		b	.L31
 413              	.L36:
 414              		.align	2
 415              	.L35:
 416 005c FFFF7FFF 		.word	-8388609
ARM GAS  /tmp/ccoGswsS.s 			page 74


 417              		.cfi_endproc
 418              	.LFE231:
 420              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 421              		.align	1
 422              		.weak	HAL_UART_MspInit
 423              		.syntax unified
 424              		.code	16
 425              		.thumb_func
 426              		.fpu softvfp
 428              	HAL_UART_MspInit:
 429              	.LFB178:
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 430              		.loc 1 658 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435              	.LVL20:
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 436              		.loc 1 665 0
 437              		@ sp needed
 438 0000 7047     		bx	lr
 439              		.cfi_endproc
 440              	.LFE178:
 442              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 443              		.align	1
 444              		.weak	HAL_UART_MspDeInit
 445              		.syntax unified
 446              		.code	16
 447              		.thumb_func
 448              		.fpu softvfp
 450              	HAL_UART_MspDeInit:
 451              	.LFB179:
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 452              		.loc 1 673 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457              	.LVL21:
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 458              		.loc 1 680 0
 459              		@ sp needed
 460 0000 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE179:
 464              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 465              		.align	1
 466              		.global	HAL_UART_DeInit
 467              		.syntax unified
 468              		.code	16
 469              		.thumb_func
 470              		.fpu softvfp
 472              	HAL_UART_DeInit:
 473              	.LFB177:
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 474              		.loc 1 613 0
ARM GAS  /tmp/ccoGswsS.s 			page 75


 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              	.LVL22:
 479 0000 70B5     		push	{r4, r5, r6, lr}
 480              	.LCFI0:
 481              		.cfi_def_cfa_offset 16
 482              		.cfi_offset 4, -16
 483              		.cfi_offset 5, -12
 484              		.cfi_offset 6, -8
 485              		.cfi_offset 14, -4
 486 0002 041E     		subs	r4, r0, #0
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 487              		.loc 1 615 0
 488 0004 19D0     		beq	.L41
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 489              		.loc 1 623 0
 490 0006 8026     		movs	r6, #128
 491 0008 2423     		movs	r3, #36
 492 000a 8351     		str	r3, [r0, r6]
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 493              		.loc 1 625 0
 494 000c 0268     		ldr	r2, [r0]
 495 000e 1368     		ldr	r3, [r2]
 496 0010 0121     		movs	r1, #1
 497 0012 8B43     		bics	r3, r1
 498 0014 1360     		str	r3, [r2]
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 499              		.loc 1 627 0
 500 0016 0368     		ldr	r3, [r0]
 501 0018 0025     		movs	r5, #0
 502 001a 1D60     		str	r5, [r3]
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 503              		.loc 1 628 0
 504 001c 0368     		ldr	r3, [r0]
 505 001e 5D60     		str	r5, [r3, #4]
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 506              		.loc 1 629 0
 507 0020 0368     		ldr	r3, [r0]
 508 0022 9D60     		str	r5, [r3, #8]
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 509              		.loc 1 640 0
 510 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 511              	.LVL23:
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 512              		.loc 1 643 0
 513 0028 8823     		movs	r3, #136
 514 002a E550     		str	r5, [r4, r3]
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 515              		.loc 1 644 0
 516 002c A551     		str	r5, [r4, r6]
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 517              		.loc 1 645 0
 518 002e 043B     		subs	r3, r3, #4
 519 0030 E550     		str	r5, [r4, r3]
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 520              		.loc 1 647 0
ARM GAS  /tmp/ccoGswsS.s 			page 76


 521 0032 083B     		subs	r3, r3, #8
 522 0034 E554     		strb	r5, [r4, r3]
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 523              		.loc 1 649 0
 524 0036 0020     		movs	r0, #0
 525              	.L40:
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 526              		.loc 1 650 0
 527              		@ sp needed
 528              	.LVL24:
 529 0038 70BD     		pop	{r4, r5, r6, pc}
 530              	.LVL25:
 531              	.L41:
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 532              		.loc 1 617 0
 533 003a 0120     		movs	r0, #1
 534              	.LVL26:
 535 003c FCE7     		b	.L40
 536              		.cfi_endproc
 537              	.LFE177:
 539              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 540              		.align	1
 541              		.global	HAL_UART_Transmit_IT
 542              		.syntax unified
 543              		.code	16
 544              		.thumb_func
 545              		.fpu softvfp
 547              	HAL_UART_Transmit_IT:
 548              	.LFB182:
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 549              		.loc 1 1240 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              	.LVL27:
 554 0000 30B5     		push	{r4, r5, lr}
 555              	.LCFI1:
 556              		.cfi_def_cfa_offset 12
 557              		.cfi_offset 4, -12
 558              		.cfi_offset 5, -8
 559              		.cfi_offset 14, -4
1242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 560              		.loc 1 1242 0
 561 0002 8023     		movs	r3, #128
 562 0004 C358     		ldr	r3, [r0, r3]
 563 0006 202B     		cmp	r3, #32
 564 0008 54D1     		bne	.L50
1244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 565              		.loc 1 1244 0
 566 000a 0029     		cmp	r1, #0
 567 000c 54D0     		beq	.L51
1244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 568              		.loc 1 1244 0 is_stmt 0 discriminator 1
 569 000e 002A     		cmp	r2, #0
 570 0010 54D0     		beq	.L52
1252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 571              		.loc 1 1252 0 is_stmt 1
ARM GAS  /tmp/ccoGswsS.s 			page 77


 572 0012 8368     		ldr	r3, [r0, #8]
 573 0014 8024     		movs	r4, #128
 574 0016 6401     		lsls	r4, r4, #5
 575 0018 A342     		cmp	r3, r4
 576 001a 27D0     		beq	.L55
 577              	.L44:
1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 578              		.loc 1 1260 0
 579 001c 7C24     		movs	r4, #124
 580 001e 045D     		ldrb	r4, [r0, r4]
 581 0020 012C     		cmp	r4, #1
 582 0022 4DD0     		beq	.L54
1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 583              		.loc 1 1260 0 is_stmt 0 discriminator 2
 584 0024 7C24     		movs	r4, #124
 585 0026 0125     		movs	r5, #1
 586 0028 0555     		strb	r5, [r0, r4]
1262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 587              		.loc 1 1262 0 is_stmt 1 discriminator 2
 588 002a 0165     		str	r1, [r0, #80]
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = Size;
 589              		.loc 1 1263 0 discriminator 2
 590 002c 5421     		movs	r1, #84
 591              	.LVL28:
 592 002e 4252     		strh	r2, [r0, r1]
 593              	.LVL29:
1264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxISR       = NULL;
 594              		.loc 1 1264 0 discriminator 2
 595 0030 0231     		adds	r1, r1, #2
 596 0032 4252     		strh	r2, [r0, r1]
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 597              		.loc 1 1265 0 discriminator 2
 598 0034 0022     		movs	r2, #0
 599              	.LVL30:
 600 0036 0267     		str	r2, [r0, #112]
 601              	.LVL31:
1267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 602              		.loc 1 1267 0 discriminator 2
 603 0038 3231     		adds	r1, r1, #50
 604 003a 4250     		str	r2, [r0, r1]
1268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 605              		.loc 1 1268 0 discriminator 2
 606 003c 8032     		adds	r2, r2, #128
 607 003e 6739     		subs	r1, r1, #103
 608 0040 8150     		str	r1, [r0, r2]
1271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 609              		.loc 1 1271 0 discriminator 2
 610 0042 8022     		movs	r2, #128
 611 0044 9205     		lsls	r2, r2, #22
 612 0046 416E     		ldr	r1, [r0, #100]
 613 0048 9142     		cmp	r1, r2
 614 004a 16D0     		beq	.L56
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 615              		.loc 1 1291 0
 616 004c 8022     		movs	r2, #128
 617 004e 5201     		lsls	r2, r2, #5
 618 0050 9342     		cmp	r3, r2
ARM GAS  /tmp/ccoGswsS.s 			page 78


 619 0052 29D0     		beq	.L57
 620              	.L48:
1297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 621              		.loc 1 1297 0
 622 0054 1B4B     		ldr	r3, .L59
 623 0056 0367     		str	r3, [r0, #112]
 624              	.L49:
1300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 625              		.loc 1 1300 0
 626 0058 7C23     		movs	r3, #124
 627 005a 0022     		movs	r2, #0
 628 005c C254     		strb	r2, [r0, r3]
1303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 629              		.loc 1 1303 0
 630 005e 0268     		ldr	r2, [r0]
 631 0060 1368     		ldr	r3, [r2]
 632 0062 8021     		movs	r1, #128
 633 0064 0B43     		orrs	r3, r1
 634 0066 1360     		str	r3, [r2]
1306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 635              		.loc 1 1306 0
 636 0068 0020     		movs	r0, #0
 637              	.LVL32:
 638 006a 24E0     		b	.L43
 639              	.LVL33:
 640              	.L55:
1252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 641              		.loc 1 1252 0 discriminator 1
 642 006c 0469     		ldr	r4, [r0, #16]
 643 006e 002C     		cmp	r4, #0
 644 0070 D4D1     		bne	.L44
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 645              		.loc 1 1254 0
 646 0072 CC07     		lsls	r4, r1, #31
 647 0074 D2D5     		bpl	.L44
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 648              		.loc 1 1256 0
 649 0076 0120     		movs	r0, #1
 650              	.LVL34:
 651 0078 1DE0     		b	.L43
 652              	.LVL35:
 653              	.L56:
1274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 654              		.loc 1 1274 0
 655 007a 8022     		movs	r2, #128
 656 007c 5201     		lsls	r2, r2, #5
 657 007e 9342     		cmp	r3, r2
 658 0080 0CD0     		beq	.L58
 659              	.L46:
1280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 660              		.loc 1 1280 0
 661 0082 114B     		ldr	r3, .L59+4
 662 0084 0367     		str	r3, [r0, #112]
 663              	.L47:
1283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 664              		.loc 1 1283 0
 665 0086 7C23     		movs	r3, #124
ARM GAS  /tmp/ccoGswsS.s 			page 79


 666 0088 0022     		movs	r2, #0
 667 008a C254     		strb	r2, [r0, r3]
1286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 668              		.loc 1 1286 0
 669 008c 0268     		ldr	r2, [r0]
 670 008e 9168     		ldr	r1, [r2, #8]
 671 0090 8023     		movs	r3, #128
 672 0092 1B04     		lsls	r3, r3, #16
 673 0094 0B43     		orrs	r3, r1
 674 0096 9360     		str	r3, [r2, #8]
1306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 675              		.loc 1 1306 0
 676 0098 0020     		movs	r0, #0
 677              	.LVL36:
 678 009a 0CE0     		b	.L43
 679              	.LVL37:
 680              	.L58:
1274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 681              		.loc 1 1274 0 discriminator 1
 682 009c 0369     		ldr	r3, [r0, #16]
 683 009e 002B     		cmp	r3, #0
 684 00a0 EFD1     		bne	.L46
1276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 685              		.loc 1 1276 0
 686 00a2 0A4B     		ldr	r3, .L59+8
 687 00a4 0367     		str	r3, [r0, #112]
 688 00a6 EEE7     		b	.L47
 689              	.L57:
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 690              		.loc 1 1291 0 discriminator 1
 691 00a8 0369     		ldr	r3, [r0, #16]
 692 00aa 002B     		cmp	r3, #0
 693 00ac D2D1     		bne	.L48
1293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 694              		.loc 1 1293 0
 695 00ae 084B     		ldr	r3, .L59+12
 696 00b0 0367     		str	r3, [r0, #112]
 697 00b2 D1E7     		b	.L49
 698              	.LVL38:
 699              	.L50:
1310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 700              		.loc 1 1310 0
 701 00b4 0220     		movs	r0, #2
 702              	.LVL39:
 703              	.L43:
1312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 704              		.loc 1 1312 0
 705              		@ sp needed
 706 00b6 30BD     		pop	{r4, r5, pc}
 707              	.LVL40:
 708              	.L51:
1246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 709              		.loc 1 1246 0
 710 00b8 0120     		movs	r0, #1
 711              	.LVL41:
 712 00ba FCE7     		b	.L43
 713              	.LVL42:
ARM GAS  /tmp/ccoGswsS.s 			page 80


 714              	.L52:
 715 00bc 0120     		movs	r0, #1
 716              	.LVL43:
 717 00be FAE7     		b	.L43
 718              	.LVL44:
 719              	.L54:
1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 720              		.loc 1 1260 0
 721 00c0 0220     		movs	r0, #2
 722              	.LVL45:
 723 00c2 F8E7     		b	.L43
 724              	.L60:
 725              		.align	2
 726              	.L59:
 727 00c4 00000000 		.word	UART_TxISR_8BIT
 728 00c8 00000000 		.word	UART_TxISR_8BIT_FIFOEN
 729 00cc 00000000 		.word	UART_TxISR_16BIT_FIFOEN
 730 00d0 00000000 		.word	UART_TxISR_16BIT
 731              		.cfi_endproc
 732              	.LFE182:
 734              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 735              		.align	1
 736              		.global	HAL_UART_Receive_IT
 737              		.syntax unified
 738              		.code	16
 739              		.thumb_func
 740              		.fpu softvfp
 742              	HAL_UART_Receive_IT:
 743              	.LFB183:
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 744              		.loc 1 1329 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              	.LVL46:
 749 0000 30B5     		push	{r4, r5, lr}
 750              	.LCFI2:
 751              		.cfi_def_cfa_offset 12
 752              		.cfi_offset 4, -12
 753              		.cfi_offset 5, -8
 754              		.cfi_offset 14, -4
1331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 755              		.loc 1 1331 0
 756 0002 8423     		movs	r3, #132
 757 0004 C358     		ldr	r3, [r0, r3]
 758 0006 202B     		cmp	r3, #32
 759 0008 00D0     		beq	.LCB655
 760 000a 96E0     		b	.L76	@long jump
 761              	.LCB655:
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 762              		.loc 1 1333 0
 763 000c 0029     		cmp	r1, #0
 764 000e 00D1     		bne	.LCB657
 765 0010 95E0     		b	.L77	@long jump
 766              	.LCB657:
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 767              		.loc 1 1333 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccoGswsS.s 			page 81


 768 0012 002A     		cmp	r2, #0
 769 0014 00D1     		bne	.LCB659
 770 0016 94E0     		b	.L78	@long jump
 771              	.LCB659:
1341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 772              		.loc 1 1341 0 is_stmt 1
 773 0018 8368     		ldr	r3, [r0, #8]
 774 001a 8024     		movs	r4, #128
 775 001c 6401     		lsls	r4, r4, #5
 776 001e A342     		cmp	r3, r4
 777 0020 1BD0     		beq	.L81
 778              	.L63:
1349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 779              		.loc 1 1349 0
 780 0022 7C24     		movs	r4, #124
 781 0024 045D     		ldrb	r4, [r0, r4]
 782 0026 012C     		cmp	r4, #1
 783 0028 00D1     		bne	.LCB669
 784 002a 8CE0     		b	.L80	@long jump
 785              	.LCB669:
1349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 786              		.loc 1 1349 0 is_stmt 0 discriminator 2
 787 002c 7C24     		movs	r4, #124
 788 002e 0125     		movs	r5, #1
 789 0030 0555     		strb	r5, [r0, r4]
1351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferSize  = Size;
 790              		.loc 1 1351 0 is_stmt 1 discriminator 2
 791 0032 8165     		str	r1, [r0, #88]
1352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = Size;
 792              		.loc 1 1352 0 discriminator 2
 793 0034 5C21     		movs	r1, #92
 794              	.LVL47:
 795 0036 4252     		strh	r2, [r0, r1]
 796              	.LVL48:
1353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxISR       = NULL;
 797              		.loc 1 1353 0 discriminator 2
 798 0038 0231     		adds	r1, r1, #2
 799 003a 4252     		strh	r2, [r0, r1]
1354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 800              		.loc 1 1354 0 discriminator 2
 801 003c 0021     		movs	r1, #0
 802 003e C166     		str	r1, [r0, #108]
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 803              		.loc 1 1357 0 discriminator 2
 804 0040 8021     		movs	r1, #128
 805 0042 4901     		lsls	r1, r1, #5
 806 0044 8B42     		cmp	r3, r1
 807 0046 0FD0     		beq	.L82
 808 0048 002B     		cmp	r3, #0
 809 004a 1CD1     		bne	.L67
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 810              		.loc 1 1357 0 is_stmt 0 discriminator 5
 811 004c 0369     		ldr	r3, [r0, #16]
 812 004e 002B     		cmp	r3, #0
 813 0050 15D1     		bne	.L68
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 814              		.loc 1 1357 0 discriminator 7
ARM GAS  /tmp/ccoGswsS.s 			page 82


 815 0052 6033     		adds	r3, r3, #96
 816 0054 FF21     		movs	r1, #255
 817 0056 C152     		strh	r1, [r0, r3]
 818 0058 1CE0     		b	.L66
 819              	.LVL49:
 820              	.L81:
1341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 821              		.loc 1 1341 0 is_stmt 1 discriminator 1
 822 005a 0469     		ldr	r4, [r0, #16]
 823 005c 002C     		cmp	r4, #0
 824 005e E0D1     		bne	.L63
1343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 825              		.loc 1 1343 0
 826 0060 CC07     		lsls	r4, r1, #31
 827 0062 DED5     		bpl	.L63
1345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 828              		.loc 1 1345 0
 829 0064 0120     		movs	r0, #1
 830              	.LVL50:
 831 0066 69E0     		b	.L62
 832              	.LVL51:
 833              	.L82:
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 834              		.loc 1 1357 0 discriminator 1
 835 0068 0369     		ldr	r3, [r0, #16]
 836 006a 002B     		cmp	r3, #0
 837 006c 03D1     		bne	.L65
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 838              		.loc 1 1357 0 is_stmt 0 discriminator 3
 839 006e 6033     		adds	r3, r3, #96
 840 0070 3649     		ldr	r1, .L87
 841 0072 C152     		strh	r1, [r0, r3]
 842 0074 0EE0     		b	.L66
 843              	.L65:
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 844              		.loc 1 1357 0 discriminator 4
 845 0076 6023     		movs	r3, #96
 846 0078 FF21     		movs	r1, #255
 847 007a C152     		strh	r1, [r0, r3]
 848 007c 0AE0     		b	.L66
 849              	.L68:
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 850              		.loc 1 1357 0 discriminator 8
 851 007e 6023     		movs	r3, #96
 852 0080 7F21     		movs	r1, #127
 853 0082 C152     		strh	r1, [r0, r3]
 854 0084 06E0     		b	.L66
 855              	.L67:
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 856              		.loc 1 1357 0 discriminator 6
 857 0086 8021     		movs	r1, #128
 858 0088 4905     		lsls	r1, r1, #21
 859 008a 8B42     		cmp	r3, r1
 860 008c 23D0     		beq	.L83
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 861              		.loc 1 1357 0 discriminator 10
 862 008e 6023     		movs	r3, #96
ARM GAS  /tmp/ccoGswsS.s 			page 83


 863 0090 0021     		movs	r1, #0
 864 0092 C152     		strh	r1, [r0, r3]
 865              	.L66:
1359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 866              		.loc 1 1359 0 is_stmt 1
 867 0094 8823     		movs	r3, #136
 868 0096 0021     		movs	r1, #0
 869 0098 C150     		str	r1, [r0, r3]
1360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 870              		.loc 1 1360 0
 871 009a 043B     		subs	r3, r3, #4
 872 009c 2231     		adds	r1, r1, #34
 873 009e C150     		str	r1, [r0, r3]
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 874              		.loc 1 1363 0
 875 00a0 0168     		ldr	r1, [r0]
 876 00a2 8B68     		ldr	r3, [r1, #8]
 877 00a4 0124     		movs	r4, #1
 878 00a6 2343     		orrs	r3, r4
 879 00a8 8B60     		str	r3, [r1, #8]
1366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 880              		.loc 1 1366 0
 881 00aa 8023     		movs	r3, #128
 882 00ac 9B05     		lsls	r3, r3, #22
 883 00ae 416E     		ldr	r1, [r0, #100]
 884 00b0 9942     		cmp	r1, r3
 885 00b2 1BD0     		beq	.L84
 886              	.L71:
1387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 887              		.loc 1 1387 0
 888 00b4 8023     		movs	r3, #128
 889 00b6 5B01     		lsls	r3, r3, #5
 890 00b8 8268     		ldr	r2, [r0, #8]
 891              	.LVL52:
 892 00ba 9A42     		cmp	r2, r3
 893 00bc 37D0     		beq	.L85
 894              	.L74:
1393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 895              		.loc 1 1393 0
 896 00be 244B     		ldr	r3, .L87+4
 897 00c0 C366     		str	r3, [r0, #108]
 898              	.L75:
1396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 899              		.loc 1 1396 0
 900 00c2 7C23     		movs	r3, #124
 901 00c4 0022     		movs	r2, #0
 902 00c6 C254     		strb	r2, [r0, r3]
1399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 903              		.loc 1 1399 0
 904 00c8 0268     		ldr	r2, [r0]
 905 00ca 1168     		ldr	r1, [r2]
 906 00cc A433     		adds	r3, r3, #164
 907 00ce 0B43     		orrs	r3, r1
 908 00d0 1360     		str	r3, [r2]
1402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 909              		.loc 1 1402 0
 910 00d2 0020     		movs	r0, #0
ARM GAS  /tmp/ccoGswsS.s 			page 84


 911              	.LVL53:
 912 00d4 32E0     		b	.L62
 913              	.LVL54:
 914              	.L83:
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 915              		.loc 1 1357 0 discriminator 9
 916 00d6 0369     		ldr	r3, [r0, #16]
 917 00d8 002B     		cmp	r3, #0
 918 00da 03D1     		bne	.L70
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 919              		.loc 1 1357 0 is_stmt 0 discriminator 11
 920 00dc 6033     		adds	r3, r3, #96
 921 00de 7F21     		movs	r1, #127
 922 00e0 C152     		strh	r1, [r0, r3]
 923 00e2 D7E7     		b	.L66
 924              	.L70:
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 925              		.loc 1 1357 0 discriminator 12
 926 00e4 6023     		movs	r3, #96
 927 00e6 3F21     		movs	r1, #63
 928 00e8 C152     		strh	r1, [r0, r3]
 929 00ea D3E7     		b	.L66
 930              	.L84:
1366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 931              		.loc 1 1366 0 is_stmt 1 discriminator 1
 932 00ec 6823     		movs	r3, #104
 933 00ee C35A     		ldrh	r3, [r0, r3]
 934 00f0 9342     		cmp	r3, r2
 935 00f2 DFD8     		bhi	.L71
1369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 936              		.loc 1 1369 0
 937 00f4 8023     		movs	r3, #128
 938 00f6 5B01     		lsls	r3, r3, #5
 939 00f8 8268     		ldr	r2, [r0, #8]
 940              	.LVL55:
 941 00fa 9A42     		cmp	r2, r3
 942 00fc 11D0     		beq	.L86
 943              	.L72:
1375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 944              		.loc 1 1375 0
 945 00fe 154B     		ldr	r3, .L87+8
 946 0100 C366     		str	r3, [r0, #108]
 947              	.L73:
1378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 948              		.loc 1 1378 0
 949 0102 7C23     		movs	r3, #124
 950 0104 0022     		movs	r2, #0
 951 0106 C254     		strb	r2, [r0, r3]
1381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 952              		.loc 1 1381 0
 953 0108 0268     		ldr	r2, [r0]
 954 010a 1168     		ldr	r1, [r2]
 955 010c 8433     		adds	r3, r3, #132
 956 010e 0B43     		orrs	r3, r1
 957 0110 1360     		str	r3, [r2]
1382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 958              		.loc 1 1382 0
ARM GAS  /tmp/ccoGswsS.s 			page 85


 959 0112 0268     		ldr	r2, [r0]
 960 0114 9168     		ldr	r1, [r2, #8]
 961 0116 8023     		movs	r3, #128
 962 0118 5B05     		lsls	r3, r3, #21
 963 011a 0B43     		orrs	r3, r1
 964 011c 9360     		str	r3, [r2, #8]
1402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 965              		.loc 1 1402 0
 966 011e 0020     		movs	r0, #0
 967              	.LVL56:
1382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 968              		.loc 1 1382 0
 969 0120 0CE0     		b	.L62
 970              	.LVL57:
 971              	.L86:
1369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 972              		.loc 1 1369 0 discriminator 1
 973 0122 0369     		ldr	r3, [r0, #16]
 974 0124 002B     		cmp	r3, #0
 975 0126 EAD1     		bne	.L72
1371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 976              		.loc 1 1371 0
 977 0128 0B4B     		ldr	r3, .L87+12
 978 012a C366     		str	r3, [r0, #108]
 979 012c E9E7     		b	.L73
 980              	.L85:
1387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 981              		.loc 1 1387 0 discriminator 1
 982 012e 0369     		ldr	r3, [r0, #16]
 983 0130 002B     		cmp	r3, #0
 984 0132 C4D1     		bne	.L74
1389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 985              		.loc 1 1389 0
 986 0134 094B     		ldr	r3, .L87+16
 987 0136 C366     		str	r3, [r0, #108]
 988 0138 C3E7     		b	.L75
 989              	.LVL58:
 990              	.L76:
1406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 991              		.loc 1 1406 0
 992 013a 0220     		movs	r0, #2
 993              	.LVL59:
 994              	.L62:
1408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 995              		.loc 1 1408 0
 996              		@ sp needed
 997 013c 30BD     		pop	{r4, r5, pc}
 998              	.LVL60:
 999              	.L77:
1335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 1000              		.loc 1 1335 0
 1001 013e 0120     		movs	r0, #1
 1002              	.LVL61:
 1003 0140 FCE7     		b	.L62
 1004              	.LVL62:
 1005              	.L78:
 1006 0142 0120     		movs	r0, #1
ARM GAS  /tmp/ccoGswsS.s 			page 86


 1007              	.LVL63:
 1008 0144 FAE7     		b	.L62
 1009              	.LVL64:
 1010              	.L80:
1349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1011              		.loc 1 1349 0
 1012 0146 0220     		movs	r0, #2
 1013              	.LVL65:
 1014 0148 F8E7     		b	.L62
 1015              	.L88:
 1016 014a C046     		.align	2
 1017              	.L87:
 1018 014c FF010000 		.word	511
 1019 0150 00000000 		.word	UART_RxISR_8BIT
 1020 0154 00000000 		.word	UART_RxISR_8BIT_FIFOEN
 1021 0158 00000000 		.word	UART_RxISR_16BIT_FIFOEN
 1022 015c 00000000 		.word	UART_RxISR_16BIT
 1023              		.cfi_endproc
 1024              	.LFE183:
 1026              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1027              		.align	1
 1028              		.global	HAL_UART_Transmit_DMA
 1029              		.syntax unified
 1030              		.code	16
 1031              		.thumb_func
 1032              		.fpu softvfp
 1034              	HAL_UART_Transmit_DMA:
 1035              	.LFB184:
1425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1036              		.loc 1 1425 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              	.LVL66:
 1041 0000 10B5     		push	{r4, lr}
 1042              	.LCFI3:
 1043              		.cfi_def_cfa_offset 8
 1044              		.cfi_offset 4, -8
 1045              		.cfi_offset 14, -4
 1046 0002 0400     		movs	r4, r0
1427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 1047              		.loc 1 1427 0
 1048 0004 8020     		movs	r0, #128
 1049              	.LVL67:
 1050 0006 2058     		ldr	r0, [r4, r0]
 1051 0008 2028     		cmp	r0, #32
 1052 000a 51D1     		bne	.L93
1429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1053              		.loc 1 1429 0
 1054 000c 0029     		cmp	r1, #0
 1055 000e 51D0     		beq	.L94
1429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1056              		.loc 1 1429 0 is_stmt 0 discriminator 1
 1057 0010 002A     		cmp	r2, #0
 1058 0012 51D0     		beq	.L95
1437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1059              		.loc 1 1437 0 is_stmt 1
ARM GAS  /tmp/ccoGswsS.s 			page 87


 1060 0014 8023     		movs	r3, #128
 1061 0016 5B01     		lsls	r3, r3, #5
 1062 0018 A068     		ldr	r0, [r4, #8]
 1063 001a 9842     		cmp	r0, r3
 1064 001c 36D0     		beq	.L98
 1065              	.L91:
1445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1066              		.loc 1 1445 0
 1067 001e 7C23     		movs	r3, #124
 1068 0020 E35C     		ldrb	r3, [r4, r3]
 1069 0022 012B     		cmp	r3, #1
 1070 0024 4AD0     		beq	.L97
1445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1071              		.loc 1 1445 0 is_stmt 0 discriminator 2
 1072 0026 7C23     		movs	r3, #124
 1073 0028 0120     		movs	r0, #1
 1074 002a E054     		strb	r0, [r4, r3]
1447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1075              		.loc 1 1447 0 is_stmt 1 discriminator 2
 1076 002c 2165     		str	r1, [r4, #80]
1448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = Size;
 1077              		.loc 1 1448 0 discriminator 2
 1078 002e 283B     		subs	r3, r3, #40
 1079 0030 E252     		strh	r2, [r4, r3]
1449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1080              		.loc 1 1449 0 discriminator 2
 1081 0032 0233     		adds	r3, r3, #2
 1082 0034 E252     		strh	r2, [r4, r3]
1451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1083              		.loc 1 1451 0 discriminator 2
 1084 0036 3233     		adds	r3, r3, #50
 1085 0038 0021     		movs	r1, #0
 1086              	.LVL68:
 1087 003a E150     		str	r1, [r4, r3]
1452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1088              		.loc 1 1452 0 discriminator 2
 1089 003c 083B     		subs	r3, r3, #8
 1090 003e 2131     		adds	r1, r1, #33
 1091 0040 E150     		str	r1, [r4, r3]
1454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1092              		.loc 1 1454 0 discriminator 2
 1093 0042 636F     		ldr	r3, [r4, #116]
 1094 0044 002B     		cmp	r3, #0
 1095 0046 14D0     		beq	.L92
1457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1096              		.loc 1 1457 0
 1097 0048 1D49     		ldr	r1, .L100
 1098 004a D962     		str	r1, [r3, #44]
1460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1099              		.loc 1 1460 0
 1100 004c 636F     		ldr	r3, [r4, #116]
 1101 004e 1D49     		ldr	r1, .L100+4
 1102 0050 1963     		str	r1, [r3, #48]
1463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1103              		.loc 1 1463 0
 1104 0052 636F     		ldr	r3, [r4, #116]
 1105 0054 1C49     		ldr	r1, .L100+8
ARM GAS  /tmp/ccoGswsS.s 			page 88


 1106 0056 5963     		str	r1, [r3, #52]
1466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1107              		.loc 1 1466 0
 1108 0058 636F     		ldr	r3, [r4, #116]
 1109 005a 0021     		movs	r1, #0
 1110 005c 9963     		str	r1, [r3, #56]
1469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1111              		.loc 1 1469 0
 1112 005e 2168     		ldr	r1, [r4]
 1113 0060 2831     		adds	r1, r1, #40
 1114 0062 1300     		movs	r3, r2
 1115 0064 0A00     		movs	r2, r1
 1116              	.LVL69:
 1117 0066 216D     		ldr	r1, [r4, #80]
 1118 0068 606F     		ldr	r0, [r4, #116]
 1119 006a FFF7FEFF 		bl	HAL_DMA_Start_IT
 1120              	.LVL70:
 1121 006e 0028     		cmp	r0, #0
 1122 0070 13D1     		bne	.L99
 1123              	.L92:
1483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1124              		.loc 1 1483 0
 1125 0072 2368     		ldr	r3, [r4]
 1126 0074 4022     		movs	r2, #64
 1127 0076 1A62     		str	r2, [r3, #32]
1485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1128              		.loc 1 1485 0
 1129 0078 7C23     		movs	r3, #124
 1130 007a 0022     		movs	r2, #0
 1131 007c E254     		strb	r2, [r4, r3]
1489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1132              		.loc 1 1489 0
 1133 007e 2268     		ldr	r2, [r4]
 1134 0080 9368     		ldr	r3, [r2, #8]
 1135 0082 8021     		movs	r1, #128
 1136 0084 0B43     		orrs	r3, r1
 1137 0086 9360     		str	r3, [r2, #8]
1491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1138              		.loc 1 1491 0
 1139 0088 0020     		movs	r0, #0
 1140 008a 12E0     		b	.L90
 1141              	.LVL71:
 1142              	.L98:
1437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1143              		.loc 1 1437 0 discriminator 1
 1144 008c 2369     		ldr	r3, [r4, #16]
 1145 008e 002B     		cmp	r3, #0
 1146 0090 C5D1     		bne	.L91
1439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1147              		.loc 1 1439 0
 1148 0092 CB07     		lsls	r3, r1, #31
 1149 0094 C3D5     		bpl	.L91
1441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 1150              		.loc 1 1441 0
 1151 0096 0120     		movs	r0, #1
 1152 0098 0BE0     		b	.L90
 1153              	.LVL72:
ARM GAS  /tmp/ccoGswsS.s 			page 89


 1154              	.L99:
1472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1155              		.loc 1 1472 0
 1156 009a 8823     		movs	r3, #136
 1157 009c 1022     		movs	r2, #16
 1158 009e E250     		str	r2, [r4, r3]
1474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1159              		.loc 1 1474 0
 1160 00a0 0C3B     		subs	r3, r3, #12
 1161 00a2 0022     		movs	r2, #0
 1162 00a4 E254     		strb	r2, [r4, r3]
1477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1163              		.loc 1 1477 0
 1164 00a6 0433     		adds	r3, r3, #4
 1165 00a8 2032     		adds	r2, r2, #32
 1166 00aa E250     		str	r2, [r4, r3]
1479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 1167              		.loc 1 1479 0
 1168 00ac 0120     		movs	r0, #1
 1169 00ae 00E0     		b	.L90
 1170              	.LVL73:
 1171              	.L93:
1495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1172              		.loc 1 1495 0
 1173 00b0 0220     		movs	r0, #2
 1174              	.LVL74:
 1175              	.L90:
1497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1176              		.loc 1 1497 0
 1177              		@ sp needed
 1178              	.LVL75:
 1179 00b2 10BD     		pop	{r4, pc}
 1180              	.LVL76:
 1181              	.L94:
1431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 1182              		.loc 1 1431 0
 1183 00b4 0120     		movs	r0, #1
 1184 00b6 FCE7     		b	.L90
 1185              	.L95:
 1186 00b8 0120     		movs	r0, #1
 1187 00ba FAE7     		b	.L90
 1188              	.L97:
1445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1189              		.loc 1 1445 0
 1190 00bc 0220     		movs	r0, #2
 1191 00be F8E7     		b	.L90
 1192              	.L101:
 1193              		.align	2
 1194              	.L100:
 1195 00c0 00000000 		.word	UART_DMATransmitCplt
 1196 00c4 00000000 		.word	UART_DMATxHalfCplt
 1197 00c8 00000000 		.word	UART_DMAError
 1198              		.cfi_endproc
 1199              	.LFE184:
 1201              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1202              		.align	1
 1203              		.global	HAL_UART_Receive_DMA
ARM GAS  /tmp/ccoGswsS.s 			page 90


 1204              		.syntax unified
 1205              		.code	16
 1206              		.thumb_func
 1207              		.fpu softvfp
 1209              	HAL_UART_Receive_DMA:
 1210              	.LFB185:
1516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 1211              		.loc 1 1516 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              	.LVL77:
 1216 0000 10B5     		push	{r4, lr}
 1217              	.LCFI4:
 1218              		.cfi_def_cfa_offset 8
 1219              		.cfi_offset 4, -8
 1220              		.cfi_offset 14, -4
 1221 0002 0400     		movs	r4, r0
1518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 1222              		.loc 1 1518 0
 1223 0004 8420     		movs	r0, #132
 1224              	.LVL78:
 1225 0006 2058     		ldr	r0, [r4, r0]
 1226 0008 2028     		cmp	r0, #32
 1227 000a 55D1     		bne	.L106
1520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1228              		.loc 1 1520 0
 1229 000c 0029     		cmp	r1, #0
 1230 000e 55D0     		beq	.L107
1520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1231              		.loc 1 1520 0 is_stmt 0 discriminator 1
 1232 0010 002A     		cmp	r2, #0
 1233 0012 55D0     		beq	.L108
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1234              		.loc 1 1528 0 is_stmt 1
 1235 0014 8023     		movs	r3, #128
 1236 0016 5B01     		lsls	r3, r3, #5
 1237 0018 A068     		ldr	r0, [r4, #8]
 1238 001a 9842     		cmp	r0, r3
 1239 001c 3AD0     		beq	.L111
 1240              	.L104:
1536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1241              		.loc 1 1536 0
 1242 001e 7C23     		movs	r3, #124
 1243 0020 E35C     		ldrb	r3, [r4, r3]
 1244 0022 012B     		cmp	r3, #1
 1245 0024 4ED0     		beq	.L110
1536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1246              		.loc 1 1536 0 is_stmt 0 discriminator 2
 1247 0026 7C23     		movs	r3, #124
 1248 0028 0120     		movs	r0, #1
 1249 002a E054     		strb	r0, [r4, r3]
1538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferSize = Size;
 1250              		.loc 1 1538 0 is_stmt 1 discriminator 2
 1251 002c A165     		str	r1, [r4, #88]
1539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1252              		.loc 1 1539 0 discriminator 2
ARM GAS  /tmp/ccoGswsS.s 			page 91


 1253 002e 203B     		subs	r3, r3, #32
 1254 0030 E252     		strh	r2, [r4, r3]
1541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1255              		.loc 1 1541 0 discriminator 2
 1256 0032 2C33     		adds	r3, r3, #44
 1257 0034 0021     		movs	r1, #0
 1258              	.LVL79:
 1259 0036 E150     		str	r1, [r4, r3]
1542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1260              		.loc 1 1542 0 discriminator 2
 1261 0038 043B     		subs	r3, r3, #4
 1262 003a 2231     		adds	r1, r1, #34
 1263 003c E150     		str	r1, [r4, r3]
1544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1264              		.loc 1 1544 0 discriminator 2
 1265 003e A36F     		ldr	r3, [r4, #120]
 1266 0040 002B     		cmp	r3, #0
 1267 0042 13D0     		beq	.L105
1547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1268              		.loc 1 1547 0
 1269 0044 2049     		ldr	r1, .L113
 1270 0046 D962     		str	r1, [r3, #44]
1550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1271              		.loc 1 1550 0
 1272 0048 A36F     		ldr	r3, [r4, #120]
 1273 004a 2049     		ldr	r1, .L113+4
 1274 004c 1963     		str	r1, [r3, #48]
1553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1275              		.loc 1 1553 0
 1276 004e A36F     		ldr	r3, [r4, #120]
 1277 0050 1F49     		ldr	r1, .L113+8
 1278 0052 5963     		str	r1, [r3, #52]
1556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1279              		.loc 1 1556 0
 1280 0054 A36F     		ldr	r3, [r4, #120]
 1281 0056 0021     		movs	r1, #0
 1282 0058 9963     		str	r1, [r3, #56]
1559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1283              		.loc 1 1559 0
 1284 005a 2168     		ldr	r1, [r4]
 1285 005c 2431     		adds	r1, r1, #36
 1286 005e 1300     		movs	r3, r2
 1287 0060 A26D     		ldr	r2, [r4, #88]
 1288              	.LVL80:
 1289 0062 A06F     		ldr	r0, [r4, #120]
 1290 0064 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1291              	.LVL81:
 1292 0068 0028     		cmp	r0, #0
 1293 006a 1AD1     		bne	.L112
 1294              	.L105:
1572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1295              		.loc 1 1572 0
 1296 006c 7C23     		movs	r3, #124
 1297 006e 0022     		movs	r2, #0
 1298 0070 E254     		strb	r2, [r4, r3]
1575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1299              		.loc 1 1575 0
ARM GAS  /tmp/ccoGswsS.s 			page 92


 1300 0072 2268     		ldr	r2, [r4]
 1301 0074 1168     		ldr	r1, [r2]
 1302 0076 8433     		adds	r3, r3, #132
 1303 0078 0B43     		orrs	r3, r1
 1304 007a 1360     		str	r3, [r2]
1578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1305              		.loc 1 1578 0
 1306 007c 2268     		ldr	r2, [r4]
 1307 007e 9368     		ldr	r3, [r2, #8]
 1308 0080 0121     		movs	r1, #1
 1309 0082 0B43     		orrs	r3, r1
 1310 0084 9360     		str	r3, [r2, #8]
1582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1311              		.loc 1 1582 0
 1312 0086 2268     		ldr	r2, [r4]
 1313 0088 9368     		ldr	r3, [r2, #8]
 1314 008a 3F31     		adds	r1, r1, #63
 1315 008c 0B43     		orrs	r3, r1
 1316 008e 9360     		str	r3, [r2, #8]
1584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1317              		.loc 1 1584 0
 1318 0090 0020     		movs	r0, #0
 1319 0092 12E0     		b	.L103
 1320              	.LVL82:
 1321              	.L111:
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1322              		.loc 1 1528 0 discriminator 1
 1323 0094 2369     		ldr	r3, [r4, #16]
 1324 0096 002B     		cmp	r3, #0
 1325 0098 C1D1     		bne	.L104
1530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1326              		.loc 1 1530 0
 1327 009a CB07     		lsls	r3, r1, #31
 1328 009c BFD5     		bpl	.L104
1532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 1329              		.loc 1 1532 0
 1330 009e 0120     		movs	r0, #1
 1331 00a0 0BE0     		b	.L103
 1332              	.LVL83:
 1333              	.L112:
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1334              		.loc 1 1562 0
 1335 00a2 8823     		movs	r3, #136
 1336 00a4 1022     		movs	r2, #16
 1337 00a6 E250     		str	r2, [r4, r3]
1564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1338              		.loc 1 1564 0
 1339 00a8 0C3B     		subs	r3, r3, #12
 1340 00aa 0022     		movs	r2, #0
 1341 00ac E254     		strb	r2, [r4, r3]
1567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1342              		.loc 1 1567 0
 1343 00ae 0433     		adds	r3, r3, #4
 1344 00b0 2032     		adds	r2, r2, #32
 1345 00b2 E250     		str	r2, [r4, r3]
1569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 1346              		.loc 1 1569 0
ARM GAS  /tmp/ccoGswsS.s 			page 93


 1347 00b4 0120     		movs	r0, #1
 1348 00b6 00E0     		b	.L103
 1349              	.LVL84:
 1350              	.L106:
1588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1351              		.loc 1 1588 0
 1352 00b8 0220     		movs	r0, #2
 1353              	.LVL85:
 1354              	.L103:
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1355              		.loc 1 1590 0
 1356              		@ sp needed
 1357              	.LVL86:
 1358 00ba 10BD     		pop	{r4, pc}
 1359              	.LVL87:
 1360              	.L107:
1522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 1361              		.loc 1 1522 0
 1362 00bc 0120     		movs	r0, #1
 1363 00be FCE7     		b	.L103
 1364              	.L108:
 1365 00c0 0120     		movs	r0, #1
 1366 00c2 FAE7     		b	.L103
 1367              	.L110:
1536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1368              		.loc 1 1536 0
 1369 00c4 0220     		movs	r0, #2
 1370 00c6 F8E7     		b	.L103
 1371              	.L114:
 1372              		.align	2
 1373              	.L113:
 1374 00c8 00000000 		.word	UART_DMAReceiveCplt
 1375 00cc 00000000 		.word	UART_DMARxHalfCplt
 1376 00d0 00000000 		.word	UART_DMAError
 1377              		.cfi_endproc
 1378              	.LFE185:
 1380              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1381              		.align	1
 1382              		.global	HAL_UART_DMAPause
 1383              		.syntax unified
 1384              		.code	16
 1385              		.thumb_func
 1386              		.fpu softvfp
 1388              	HAL_UART_DMAPause:
 1389              	.LFB186:
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1390              		.loc 1 1598 0
 1391              		.cfi_startproc
 1392              		@ args = 0, pretend = 0, frame = 0
 1393              		@ frame_needed = 0, uses_anonymous_args = 0
 1394              	.LVL88:
 1395 0000 10B5     		push	{r4, lr}
 1396              	.LCFI5:
 1397              		.cfi_def_cfa_offset 8
 1398              		.cfi_offset 4, -8
 1399              		.cfi_offset 14, -4
1599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
ARM GAS  /tmp/ccoGswsS.s 			page 94


 1400              		.loc 1 1599 0
 1401 0002 8023     		movs	r3, #128
 1402 0004 C458     		ldr	r4, [r0, r3]
 1403              	.LVL89:
1600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1404              		.loc 1 1600 0
 1405 0006 0433     		adds	r3, r3, #4
 1406 0008 C158     		ldr	r1, [r0, r3]
 1407              	.LVL90:
1602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1408              		.loc 1 1602 0
 1409 000a 083B     		subs	r3, r3, #8
 1410 000c C35C     		ldrb	r3, [r0, r3]
 1411 000e 012B     		cmp	r3, #1
 1412 0010 28D0     		beq	.L119
1602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1413              		.loc 1 1602 0 is_stmt 0 discriminator 2
 1414 0012 7C23     		movs	r3, #124
 1415 0014 0122     		movs	r2, #1
 1416 0016 C254     		strb	r2, [r0, r3]
1604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1417              		.loc 1 1604 0 is_stmt 1 discriminator 2
 1418 0018 0368     		ldr	r3, [r0]
 1419 001a 9A68     		ldr	r2, [r3, #8]
 1420 001c 1206     		lsls	r2, r2, #24
 1421 001e 01D5     		bpl	.L117
1604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1422              		.loc 1 1604 0 is_stmt 0 discriminator 1
 1423 0020 212C     		cmp	r4, #33
 1424 0022 0AD0     		beq	.L120
 1425              	.LVL91:
 1426              	.L117:
1610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1427              		.loc 1 1610 0 is_stmt 1
 1428 0024 0368     		ldr	r3, [r0]
 1429 0026 9A68     		ldr	r2, [r3, #8]
 1430 0028 5206     		lsls	r2, r2, #25
 1431 002a 01D5     		bpl	.L118
1610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1432              		.loc 1 1610 0 is_stmt 0 discriminator 1
 1433 002c 2229     		cmp	r1, #34
 1434 002e 09D0     		beq	.L121
 1435              	.LVL92:
 1436              	.L118:
1621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1437              		.loc 1 1621 0 is_stmt 1
 1438 0030 7C23     		movs	r3, #124
 1439 0032 0022     		movs	r2, #0
 1440 0034 C254     		strb	r2, [r0, r3]
1623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 1441              		.loc 1 1623 0
 1442 0036 0020     		movs	r0, #0
 1443              	.LVL93:
 1444              	.L116:
1624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1445              		.loc 1 1624 0
 1446              		@ sp needed
ARM GAS  /tmp/ccxOFv0R.s 			page 95


 1447 0038 10BD     		pop	{r4, pc}
 1448              	.LVL94:
 1449              	.L120:
1608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1450              		.loc 1 1608 0
 1451 003a 9A68     		ldr	r2, [r3, #8]
 1452 003c 5F34     		adds	r4, r4, #95
 1453              	.LVL95:
 1454 003e A243     		bics	r2, r4
 1455 0040 9A60     		str	r2, [r3, #8]
 1456 0042 EFE7     		b	.L117
 1457              	.LVL96:
 1458              	.L121:
1614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1459              		.loc 1 1614 0
 1460 0044 1A68     		ldr	r2, [r3]
 1461 0046 0849     		ldr	r1, .L122
 1462              	.LVL97:
 1463 0048 0A40     		ands	r2, r1
 1464 004a 1A60     		str	r2, [r3]
1615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1465              		.loc 1 1615 0
 1466 004c 0268     		ldr	r2, [r0]
 1467 004e 9368     		ldr	r3, [r2, #8]
 1468 0050 0331     		adds	r1, r1, #3
 1469 0052 FF31     		adds	r1, r1, #255
 1470 0054 8B43     		bics	r3, r1
 1471 0056 9360     		str	r3, [r2, #8]
1618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1472              		.loc 1 1618 0
 1473 0058 0268     		ldr	r2, [r0]
 1474 005a 9368     		ldr	r3, [r2, #8]
 1475 005c 3F31     		adds	r1, r1, #63
 1476 005e 8B43     		bics	r3, r1
 1477 0060 9360     		str	r3, [r2, #8]
 1478 0062 E5E7     		b	.L118
 1479              	.LVL98:
 1480              	.L119:
1602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1481              		.loc 1 1602 0
 1482 0064 0220     		movs	r0, #2
 1483              	.LVL99:
 1484 0066 E7E7     		b	.L116
 1485              	.L123:
 1486              		.align	2
 1487              	.L122:
 1488 0068 FFFEFFFF 		.word	-257
 1489              		.cfi_endproc
 1490              	.LFE186:
 1492              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1493              		.align	1
 1494              		.global	HAL_UART_DMAResume
 1495              		.syntax unified
 1496              		.code	16
 1497              		.thumb_func
 1498              		.fpu softvfp
 1500              	HAL_UART_DMAResume:
ARM GAS  /tmp/ccxOFv0R.s 			page 96


 1501              	.LFB187:
1632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 1502              		.loc 1 1632 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 1506              		@ link register save eliminated.
 1507              	.LVL100:
1633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1508              		.loc 1 1633 0
 1509 0000 7C23     		movs	r3, #124
 1510 0002 C35C     		ldrb	r3, [r0, r3]
 1511 0004 012B     		cmp	r3, #1
 1512 0006 29D0     		beq	.L128
1633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1513              		.loc 1 1633 0 is_stmt 0 discriminator 2
 1514 0008 7C23     		movs	r3, #124
 1515 000a 0122     		movs	r2, #1
 1516 000c C254     		strb	r2, [r0, r3]
1635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 1517              		.loc 1 1635 0 is_stmt 1 discriminator 2
 1518 000e 0433     		adds	r3, r3, #4
 1519 0010 C358     		ldr	r3, [r0, r3]
 1520 0012 212B     		cmp	r3, #33
 1521 0014 08D0     		beq	.L129
 1522              	.L126:
1640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 1523              		.loc 1 1640 0
 1524 0016 8423     		movs	r3, #132
 1525 0018 C358     		ldr	r3, [r0, r3]
 1526 001a 222B     		cmp	r3, #34
 1527 001c 0AD0     		beq	.L130
 1528              	.L127:
1653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1529              		.loc 1 1653 0
 1530 001e 7C23     		movs	r3, #124
 1531 0020 0022     		movs	r2, #0
 1532 0022 C254     		strb	r2, [r0, r3]
1655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 1533              		.loc 1 1655 0
 1534 0024 0020     		movs	r0, #0
 1535              	.LVL101:
 1536              	.L125:
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1537              		.loc 1 1656 0
 1538              		@ sp needed
 1539 0026 7047     		bx	lr
 1540              	.LVL102:
 1541              	.L129:
1638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1542              		.loc 1 1638 0
 1543 0028 0268     		ldr	r2, [r0]
 1544 002a 9368     		ldr	r3, [r2, #8]
 1545 002c 8021     		movs	r1, #128
 1546 002e 0B43     		orrs	r3, r1
 1547 0030 9360     		str	r3, [r2, #8]
 1548 0032 F0E7     		b	.L126
ARM GAS  /tmp/ccxOFv0R.s 			page 97


 1549              	.L130:
1643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1550              		.loc 1 1643 0
 1551 0034 0368     		ldr	r3, [r0]
 1552 0036 0822     		movs	r2, #8
 1553 0038 1A62     		str	r2, [r3, #32]
1646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1554              		.loc 1 1646 0
 1555 003a 0268     		ldr	r2, [r0]
 1556 003c 1168     		ldr	r1, [r2]
 1557 003e 8023     		movs	r3, #128
 1558 0040 5B00     		lsls	r3, r3, #1
 1559 0042 0B43     		orrs	r3, r1
 1560 0044 1360     		str	r3, [r2]
1647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1561              		.loc 1 1647 0
 1562 0046 0268     		ldr	r2, [r0]
 1563 0048 9368     		ldr	r3, [r2, #8]
 1564 004a 0121     		movs	r1, #1
 1565 004c 0B43     		orrs	r3, r1
 1566 004e 9360     		str	r3, [r2, #8]
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1567              		.loc 1 1650 0
 1568 0050 0268     		ldr	r2, [r0]
 1569 0052 9368     		ldr	r3, [r2, #8]
 1570 0054 3F31     		adds	r1, r1, #63
 1571 0056 0B43     		orrs	r3, r1
 1572 0058 9360     		str	r3, [r2, #8]
 1573 005a E0E7     		b	.L127
 1574              	.L128:
1633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1575              		.loc 1 1633 0
 1576 005c 0220     		movs	r0, #2
 1577              	.LVL103:
 1578 005e E2E7     		b	.L125
 1579              		.cfi_endproc
 1580              	.LFE187:
 1582              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1583              		.align	1
 1584              		.global	HAL_UART_DMAStop
 1585              		.syntax unified
 1586              		.code	16
 1587              		.thumb_func
 1588              		.fpu softvfp
 1590              	HAL_UART_DMAStop:
 1591              	.LFB188:
1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1592              		.loc 1 1664 0
 1593              		.cfi_startproc
 1594              		@ args = 0, pretend = 0, frame = 0
 1595              		@ frame_needed = 0, uses_anonymous_args = 0
 1596              	.LVL104:
 1597 0000 70B5     		push	{r4, r5, r6, lr}
 1598              	.LCFI6:
 1599              		.cfi_def_cfa_offset 16
 1600              		.cfi_offset 4, -16
 1601              		.cfi_offset 5, -12
ARM GAS  /tmp/ccxOFv0R.s 			page 98


 1602              		.cfi_offset 6, -8
 1603              		.cfi_offset 14, -4
 1604 0002 0400     		movs	r4, r0
1672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1605              		.loc 1 1672 0
 1606 0004 8023     		movs	r3, #128
 1607 0006 C058     		ldr	r0, [r0, r3]
 1608              	.LVL105:
1673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1609              		.loc 1 1673 0
 1610 0008 8422     		movs	r2, #132
 1611 000a A558     		ldr	r5, [r4, r2]
 1612              	.LVL106:
1676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1613              		.loc 1 1676 0
 1614 000c 2268     		ldr	r2, [r4]
 1615 000e 9168     		ldr	r1, [r2, #8]
 1616 0010 0B42     		tst	r3, r1
 1617 0012 01D0     		beq	.L132
1676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1618              		.loc 1 1676 0 is_stmt 0 discriminator 1
 1619 0014 2128     		cmp	r0, #33
 1620 0016 07D0     		beq	.L138
 1621              	.LVL107:
 1622              	.L132:
1700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1623              		.loc 1 1700 0 is_stmt 1
 1624 0018 2368     		ldr	r3, [r4]
 1625 001a 9A68     		ldr	r2, [r3, #8]
 1626 001c 5206     		lsls	r2, r2, #25
 1627 001e 36D5     		bpl	.L136
1700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1628              		.loc 1 1700 0 is_stmt 0 discriminator 1
 1629 0020 222D     		cmp	r5, #34
 1630 0022 1AD0     		beq	.L139
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 1631              		.loc 1 1723 0 is_stmt 1
 1632 0024 0020     		movs	r0, #0
 1633 0026 33E0     		b	.L134
 1634              	.LVL108:
 1635              	.L138:
1679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1636              		.loc 1 1679 0
 1637 0028 9368     		ldr	r3, [r2, #8]
 1638 002a 8021     		movs	r1, #128
 1639 002c 8B43     		bics	r3, r1
 1640 002e 9360     		str	r3, [r2, #8]
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1641              		.loc 1 1682 0
 1642 0030 606F     		ldr	r0, [r4, #116]
 1643              	.LVL109:
 1644 0032 0028     		cmp	r0, #0
 1645 0034 03D0     		beq	.L133
1684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1646              		.loc 1 1684 0
 1647 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1648              	.LVL110:
ARM GAS  /tmp/ccxOFv0R.s 			page 99


 1649 003a 0028     		cmp	r0, #0
 1650 003c 03D1     		bne	.L140
 1651              	.L133:
1696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1652              		.loc 1 1696 0
 1653 003e 2000     		movs	r0, r4
 1654 0040 FFF7FEFF 		bl	UART_EndTxTransfer
 1655              	.LVL111:
 1656 0044 E8E7     		b	.L132
 1657              	.L140:
1686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 1658              		.loc 1 1686 0
 1659 0046 606F     		ldr	r0, [r4, #116]
 1660 0048 FFF7FEFF 		bl	HAL_DMA_GetError
 1661              	.LVL112:
 1662 004c 2028     		cmp	r0, #32
 1663 004e F6D1     		bne	.L133
1689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1664              		.loc 1 1689 0
 1665 0050 8823     		movs	r3, #136
 1666 0052 1022     		movs	r2, #16
 1667 0054 E250     		str	r2, [r4, r3]
1691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 1668              		.loc 1 1691 0
 1669 0056 1D38     		subs	r0, r0, #29
 1670 0058 1AE0     		b	.L134
 1671              	.L139:
1703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1672              		.loc 1 1703 0
 1673 005a 9A68     		ldr	r2, [r3, #8]
 1674 005c 4021     		movs	r1, #64
 1675 005e 8A43     		bics	r2, r1
 1676 0060 9A60     		str	r2, [r3, #8]
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1677              		.loc 1 1706 0
 1678 0062 A06F     		ldr	r0, [r4, #120]
 1679 0064 0028     		cmp	r0, #0
 1680 0066 03D0     		beq	.L135
1708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1681              		.loc 1 1708 0
 1682 0068 FFF7FEFF 		bl	HAL_DMA_Abort
 1683              	.LVL113:
 1684 006c 0028     		cmp	r0, #0
 1685 006e 04D1     		bne	.L141
 1686              	.L135:
1720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1687              		.loc 1 1720 0
 1688 0070 2000     		movs	r0, r4
 1689 0072 FFF7FEFF 		bl	UART_EndRxTransfer
 1690              	.LVL114:
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 1691              		.loc 1 1723 0
 1692 0076 0020     		movs	r0, #0
 1693 0078 0AE0     		b	.L134
 1694              	.L141:
1710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 1695              		.loc 1 1710 0
ARM GAS  /tmp/ccxOFv0R.s 			page 100


 1696 007a A06F     		ldr	r0, [r4, #120]
 1697 007c FFF7FEFF 		bl	HAL_DMA_GetError
 1698              	.LVL115:
 1699 0080 2028     		cmp	r0, #32
 1700 0082 F5D1     		bne	.L135
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1701              		.loc 1 1713 0
 1702 0084 8823     		movs	r3, #136
 1703 0086 1022     		movs	r2, #16
 1704 0088 E250     		str	r2, [r4, r3]
1715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 1705              		.loc 1 1715 0
 1706 008a 1D38     		subs	r0, r0, #29
 1707 008c 00E0     		b	.L134
 1708              	.L136:
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 1709              		.loc 1 1723 0
 1710 008e 0020     		movs	r0, #0
 1711              	.L134:
1724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1712              		.loc 1 1724 0
 1713              		@ sp needed
 1714              	.LVL116:
 1715              	.LVL117:
 1716 0090 70BD     		pop	{r4, r5, r6, pc}
 1717              		.cfi_endproc
 1718              	.LFE188:
 1720              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1721              		.align	1
 1722              		.global	HAL_UART_Abort
 1723              		.syntax unified
 1724              		.code	16
 1725              		.thumb_func
 1726              		.fpu softvfp
 1728              	HAL_UART_Abort:
 1729              	.LFB189:
1739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
 1730              		.loc 1 1739 0
 1731              		.cfi_startproc
 1732              		@ args = 0, pretend = 0, frame = 0
 1733              		@ frame_needed = 0, uses_anonymous_args = 0
 1734              	.LVL118:
 1735 0000 10B5     		push	{r4, lr}
 1736              	.LCFI7:
 1737              		.cfi_def_cfa_offset 8
 1738              		.cfi_offset 4, -8
 1739              		.cfi_offset 14, -4
 1740 0002 0400     		movs	r4, r0
1741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
 1741              		.loc 1 1741 0
 1742 0004 0268     		ldr	r2, [r0]
 1743 0006 1368     		ldr	r3, [r2]
 1744 0008 3049     		ldr	r1, .L150
 1745 000a 0B40     		ands	r3, r1
 1746 000c 1360     		str	r3, [r2]
1742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1747              		.loc 1 1742 0
ARM GAS  /tmp/ccxOFv0R.s 			page 101


 1748 000e 0268     		ldr	r2, [r0]
 1749 0010 9368     		ldr	r3, [r2, #8]
 1750 0012 2F49     		ldr	r1, .L150+4
 1751 0014 0B40     		ands	r3, r1
 1752 0016 9360     		str	r3, [r2, #8]
1745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 1753              		.loc 1 1745 0
 1754 0018 0368     		ldr	r3, [r0]
 1755 001a 9A68     		ldr	r2, [r3, #8]
 1756 001c 1206     		lsls	r2, r2, #24
 1757 001e 0DD5     		bpl	.L143
1747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1758              		.loc 1 1747 0
 1759 0020 9A68     		ldr	r2, [r3, #8]
 1760 0022 8021     		movs	r1, #128
 1761 0024 8A43     		bics	r2, r1
 1762 0026 9A60     		str	r2, [r3, #8]
1750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1763              		.loc 1 1750 0
 1764 0028 436F     		ldr	r3, [r0, #116]
 1765 002a 002B     		cmp	r3, #0
 1766 002c 06D0     		beq	.L143
1754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1767              		.loc 1 1754 0
 1768 002e 0022     		movs	r2, #0
 1769 0030 9A63     		str	r2, [r3, #56]
1756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1770              		.loc 1 1756 0
 1771 0032 406F     		ldr	r0, [r0, #116]
 1772              	.LVL119:
 1773 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1774              	.LVL120:
 1775 0038 0028     		cmp	r0, #0
 1776 003a 2DD1     		bne	.L147
 1777              	.L143:
1770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 1778              		.loc 1 1770 0
 1779 003c 2368     		ldr	r3, [r4]
 1780 003e 9A68     		ldr	r2, [r3, #8]
 1781 0040 5206     		lsls	r2, r2, #25
 1782 0042 0DD5     		bpl	.L145
1772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1783              		.loc 1 1772 0
 1784 0044 9A68     		ldr	r2, [r3, #8]
 1785 0046 4021     		movs	r1, #64
 1786 0048 8A43     		bics	r2, r1
 1787 004a 9A60     		str	r2, [r3, #8]
1775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1788              		.loc 1 1775 0
 1789 004c A36F     		ldr	r3, [r4, #120]
 1790 004e 002B     		cmp	r3, #0
 1791 0050 06D0     		beq	.L145
1779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1792              		.loc 1 1779 0
 1793 0052 0022     		movs	r2, #0
 1794 0054 9A63     		str	r2, [r3, #56]
1781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
ARM GAS  /tmp/ccxOFv0R.s 			page 102


 1795              		.loc 1 1781 0
 1796 0056 A06F     		ldr	r0, [r4, #120]
 1797 0058 FFF7FEFF 		bl	HAL_DMA_Abort
 1798              	.LVL121:
 1799 005c 0028     		cmp	r0, #0
 1800 005e 25D1     		bne	.L148
 1801              	.L145:
1795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1802              		.loc 1 1795 0
 1803 0060 0023     		movs	r3, #0
 1804 0062 5622     		movs	r2, #86
 1805 0064 A352     		strh	r3, [r4, r2]
1796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1806              		.loc 1 1796 0
 1807 0066 0832     		adds	r2, r2, #8
 1808 0068 A352     		strh	r3, [r4, r2]
1799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1809              		.loc 1 1799 0
 1810 006a 2368     		ldr	r3, [r4]
 1811 006c 4F3A     		subs	r2, r2, #79
 1812 006e 1A62     		str	r2, [r3, #32]
1802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 1813              		.loc 1 1802 0
 1814 0070 8023     		movs	r3, #128
 1815 0072 9B05     		lsls	r3, r3, #22
 1816 0074 626E     		ldr	r2, [r4, #100]
 1817 0076 9A42     		cmp	r2, r3
 1818 0078 22D0     		beq	.L149
 1819              	.L146:
1808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1820              		.loc 1 1808 0
 1821 007a 2268     		ldr	r2, [r4]
 1822 007c 9369     		ldr	r3, [r2, #24]
 1823 007e 0821     		movs	r1, #8
 1824 0080 0B43     		orrs	r3, r1
 1825 0082 9361     		str	r3, [r2, #24]
1811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1826              		.loc 1 1811 0
 1827 0084 2023     		movs	r3, #32
 1828 0086 8022     		movs	r2, #128
 1829 0088 A350     		str	r3, [r4, r2]
1812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1830              		.loc 1 1812 0
 1831 008a 0432     		adds	r2, r2, #4
 1832 008c A350     		str	r3, [r4, r2]
1814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1833              		.loc 1 1814 0
 1834 008e 6833     		adds	r3, r3, #104
 1835 0090 0022     		movs	r2, #0
 1836 0092 E250     		str	r2, [r4, r3]
1816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 1837              		.loc 1 1816 0
 1838 0094 0020     		movs	r0, #0
 1839              	.L144:
1817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1840              		.loc 1 1817 0
 1841              		@ sp needed
ARM GAS  /tmp/ccxOFv0R.s 			page 103


 1842              	.LVL122:
 1843 0096 10BD     		pop	{r4, pc}
 1844              	.LVL123:
 1845              	.L147:
1758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 1846              		.loc 1 1758 0
 1847 0098 606F     		ldr	r0, [r4, #116]
 1848 009a FFF7FEFF 		bl	HAL_DMA_GetError
 1849              	.LVL124:
 1850 009e 2028     		cmp	r0, #32
 1851 00a0 CCD1     		bne	.L143
1761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1852              		.loc 1 1761 0
 1853 00a2 8823     		movs	r3, #136
 1854 00a4 1022     		movs	r2, #16
 1855 00a6 E250     		str	r2, [r4, r3]
1763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 1856              		.loc 1 1763 0
 1857 00a8 1D38     		subs	r0, r0, #29
 1858 00aa F4E7     		b	.L144
 1859              	.L148:
1783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 1860              		.loc 1 1783 0
 1861 00ac A06F     		ldr	r0, [r4, #120]
 1862 00ae FFF7FEFF 		bl	HAL_DMA_GetError
 1863              	.LVL125:
 1864 00b2 2028     		cmp	r0, #32
 1865 00b4 D4D1     		bne	.L145
1786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1866              		.loc 1 1786 0
 1867 00b6 8823     		movs	r3, #136
 1868 00b8 1022     		movs	r2, #16
 1869 00ba E250     		str	r2, [r4, r3]
1788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 1870              		.loc 1 1788 0
 1871 00bc 1D38     		subs	r0, r0, #29
 1872 00be EAE7     		b	.L144
 1873              	.L149:
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1874              		.loc 1 1804 0
 1875 00c0 2268     		ldr	r2, [r4]
 1876 00c2 9369     		ldr	r3, [r2, #24]
 1877 00c4 1021     		movs	r1, #16
 1878 00c6 0B43     		orrs	r3, r1
 1879 00c8 9361     		str	r3, [r2, #24]
 1880 00ca D6E7     		b	.L146
 1881              	.L151:
 1882              		.align	2
 1883              	.L150:
 1884 00cc 1FFEFFFF 		.word	-481
 1885 00d0 FEFF7FEF 		.word	-276824066
 1886              		.cfi_endproc
 1887              	.LFE189:
 1889              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1890              		.align	1
 1891              		.global	HAL_UART_AbortTransmit
 1892              		.syntax unified
ARM GAS  /tmp/ccxOFv0R.s 			page 104


 1893              		.code	16
 1894              		.thumb_func
 1895              		.fpu softvfp
 1897              	HAL_UART_AbortTransmit:
 1898              	.LFB190:
1832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
 1899              		.loc 1 1832 0
 1900              		.cfi_startproc
 1901              		@ args = 0, pretend = 0, frame = 0
 1902              		@ frame_needed = 0, uses_anonymous_args = 0
 1903              	.LVL126:
 1904 0000 10B5     		push	{r4, lr}
 1905              	.LCFI8:
 1906              		.cfi_def_cfa_offset 8
 1907              		.cfi_offset 4, -8
 1908              		.cfi_offset 14, -4
 1909 0002 0400     		movs	r4, r0
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 1910              		.loc 1 1834 0
 1911 0004 0268     		ldr	r2, [r0]
 1912 0006 1368     		ldr	r3, [r2]
 1913 0008 C021     		movs	r1, #192
 1914 000a 8B43     		bics	r3, r1
 1915 000c 1360     		str	r3, [r2]
1835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1916              		.loc 1 1835 0
 1917 000e 0268     		ldr	r2, [r0]
 1918 0010 9368     		ldr	r3, [r2, #8]
 1919 0012 1949     		ldr	r1, .L158
 1920 0014 0B40     		ands	r3, r1
 1921 0016 9360     		str	r3, [r2, #8]
1838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 1922              		.loc 1 1838 0
 1923 0018 0368     		ldr	r3, [r0]
 1924 001a 9A68     		ldr	r2, [r3, #8]
 1925 001c 1206     		lsls	r2, r2, #24
 1926 001e 0DD5     		bpl	.L153
1840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1927              		.loc 1 1840 0
 1928 0020 9A68     		ldr	r2, [r3, #8]
 1929 0022 8021     		movs	r1, #128
 1930 0024 8A43     		bics	r2, r1
 1931 0026 9A60     		str	r2, [r3, #8]
1843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1932              		.loc 1 1843 0
 1933 0028 436F     		ldr	r3, [r0, #116]
 1934 002a 002B     		cmp	r3, #0
 1935 002c 06D0     		beq	.L153
1847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1936              		.loc 1 1847 0
 1937 002e 0022     		movs	r2, #0
 1938 0030 9A63     		str	r2, [r3, #56]
1849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1939              		.loc 1 1849 0
 1940 0032 406F     		ldr	r0, [r0, #116]
 1941              	.LVL127:
 1942 0034 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  /tmp/ccxOFv0R.s 			page 105


 1943              	.LVL128:
 1944 0038 0028     		cmp	r0, #0
 1945 003a 0CD1     		bne	.L156
 1946              	.L153:
1863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1947              		.loc 1 1863 0
 1948 003c 5623     		movs	r3, #86
 1949 003e 0022     		movs	r2, #0
 1950 0040 E252     		strh	r2, [r4, r3]
1866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 1951              		.loc 1 1866 0
 1952 0042 8023     		movs	r3, #128
 1953 0044 9B05     		lsls	r3, r3, #22
 1954 0046 626E     		ldr	r2, [r4, #100]
 1955 0048 9A42     		cmp	r2, r3
 1956 004a 0ED0     		beq	.L157
 1957              	.L155:
1872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1958              		.loc 1 1872 0
 1959 004c 8023     		movs	r3, #128
 1960 004e 2022     		movs	r2, #32
 1961 0050 E250     		str	r2, [r4, r3]
1874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 1962              		.loc 1 1874 0
 1963 0052 0020     		movs	r0, #0
 1964              	.L154:
1875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1965              		.loc 1 1875 0
 1966              		@ sp needed
 1967              	.LVL129:
 1968 0054 10BD     		pop	{r4, pc}
 1969              	.LVL130:
 1970              	.L156:
1851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 1971              		.loc 1 1851 0
 1972 0056 606F     		ldr	r0, [r4, #116]
 1973 0058 FFF7FEFF 		bl	HAL_DMA_GetError
 1974              	.LVL131:
 1975 005c 2028     		cmp	r0, #32
 1976 005e EDD1     		bne	.L153
1854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1977              		.loc 1 1854 0
 1978 0060 8823     		movs	r3, #136
 1979 0062 1022     		movs	r2, #16
 1980 0064 E250     		str	r2, [r4, r3]
1856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 1981              		.loc 1 1856 0
 1982 0066 1D38     		subs	r0, r0, #29
 1983 0068 F4E7     		b	.L154
 1984              	.L157:
1868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1985              		.loc 1 1868 0
 1986 006a 2268     		ldr	r2, [r4]
 1987 006c 9369     		ldr	r3, [r2, #24]
 1988 006e 1021     		movs	r1, #16
 1989 0070 0B43     		orrs	r3, r1
 1990 0072 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/ccxOFv0R.s 			page 106


 1991 0074 EAE7     		b	.L155
 1992              	.L159:
 1993 0076 C046     		.align	2
 1994              	.L158:
 1995 0078 FFFF7FFF 		.word	-8388609
 1996              		.cfi_endproc
 1997              	.LFE190:
 1999              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2000              		.align	1
 2001              		.global	HAL_UART_AbortReceive
 2002              		.syntax unified
 2003              		.code	16
 2004              		.thumb_func
 2005              		.fpu softvfp
 2007              	HAL_UART_AbortReceive:
 2008              	.LFB191:
1890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
 2009              		.loc 1 1890 0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 0
 2012              		@ frame_needed = 0, uses_anonymous_args = 0
 2013              	.LVL132:
 2014 0000 10B5     		push	{r4, lr}
 2015              	.LCFI9:
 2016              		.cfi_def_cfa_offset 8
 2017              		.cfi_offset 4, -8
 2018              		.cfi_offset 14, -4
 2019 0002 0400     		movs	r4, r0
1892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 2020              		.loc 1 1892 0
 2021 0004 0268     		ldr	r2, [r0]
 2022 0006 1368     		ldr	r3, [r2]
 2023 0008 1949     		ldr	r1, .L164
 2024 000a 0B40     		ands	r3, r1
 2025 000c 1360     		str	r3, [r2]
1893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2026              		.loc 1 1893 0
 2027 000e 0268     		ldr	r2, [r0]
 2028 0010 9368     		ldr	r3, [r2, #8]
 2029 0012 1849     		ldr	r1, .L164+4
 2030 0014 0B40     		ands	r3, r1
 2031 0016 9360     		str	r3, [r2, #8]
1896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 2032              		.loc 1 1896 0
 2033 0018 0368     		ldr	r3, [r0]
 2034 001a 9A68     		ldr	r2, [r3, #8]
 2035 001c 5206     		lsls	r2, r2, #25
 2036 001e 0DD5     		bpl	.L161
1898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2037              		.loc 1 1898 0
 2038 0020 9A68     		ldr	r2, [r3, #8]
 2039 0022 4021     		movs	r1, #64
 2040 0024 8A43     		bics	r2, r1
 2041 0026 9A60     		str	r2, [r3, #8]
1901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2042              		.loc 1 1901 0
 2043 0028 836F     		ldr	r3, [r0, #120]
ARM GAS  /tmp/ccxOFv0R.s 			page 107


 2044 002a 002B     		cmp	r3, #0
 2045 002c 06D0     		beq	.L161
1905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2046              		.loc 1 1905 0
 2047 002e 0022     		movs	r2, #0
 2048 0030 9A63     		str	r2, [r3, #56]
1907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 2049              		.loc 1 1907 0
 2050 0032 806F     		ldr	r0, [r0, #120]
 2051              	.LVL133:
 2052 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2053              	.LVL134:
 2054 0038 0028     		cmp	r0, #0
 2055 003a 0FD1     		bne	.L163
 2056              	.L161:
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2057              		.loc 1 1921 0
 2058 003c 5E23     		movs	r3, #94
 2059 003e 0022     		movs	r2, #0
 2060 0040 E252     		strh	r2, [r4, r3]
1924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2061              		.loc 1 1924 0
 2062 0042 2368     		ldr	r3, [r4]
 2063 0044 0F32     		adds	r2, r2, #15
 2064 0046 1A62     		str	r2, [r3, #32]
1927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2065              		.loc 1 1927 0
 2066 0048 2268     		ldr	r2, [r4]
 2067 004a 9369     		ldr	r3, [r2, #24]
 2068 004c 0821     		movs	r1, #8
 2069 004e 0B43     		orrs	r3, r1
 2070 0050 9361     		str	r3, [r2, #24]
1930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2071              		.loc 1 1930 0
 2072 0052 8423     		movs	r3, #132
 2073 0054 2022     		movs	r2, #32
 2074 0056 E250     		str	r2, [r4, r3]
1932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 2075              		.loc 1 1932 0
 2076 0058 0020     		movs	r0, #0
 2077              	.L162:
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2078              		.loc 1 1933 0
 2079              		@ sp needed
 2080              	.LVL135:
 2081 005a 10BD     		pop	{r4, pc}
 2082              	.LVL136:
 2083              	.L163:
1909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 2084              		.loc 1 1909 0
 2085 005c A06F     		ldr	r0, [r4, #120]
 2086 005e FFF7FEFF 		bl	HAL_DMA_GetError
 2087              	.LVL137:
 2088 0062 2028     		cmp	r0, #32
 2089 0064 EAD1     		bne	.L161
1912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2090              		.loc 1 1912 0
ARM GAS  /tmp/ccxOFv0R.s 			page 108


 2091 0066 8823     		movs	r3, #136
 2092 0068 1022     		movs	r2, #16
 2093 006a E250     		str	r2, [r4, r3]
1914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 2094              		.loc 1 1914 0
 2095 006c 1D38     		subs	r0, r0, #29
 2096 006e F4E7     		b	.L162
 2097              	.L165:
 2098              		.align	2
 2099              	.L164:
 2100 0070 DFFEFFFF 		.word	-289
 2101 0074 FEFFFFEF 		.word	-268435458
 2102              		.cfi_endproc
 2103              	.LFE191:
 2105              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2106              		.align	1
 2107              		.weak	HAL_UART_TxCpltCallback
 2108              		.syntax unified
 2109              		.code	16
 2110              		.thumb_func
 2111              		.fpu softvfp
 2113              	HAL_UART_TxCpltCallback:
 2114              	.LFB196:
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2115              		.loc 1 2489 0
 2116              		.cfi_startproc
 2117              		@ args = 0, pretend = 0, frame = 0
 2118              		@ frame_needed = 0, uses_anonymous_args = 0
 2119              		@ link register save eliminated.
 2120              	.LVL138:
2496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2121              		.loc 1 2496 0
 2122              		@ sp needed
 2123 0000 7047     		bx	lr
 2124              		.cfi_endproc
 2125              	.LFE196:
 2127              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2128              		.align	1
 2129              		.syntax unified
 2130              		.code	16
 2131              		.thumb_func
 2132              		.fpu softvfp
 2134              	UART_DMATransmitCplt:
 2135              	.LFB218:
3251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2136              		.loc 1 3251 0
 2137              		.cfi_startproc
 2138              		@ args = 0, pretend = 0, frame = 0
 2139              		@ frame_needed = 0, uses_anonymous_args = 0
 2140              	.LVL139:
 2141 0000 10B5     		push	{r4, lr}
 2142              	.LCFI10:
 2143              		.cfi_def_cfa_offset 8
 2144              		.cfi_offset 4, -8
 2145              		.cfi_offset 14, -4
3252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2146              		.loc 1 3252 0
ARM GAS  /tmp/ccxOFv0R.s 			page 109


 2147 0002 836A     		ldr	r3, [r0, #40]
 2148              	.LVL140:
3255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 2149              		.loc 1 3255 0
 2150 0004 0268     		ldr	r2, [r0]
 2151 0006 1268     		ldr	r2, [r2]
 2152 0008 9206     		lsls	r2, r2, #26
 2153 000a 0DD4     		bmi	.L168
3257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2154              		.loc 1 3257 0
 2155 000c 5622     		movs	r2, #86
 2156 000e 0021     		movs	r1, #0
 2157 0010 9952     		strh	r1, [r3, r2]
3261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2158              		.loc 1 3261 0
 2159 0012 1968     		ldr	r1, [r3]
 2160 0014 8A68     		ldr	r2, [r1, #8]
 2161 0016 8020     		movs	r0, #128
 2162              	.LVL141:
 2163 0018 8243     		bics	r2, r0
 2164 001a 8A60     		str	r2, [r1, #8]
3264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 2165              		.loc 1 3264 0
 2166 001c 1A68     		ldr	r2, [r3]
 2167 001e 1368     		ldr	r3, [r2]
 2168              	.LVL142:
 2169 0020 4021     		movs	r1, #64
 2170 0022 0B43     		orrs	r3, r1
 2171 0024 1360     		str	r3, [r2]
 2172              	.L167:
3277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2173              		.loc 1 3277 0
 2174              		@ sp needed
 2175 0026 10BD     		pop	{r4, pc}
 2176              	.LVL143:
 2177              	.L168:
3274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2178              		.loc 1 3274 0
 2179 0028 1800     		movs	r0, r3
 2180              	.LVL144:
 2181 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2182              	.LVL145:
3277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2183              		.loc 1 3277 0
 2184 002e FAE7     		b	.L167
 2185              		.cfi_endproc
 2186              	.LFE218:
 2188              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 2189              		.align	1
 2190              		.syntax unified
 2191              		.code	16
 2192              		.thumb_func
 2193              		.fpu softvfp
 2195              	UART_EndTransmit_IT:
 2196              	.LFB232:
3723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
ARM GAS  /tmp/ccxOFv0R.s 			page 110


3725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 2197              		.loc 1 3731 0
 2198              		.cfi_startproc
 2199              		@ args = 0, pretend = 0, frame = 0
 2200              		@ frame_needed = 0, uses_anonymous_args = 0
 2201              	.LVL146:
 2202 0000 10B5     		push	{r4, lr}
 2203              	.LCFI11:
 2204              		.cfi_def_cfa_offset 8
 2205              		.cfi_offset 4, -8
 2206              		.cfi_offset 14, -4
3732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 2207              		.loc 1 3733 0
 2208 0002 0268     		ldr	r2, [r0]
 2209 0004 1368     		ldr	r3, [r2]
 2210 0006 4021     		movs	r1, #64
 2211 0008 8B43     		bics	r3, r1
 2212 000a 1360     		str	r3, [r2]
3734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2213              		.loc 1 3736 0
 2214 000c 8023     		movs	r3, #128
 2215 000e 2022     		movs	r2, #32
 2216 0010 C250     		str	r2, [r0, r3]
3737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxISR = NULL;
 2217              		.loc 1 3739 0
 2218 0012 0023     		movs	r3, #0
 2219 0014 0367     		str	r3, [r0, #112]
3740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 2220              		.loc 1 3746 0
 2221 0016 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2222              	.LVL147:
3747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 2223              		.loc 1 3748 0
 2224              		@ sp needed
 2225 001a 10BD     		pop	{r4, pc}
 2226              		.cfi_endproc
 2227              	.LFE232:
 2229              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2230              		.align	1
ARM GAS  /tmp/ccxOFv0R.s 			page 111


 2231              		.weak	HAL_UART_TxHalfCpltCallback
 2232              		.syntax unified
 2233              		.code	16
 2234              		.thumb_func
 2235              		.fpu softvfp
 2237              	HAL_UART_TxHalfCpltCallback:
 2238              	.LFB197:
2504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2239              		.loc 1 2504 0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 0
 2242              		@ frame_needed = 0, uses_anonymous_args = 0
 2243              		@ link register save eliminated.
 2244              	.LVL148:
2511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2245              		.loc 1 2511 0
 2246              		@ sp needed
 2247 0000 7047     		bx	lr
 2248              		.cfi_endproc
 2249              	.LFE197:
 2251              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2252              		.align	1
 2253              		.syntax unified
 2254              		.code	16
 2255              		.thumb_func
 2256              		.fpu softvfp
 2258              	UART_DMATxHalfCplt:
 2259              	.LFB219:
3285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2260              		.loc 1 3285 0
 2261              		.cfi_startproc
 2262              		@ args = 0, pretend = 0, frame = 0
 2263              		@ frame_needed = 0, uses_anonymous_args = 0
 2264              	.LVL149:
 2265 0000 10B5     		push	{r4, lr}
 2266              	.LCFI12:
 2267              		.cfi_def_cfa_offset 8
 2268              		.cfi_offset 4, -8
 2269              		.cfi_offset 14, -4
3286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2270              		.loc 1 3286 0
 2271 0002 806A     		ldr	r0, [r0, #40]
 2272              	.LVL150:
3293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2273              		.loc 1 3293 0
 2274 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2275              	.LVL151:
3295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2276              		.loc 1 3295 0
 2277              		@ sp needed
 2278 0008 10BD     		pop	{r4, pc}
 2279              		.cfi_endproc
 2280              	.LFE219:
 2282              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2283              		.align	1
 2284              		.weak	HAL_UART_RxCpltCallback
 2285              		.syntax unified
ARM GAS  /tmp/ccxOFv0R.s 			page 112


 2286              		.code	16
 2287              		.thumb_func
 2288              		.fpu softvfp
 2290              	HAL_UART_RxCpltCallback:
 2291              	.LFB198:
2519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2292              		.loc 1 2519 0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 0
 2295              		@ frame_needed = 0, uses_anonymous_args = 0
 2296              		@ link register save eliminated.
 2297              	.LVL152:
2526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2298              		.loc 1 2526 0
 2299              		@ sp needed
 2300 0000 7047     		bx	lr
 2301              		.cfi_endproc
 2302              	.LFE198:
 2304              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 2305              		.align	1
 2306              		.syntax unified
 2307              		.code	16
 2308              		.thumb_func
 2309              		.fpu softvfp
 2311              	UART_RxISR_8BIT:
 2312              	.LFB233:
3749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
3753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 2313              		.loc 1 3756 0
 2314              		.cfi_startproc
 2315              		@ args = 0, pretend = 0, frame = 0
 2316              		@ frame_needed = 0, uses_anonymous_args = 0
 2317              	.LVL153:
 2318 0000 10B5     		push	{r4, lr}
 2319              	.LCFI13:
 2320              		.cfi_def_cfa_offset 8
 2321              		.cfi_offset 4, -8
 2322              		.cfi_offset 14, -4
3757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 2323              		.loc 1 3757 0
 2324 0002 6023     		movs	r3, #96
 2325 0004 C35A     		ldrh	r3, [r0, r3]
 2326              	.LVL154:
3758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  uhdata;
3759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2327              		.loc 1 3761 0
 2328 0006 8422     		movs	r2, #132
 2329 0008 8258     		ldr	r2, [r0, r2]
 2330 000a 222A     		cmp	r2, #34
ARM GAS  /tmp/ccxOFv0R.s 			page 113


 2331 000c 05D0     		beq	.L177
3762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
3765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pRxBuffPtr++;
3766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount--;
3767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Clear RxISR function pointer */
3780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxISR = NULL;
3781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
3792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2332              		.loc 1 3794 0
 2333 000e 0268     		ldr	r2, [r0]
 2334 0010 9369     		ldr	r3, [r2, #24]
 2335              	.LVL155:
 2336 0012 0821     		movs	r1, #8
 2337 0014 0B43     		orrs	r3, r1
 2338 0016 9361     		str	r3, [r2, #24]
 2339              	.LVL156:
 2340              	.L174:
3795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 2341              		.loc 1 3796 0
 2342              		@ sp needed
 2343 0018 10BD     		pop	{r4, pc}
 2344              	.LVL157:
 2345              	.L177:
3763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 2346              		.loc 1 3763 0
 2347 001a 0268     		ldr	r2, [r0]
 2348 001c 526A     		ldr	r2, [r2, #36]
 2349              	.LVL158:
3764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pRxBuffPtr++;
 2350              		.loc 1 3764 0
ARM GAS  /tmp/ccxOFv0R.s 			page 114


 2351 001e DBB2     		uxtb	r3, r3
 2352              	.LVL159:
 2353 0020 1340     		ands	r3, r2
 2354 0022 826D     		ldr	r2, [r0, #88]
 2355              	.LVL160:
 2356 0024 1370     		strb	r3, [r2]
 2357              	.LVL161:
3765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount--;
 2358              		.loc 1 3765 0
 2359 0026 836D     		ldr	r3, [r0, #88]
 2360 0028 0133     		adds	r3, r3, #1
 2361 002a 8365     		str	r3, [r0, #88]
3766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2362              		.loc 1 3766 0
 2363 002c 5E22     		movs	r2, #94
 2364 002e 835A     		ldrh	r3, [r0, r2]
 2365 0030 013B     		subs	r3, r3, #1
 2366 0032 9BB2     		uxth	r3, r3
 2367 0034 8352     		strh	r3, [r0, r2]
3768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2368              		.loc 1 3768 0
 2369 0036 835A     		ldrh	r3, [r0, r2]
 2370 0038 9BB2     		uxth	r3, r3
 2371 003a 002B     		cmp	r3, #0
 2372 003c ECD1     		bne	.L174
3771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2373              		.loc 1 3771 0
 2374 003e 0268     		ldr	r2, [r0]
 2375 0040 1368     		ldr	r3, [r2]
 2376 0042 0849     		ldr	r1, .L178
 2377 0044 0B40     		ands	r3, r1
 2378 0046 1360     		str	r3, [r2]
3774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2379              		.loc 1 3774 0
 2380 0048 0268     		ldr	r2, [r0]
 2381 004a 9368     		ldr	r3, [r2, #8]
 2382 004c 2331     		adds	r1, r1, #35
 2383 004e FF31     		adds	r1, r1, #255
 2384 0050 8B43     		bics	r3, r1
 2385 0052 9360     		str	r3, [r2, #8]
3777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2386              		.loc 1 3777 0
 2387 0054 8423     		movs	r3, #132
 2388 0056 2022     		movs	r2, #32
 2389 0058 C250     		str	r2, [r0, r3]
3780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2390              		.loc 1 3780 0
 2391 005a 0023     		movs	r3, #0
 2392 005c C366     		str	r3, [r0, #108]
3787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2393              		.loc 1 3787 0
 2394 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2395              	.LVL162:
 2396 0062 D9E7     		b	.L174
 2397              	.L179:
 2398              		.align	2
 2399              	.L178:
ARM GAS  /tmp/ccxOFv0R.s 			page 115


 2400 0064 DFFEFFFF 		.word	-289
 2401              		.cfi_endproc
 2402              	.LFE233:
 2404              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 2405              		.align	1
 2406              		.syntax unified
 2407              		.code	16
 2408              		.thumb_func
 2409              		.fpu softvfp
 2411              	UART_RxISR_16BIT:
 2412              	.LFB234:
3797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
3803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 2413              		.loc 1 3806 0
 2414              		.cfi_startproc
 2415              		@ args = 0, pretend = 0, frame = 0
 2416              		@ frame_needed = 0, uses_anonymous_args = 0
 2417              	.LVL163:
 2418 0000 10B5     		push	{r4, lr}
 2419              	.LCFI14:
 2420              		.cfi_def_cfa_offset 8
 2421              		.cfi_offset 4, -8
 2422              		.cfi_offset 14, -4
3807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t *tmp;
3808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 2423              		.loc 1 3808 0
 2424 0002 6023     		movs	r3, #96
 2425 0004 C25A     		ldrh	r2, [r0, r3]
 2426              	.LVL164:
3809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  uhdata;
3810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2427              		.loc 1 3812 0
 2428 0006 2433     		adds	r3, r3, #36
 2429 0008 C358     		ldr	r3, [r0, r3]
 2430 000a 222B     		cmp	r3, #34
 2431 000c 05D0     		beq	.L183
3813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
3816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
3817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
3818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount--;
3819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
ARM GAS  /tmp/ccxOFv0R.s 			page 116


3824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Clear RxISR function pointer */
3832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxISR = NULL;
3833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
3844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2432              		.loc 1 3846 0
 2433 000e 0268     		ldr	r2, [r0]
 2434              	.LVL165:
 2435 0010 9369     		ldr	r3, [r2, #24]
 2436 0012 0821     		movs	r1, #8
 2437 0014 0B43     		orrs	r3, r1
 2438 0016 9361     		str	r3, [r2, #24]
 2439              	.LVL166:
 2440              	.L180:
3847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 2441              		.loc 1 3848 0
 2442              		@ sp needed
 2443 0018 10BD     		pop	{r4, pc}
 2444              	.LVL167:
 2445              	.L183:
3814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 2446              		.loc 1 3814 0
 2447 001a 0368     		ldr	r3, [r0]
 2448 001c 5B6A     		ldr	r3, [r3, #36]
 2449              	.LVL168:
3816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 2450              		.loc 1 3816 0
 2451 001e 1340     		ands	r3, r2
 2452              	.LVL169:
 2453 0020 826D     		ldr	r2, [r0, #88]
 2454              	.LVL170:
 2455 0022 1380     		strh	r3, [r2]
 2456              	.LVL171:
3817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount--;
 2457              		.loc 1 3817 0
 2458 0024 836D     		ldr	r3, [r0, #88]
 2459 0026 0233     		adds	r3, r3, #2
 2460 0028 8365     		str	r3, [r0, #88]
ARM GAS  /tmp/ccxOFv0R.s 			page 117


3818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2461              		.loc 1 3818 0
 2462 002a 5E22     		movs	r2, #94
 2463              	.LVL172:
 2464 002c 835A     		ldrh	r3, [r0, r2]
 2465 002e 013B     		subs	r3, r3, #1
 2466 0030 9BB2     		uxth	r3, r3
 2467 0032 8352     		strh	r3, [r0, r2]
3820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2468              		.loc 1 3820 0
 2469 0034 835A     		ldrh	r3, [r0, r2]
 2470 0036 9BB2     		uxth	r3, r3
 2471 0038 002B     		cmp	r3, #0
 2472 003a EDD1     		bne	.L180
3823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2473              		.loc 1 3823 0
 2474 003c 0268     		ldr	r2, [r0]
 2475 003e 1368     		ldr	r3, [r2]
 2476 0040 0849     		ldr	r1, .L184
 2477 0042 0B40     		ands	r3, r1
 2478 0044 1360     		str	r3, [r2]
3826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2479              		.loc 1 3826 0
 2480 0046 0268     		ldr	r2, [r0]
 2481 0048 9368     		ldr	r3, [r2, #8]
 2482 004a 2331     		adds	r1, r1, #35
 2483 004c FF31     		adds	r1, r1, #255
 2484 004e 8B43     		bics	r3, r1
 2485 0050 9360     		str	r3, [r2, #8]
3829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2486              		.loc 1 3829 0
 2487 0052 8423     		movs	r3, #132
 2488 0054 2022     		movs	r2, #32
 2489 0056 C250     		str	r2, [r0, r3]
3832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2490              		.loc 1 3832 0
 2491 0058 0023     		movs	r3, #0
 2492 005a C366     		str	r3, [r0, #108]
3839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2493              		.loc 1 3839 0
 2494 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2495              	.LVL173:
 2496 0060 DAE7     		b	.L180
 2497              	.L185:
 2498 0062 C046     		.align	2
 2499              	.L184:
 2500 0064 DFFEFFFF 		.word	-289
 2501              		.cfi_endproc
 2502              	.LFE234:
 2504              		.section	.text.UART_RxISR_8BIT_FIFOEN,"ax",%progbits
 2505              		.align	1
 2506              		.syntax unified
 2507              		.code	16
 2508              		.thumb_func
 2509              		.fpu softvfp
 2511              	UART_RxISR_8BIT_FIFOEN:
 2512              	.LFB235:
ARM GAS  /tmp/ccxOFv0R.s 			page 118


3849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8  bits data word length and FIFO mode is enabled.
3852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
3855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 2513              		.loc 1 3858 0
 2514              		.cfi_startproc
 2515              		@ args = 0, pretend = 0, frame = 0
 2516              		@ frame_needed = 0, uses_anonymous_args = 0
 2517              	.LVL174:
 2518 0000 70B5     		push	{r4, r5, r6, lr}
 2519              	.LCFI15:
 2520              		.cfi_def_cfa_offset 16
 2521              		.cfi_offset 4, -16
 2522              		.cfi_offset 5, -12
 2523              		.cfi_offset 6, -8
 2524              		.cfi_offset 14, -4
 2525 0002 0400     		movs	r4, r0
3859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 2526              		.loc 1 3859 0
 2527 0004 6023     		movs	r3, #96
 2528 0006 C55A     		ldrh	r5, [r0, r3]
 2529              	.LVL175:
3860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  uhdata;
3861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t   nb_rx_data;
3862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  rxdatacount;
3863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2530              		.loc 1 3865 0
 2531 0008 2433     		adds	r3, r3, #36
 2532 000a C358     		ldr	r3, [r0, r3]
 2533 000c 222B     		cmp	r3, #34
 2534 000e 05D0     		beq	.L192
3866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     for (nb_rx_data = huart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
3868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
3871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pRxBuffPtr++;
3872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxXferCount--;
3873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
3875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
3877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) and RX FIFO 
3880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
3883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccxOFv0R.s 			page 119


3884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Clear RxISR function pointer */
3886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxISR = NULL;
3887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
3894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
3899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
3900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
3901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     */
3902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
3903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
3904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
3906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
3907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Update the RxISR function pointer */
3909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
3910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
3912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
3913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
3916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2535              		.loc 1 3918 0
 2536 0010 0268     		ldr	r2, [r0]
 2537 0012 9369     		ldr	r3, [r2, #24]
 2538 0014 0821     		movs	r1, #8
 2539 0016 0B43     		orrs	r3, r1
 2540 0018 9361     		str	r3, [r2, #24]
 2541              	.LVL176:
 2542              	.L186:
3919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 2543              		.loc 1 3920 0
 2544              		@ sp needed
 2545              	.LVL177:
 2546              	.LVL178:
 2547 001a 70BD     		pop	{r4, r5, r6, pc}
 2548              	.LVL179:
 2549              	.L192:
3867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2550              		.loc 1 3867 0
 2551 001c 4633     		adds	r3, r3, #70
 2552 001e C65A     		ldrh	r6, [r0, r3]
 2553              	.LVL180:
ARM GAS  /tmp/ccxOFv0R.s 			page 120


 2554 0020 01E0     		b	.L188
 2555              	.LVL181:
 2556              	.L189:
3867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2557              		.loc 1 3867 0 is_stmt 0 discriminator 2
 2558 0022 013E     		subs	r6, r6, #1
 2559              	.LVL182:
 2560 0024 B6B2     		uxth	r6, r6
 2561              	.LVL183:
 2562              	.L188:
3867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2563              		.loc 1 3867 0 discriminator 1
 2564 0026 002E     		cmp	r6, #0
 2565 0028 24D0     		beq	.L193
3869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 2566              		.loc 1 3869 0 is_stmt 1
 2567 002a 2368     		ldr	r3, [r4]
 2568 002c 5B6A     		ldr	r3, [r3, #36]
 2569              	.LVL184:
3870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pRxBuffPtr++;
 2570              		.loc 1 3870 0
 2571 002e EAB2     		uxtb	r2, r5
 2572 0030 1340     		ands	r3, r2
 2573              	.LVL185:
 2574 0032 A26D     		ldr	r2, [r4, #88]
 2575 0034 1370     		strb	r3, [r2]
3871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxXferCount--;
 2576              		.loc 1 3871 0
 2577 0036 A36D     		ldr	r3, [r4, #88]
 2578 0038 0133     		adds	r3, r3, #1
 2579 003a A365     		str	r3, [r4, #88]
3872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2580              		.loc 1 3872 0
 2581 003c 5E22     		movs	r2, #94
 2582 003e A35A     		ldrh	r3, [r4, r2]
 2583 0040 013B     		subs	r3, r3, #1
 2584 0042 9BB2     		uxth	r3, r3
 2585 0044 A352     		strh	r3, [r4, r2]
3874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 2586              		.loc 1 3874 0
 2587 0046 A35A     		ldrh	r3, [r4, r2]
 2588 0048 9BB2     		uxth	r3, r3
 2589 004a 002B     		cmp	r3, #0
 2590 004c E9D1     		bne	.L189
3877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2591              		.loc 1 3877 0
 2592 004e 2268     		ldr	r2, [r4]
 2593 0050 1368     		ldr	r3, [r2]
 2594 0052 1349     		ldr	r1, .L194
 2595 0054 0B40     		ands	r3, r1
 2596 0056 1360     		str	r3, [r2]
3880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2597              		.loc 1 3880 0
 2598 0058 2268     		ldr	r2, [r4]
 2599 005a 9368     		ldr	r3, [r2, #8]
 2600 005c 1149     		ldr	r1, .L194+4
 2601 005e 0B40     		ands	r3, r1
ARM GAS  /tmp/ccxOFv0R.s 			page 121


 2602 0060 9360     		str	r3, [r2, #8]
3883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2603              		.loc 1 3883 0
 2604 0062 8423     		movs	r3, #132
 2605 0064 2022     		movs	r2, #32
 2606 0066 E250     		str	r2, [r4, r3]
3886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2607              		.loc 1 3886 0
 2608 0068 0023     		movs	r3, #0
 2609 006a E366     		str	r3, [r4, #108]
3893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2610              		.loc 1 3893 0
 2611 006c 2000     		movs	r0, r4
 2612 006e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2613              	.LVL186:
 2614 0072 D6E7     		b	.L189
 2615              	.L193:
3902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 2616              		.loc 1 3902 0
 2617 0074 5E23     		movs	r3, #94
 2618 0076 E35A     		ldrh	r3, [r4, r3]
 2619 0078 9BB2     		uxth	r3, r3
 2620              	.LVL187:
3903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2621              		.loc 1 3903 0
 2622 007a 002B     		cmp	r3, #0
 2623 007c CDD0     		beq	.L186
3903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2624              		.loc 1 3903 0 is_stmt 0 discriminator 1
 2625 007e 6822     		movs	r2, #104
 2626 0080 A25A     		ldrh	r2, [r4, r2]
 2627 0082 9A42     		cmp	r2, r3
 2628 0084 C9D9     		bls	.L186
3906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2629              		.loc 1 3906 0 is_stmt 1
 2630 0086 2268     		ldr	r2, [r4]
 2631 0088 9368     		ldr	r3, [r2, #8]
 2632              	.LVL188:
 2633 008a 0749     		ldr	r1, .L194+8
 2634 008c 0B40     		ands	r3, r1
 2635 008e 9360     		str	r3, [r2, #8]
3909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2636              		.loc 1 3909 0
 2637 0090 064B     		ldr	r3, .L194+12
 2638 0092 E366     		str	r3, [r4, #108]
3912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 2639              		.loc 1 3912 0
 2640 0094 2268     		ldr	r2, [r4]
 2641 0096 1368     		ldr	r3, [r2]
 2642 0098 2021     		movs	r1, #32
 2643 009a 0B43     		orrs	r3, r1
 2644 009c 1360     		str	r3, [r2]
 2645 009e BCE7     		b	.L186
 2646              	.L195:
 2647              		.align	2
 2648              	.L194:
 2649 00a0 FFFEFFFF 		.word	-257
ARM GAS  /tmp/ccxOFv0R.s 			page 122


 2650 00a4 FEFFFFEF 		.word	-268435458
 2651 00a8 FFFFFFEF 		.word	-268435457
 2652 00ac 00000000 		.word	UART_RxISR_8BIT
 2653              		.cfi_endproc
 2654              	.LFE235:
 2656              		.section	.text.UART_RxISR_16BIT_FIFOEN,"ax",%progbits
 2657              		.align	1
 2658              		.syntax unified
 2659              		.code	16
 2660              		.thumb_func
 2661              		.fpu softvfp
 2663              	UART_RxISR_16BIT_FIFOEN:
 2664              	.LFB236:
3921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
3927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 2665              		.loc 1 3930 0
 2666              		.cfi_startproc
 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
 2669              	.LVL189:
 2670 0000 70B5     		push	{r4, r5, r6, lr}
 2671              	.LCFI16:
 2672              		.cfi_def_cfa_offset 16
 2673              		.cfi_offset 4, -16
 2674              		.cfi_offset 5, -12
 2675              		.cfi_offset 6, -8
 2676              		.cfi_offset 14, -4
 2677 0002 0400     		movs	r4, r0
3931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t *tmp;
3932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 2678              		.loc 1 3932 0
 2679 0004 6023     		movs	r3, #96
 2680 0006 C65A     		ldrh	r6, [r0, r3]
 2681              	.LVL190:
3933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  uhdata;
3934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t   nb_rx_data;
3935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  rxdatacount;
3936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2682              		.loc 1 3938 0
 2683 0008 2433     		adds	r3, r3, #36
 2684 000a C358     		ldr	r3, [r0, r3]
 2685 000c 222B     		cmp	r3, #34
 2686 000e 05D0     		beq	.L202
3939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     for (nb_rx_data = huart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
3941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
ARM GAS  /tmp/ccxOFv0R.s 			page 123


3943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
3944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
3945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
3946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxXferCount--;
3947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
3949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
3951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) and RX FIFO 
3954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
3957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Clear RxISR function pointer */
3960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxISR = NULL;
3961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
3968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
3973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
3974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
3975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     */
3976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
3977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
3978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
3980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
3981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Update the RxISR function pointer */
3983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
3984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
3986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
3987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
3990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2687              		.loc 1 3992 0
 2688 0010 0268     		ldr	r2, [r0]
 2689 0012 9369     		ldr	r3, [r2, #24]
 2690 0014 0821     		movs	r1, #8
 2691 0016 0B43     		orrs	r3, r1
 2692 0018 9361     		str	r3, [r2, #24]
 2693              	.LVL191:
ARM GAS  /tmp/ccxOFv0R.s 			page 124


 2694              	.L196:
3993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 2695              		.loc 1 3994 0
 2696              		@ sp needed
 2697              	.LVL192:
 2698              	.LVL193:
 2699 001a 70BD     		pop	{r4, r5, r6, pc}
 2700              	.LVL194:
 2701              	.L202:
3940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2702              		.loc 1 3940 0
 2703 001c 4633     		adds	r3, r3, #70
 2704 001e C55A     		ldrh	r5, [r0, r3]
 2705              	.LVL195:
 2706 0020 01E0     		b	.L198
 2707              	.LVL196:
 2708              	.L199:
3940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2709              		.loc 1 3940 0 is_stmt 0 discriminator 2
 2710 0022 013D     		subs	r5, r5, #1
 2711              	.LVL197:
 2712 0024 ADB2     		uxth	r5, r5
 2713              	.LVL198:
 2714              	.L198:
3940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2715              		.loc 1 3940 0 discriminator 1
 2716 0026 002D     		cmp	r5, #0
 2717 0028 23D0     		beq	.L203
3942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
 2718              		.loc 1 3942 0 is_stmt 1
 2719 002a 2368     		ldr	r3, [r4]
 2720 002c 5B6A     		ldr	r3, [r3, #36]
 2721              	.LVL199:
3944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 2722              		.loc 1 3944 0
 2723 002e 3340     		ands	r3, r6
 2724              	.LVL200:
 2725 0030 A26D     		ldr	r2, [r4, #88]
 2726 0032 1380     		strh	r3, [r2]
 2727              	.LVL201:
3945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxXferCount--;
 2728              		.loc 1 3945 0
 2729 0034 A36D     		ldr	r3, [r4, #88]
 2730 0036 0233     		adds	r3, r3, #2
 2731 0038 A365     		str	r3, [r4, #88]
3946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2732              		.loc 1 3946 0
 2733 003a 5E22     		movs	r2, #94
 2734              	.LVL202:
 2735 003c A35A     		ldrh	r3, [r4, r2]
 2736 003e 013B     		subs	r3, r3, #1
 2737 0040 9BB2     		uxth	r3, r3
 2738 0042 A352     		strh	r3, [r4, r2]
3948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 2739              		.loc 1 3948 0
 2740 0044 A35A     		ldrh	r3, [r4, r2]
ARM GAS  /tmp/ccxOFv0R.s 			page 125


 2741 0046 9BB2     		uxth	r3, r3
 2742 0048 002B     		cmp	r3, #0
 2743 004a EAD1     		bne	.L199
3951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2744              		.loc 1 3951 0
 2745 004c 2268     		ldr	r2, [r4]
 2746 004e 1368     		ldr	r3, [r2]
 2747 0050 1349     		ldr	r1, .L204
 2748 0052 0B40     		ands	r3, r1
 2749 0054 1360     		str	r3, [r2]
3954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2750              		.loc 1 3954 0
 2751 0056 2268     		ldr	r2, [r4]
 2752 0058 9368     		ldr	r3, [r2, #8]
 2753 005a 1249     		ldr	r1, .L204+4
 2754 005c 0B40     		ands	r3, r1
 2755 005e 9360     		str	r3, [r2, #8]
3957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2756              		.loc 1 3957 0
 2757 0060 8423     		movs	r3, #132
 2758 0062 2022     		movs	r2, #32
 2759 0064 E250     		str	r2, [r4, r3]
3960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2760              		.loc 1 3960 0
 2761 0066 0023     		movs	r3, #0
 2762 0068 E366     		str	r3, [r4, #108]
3967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2763              		.loc 1 3967 0
 2764 006a 2000     		movs	r0, r4
 2765 006c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2766              	.LVL203:
 2767 0070 D7E7     		b	.L199
 2768              	.L203:
3976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 2769              		.loc 1 3976 0
 2770 0072 5E23     		movs	r3, #94
 2771 0074 E35A     		ldrh	r3, [r4, r3]
 2772 0076 9BB2     		uxth	r3, r3
 2773              	.LVL204:
3977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2774              		.loc 1 3977 0
 2775 0078 002B     		cmp	r3, #0
 2776 007a CED0     		beq	.L196
3977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2777              		.loc 1 3977 0 is_stmt 0 discriminator 1
 2778 007c 6822     		movs	r2, #104
 2779 007e A25A     		ldrh	r2, [r4, r2]
 2780 0080 9A42     		cmp	r2, r3
 2781 0082 CAD9     		bls	.L196
3980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2782              		.loc 1 3980 0 is_stmt 1
 2783 0084 2268     		ldr	r2, [r4]
 2784 0086 9368     		ldr	r3, [r2, #8]
 2785              	.LVL205:
 2786 0088 0749     		ldr	r1, .L204+8
 2787 008a 0B40     		ands	r3, r1
 2788 008c 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccxOFv0R.s 			page 126


3983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2789              		.loc 1 3983 0
 2790 008e 074B     		ldr	r3, .L204+12
 2791 0090 E366     		str	r3, [r4, #108]
3986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 2792              		.loc 1 3986 0
 2793 0092 2268     		ldr	r2, [r4]
 2794 0094 1368     		ldr	r3, [r2]
 2795 0096 2021     		movs	r1, #32
 2796 0098 0B43     		orrs	r3, r1
 2797 009a 1360     		str	r3, [r2]
 2798 009c BDE7     		b	.L196
 2799              	.L205:
 2800 009e C046     		.align	2
 2801              	.L204:
 2802 00a0 FFFEFFFF 		.word	-257
 2803 00a4 FEFFFFEF 		.word	-268435458
 2804 00a8 FFFFFFEF 		.word	-268435457
 2805 00ac 00000000 		.word	UART_RxISR_16BIT
 2806              		.cfi_endproc
 2807              	.LFE236:
 2809              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2810              		.align	1
 2811              		.syntax unified
 2812              		.code	16
 2813              		.thumb_func
 2814              		.fpu softvfp
 2816              	UART_DMAReceiveCplt:
 2817              	.LFB220:
3303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2818              		.loc 1 3303 0
 2819              		.cfi_startproc
 2820              		@ args = 0, pretend = 0, frame = 0
 2821              		@ frame_needed = 0, uses_anonymous_args = 0
 2822              	.LVL206:
 2823 0000 10B5     		push	{r4, lr}
 2824              	.LCFI17:
 2825              		.cfi_def_cfa_offset 8
 2826              		.cfi_offset 4, -8
 2827              		.cfi_offset 14, -4
3304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2828              		.loc 1 3304 0
 2829 0002 836A     		ldr	r3, [r0, #40]
 2830              	.LVL207:
3307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 2831              		.loc 1 3307 0
 2832 0004 0268     		ldr	r2, [r0]
 2833 0006 1268     		ldr	r2, [r2]
 2834 0008 9206     		lsls	r2, r2, #26
 2835 000a 15D4     		bmi	.L207
3309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2836              		.loc 1 3309 0
 2837 000c 5E22     		movs	r2, #94
 2838 000e 0021     		movs	r1, #0
 2839 0010 9952     		strh	r1, [r3, r2]
3312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2840              		.loc 1 3312 0
ARM GAS  /tmp/ccxOFv0R.s 			page 127


 2841 0012 1968     		ldr	r1, [r3]
 2842 0014 0A68     		ldr	r2, [r1]
 2843 0016 0A48     		ldr	r0, .L208
 2844              	.LVL208:
 2845 0018 0240     		ands	r2, r0
 2846 001a 0A60     		str	r2, [r1]
3313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2847              		.loc 1 3313 0
 2848 001c 1968     		ldr	r1, [r3]
 2849 001e 8A68     		ldr	r2, [r1, #8]
 2850 0020 0330     		adds	r0, r0, #3
 2851 0022 FF30     		adds	r0, r0, #255
 2852 0024 8243     		bics	r2, r0
 2853 0026 8A60     		str	r2, [r1, #8]
3317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2854              		.loc 1 3317 0
 2855 0028 1968     		ldr	r1, [r3]
 2856 002a 8A68     		ldr	r2, [r1, #8]
 2857 002c 3F30     		adds	r0, r0, #63
 2858 002e 8243     		bics	r2, r0
 2859 0030 8A60     		str	r2, [r1, #8]
3320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 2860              		.loc 1 3320 0
 2861 0032 8422     		movs	r2, #132
 2862 0034 2021     		movs	r1, #32
 2863 0036 9950     		str	r1, [r3, r2]
 2864              	.L207:
3328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2865              		.loc 1 3328 0
 2866 0038 1800     		movs	r0, r3
 2867 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2868              	.LVL209:
3330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2869              		.loc 1 3330 0
 2870              		@ sp needed
 2871 003e 10BD     		pop	{r4, pc}
 2872              	.L209:
 2873              		.align	2
 2874              	.L208:
 2875 0040 FFFEFFFF 		.word	-257
 2876              		.cfi_endproc
 2877              	.LFE220:
 2879              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2880              		.align	1
 2881              		.weak	HAL_UART_RxHalfCpltCallback
 2882              		.syntax unified
 2883              		.code	16
 2884              		.thumb_func
 2885              		.fpu softvfp
 2887              	HAL_UART_RxHalfCpltCallback:
 2888              	.LFB199:
2534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2889              		.loc 1 2534 0
 2890              		.cfi_startproc
 2891              		@ args = 0, pretend = 0, frame = 0
 2892              		@ frame_needed = 0, uses_anonymous_args = 0
 2893              		@ link register save eliminated.
ARM GAS  /tmp/ccxOFv0R.s 			page 128


 2894              	.LVL210:
2541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2895              		.loc 1 2541 0
 2896              		@ sp needed
 2897 0000 7047     		bx	lr
 2898              		.cfi_endproc
 2899              	.LFE199:
 2901              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2902              		.align	1
 2903              		.syntax unified
 2904              		.code	16
 2905              		.thumb_func
 2906              		.fpu softvfp
 2908              	UART_DMARxHalfCplt:
 2909              	.LFB221:
3338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2910              		.loc 1 3338 0
 2911              		.cfi_startproc
 2912              		@ args = 0, pretend = 0, frame = 0
 2913              		@ frame_needed = 0, uses_anonymous_args = 0
 2914              	.LVL211:
 2915 0000 10B5     		push	{r4, lr}
 2916              	.LCFI18:
 2917              		.cfi_def_cfa_offset 8
 2918              		.cfi_offset 4, -8
 2919              		.cfi_offset 14, -4
3339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2920              		.loc 1 3339 0
 2921 0002 806A     		ldr	r0, [r0, #40]
 2922              	.LVL212:
3346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2923              		.loc 1 3346 0
 2924 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2925              	.LVL213:
3348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2926              		.loc 1 3348 0
 2927              		@ sp needed
 2928 0008 10BD     		pop	{r4, pc}
 2929              		.cfi_endproc
 2930              	.LFE221:
 2932              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2933              		.align	1
 2934              		.weak	HAL_UART_ErrorCallback
 2935              		.syntax unified
 2936              		.code	16
 2937              		.thumb_func
 2938              		.fpu softvfp
 2940              	HAL_UART_ErrorCallback:
 2941              	.LFB200:
2549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2942              		.loc 1 2549 0
 2943              		.cfi_startproc
 2944              		@ args = 0, pretend = 0, frame = 0
 2945              		@ frame_needed = 0, uses_anonymous_args = 0
 2946              		@ link register save eliminated.
 2947              	.LVL214:
2556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccxOFv0R.s 			page 129


 2948              		.loc 1 2556 0
 2949              		@ sp needed
 2950 0000 7047     		bx	lr
 2951              		.cfi_endproc
 2952              	.LFE200:
 2954              		.section	.text.UART_DMAError,"ax",%progbits
 2955              		.align	1
 2956              		.syntax unified
 2957              		.code	16
 2958              		.thumb_func
 2959              		.fpu softvfp
 2961              	UART_DMAError:
 2962              	.LFB222:
3356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2963              		.loc 1 3356 0
 2964              		.cfi_startproc
 2965              		@ args = 0, pretend = 0, frame = 0
 2966              		@ frame_needed = 0, uses_anonymous_args = 0
 2967              	.LVL215:
 2968 0000 70B5     		push	{r4, r5, r6, lr}
 2969              	.LCFI19:
 2970              		.cfi_def_cfa_offset 16
 2971              		.cfi_offset 4, -16
 2972              		.cfi_offset 5, -12
 2973              		.cfi_offset 6, -8
 2974              		.cfi_offset 14, -4
3357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2975              		.loc 1 3357 0
 2976 0002 846A     		ldr	r4, [r0, #40]
 2977              	.LVL216:
3359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2978              		.loc 1 3359 0
 2979 0004 8023     		movs	r3, #128
 2980 0006 E158     		ldr	r1, [r4, r3]
 2981              	.LVL217:
3360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2982              		.loc 1 3360 0
 2983 0008 8422     		movs	r2, #132
 2984 000a A558     		ldr	r5, [r4, r2]
 2985              	.LVL218:
3363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2986              		.loc 1 3363 0
 2987 000c 2268     		ldr	r2, [r4]
 2988 000e 9268     		ldr	r2, [r2, #8]
 2989 0010 1342     		tst	r3, r2
 2990 0012 01D0     		beq	.L214
3363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2991              		.loc 1 3363 0 is_stmt 0 discriminator 1
 2992 0014 2129     		cmp	r1, #33
 2993 0016 0ED0     		beq	.L216
 2994              	.LVL219:
 2995              	.L214:
3371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2996              		.loc 1 3371 0 is_stmt 1
 2997 0018 2368     		ldr	r3, [r4]
 2998 001a 9B68     		ldr	r3, [r3, #8]
 2999 001c 5B06     		lsls	r3, r3, #25
ARM GAS  /tmp/ccxOFv0R.s 			page 130


 3000 001e 01D5     		bpl	.L215
3371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 3001              		.loc 1 3371 0 is_stmt 0 discriminator 1
 3002 0020 222D     		cmp	r5, #34
 3003 0022 0FD0     		beq	.L217
 3004              	.L215:
3378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3005              		.loc 1 3378 0 is_stmt 1
 3006 0024 8822     		movs	r2, #136
 3007 0026 A358     		ldr	r3, [r4, r2]
 3008 0028 1021     		movs	r1, #16
 3009 002a 0B43     		orrs	r3, r1
 3010 002c A350     		str	r3, [r4, r2]
3385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3011              		.loc 1 3385 0
 3012 002e 2000     		movs	r0, r4
 3013 0030 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3014              	.LVL220:
3387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3015              		.loc 1 3387 0
 3016              		@ sp needed
 3017              	.LVL221:
 3018              	.LVL222:
 3019 0034 70BD     		pop	{r4, r5, r6, pc}
 3020              	.LVL223:
 3021              	.L216:
3366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 3022              		.loc 1 3366 0
 3023 0036 2A3B     		subs	r3, r3, #42
 3024 0038 0022     		movs	r2, #0
 3025 003a E252     		strh	r2, [r4, r3]
3367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 3026              		.loc 1 3367 0
 3027 003c 2000     		movs	r0, r4
 3028              	.LVL224:
 3029 003e FFF7FEFF 		bl	UART_EndTxTransfer
 3030              	.LVL225:
 3031 0042 E9E7     		b	.L214
 3032              	.L217:
3374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 3033              		.loc 1 3374 0
 3034 0044 5E23     		movs	r3, #94
 3035 0046 0022     		movs	r2, #0
 3036 0048 E252     		strh	r2, [r4, r3]
3375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 3037              		.loc 1 3375 0
 3038 004a 2000     		movs	r0, r4
 3039 004c FFF7FEFF 		bl	UART_EndRxTransfer
 3040              	.LVL226:
 3041 0050 E8E7     		b	.L215
 3042              		.cfi_endproc
 3043              	.LFE222:
 3045              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3046              		.align	1
 3047              		.global	HAL_UART_IRQHandler
 3048              		.syntax unified
 3049              		.code	16
ARM GAS  /tmp/ccxOFv0R.s 			page 131


 3050              		.thumb_func
 3051              		.fpu softvfp
 3053              	HAL_UART_IRQHandler:
 3054              	.LFB195:
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3055              		.loc 1 2268 0
 3056              		.cfi_startproc
 3057              		@ args = 0, pretend = 0, frame = 0
 3058              		@ frame_needed = 0, uses_anonymous_args = 0
 3059              	.LVL227:
 3060 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3061              	.LCFI20:
 3062              		.cfi_def_cfa_offset 24
 3063              		.cfi_offset 3, -24
 3064              		.cfi_offset 4, -20
 3065              		.cfi_offset 5, -16
 3066              		.cfi_offset 6, -12
 3067              		.cfi_offset 7, -8
 3068              		.cfi_offset 14, -4
 3069 0002 0400     		movs	r4, r0
2269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3070              		.loc 1 2269 0
 3071 0004 0168     		ldr	r1, [r0]
 3072 0006 CB69     		ldr	r3, [r1, #28]
 3073              	.LVL228:
2270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3074              		.loc 1 2270 0
 3075 0008 0868     		ldr	r0, [r1]
 3076              	.LVL229:
2271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3077              		.loc 1 2271 0
 3078 000a 8D68     		ldr	r5, [r1, #8]
 3079              	.LVL230:
2277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (errorflags == 0U)
 3080              		.loc 1 2277 0
 3081 000c 0F22     		movs	r2, #15
 3082 000e 1A40     		ands	r2, r3
 3083              	.LVL231:
2278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3084              		.loc 1 2278 0
 3085 0010 0BD1     		bne	.L219
2281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 3086              		.loc 1 2281 0
 3087 0012 9E06     		lsls	r6, r3, #26
 3088 0014 09D5     		bpl	.L219
2282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 3089              		.loc 1 2282 0
 3090 0016 8606     		lsls	r6, r0, #26
 3091 0018 01D4     		bmi	.L220
2283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3092              		.loc 1 2283 0
 3093 001a EE00     		lsls	r6, r5, #3
 3094 001c 05D5     		bpl	.L219
 3095              	.L220:
2285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 3096              		.loc 1 2285 0
 3097 001e E36E     		ldr	r3, [r4, #108]
ARM GAS  /tmp/ccxOFv0R.s 			page 132


 3098              	.LVL232:
 3099 0020 002B     		cmp	r3, #0
 3100 0022 01D0     		beq	.L218
2287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 3101              		.loc 1 2287 0
 3102 0024 2000     		movs	r0, r4
 3103              	.LVL233:
 3104 0026 9847     		blx	r3
 3105              	.LVL234:
 3106              	.L218:
2481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3107              		.loc 1 2481 0
 3108              		@ sp needed
 3109              	.LVL235:
 3110              	.LVL236:
 3111 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3112              	.LVL237:
 3113              	.L219:
2294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 3114              		.loc 1 2294 0
 3115 002a 002A     		cmp	r2, #0
 3116 002c 74D0     		beq	.L222
2295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE)) != 0U))))
 3117              		.loc 1 2295 0
 3118 002e 534A     		ldr	r2, .L243
 3119              	.LVL238:
 3120 0030 2A40     		ands	r2, r5
 3121 0032 03D1     		bne	.L223
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3122              		.loc 1 2296 0
 3123 0034 9026     		movs	r6, #144
 3124 0036 7600     		lsls	r6, r6, #1
 3125 0038 3042     		tst	r0, r6
 3126 003a 6DD0     		beq	.L222
 3127              	.L223:
2299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3128              		.loc 1 2299 0
 3129 003c DE07     		lsls	r6, r3, #31
 3130 003e 07D5     		bpl	.L224
2299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3131              		.loc 1 2299 0 is_stmt 0 discriminator 1
 3132 0040 C605     		lsls	r6, r0, #23
 3133 0042 05D5     		bpl	.L224
2301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3134              		.loc 1 2301 0 is_stmt 1
 3135 0044 0127     		movs	r7, #1
 3136 0046 0F62     		str	r7, [r1, #32]
2303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3137              		.loc 1 2303 0
 3138 0048 8826     		movs	r6, #136
 3139 004a A159     		ldr	r1, [r4, r6]
 3140 004c 3943     		orrs	r1, r7
 3141 004e A151     		str	r1, [r4, r6]
 3142              	.L224:
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3143              		.loc 1 2307 0
 3144 0050 9907     		lsls	r1, r3, #30
ARM GAS  /tmp/ccxOFv0R.s 			page 133


 3145 0052 09D5     		bpl	.L225
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3146              		.loc 1 2307 0 is_stmt 0 discriminator 1
 3147 0054 E907     		lsls	r1, r5, #31
 3148 0056 07D5     		bpl	.L225
2309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3149              		.loc 1 2309 0 is_stmt 1
 3150 0058 2168     		ldr	r1, [r4]
 3151 005a 0226     		movs	r6, #2
 3152 005c 0E62     		str	r6, [r1, #32]
2311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3153              		.loc 1 2311 0
 3154 005e 8636     		adds	r6, r6, #134
 3155 0060 A159     		ldr	r1, [r4, r6]
 3156 0062 0427     		movs	r7, #4
 3157 0064 3943     		orrs	r1, r7
 3158 0066 A151     		str	r1, [r4, r6]
 3159              	.L225:
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3160              		.loc 1 2315 0
 3161 0068 5907     		lsls	r1, r3, #29
 3162 006a 09D5     		bpl	.L226
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3163              		.loc 1 2315 0 is_stmt 0 discriminator 1
 3164 006c E907     		lsls	r1, r5, #31
 3165 006e 07D5     		bpl	.L226
2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3166              		.loc 1 2317 0 is_stmt 1
 3167 0070 2168     		ldr	r1, [r4]
 3168 0072 0426     		movs	r6, #4
 3169 0074 0E62     		str	r6, [r1, #32]
2319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3170              		.loc 1 2319 0
 3171 0076 8436     		adds	r6, r6, #132
 3172 0078 A159     		ldr	r1, [r4, r6]
 3173 007a 0227     		movs	r7, #2
 3174 007c 3943     		orrs	r1, r7
 3175 007e A151     		str	r1, [r4, r6]
 3176              	.L226:
2323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 3177              		.loc 1 2323 0
 3178 0080 1907     		lsls	r1, r3, #28
 3179 0082 0AD5     		bpl	.L227
2324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 3180              		.loc 1 2324 0
 3181 0084 8106     		lsls	r1, r0, #26
 3182 0086 01D4     		bmi	.L228
2324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 3183              		.loc 1 2324 0 is_stmt 0 discriminator 1
 3184 0088 002A     		cmp	r2, #0
 3185 008a 06D0     		beq	.L227
 3186              	.L228:
2327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3187              		.loc 1 2327 0 is_stmt 1
 3188 008c 2268     		ldr	r2, [r4]
 3189 008e 0826     		movs	r6, #8
 3190 0090 1662     		str	r6, [r2, #32]
ARM GAS  /tmp/ccxOFv0R.s 			page 134


2329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3191              		.loc 1 2329 0
 3192 0092 8821     		movs	r1, #136
 3193 0094 6258     		ldr	r2, [r4, r1]
 3194 0096 3243     		orrs	r2, r6
 3195 0098 6250     		str	r2, [r4, r1]
 3196              	.L227:
2333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3197              		.loc 1 2333 0
 3198 009a 8822     		movs	r2, #136
 3199 009c A258     		ldr	r2, [r4, r2]
 3200 009e 002A     		cmp	r2, #0
 3201 00a0 C2D0     		beq	.L218
2336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 3202              		.loc 1 2336 0
 3203 00a2 9B06     		lsls	r3, r3, #26
 3204 00a4 08D5     		bpl	.L229
 3205              	.LVL239:
2337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 3206              		.loc 1 2337 0
 3207 00a6 8306     		lsls	r3, r0, #26
 3208 00a8 01D4     		bmi	.L230
2338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 3209              		.loc 1 2338 0
 3210 00aa EB00     		lsls	r3, r5, #3
 3211 00ac 04D5     		bpl	.L229
 3212              	.L230:
2340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 3213              		.loc 1 2340 0
 3214 00ae E36E     		ldr	r3, [r4, #108]
 3215 00b0 002B     		cmp	r3, #0
 3216 00b2 01D0     		beq	.L229
2342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 3217              		.loc 1 2342 0
 3218 00b4 2000     		movs	r0, r4
 3219              	.LVL240:
 3220 00b6 9847     		blx	r3
 3221              	.LVL241:
 3222              	.L229:
2348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3223              		.loc 1 2348 0
 3224 00b8 8823     		movs	r3, #136
 3225 00ba E258     		ldr	r2, [r4, r3]
 3226              	.LVL242:
2349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ((errorcode & HAL_UART_ERROR_ORE) != 0U))
 3227              		.loc 1 2349 0
 3228 00bc 2368     		ldr	r3, [r4]
 3229 00be 9B68     		ldr	r3, [r3, #8]
 3230 00c0 5B06     		lsls	r3, r3, #25
 3231 00c2 01D4     		bmi	.L231
2349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ((errorcode & HAL_UART_ERROR_ORE) != 0U))
 3232              		.loc 1 2349 0 is_stmt 0 discriminator 1
 3233 00c4 1307     		lsls	r3, r2, #28
 3234 00c6 20D5     		bpl	.L232
 3235              	.L231:
2355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3236              		.loc 1 2355 0 is_stmt 1
ARM GAS  /tmp/ccxOFv0R.s 			page 135


 3237 00c8 2000     		movs	r0, r4
 3238 00ca FFF7FEFF 		bl	UART_EndRxTransfer
 3239              	.LVL243:
2358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 3240              		.loc 1 2358 0
 3241 00ce 2368     		ldr	r3, [r4]
 3242 00d0 9A68     		ldr	r2, [r3, #8]
 3243 00d2 5206     		lsls	r2, r2, #25
 3244 00d4 15D5     		bpl	.L233
2360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3245              		.loc 1 2360 0
 3246 00d6 9A68     		ldr	r2, [r3, #8]
 3247 00d8 4021     		movs	r1, #64
 3248 00da 8A43     		bics	r2, r1
 3249 00dc 9A60     		str	r2, [r3, #8]
2363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           {
 3250              		.loc 1 2363 0
 3251 00de A36F     		ldr	r3, [r4, #120]
 3252 00e0 002B     		cmp	r3, #0
 3253 00e2 0AD0     		beq	.L234
2367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3254              		.loc 1 2367 0
 3255 00e4 264A     		ldr	r2, .L243+4
 3256 00e6 9A63     		str	r2, [r3, #56]
2370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             {
 3257              		.loc 1 2370 0
 3258 00e8 A06F     		ldr	r0, [r4, #120]
 3259 00ea FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3260              	.LVL244:
 3261 00ee 0028     		cmp	r0, #0
 3262 00f0 9AD0     		beq	.L218
2373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             }
 3263              		.loc 1 2373 0
 3264 00f2 A06F     		ldr	r0, [r4, #120]
 3265 00f4 836B     		ldr	r3, [r0, #56]
 3266 00f6 9847     		blx	r3
 3267              	.LVL245:
 3268 00f8 96E7     		b	.L218
 3269              	.L234:
2384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3270              		.loc 1 2384 0
 3271 00fa 2000     		movs	r0, r4
 3272 00fc FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3273              	.LVL246:
 3274 0100 92E7     		b	.L218
 3275              	.L233:
2397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3276              		.loc 1 2397 0
 3277 0102 2000     		movs	r0, r4
 3278 0104 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3279              	.LVL247:
 3280 0108 8EE7     		b	.L218
 3281              	.LVL248:
 3282              	.L232:
2410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3283              		.loc 1 2410 0
 3284 010a 2000     		movs	r0, r4
ARM GAS  /tmp/ccxOFv0R.s 			page 136


 3285 010c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3286              	.LVL249:
2412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 3287              		.loc 1 2412 0
 3288 0110 8823     		movs	r3, #136
 3289 0112 0022     		movs	r2, #0
 3290 0114 E250     		str	r2, [r4, r3]
 3291 0116 87E7     		b	.L218
 3292              	.LVL250:
 3293              	.L222:
2420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3294              		.loc 1 2420 0
 3295 0118 DA02     		lsls	r2, r3, #11
 3296 011a 01D5     		bpl	.L235
2420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3297              		.loc 1 2420 0 is_stmt 0 discriminator 1
 3298 011c 6A02     		lsls	r2, r5, #9
 3299 011e 0CD4     		bmi	.L240
 3300              	.L235:
2438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 3301              		.loc 1 2438 0 is_stmt 1
 3302 0120 1A06     		lsls	r2, r3, #24
 3303 0122 11D5     		bpl	.L236
2439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 3304              		.loc 1 2439 0
 3305 0124 0206     		lsls	r2, r0, #24
 3306 0126 01D4     		bmi	.L237
2440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3307              		.loc 1 2440 0
 3308 0128 2A02     		lsls	r2, r5, #8
 3309 012a 0DD5     		bpl	.L236
 3310              	.L237:
2442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3311              		.loc 1 2442 0
 3312 012c 236F     		ldr	r3, [r4, #112]
 3313              	.LVL251:
 3314 012e 002B     		cmp	r3, #0
 3315 0130 00D1     		bne	.LCB3031
 3316 0132 79E7     		b	.L218	@long jump
 3317              	.LCB3031:
2444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3318              		.loc 1 2444 0
 3319 0134 2000     		movs	r0, r4
 3320              	.LVL252:
 3321 0136 9847     		blx	r3
 3322              	.LVL253:
 3323 0138 76E7     		b	.L218
 3324              	.LVL254:
 3325              	.L240:
2422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3326              		.loc 1 2422 0
 3327 013a 8023     		movs	r3, #128
 3328              	.LVL255:
 3329 013c 5B03     		lsls	r3, r3, #13
 3330 013e 0B62     		str	r3, [r1, #32]
2432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3331              		.loc 1 2432 0
ARM GAS  /tmp/ccxOFv0R.s 			page 137


 3332 0140 2000     		movs	r0, r4
 3333              	.LVL256:
 3334 0142 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 3335              	.LVL257:
2434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 3336              		.loc 1 2434 0
 3337 0146 6FE7     		b	.L218
 3338              	.LVL258:
 3339              	.L236:
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3340              		.loc 1 2450 0
 3341 0148 5A06     		lsls	r2, r3, #25
 3342 014a 01D5     		bpl	.L238
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3343              		.loc 1 2450 0 is_stmt 0 discriminator 1
 3344 014c 4206     		lsls	r2, r0, #25
 3345 014e 0DD4     		bmi	.L241
 3346              	.L238:
2457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3347              		.loc 1 2457 0 is_stmt 1
 3348 0150 1A02     		lsls	r2, r3, #8
 3349 0152 01D5     		bpl	.L239
2457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3350              		.loc 1 2457 0 is_stmt 0 discriminator 1
 3351 0154 4200     		lsls	r2, r0, #1
 3352 0156 0DD4     		bmi	.L242
 3353              	.L239:
2470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3354              		.loc 1 2470 0 is_stmt 1
 3355 0158 DB01     		lsls	r3, r3, #7
 3356 015a 00D4     		bmi	.LCB3082
 3357 015c 64E7     		b	.L218	@long jump
 3358              	.LCB3082:
 3359              	.LVL259:
2470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3360              		.loc 1 2470 0 is_stmt 0 discriminator 1
 3361 015e 0028     		cmp	r0, #0
 3362 0160 00DB     		blt	.LCB3086
 3363 0162 61E7     		b	.L218	@long jump
 3364              	.LCB3086:
2477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3365              		.loc 1 2477 0 is_stmt 1
 3366 0164 2000     		movs	r0, r4
 3367              	.LVL260:
 3368 0166 FFF7FEFF 		bl	HAL_UARTEx_RxFifoFullCallback
 3369              	.LVL261:
2479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 3370              		.loc 1 2479 0
 3371 016a 5DE7     		b	.L218
 3372              	.LVL262:
 3373              	.L241:
2452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
 3374              		.loc 1 2452 0
 3375 016c 2000     		movs	r0, r4
 3376              	.LVL263:
 3377 016e FFF7FEFF 		bl	UART_EndTransmit_IT
 3378              	.LVL264:
ARM GAS  /tmp/ccxOFv0R.s 			page 138


2453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 3379              		.loc 1 2453 0
 3380 0172 59E7     		b	.L218
 3381              	.LVL265:
 3382              	.L242:
2464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3383              		.loc 1 2464 0
 3384 0174 2000     		movs	r0, r4
 3385              	.LVL266:
 3386 0176 FFF7FEFF 		bl	HAL_UARTEx_TxFifoEmptyCallback
 3387              	.LVL267:
2466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 3388              		.loc 1 2466 0
 3389 017a 55E7     		b	.L218
 3390              	.L244:
 3391              		.align	2
 3392              	.L243:
 3393 017c 01000010 		.word	268435457
 3394 0180 00000000 		.word	UART_DMAAbortOnError
 3395              		.cfi_endproc
 3396              	.LFE195:
 3398              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3399              		.align	1
 3400              		.syntax unified
 3401              		.code	16
 3402              		.thumb_func
 3403              		.fpu softvfp
 3405              	UART_DMAAbortOnError:
 3406              	.LFB223:
3396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3407              		.loc 1 3396 0
 3408              		.cfi_startproc
 3409              		@ args = 0, pretend = 0, frame = 0
 3410              		@ frame_needed = 0, uses_anonymous_args = 0
 3411              	.LVL268:
 3412 0000 10B5     		push	{r4, lr}
 3413              	.LCFI21:
 3414              		.cfi_def_cfa_offset 8
 3415              		.cfi_offset 4, -8
 3416              		.cfi_offset 14, -4
3397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3417              		.loc 1 3397 0
 3418 0002 806A     		ldr	r0, [r0, #40]
 3419              	.LVL269:
3398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3420              		.loc 1 3398 0
 3421 0004 0023     		movs	r3, #0
 3422 0006 5E22     		movs	r2, #94
 3423 0008 8352     		strh	r3, [r0, r2]
3399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3424              		.loc 1 3399 0
 3425 000a 083A     		subs	r2, r2, #8
 3426 000c 8352     		strh	r3, [r0, r2]
3406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3427              		.loc 1 3406 0
 3428 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3429              	.LVL270:
ARM GAS  /tmp/ccxOFv0R.s 			page 139


3408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3430              		.loc 1 3408 0
 3431              		@ sp needed
 3432 0012 10BD     		pop	{r4, pc}
 3433              		.cfi_endproc
 3434              	.LFE223:
 3436              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3437              		.align	1
 3438              		.weak	HAL_UART_AbortCpltCallback
 3439              		.syntax unified
 3440              		.code	16
 3441              		.thumb_func
 3442              		.fpu softvfp
 3444              	HAL_UART_AbortCpltCallback:
 3445              	.LFB201:
2564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3446              		.loc 1 2564 0
 3447              		.cfi_startproc
 3448              		@ args = 0, pretend = 0, frame = 0
 3449              		@ frame_needed = 0, uses_anonymous_args = 0
 3450              		@ link register save eliminated.
 3451              	.LVL271:
2571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3452              		.loc 1 2571 0
 3453              		@ sp needed
 3454 0000 7047     		bx	lr
 3455              		.cfi_endproc
 3456              	.LFE201:
 3458              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3459              		.align	1
 3460              		.global	HAL_UART_Abort_IT
 3461              		.syntax unified
 3462              		.code	16
 3463              		.thumb_func
 3464              		.fpu softvfp
 3466              	HAL_UART_Abort_IT:
 3467              	.LFB192:
1950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 3468              		.loc 1 1950 0
 3469              		.cfi_startproc
 3470              		@ args = 0, pretend = 0, frame = 0
 3471              		@ frame_needed = 0, uses_anonymous_args = 0
 3472              	.LVL272:
 3473 0000 10B5     		push	{r4, lr}
 3474              	.LCFI22:
 3475              		.cfi_def_cfa_offset 8
 3476              		.cfi_offset 4, -8
 3477              		.cfi_offset 14, -4
 3478 0002 0400     		movs	r4, r0
 3479              	.LVL273:
1954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
 3480              		.loc 1 1954 0
 3481 0004 0268     		ldr	r2, [r0]
 3482 0006 1368     		ldr	r3, [r2]
 3483 0008 3949     		ldr	r1, .L261
 3484 000a 0B40     		ands	r3, r1
 3485 000c 1360     		str	r3, [r2]
ARM GAS  /tmp/ccxOFv0R.s 			page 140


1955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3486              		.loc 1 1955 0
 3487 000e 0268     		ldr	r2, [r0]
 3488 0010 9368     		ldr	r3, [r2, #8]
 3489 0012 3849     		ldr	r1, .L261+4
 3490 0014 0B40     		ands	r3, r1
 3491 0016 9360     		str	r3, [r2, #8]
1960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3492              		.loc 1 1960 0
 3493 0018 436F     		ldr	r3, [r0, #116]
 3494 001a 002B     		cmp	r3, #0
 3495 001c 05D0     		beq	.L248
1964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3496              		.loc 1 1964 0
 3497 001e 0268     		ldr	r2, [r0]
 3498 0020 9268     		ldr	r2, [r2, #8]
 3499 0022 1206     		lsls	r2, r2, #24
 3500 0024 1ED5     		bpl	.L249
1966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3501              		.loc 1 1966 0
 3502 0026 344A     		ldr	r2, .L261+8
 3503 0028 9A63     		str	r2, [r3, #56]
 3504              	.L248:
1974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3505              		.loc 1 1974 0
 3506 002a A36F     		ldr	r3, [r4, #120]
 3507 002c 002B     		cmp	r3, #0
 3508 002e 05D0     		beq	.L250
1978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3509              		.loc 1 1978 0
 3510 0030 2268     		ldr	r2, [r4]
 3511 0032 9268     		ldr	r2, [r2, #8]
 3512 0034 5206     		lsls	r2, r2, #25
 3513 0036 18D5     		bpl	.L251
1980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3514              		.loc 1 1980 0
 3515 0038 304A     		ldr	r2, .L261+12
 3516 003a 9A63     		str	r2, [r3, #56]
 3517              	.L250:
1989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3518              		.loc 1 1989 0
 3519 003c 2368     		ldr	r3, [r4]
 3520 003e 9A68     		ldr	r2, [r3, #8]
 3521 0040 1206     		lsls	r2, r2, #24
 3522 0042 15D5     		bpl	.L257
1992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3523              		.loc 1 1992 0
 3524 0044 9A68     		ldr	r2, [r3, #8]
 3525 0046 8021     		movs	r1, #128
 3526 0048 8A43     		bics	r2, r1
 3527 004a 9A60     		str	r2, [r3, #8]
1995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3528              		.loc 1 1995 0
 3529 004c 606F     		ldr	r0, [r4, #116]
 3530              	.LVL274:
 3531 004e 0028     		cmp	r0, #0
 3532 0050 40D0     		beq	.L258
ARM GAS  /tmp/ccxOFv0R.s 			page 141


2001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 3533              		.loc 1 2001 0
 3534 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3535              	.LVL275:
 3536 0056 0028     		cmp	r0, #0
 3537 0058 3ED0     		beq	.L259
2003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 3538              		.loc 1 2003 0
 3539 005a 636F     		ldr	r3, [r4, #116]
 3540 005c 0022     		movs	r2, #0
 3541 005e 9A63     		str	r2, [r3, #56]
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3542              		.loc 1 1951 0
 3543 0060 0121     		movs	r1, #1
 3544 0062 06E0     		b	.L252
 3545              	.LVL276:
 3546              	.L249:
1970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3547              		.loc 1 1970 0
 3548 0064 0022     		movs	r2, #0
 3549 0066 9A63     		str	r2, [r3, #56]
 3550 0068 DFE7     		b	.L248
 3551              	.L251:
1984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3552              		.loc 1 1984 0
 3553 006a 0022     		movs	r2, #0
 3554 006c 9A63     		str	r2, [r3, #56]
 3555 006e E5E7     		b	.L250
 3556              	.L257:
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3557              		.loc 1 1951 0
 3558 0070 0121     		movs	r1, #1
 3559              	.LVL277:
 3560              	.L252:
2013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3561              		.loc 1 2013 0
 3562 0072 2368     		ldr	r3, [r4]
 3563 0074 9A68     		ldr	r2, [r3, #8]
 3564 0076 5206     		lsls	r2, r2, #25
 3565 0078 30D5     		bpl	.L253
2015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3566              		.loc 1 2015 0
 3567 007a 9A68     		ldr	r2, [r3, #8]
 3568 007c 4020     		movs	r0, #64
 3569 007e 8243     		bics	r2, r0
 3570 0080 9A60     		str	r2, [r3, #8]
2018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3571              		.loc 1 2018 0
 3572 0082 A06F     		ldr	r0, [r4, #120]
 3573 0084 0028     		cmp	r0, #0
 3574 0086 29D0     		beq	.L253
2024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 3575              		.loc 1 2024 0
 3576 0088 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3577              	.LVL278:
 3578 008c 0028     		cmp	r0, #0
 3579 008e 27D0     		beq	.L254
ARM GAS  /tmp/ccxOFv0R.s 			page 142


2026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         abortcplt = 1U;
 3580              		.loc 1 2026 0
 3581 0090 A36F     		ldr	r3, [r4, #120]
 3582 0092 0022     		movs	r2, #0
 3583 0094 9A63     		str	r2, [r3, #56]
 3584              	.LVL279:
 3585              	.L255:
2040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3586              		.loc 1 2040 0
 3587 0096 0023     		movs	r3, #0
 3588 0098 5622     		movs	r2, #86
 3589 009a A352     		strh	r3, [r4, r2]
2041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3590              		.loc 1 2041 0
 3591 009c 0832     		adds	r2, r2, #8
 3592 009e A352     		strh	r3, [r4, r2]
2044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxISR = NULL;
 3593              		.loc 1 2044 0
 3594 00a0 E366     		str	r3, [r4, #108]
2045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3595              		.loc 1 2045 0
 3596 00a2 2367     		str	r3, [r4, #112]
2048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3597              		.loc 1 2048 0
 3598 00a4 2A32     		adds	r2, r2, #42
 3599 00a6 A350     		str	r3, [r4, r2]
2051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3600              		.loc 1 2051 0
 3601 00a8 2368     		ldr	r3, [r4]
 3602 00aa 793A     		subs	r2, r2, #121
 3603 00ac 1A62     		str	r2, [r3, #32]
2054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3604              		.loc 1 2054 0
 3605 00ae 8023     		movs	r3, #128
 3606 00b0 9B05     		lsls	r3, r3, #22
 3607 00b2 626E     		ldr	r2, [r4, #100]
 3608 00b4 9A42     		cmp	r2, r3
 3609 00b6 15D0     		beq	.L260
 3610              	.L256:
2060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3611              		.loc 1 2060 0
 3612 00b8 2268     		ldr	r2, [r4]
 3613 00ba 9369     		ldr	r3, [r2, #24]
 3614 00bc 0821     		movs	r1, #8
 3615 00be 0B43     		orrs	r3, r1
 3616 00c0 9361     		str	r3, [r2, #24]
2063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3617              		.loc 1 2063 0
 3618 00c2 2023     		movs	r3, #32
 3619 00c4 8022     		movs	r2, #128
 3620 00c6 A350     		str	r3, [r4, r2]
2064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3621              		.loc 1 2064 0
 3622 00c8 0432     		adds	r2, r2, #4
 3623 00ca A350     		str	r3, [r4, r2]
2072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3624              		.loc 1 2072 0
ARM GAS  /tmp/ccxOFv0R.s 			page 143


 3625 00cc 2000     		movs	r0, r4
 3626 00ce FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3627              	.LVL280:
 3628 00d2 05E0     		b	.L254
 3629              	.LVL281:
 3630              	.L258:
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3631              		.loc 1 1951 0
 3632 00d4 0121     		movs	r1, #1
 3633 00d6 CCE7     		b	.L252
 3634              	.L259:
2007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 3635              		.loc 1 2007 0
 3636 00d8 0021     		movs	r1, #0
 3637 00da CAE7     		b	.L252
 3638              	.LVL282:
 3639              	.L253:
2037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3640              		.loc 1 2037 0
 3641 00dc 0129     		cmp	r1, #1
 3642 00de DAD0     		beq	.L255
 3643              	.LVL283:
 3644              	.L254:
2077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3645              		.loc 1 2077 0
 3646 00e0 0020     		movs	r0, #0
 3647              		@ sp needed
 3648              	.LVL284:
 3649 00e2 10BD     		pop	{r4, pc}
 3650              	.LVL285:
 3651              	.L260:
2056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3652              		.loc 1 2056 0
 3653 00e4 2268     		ldr	r2, [r4]
 3654 00e6 9369     		ldr	r3, [r2, #24]
 3655 00e8 1021     		movs	r1, #16
 3656 00ea 0B43     		orrs	r3, r1
 3657 00ec 9361     		str	r3, [r2, #24]
 3658 00ee E3E7     		b	.L256
 3659              	.L262:
 3660              		.align	2
 3661              	.L261:
 3662 00f0 1FFEFFFF 		.word	-481
 3663 00f4 FEFF7FEF 		.word	-276824066
 3664 00f8 00000000 		.word	UART_DMATxAbortCallback
 3665 00fc 00000000 		.word	UART_DMARxAbortCallback
 3666              		.cfi_endproc
 3667              	.LFE192:
 3669              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3670              		.align	1
 3671              		.syntax unified
 3672              		.code	16
 3673              		.thumb_func
 3674              		.fpu softvfp
 3676              	UART_DMARxAbortCallback:
 3677              	.LFB225:
3473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
ARM GAS  /tmp/ccxOFv0R.s 			page 144


 3678              		.loc 1 3473 0
 3679              		.cfi_startproc
 3680              		@ args = 0, pretend = 0, frame = 0
 3681              		@ frame_needed = 0, uses_anonymous_args = 0
 3682              	.LVL286:
 3683 0000 10B5     		push	{r4, lr}
 3684              	.LCFI23:
 3685              		.cfi_def_cfa_offset 8
 3686              		.cfi_offset 4, -8
 3687              		.cfi_offset 14, -4
3474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3688              		.loc 1 3474 0
 3689 0002 806A     		ldr	r0, [r0, #40]
 3690              	.LVL287:
3476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3691              		.loc 1 3476 0
 3692 0004 836F     		ldr	r3, [r0, #120]
 3693 0006 0022     		movs	r2, #0
 3694 0008 9A63     		str	r2, [r3, #56]
3479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3695              		.loc 1 3479 0
 3696 000a 436F     		ldr	r3, [r0, #116]
 3697 000c 002B     		cmp	r3, #0
 3698 000e 03D0     		beq	.L264
3481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3699              		.loc 1 3481 0
 3700 0010 9B6B     		ldr	r3, [r3, #56]
 3701 0012 002B     		cmp	r3, #0
 3702 0014 00D0     		beq	.L264
 3703              	.LVL288:
 3704              	.L263:
3512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3705              		.loc 1 3512 0
 3706              		@ sp needed
 3707 0016 10BD     		pop	{r4, pc}
 3708              	.LVL289:
 3709              	.L264:
3488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3710              		.loc 1 3488 0
 3711 0018 0023     		movs	r3, #0
 3712 001a 5622     		movs	r2, #86
 3713 001c 8352     		strh	r3, [r0, r2]
3489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3714              		.loc 1 3489 0
 3715 001e 0832     		adds	r2, r2, #8
 3716 0020 8352     		strh	r3, [r0, r2]
3492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3717              		.loc 1 3492 0
 3718 0022 2A32     		adds	r2, r2, #42
 3719 0024 8350     		str	r3, [r0, r2]
3495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3720              		.loc 1 3495 0
 3721 0026 0368     		ldr	r3, [r0]
 3722 0028 793A     		subs	r2, r2, #121
 3723 002a 1A62     		str	r2, [r3, #32]
3498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3724              		.loc 1 3498 0
ARM GAS  /tmp/ccxOFv0R.s 			page 145


 3725 002c 0268     		ldr	r2, [r0]
 3726 002e 9369     		ldr	r3, [r2, #24]
 3727 0030 0821     		movs	r1, #8
 3728 0032 0B43     		orrs	r3, r1
 3729 0034 9361     		str	r3, [r2, #24]
3501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3730              		.loc 1 3501 0
 3731 0036 2023     		movs	r3, #32
 3732 0038 8022     		movs	r2, #128
 3733 003a 8350     		str	r3, [r0, r2]
3502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3734              		.loc 1 3502 0
 3735 003c 0432     		adds	r2, r2, #4
 3736 003e 8350     		str	r3, [r0, r2]
3510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3737              		.loc 1 3510 0
 3738 0040 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3739              	.LVL290:
 3740 0044 E7E7     		b	.L263
 3741              		.cfi_endproc
 3742              	.LFE225:
 3744              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3745              		.align	1
 3746              		.syntax unified
 3747              		.code	16
 3748              		.thumb_func
 3749              		.fpu softvfp
 3751              	UART_DMATxAbortCallback:
 3752              	.LFB224:
3419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3753              		.loc 1 3419 0
 3754              		.cfi_startproc
 3755              		@ args = 0, pretend = 0, frame = 0
 3756              		@ frame_needed = 0, uses_anonymous_args = 0
 3757              	.LVL291:
 3758 0000 10B5     		push	{r4, lr}
 3759              	.LCFI24:
 3760              		.cfi_def_cfa_offset 8
 3761              		.cfi_offset 4, -8
 3762              		.cfi_offset 14, -4
3420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3763              		.loc 1 3420 0
 3764 0002 806A     		ldr	r0, [r0, #40]
 3765              	.LVL292:
3422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3766              		.loc 1 3422 0
 3767 0004 436F     		ldr	r3, [r0, #116]
 3768 0006 0022     		movs	r2, #0
 3769 0008 9A63     		str	r2, [r3, #56]
3425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3770              		.loc 1 3425 0
 3771 000a 836F     		ldr	r3, [r0, #120]
 3772 000c 002B     		cmp	r3, #0
 3773 000e 02D0     		beq	.L267
3427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3774              		.loc 1 3427 0
 3775 0010 9B6B     		ldr	r3, [r3, #56]
ARM GAS  /tmp/ccxOFv0R.s 			page 146


 3776 0012 002B     		cmp	r3, #0
 3777 0014 15D1     		bne	.L266
 3778              	.L267:
3434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3779              		.loc 1 3434 0
 3780 0016 0023     		movs	r3, #0
 3781 0018 5622     		movs	r2, #86
 3782 001a 8352     		strh	r3, [r0, r2]
3435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3783              		.loc 1 3435 0
 3784 001c 0832     		adds	r2, r2, #8
 3785 001e 8352     		strh	r3, [r0, r2]
3438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3786              		.loc 1 3438 0
 3787 0020 2A32     		adds	r2, r2, #42
 3788 0022 8350     		str	r3, [r0, r2]
3441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3789              		.loc 1 3441 0
 3790 0024 0368     		ldr	r3, [r0]
 3791 0026 793A     		subs	r2, r2, #121
 3792 0028 1A62     		str	r2, [r3, #32]
3444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3793              		.loc 1 3444 0
 3794 002a 8023     		movs	r3, #128
 3795 002c 9B05     		lsls	r3, r3, #22
 3796 002e 426E     		ldr	r2, [r0, #100]
 3797 0030 9A42     		cmp	r2, r3
 3798 0032 07D0     		beq	.L270
 3799              	.L269:
3450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3800              		.loc 1 3450 0
 3801 0034 2023     		movs	r3, #32
 3802 0036 8022     		movs	r2, #128
 3803 0038 8350     		str	r3, [r0, r2]
3451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3804              		.loc 1 3451 0
 3805 003a 0432     		adds	r2, r2, #4
 3806 003c 8350     		str	r3, [r0, r2]
3459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3807              		.loc 1 3459 0
 3808 003e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3809              	.LVL293:
 3810              	.L266:
3461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3811              		.loc 1 3461 0
 3812              		@ sp needed
 3813 0042 10BD     		pop	{r4, pc}
 3814              	.LVL294:
 3815              	.L270:
3446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 3816              		.loc 1 3446 0
 3817 0044 0268     		ldr	r2, [r0]
 3818 0046 9369     		ldr	r3, [r2, #24]
 3819 0048 1021     		movs	r1, #16
 3820 004a 0B43     		orrs	r3, r1
 3821 004c 9361     		str	r3, [r2, #24]
 3822 004e F1E7     		b	.L269
ARM GAS  /tmp/ccxOFv0R.s 			page 147


 3823              		.cfi_endproc
 3824              	.LFE224:
 3826              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3827              		.align	1
 3828              		.weak	HAL_UART_AbortTransmitCpltCallback
 3829              		.syntax unified
 3830              		.code	16
 3831              		.thumb_func
 3832              		.fpu softvfp
 3834              	HAL_UART_AbortTransmitCpltCallback:
 3835              	.LFB202:
2579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3836              		.loc 1 2579 0
 3837              		.cfi_startproc
 3838              		@ args = 0, pretend = 0, frame = 0
 3839              		@ frame_needed = 0, uses_anonymous_args = 0
 3840              		@ link register save eliminated.
 3841              	.LVL295:
2586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3842              		.loc 1 2586 0
 3843              		@ sp needed
 3844 0000 7047     		bx	lr
 3845              		.cfi_endproc
 3846              	.LFE202:
 3848              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3849              		.align	1
 3850              		.global	HAL_UART_AbortTransmit_IT
 3851              		.syntax unified
 3852              		.code	16
 3853              		.thumb_func
 3854              		.fpu softvfp
 3856              	HAL_UART_AbortTransmit_IT:
 3857              	.LFB193:
2094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable interrupts */
 3858              		.loc 1 2094 0
 3859              		.cfi_startproc
 3860              		@ args = 0, pretend = 0, frame = 0
 3861              		@ frame_needed = 0, uses_anonymous_args = 0
 3862              	.LVL296:
 3863 0000 10B5     		push	{r4, lr}
 3864              	.LCFI25:
 3865              		.cfi_def_cfa_offset 8
 3866              		.cfi_offset 4, -8
 3867              		.cfi_offset 14, -4
 3868 0002 0400     		movs	r4, r0
2096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 3869              		.loc 1 2096 0
 3870 0004 0268     		ldr	r2, [r0]
 3871 0006 1368     		ldr	r3, [r2]
 3872 0008 C021     		movs	r1, #192
 3873 000a 8B43     		bics	r3, r1
 3874 000c 1360     		str	r3, [r2]
2097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3875              		.loc 1 2097 0
 3876 000e 0268     		ldr	r2, [r0]
 3877 0010 9368     		ldr	r3, [r2, #8]
 3878 0012 1C49     		ldr	r1, .L278
ARM GAS  /tmp/ccxOFv0R.s 			page 148


 3879 0014 0B40     		ands	r3, r1
 3880 0016 9360     		str	r3, [r2, #8]
2100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3881              		.loc 1 2100 0
 3882 0018 0368     		ldr	r3, [r0]
 3883 001a 9A68     		ldr	r2, [r3, #8]
 3884 001c 1206     		lsls	r2, r2, #24
 3885 001e 1BD5     		bpl	.L273
2102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3886              		.loc 1 2102 0
 3887 0020 9A68     		ldr	r2, [r3, #8]
 3888 0022 8021     		movs	r1, #128
 3889 0024 8A43     		bics	r2, r1
 3890 0026 9A60     		str	r2, [r3, #8]
2105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3891              		.loc 1 2105 0
 3892 0028 436F     		ldr	r3, [r0, #116]
 3893 002a 002B     		cmp	r3, #0
 3894 002c 0AD0     		beq	.L274
2109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3895              		.loc 1 2109 0
 3896 002e 164A     		ldr	r2, .L278+4
 3897 0030 9A63     		str	r2, [r3, #56]
2112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 3898              		.loc 1 2112 0
 3899 0032 406F     		ldr	r0, [r0, #116]
 3900              	.LVL297:
 3901 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3902              	.LVL298:
 3903 0038 0028     		cmp	r0, #0
 3904 003a 1CD0     		beq	.L275
2115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 3905              		.loc 1 2115 0
 3906 003c 606F     		ldr	r0, [r4, #116]
 3907 003e 836B     		ldr	r3, [r0, #56]
 3908 0040 9847     		blx	r3
 3909              	.LVL299:
 3910 0042 18E0     		b	.L275
 3911              	.LVL300:
 3912              	.L274:
2121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3913              		.loc 1 2121 0
 3914 0044 0023     		movs	r3, #0
 3915 0046 5622     		movs	r2, #86
 3916 0048 8352     		strh	r3, [r0, r2]
2124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3917              		.loc 1 2124 0
 3918 004a 0367     		str	r3, [r0, #112]
2127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3919              		.loc 1 2127 0
 3920 004c 8033     		adds	r3, r3, #128
 3921 004e 363A     		subs	r2, r2, #54
 3922 0050 C250     		str	r2, [r0, r3]
2135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3923              		.loc 1 2135 0
 3924 0052 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3925              	.LVL301:
ARM GAS  /tmp/ccxOFv0R.s 			page 149


 3926 0056 0EE0     		b	.L275
 3927              	.LVL302:
 3928              	.L273:
2142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3929              		.loc 1 2142 0
 3930 0058 0022     		movs	r2, #0
 3931 005a 5621     		movs	r1, #86
 3932 005c 4252     		strh	r2, [r0, r1]
2145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3933              		.loc 1 2145 0
 3934 005e 0267     		str	r2, [r0, #112]
2148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3935              		.loc 1 2148 0
 3936 0060 8022     		movs	r2, #128
 3937 0062 9205     		lsls	r2, r2, #22
 3938 0064 416E     		ldr	r1, [r0, #100]
 3939 0066 9142     		cmp	r1, r2
 3940 0068 07D0     		beq	.L277
 3941              	.L276:
2154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3942              		.loc 1 2154 0
 3943 006a 8023     		movs	r3, #128
 3944 006c 2022     		movs	r2, #32
 3945 006e E250     		str	r2, [r4, r3]
2162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3946              		.loc 1 2162 0
 3947 0070 2000     		movs	r0, r4
 3948              	.LVL303:
 3949 0072 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3950              	.LVL304:
 3951              	.L275:
2167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3952              		.loc 1 2167 0
 3953 0076 0020     		movs	r0, #0
 3954              		@ sp needed
 3955              	.LVL305:
 3956 0078 10BD     		pop	{r4, pc}
 3957              	.LVL306:
 3958              	.L277:
2150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3959              		.loc 1 2150 0
 3960 007a 9A69     		ldr	r2, [r3, #24]
 3961 007c 1021     		movs	r1, #16
 3962 007e 0A43     		orrs	r2, r1
 3963 0080 9A61     		str	r2, [r3, #24]
 3964 0082 F2E7     		b	.L276
 3965              	.L279:
 3966              		.align	2
 3967              	.L278:
 3968 0084 FFFF7FFF 		.word	-8388609
 3969 0088 00000000 		.word	UART_DMATxOnlyAbortCallback
 3970              		.cfi_endproc
 3971              	.LFE193:
 3973              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3974              		.align	1
 3975              		.syntax unified
 3976              		.code	16
ARM GAS  /tmp/ccxOFv0R.s 			page 150


 3977              		.thumb_func
 3978              		.fpu softvfp
 3980              	UART_DMATxOnlyAbortCallback:
 3981              	.LFB226:
3524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3982              		.loc 1 3524 0
 3983              		.cfi_startproc
 3984              		@ args = 0, pretend = 0, frame = 0
 3985              		@ frame_needed = 0, uses_anonymous_args = 0
 3986              	.LVL307:
 3987 0000 10B5     		push	{r4, lr}
 3988              	.LCFI26:
 3989              		.cfi_def_cfa_offset 8
 3990              		.cfi_offset 4, -8
 3991              		.cfi_offset 14, -4
3525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3992              		.loc 1 3525 0
 3993 0002 806A     		ldr	r0, [r0, #40]
 3994              	.LVL308:
3527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3995              		.loc 1 3527 0
 3996 0004 5623     		movs	r3, #86
 3997 0006 0022     		movs	r2, #0
 3998 0008 C252     		strh	r2, [r0, r3]
3530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3999              		.loc 1 3530 0
 4000 000a 8023     		movs	r3, #128
 4001 000c 9B05     		lsls	r3, r3, #22
 4002 000e 426E     		ldr	r2, [r0, #100]
 4003 0010 9A42     		cmp	r2, r3
 4004 0012 05D0     		beq	.L282
 4005              	.L281:
3536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4006              		.loc 1 3536 0
 4007 0014 8023     		movs	r3, #128
 4008 0016 2022     		movs	r2, #32
 4009 0018 C250     		str	r2, [r0, r3]
3544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4010              		.loc 1 3544 0
 4011 001a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4012              	.LVL309:
3546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4013              		.loc 1 3546 0
 4014              		@ sp needed
 4015 001e 10BD     		pop	{r4, pc}
 4016              	.LVL310:
 4017              	.L282:
3532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 4018              		.loc 1 3532 0
 4019 0020 0268     		ldr	r2, [r0]
 4020 0022 9369     		ldr	r3, [r2, #24]
 4021 0024 1021     		movs	r1, #16
 4022 0026 0B43     		orrs	r3, r1
 4023 0028 9361     		str	r3, [r2, #24]
 4024 002a F3E7     		b	.L281
 4025              		.cfi_endproc
 4026              	.LFE226:
ARM GAS  /tmp/ccxOFv0R.s 			page 151


 4028              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4029              		.align	1
 4030              		.weak	HAL_UART_AbortReceiveCpltCallback
 4031              		.syntax unified
 4032              		.code	16
 4033              		.thumb_func
 4034              		.fpu softvfp
 4036              	HAL_UART_AbortReceiveCpltCallback:
 4037              	.LFB203:
2594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 4038              		.loc 1 2594 0
 4039              		.cfi_startproc
 4040              		@ args = 0, pretend = 0, frame = 0
 4041              		@ frame_needed = 0, uses_anonymous_args = 0
 4042              		@ link register save eliminated.
 4043              	.LVL311:
2601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4044              		.loc 1 2601 0
 4045              		@ sp needed
 4046 0000 7047     		bx	lr
 4047              		.cfi_endproc
 4048              	.LFE203:
 4050              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4051              		.align	1
 4052              		.global	HAL_UART_AbortReceive_IT
 4053              		.syntax unified
 4054              		.code	16
 4055              		.thumb_func
 4056              		.fpu softvfp
 4058              	HAL_UART_AbortReceive_IT:
 4059              	.LFB194:
2184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 4060              		.loc 1 2184 0
 4061              		.cfi_startproc
 4062              		@ args = 0, pretend = 0, frame = 0
 4063              		@ frame_needed = 0, uses_anonymous_args = 0
 4064              	.LVL312:
 4065 0000 10B5     		push	{r4, lr}
 4066              	.LCFI27:
 4067              		.cfi_def_cfa_offset 8
 4068              		.cfi_offset 4, -8
 4069              		.cfi_offset 14, -4
 4070 0002 0400     		movs	r4, r0
2186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 4071              		.loc 1 2186 0
 4072 0004 0268     		ldr	r2, [r0]
 4073 0006 1368     		ldr	r3, [r2]
 4074 0008 1E49     		ldr	r1, .L288
 4075 000a 0B40     		ands	r3, r1
 4076 000c 1360     		str	r3, [r2]
2187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4077              		.loc 1 2187 0
 4078 000e 0268     		ldr	r2, [r0]
 4079 0010 9368     		ldr	r3, [r2, #8]
 4080 0012 1D49     		ldr	r1, .L288+4
 4081 0014 0B40     		ands	r3, r1
 4082 0016 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccxOFv0R.s 			page 152


2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4083              		.loc 1 2190 0
 4084 0018 0368     		ldr	r3, [r0]
 4085 001a 9A68     		ldr	r2, [r3, #8]
 4086 001c 5206     		lsls	r2, r2, #25
 4087 001e 24D5     		bpl	.L285
2192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4088              		.loc 1 2192 0
 4089 0020 9A68     		ldr	r2, [r3, #8]
 4090 0022 4021     		movs	r1, #64
 4091 0024 8A43     		bics	r2, r1
 4092 0026 9A60     		str	r2, [r3, #8]
2195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4093              		.loc 1 2195 0
 4094 0028 836F     		ldr	r3, [r0, #120]
 4095 002a 002B     		cmp	r3, #0
 4096 002c 0BD0     		beq	.L286
2199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4097              		.loc 1 2199 0
 4098 002e 174A     		ldr	r2, .L288+8
 4099 0030 9A63     		str	r2, [r3, #56]
2202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 4100              		.loc 1 2202 0
 4101 0032 806F     		ldr	r0, [r0, #120]
 4102              	.LVL313:
 4103 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4104              	.LVL314:
 4105 0038 0028     		cmp	r0, #0
 4106 003a 02D0     		beq	.L287
2205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 4107              		.loc 1 2205 0
 4108 003c A06F     		ldr	r0, [r4, #120]
 4109 003e 836B     		ldr	r3, [r0, #56]
 4110 0040 9847     		blx	r3
 4111              	.LVL315:
 4112              	.L287:
2260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4113              		.loc 1 2260 0
 4114 0042 0020     		movs	r0, #0
 4115              		@ sp needed
 4116              	.LVL316:
 4117 0044 10BD     		pop	{r4, pc}
 4118              	.LVL317:
 4119              	.L286:
2211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4120              		.loc 1 2211 0
 4121 0046 0023     		movs	r3, #0
 4122 0048 5E22     		movs	r2, #94
 4123 004a 8352     		strh	r3, [r0, r2]
2214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4124              		.loc 1 2214 0
 4125 004c 8365     		str	r3, [r0, #88]
2217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4126              		.loc 1 2217 0
 4127 004e 0368     		ldr	r3, [r0]
 4128 0050 4F3A     		subs	r2, r2, #79
 4129 0052 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccxOFv0R.s 			page 153


2220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4130              		.loc 1 2220 0
 4131 0054 0268     		ldr	r2, [r0]
 4132 0056 9369     		ldr	r3, [r2, #24]
 4133 0058 0821     		movs	r1, #8
 4134 005a 0B43     		orrs	r3, r1
 4135 005c 9361     		str	r3, [r2, #24]
2223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4136              		.loc 1 2223 0
 4137 005e 8423     		movs	r3, #132
 4138 0060 2022     		movs	r2, #32
 4139 0062 C250     		str	r2, [r0, r3]
2231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4140              		.loc 1 2231 0
 4141 0064 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4142              	.LVL318:
 4143 0068 EBE7     		b	.L287
 4144              	.LVL319:
 4145              	.L285:
2238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4146              		.loc 1 2238 0
 4147 006a 0022     		movs	r2, #0
 4148 006c 5E21     		movs	r1, #94
 4149 006e 4252     		strh	r2, [r0, r1]
2241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4150              		.loc 1 2241 0
 4151 0070 8265     		str	r2, [r0, #88]
2244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4152              		.loc 1 2244 0
 4153 0072 0F32     		adds	r2, r2, #15
 4154 0074 1A62     		str	r2, [r3, #32]
2247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4155              		.loc 1 2247 0
 4156 0076 8423     		movs	r3, #132
 4157 0078 1132     		adds	r2, r2, #17
 4158 007a C250     		str	r2, [r0, r3]
2255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4159              		.loc 1 2255 0
 4160 007c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4161              	.LVL320:
 4162 0080 DFE7     		b	.L287
 4163              	.L289:
 4164 0082 C046     		.align	2
 4165              	.L288:
 4166 0084 DFFEFFFF 		.word	-289
 4167 0088 FEFFFFEF 		.word	-268435458
 4168 008c 00000000 		.word	UART_DMARxOnlyAbortCallback
 4169              		.cfi_endproc
 4170              	.LFE194:
 4172              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 4173              		.align	1
 4174              		.syntax unified
 4175              		.code	16
 4176              		.thumb_func
 4177              		.fpu softvfp
 4179              	UART_DMARxOnlyAbortCallback:
 4180              	.LFB227:
ARM GAS  /tmp/ccxOFv0R.s 			page 154


3557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4181              		.loc 1 3557 0
 4182              		.cfi_startproc
 4183              		@ args = 0, pretend = 0, frame = 0
 4184              		@ frame_needed = 0, uses_anonymous_args = 0
 4185              	.LVL321:
 4186 0000 10B5     		push	{r4, lr}
 4187              	.LCFI28:
 4188              		.cfi_def_cfa_offset 8
 4189              		.cfi_offset 4, -8
 4190              		.cfi_offset 14, -4
3558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4191              		.loc 1 3558 0
 4192 0002 806A     		ldr	r0, [r0, #40]
 4193              	.LVL322:
3560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4194              		.loc 1 3560 0
 4195 0004 5E23     		movs	r3, #94
 4196 0006 0022     		movs	r2, #0
 4197 0008 C252     		strh	r2, [r0, r3]
3563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4198              		.loc 1 3563 0
 4199 000a 0368     		ldr	r3, [r0]
 4200 000c 0F32     		adds	r2, r2, #15
 4201 000e 1A62     		str	r2, [r3, #32]
3566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4202              		.loc 1 3566 0
 4203 0010 0268     		ldr	r2, [r0]
 4204 0012 9369     		ldr	r3, [r2, #24]
 4205 0014 0821     		movs	r1, #8
 4206 0016 0B43     		orrs	r3, r1
 4207 0018 9361     		str	r3, [r2, #24]
3569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4208              		.loc 1 3569 0
 4209 001a 8423     		movs	r3, #132
 4210 001c 2022     		movs	r2, #32
 4211 001e C250     		str	r2, [r0, r3]
3577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4212              		.loc 1 3577 0
 4213 0020 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4214              	.LVL323:
3579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4215              		.loc 1 3579 0
 4216              		@ sp needed
 4217 0024 10BD     		pop	{r4, pc}
 4218              		.cfi_endproc
 4219              	.LFE227:
 4221              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4222              		.align	1
 4223              		.global	HAL_MultiProcessor_EnterMuteMode
 4224              		.syntax unified
 4225              		.code	16
 4226              		.thumb_func
 4227              		.fpu softvfp
 4229              	HAL_MultiProcessor_EnterMuteMode:
 4230              	.LFB206:
2676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
ARM GAS  /tmp/ccxOFv0R.s 			page 155


 4231              		.loc 1 2676 0
 4232              		.cfi_startproc
 4233              		@ args = 0, pretend = 0, frame = 0
 4234              		@ frame_needed = 0, uses_anonymous_args = 0
 4235              		@ link register save eliminated.
 4236              	.LVL324:
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 4237              		.loc 1 2677 0
 4238 0000 0268     		ldr	r2, [r0]
 4239 0002 9369     		ldr	r3, [r2, #24]
 4240 0004 0421     		movs	r1, #4
 4241 0006 0B43     		orrs	r3, r1
 4242 0008 9361     		str	r3, [r2, #24]
2678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4243              		.loc 1 2678 0
 4244              		@ sp needed
 4245 000a 7047     		bx	lr
 4246              		.cfi_endproc
 4247              	.LFE206:
 4249              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4250              		.align	1
 4251              		.global	HAL_HalfDuplex_EnableTransmitter
 4252              		.syntax unified
 4253              		.code	16
 4254              		.thumb_func
 4255              		.fpu softvfp
 4257              	HAL_HalfDuplex_EnableTransmitter:
 4258              	.LFB207:
2686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 4259              		.loc 1 2686 0
 4260              		.cfi_startproc
 4261              		@ args = 0, pretend = 0, frame = 0
 4262              		@ frame_needed = 0, uses_anonymous_args = 0
 4263              	.LVL325:
 4264 0000 30B5     		push	{r4, r5, lr}
 4265              	.LCFI29:
 4266              		.cfi_def_cfa_offset 12
 4267              		.cfi_offset 4, -12
 4268              		.cfi_offset 5, -8
 4269              		.cfi_offset 14, -4
2687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4270              		.loc 1 2687 0
 4271 0002 7C23     		movs	r3, #124
 4272 0004 C35C     		ldrb	r3, [r0, r3]
 4273 0006 012B     		cmp	r3, #1
 4274 0008 15D0     		beq	.L294
2687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4275              		.loc 1 2687 0 is_stmt 0 discriminator 2
 4276 000a 7C22     		movs	r2, #124
 4277 000c 0123     		movs	r3, #1
 4278 000e 8354     		strb	r3, [r0, r2]
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4279              		.loc 1 2688 0 is_stmt 1 discriminator 2
 4280 0010 8021     		movs	r1, #128
 4281 0012 2333     		adds	r3, r3, #35
 4282 0014 4350     		str	r3, [r0, r1]
2691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccxOFv0R.s 			page 156


 4283              		.loc 1 2691 0 discriminator 2
 4284 0016 0468     		ldr	r4, [r0]
 4285 0018 2368     		ldr	r3, [r4]
 4286 001a 0C25     		movs	r5, #12
 4287 001c AB43     		bics	r3, r5
 4288 001e 2360     		str	r3, [r4]
2694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4289              		.loc 1 2694 0 discriminator 2
 4290 0020 0468     		ldr	r4, [r0]
 4291 0022 2368     		ldr	r3, [r4]
 4292 0024 043D     		subs	r5, r5, #4
 4293 0026 2B43     		orrs	r3, r5
 4294 0028 2360     		str	r3, [r4]
2696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4295              		.loc 1 2696 0 discriminator 2
 4296 002a 2023     		movs	r3, #32
 4297 002c 4350     		str	r3, [r0, r1]
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4298              		.loc 1 2698 0 discriminator 2
 4299 002e 0023     		movs	r3, #0
 4300 0030 8354     		strb	r3, [r0, r2]
2700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 4301              		.loc 1 2700 0 discriminator 2
 4302 0032 0020     		movs	r0, #0
 4303              	.LVL326:
 4304              	.L293:
2701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4305              		.loc 1 2701 0
 4306              		@ sp needed
 4307 0034 30BD     		pop	{r4, r5, pc}
 4308              	.LVL327:
 4309              	.L294:
2687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4310              		.loc 1 2687 0
 4311 0036 0220     		movs	r0, #2
 4312              	.LVL328:
 4313 0038 FCE7     		b	.L293
 4314              		.cfi_endproc
 4315              	.LFE207:
 4317              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4318              		.align	1
 4319              		.global	HAL_HalfDuplex_EnableReceiver
 4320              		.syntax unified
 4321              		.code	16
 4322              		.thumb_func
 4323              		.fpu softvfp
 4325              	HAL_HalfDuplex_EnableReceiver:
 4326              	.LFB208:
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 4327              		.loc 1 2709 0
 4328              		.cfi_startproc
 4329              		@ args = 0, pretend = 0, frame = 0
 4330              		@ frame_needed = 0, uses_anonymous_args = 0
 4331              	.LVL329:
 4332 0000 30B5     		push	{r4, r5, lr}
 4333              	.LCFI30:
 4334              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccxOFv0R.s 			page 157


 4335              		.cfi_offset 4, -12
 4336              		.cfi_offset 5, -8
 4337              		.cfi_offset 14, -4
2710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4338              		.loc 1 2710 0
 4339 0002 7C23     		movs	r3, #124
 4340 0004 C35C     		ldrb	r3, [r0, r3]
 4341 0006 012B     		cmp	r3, #1
 4342 0008 15D0     		beq	.L297
2710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4343              		.loc 1 2710 0 is_stmt 0 discriminator 2
 4344 000a 7C22     		movs	r2, #124
 4345 000c 0123     		movs	r3, #1
 4346 000e 8354     		strb	r3, [r0, r2]
2711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4347              		.loc 1 2711 0 is_stmt 1 discriminator 2
 4348 0010 8021     		movs	r1, #128
 4349 0012 2333     		adds	r3, r3, #35
 4350 0014 4350     		str	r3, [r0, r1]
2714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4351              		.loc 1 2714 0 discriminator 2
 4352 0016 0468     		ldr	r4, [r0]
 4353 0018 2368     		ldr	r3, [r4]
 4354 001a 0C25     		movs	r5, #12
 4355 001c AB43     		bics	r3, r5
 4356 001e 2360     		str	r3, [r4]
2717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4357              		.loc 1 2717 0 discriminator 2
 4358 0020 0468     		ldr	r4, [r0]
 4359 0022 2368     		ldr	r3, [r4]
 4360 0024 083D     		subs	r5, r5, #8
 4361 0026 2B43     		orrs	r3, r5
 4362 0028 2360     		str	r3, [r4]
2719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4363              		.loc 1 2719 0 discriminator 2
 4364 002a 2023     		movs	r3, #32
 4365 002c 4350     		str	r3, [r0, r1]
2721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4366              		.loc 1 2721 0 discriminator 2
 4367 002e 0023     		movs	r3, #0
 4368 0030 8354     		strb	r3, [r0, r2]
2723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 4369              		.loc 1 2723 0 discriminator 2
 4370 0032 0020     		movs	r0, #0
 4371              	.LVL330:
 4372              	.L296:
2724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4373              		.loc 1 2724 0
 4374              		@ sp needed
 4375 0034 30BD     		pop	{r4, r5, pc}
 4376              	.LVL331:
 4377              	.L297:
2710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4378              		.loc 1 2710 0
 4379 0036 0220     		movs	r0, #2
 4380              	.LVL332:
 4381 0038 FCE7     		b	.L296
ARM GAS  /tmp/ccxOFv0R.s 			page 158


 4382              		.cfi_endproc
 4383              	.LFE208:
 4385              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4386              		.align	1
 4387              		.global	HAL_LIN_SendBreak
 4388              		.syntax unified
 4389              		.code	16
 4390              		.thumb_func
 4391              		.fpu softvfp
 4393              	HAL_LIN_SendBreak:
 4394              	.LFB209:
2733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the parameters */
 4395              		.loc 1 2733 0
 4396              		.cfi_startproc
 4397              		@ args = 0, pretend = 0, frame = 0
 4398              		@ frame_needed = 0, uses_anonymous_args = 0
 4399              	.LVL333:
 4400 0000 30B5     		push	{r4, r5, lr}
 4401              	.LCFI31:
 4402              		.cfi_def_cfa_offset 12
 4403              		.cfi_offset 4, -12
 4404              		.cfi_offset 5, -8
 4405              		.cfi_offset 14, -4
2737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4406              		.loc 1 2737 0
 4407 0002 7C23     		movs	r3, #124
 4408 0004 C35C     		ldrb	r3, [r0, r3]
 4409 0006 012B     		cmp	r3, #1
 4410 0008 10D0     		beq	.L300
2737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4411              		.loc 1 2737 0 is_stmt 0 discriminator 2
 4412 000a 7C22     		movs	r2, #124
 4413 000c 0123     		movs	r3, #1
 4414 000e 8354     		strb	r3, [r0, r2]
2739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4415              		.loc 1 2739 0 is_stmt 1 discriminator 2
 4416 0010 8021     		movs	r1, #128
 4417 0012 2333     		adds	r3, r3, #35
 4418 0014 4350     		str	r3, [r0, r1]
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4419              		.loc 1 2742 0 discriminator 2
 4420 0016 0468     		ldr	r4, [r0]
 4421 0018 A369     		ldr	r3, [r4, #24]
 4422 001a 0225     		movs	r5, #2
 4423 001c 2B43     		orrs	r3, r5
 4424 001e A361     		str	r3, [r4, #24]
2744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4425              		.loc 1 2744 0 discriminator 2
 4426 0020 2023     		movs	r3, #32
 4427 0022 4350     		str	r3, [r0, r1]
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4428              		.loc 1 2746 0 discriminator 2
 4429 0024 0023     		movs	r3, #0
 4430 0026 8354     		strb	r3, [r0, r2]
2748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 4431              		.loc 1 2748 0 discriminator 2
 4432 0028 0020     		movs	r0, #0
ARM GAS  /tmp/ccxOFv0R.s 			page 159


 4433              	.LVL334:
 4434              	.L299:
2749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4435              		.loc 1 2749 0
 4436              		@ sp needed
 4437 002a 30BD     		pop	{r4, r5, pc}
 4438              	.LVL335:
 4439              	.L300:
2737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4440              		.loc 1 2737 0
 4441 002c 0220     		movs	r0, #2
 4442              	.LVL336:
 4443 002e FCE7     		b	.L299
 4444              		.cfi_endproc
 4445              	.LFE209:
 4447              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4448              		.align	1
 4449              		.global	HAL_UART_GetState
 4450              		.syntax unified
 4451              		.code	16
 4452              		.thumb_func
 4453              		.fpu softvfp
 4455              	HAL_UART_GetState:
 4456              	.LFB210:
2778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t temp1;
 4457              		.loc 1 2778 0
 4458              		.cfi_startproc
 4459              		@ args = 0, pretend = 0, frame = 0
 4460              		@ frame_needed = 0, uses_anonymous_args = 0
 4461              		@ link register save eliminated.
 4462              	.LVL337:
2781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   temp2 = huart->RxState;
 4463              		.loc 1 2781 0
 4464 0000 8023     		movs	r3, #128
 4465 0002 C358     		ldr	r3, [r0, r3]
 4466              	.LVL338:
2782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4467              		.loc 1 2782 0
 4468 0004 8422     		movs	r2, #132
 4469 0006 8058     		ldr	r0, [r0, r2]
 4470              	.LVL339:
2784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 4471              		.loc 1 2784 0
 4472 0008 1843     		orrs	r0, r3
 4473              	.LVL340:
2785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4474              		.loc 1 2785 0
 4475              		@ sp needed
 4476 000a 7047     		bx	lr
 4477              		.cfi_endproc
 4478              	.LFE210:
 4480              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4481              		.align	1
 4482              		.global	HAL_UART_GetError
 4483              		.syntax unified
 4484              		.code	16
 4485              		.thumb_func
ARM GAS  /tmp/ccxOFv0R.s 			page 160


 4486              		.fpu softvfp
 4488              	HAL_UART_GetError:
 4489              	.LFB211:
2794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return huart->ErrorCode;
 4490              		.loc 1 2794 0
 4491              		.cfi_startproc
 4492              		@ args = 0, pretend = 0, frame = 0
 4493              		@ frame_needed = 0, uses_anonymous_args = 0
 4494              		@ link register save eliminated.
 4495              	.LVL341:
2795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 4496              		.loc 1 2795 0
 4497 0000 8823     		movs	r3, #136
 4498 0002 C058     		ldr	r0, [r0, r3]
 4499              	.LVL342:
2796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 4500              		.loc 1 2796 0
 4501              		@ sp needed
 4502 0004 7047     		bx	lr
 4503              		.cfi_endproc
 4504              	.LFE211:
 4506              		.global	__aeabi_uidiv
 4507              		.global	__aeabi_uldivmod
 4508              		.section	.text.UART_SetConfig,"ax",%progbits
 4509              		.align	1
 4510              		.global	UART_SetConfig
 4511              		.syntax unified
 4512              		.code	16
 4513              		.thumb_func
 4514              		.fpu softvfp
 4516              	UART_SetConfig:
 4517              	.LFB212:
2839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t tmpreg;
 4518              		.loc 1 2839 0
 4519              		.cfi_startproc
 4520              		@ args = 0, pretend = 0, frame = 0
 4521              		@ frame_needed = 0, uses_anonymous_args = 0
 4522              	.LVL343:
 4523 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4524              	.LCFI32:
 4525              		.cfi_def_cfa_offset 24
 4526              		.cfi_offset 3, -24
 4527              		.cfi_offset 4, -20
 4528              		.cfi_offset 5, -16
 4529              		.cfi_offset 6, -12
 4530              		.cfi_offset 7, -8
 4531              		.cfi_offset 14, -4
 4532 0002 0400     		movs	r4, r0
 4533              	.LVL344:
2851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4534              		.loc 1 2851 0
 4535 0004 0168     		ldr	r1, [r0]
2874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
 4536              		.loc 1 2874 0
 4537 0006 8368     		ldr	r3, [r0, #8]
 4538 0008 0269     		ldr	r2, [r0, #16]
 4539 000a 1343     		orrs	r3, r2
ARM GAS  /tmp/ccxOFv0R.s 			page 161


 4540 000c 4269     		ldr	r2, [r0, #20]
 4541 000e 1343     		orrs	r3, r2
 4542 0010 C269     		ldr	r2, [r0, #28]
 4543 0012 1343     		orrs	r3, r2
 4544              	.LVL345:
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 4545              		.loc 1 2875 0
 4546 0014 426E     		ldr	r2, [r0, #100]
 4547 0016 1A43     		orrs	r2, r3
 4548              	.LVL346:
2876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4549              		.loc 1 2876 0
 4550 0018 0B68     		ldr	r3, [r1]
 4551 001a BD48     		ldr	r0, .L599
 4552              	.LVL347:
 4553 001c 0340     		ands	r3, r0
 4554 001e 1343     		orrs	r3, r2
 4555 0020 0B60     		str	r3, [r1]
2881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4556              		.loc 1 2881 0
 4557 0022 2268     		ldr	r2, [r4]
 4558              	.LVL348:
 4559 0024 5368     		ldr	r3, [r2, #4]
 4560 0026 BB49     		ldr	r1, .L599+4
 4561 0028 0B40     		ands	r3, r1
 4562 002a E168     		ldr	r1, [r4, #12]
 4563 002c 0B43     		orrs	r3, r1
 4564 002e 5360     		str	r3, [r2, #4]
2889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4565              		.loc 1 2889 0
 4566 0030 A169     		ldr	r1, [r4, #24]
 4567              	.LVL349:
2891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4568              		.loc 1 2891 0
 4569 0032 2268     		ldr	r2, [r4]
 4570 0034 B84B     		ldr	r3, .L599+8
 4571 0036 9A42     		cmp	r2, r3
 4572 0038 01D0     		beq	.L304
2893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 4573              		.loc 1 2893 0
 4574 003a 236A     		ldr	r3, [r4, #32]
 4575 003c 1943     		orrs	r1, r3
 4576              	.LVL350:
 4577              	.L304:
2895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4578              		.loc 1 2895 0
 4579 003e 9368     		ldr	r3, [r2, #8]
 4580 0040 B648     		ldr	r0, .L599+12
 4581 0042 0340     		ands	r3, r0
 4582 0044 0B43     		orrs	r3, r1
 4583 0046 9360     		str	r3, [r2, #8]
2900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4584              		.loc 1 2900 0
 4585 0048 2268     		ldr	r2, [r4]
 4586 004a D36A     		ldr	r3, [r2, #44]
 4587 004c 0F21     		movs	r1, #15
 4588              	.LVL351:
ARM GAS  /tmp/ccxOFv0R.s 			page 162


 4589 004e 8B43     		bics	r3, r1
 4590 0050 616A     		ldr	r1, [r4, #36]
 4591 0052 0B43     		orrs	r3, r1
 4592 0054 D362     		str	r3, [r2, #44]
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4593              		.loc 1 2903 0
 4594 0056 2368     		ldr	r3, [r4]
 4595 0058 B14A     		ldr	r2, .L599+16
 4596 005a 9342     		cmp	r3, r2
 4597 005c 5CD0     		beq	.L572
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4598              		.loc 1 2903 0 is_stmt 0 discriminator 2
 4599 005e B14A     		ldr	r2, .L599+20
 4600 0060 9342     		cmp	r3, r2
 4601 0062 6DD0     		beq	.L573
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4602              		.loc 1 2903 0 discriminator 14
 4603 0064 B04A     		ldr	r2, .L599+24
 4604 0066 9342     		cmp	r3, r2
 4605 0068 00D1     		bne	.LCB4111
 4606 006a 9EE0     		b	.L365	@long jump
 4607              	.LCB4111:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4608              		.loc 1 2903 0 discriminator 26
 4609 006c AF4A     		ldr	r2, .L599+28
 4610 006e 9342     		cmp	r3, r2
 4611 0070 00D1     		bne	.LCB4114
 4612 0072 9CE0     		b	.L366	@long jump
 4613              	.LCB4114:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4614              		.loc 1 2903 0 discriminator 28
 4615 0074 A84A     		ldr	r2, .L599+8
 4616 0076 9342     		cmp	r3, r2
 4617 0078 77D0     		beq	.L574
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4618              		.loc 1 2903 0
 4619 007a 1025     		movs	r5, #16
 4620              	.L309:
 4621              	.LVL352:
2906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4622              		.loc 1 2906 0 is_stmt 1
 4623 007c A64A     		ldr	r2, .L599+8
 4624 007e 9342     		cmp	r3, r2
 4625 0080 00D1     		bne	.LCB4124
 4626 0082 98E0     		b	.L575	@long jump
 4627              	.LCB4124:
2973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4628              		.loc 1 2973 0
 4629 0084 8023     		movs	r3, #128
 4630 0086 1B02     		lsls	r3, r3, #8
 4631 0088 E269     		ldr	r2, [r4, #28]
 4632 008a 9A42     		cmp	r2, r3
 4633 008c 00D1     		bne	.LCB4130
 4634 008e 51E3     		b	.L576	@long jump
 4635              	.LCB4130:
3010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4636              		.loc 1 3010 0
ARM GAS  /tmp/ccxOFv0R.s 			page 163


 4637 0090 022D     		cmp	r5, #2
 4638 0092 01D1     		bne	.LCB4132
 4639 0094 00F0F8FC 		bl	.L354	@far jump
 4640              	.LCB4132:
 4641 0098 01D8     		bhi	.LCB4134
 4642 009a 00F0A1FC 		bl	.L577	@far jump
 4643              	.LCB4134:
 4644 009e 042D     		cmp	r5, #4
 4645 00a0 01D1     		bne	.LCB4136
 4646 00a2 00F02DFD 		bl	.L357	@far jump
 4647              	.LCB4136:
 4648 00a6 082D     		cmp	r5, #8
 4649 00a8 01D0     		beq	.LCB4138
 4650 00aa 00F093FD 		bl	.L521	@far jump
 4651              	.LCB4138:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4652              		.loc 1 3024 0
 4653 00ae 636A     		ldr	r3, [r4, #36]
 4654 00b0 002B     		cmp	r3, #0
 4655 00b2 01D1     		bne	.LCB4141
 4656 00b4 00F067FD 		bl	.L558	@far jump
 4657              	.LCB4141:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4658              		.loc 1 3024 0 is_stmt 0 discriminator 1
 4659 00b8 012B     		cmp	r3, #1
 4660 00ba 01D1     		bne	.LCB4143
 4661 00bc 00F06FFD 		bl	.L559	@far jump
 4662              	.LCB4143:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4663              		.loc 1 3024 0 discriminator 3
 4664 00c0 022B     		cmp	r3, #2
 4665 00c2 01D1     		bne	.LCB4145
 4666 00c4 00F06EFD 		bl	.L560	@far jump
 4667              	.LCB4145:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4668              		.loc 1 3024 0 discriminator 5
 4669 00c8 032B     		cmp	r3, #3
 4670 00ca 01D1     		bne	.LCB4147
 4671 00cc 00F06DFD 		bl	.L561	@far jump
 4672              	.LCB4147:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4673              		.loc 1 3024 0 discriminator 7
 4674 00d0 042B     		cmp	r3, #4
 4675 00d2 01D1     		bne	.LCB4149
 4676 00d4 00F06BFD 		bl	.L562	@far jump
 4677              	.LCB4149:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4678              		.loc 1 3024 0 discriminator 9
 4679 00d8 052B     		cmp	r3, #5
 4680 00da 01D1     		bne	.LCB4151
 4681 00dc 00F06AFD 		bl	.L563	@far jump
 4682              	.LCB4151:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4683              		.loc 1 3024 0 discriminator 11
 4684 00e0 062B     		cmp	r3, #6
 4685 00e2 01D1     		bne	.LCB4153
 4686 00e4 00F068FD 		bl	.L564	@far jump
ARM GAS  /tmp/ccxOFv0R.s 			page 164


 4687              	.LCB4153:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4688              		.loc 1 3024 0 discriminator 13
 4689 00e8 072B     		cmp	r3, #7
 4690 00ea 01D1     		bne	.LCB4155
 4691 00ec 00F066FD 		bl	.L565	@far jump
 4692              	.LCB4155:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4693              		.loc 1 3024 0 discriminator 15
 4694 00f0 082B     		cmp	r3, #8
 4695 00f2 01D1     		bne	.LCB4157
 4696 00f4 00F065FD 		bl	.L566	@far jump
 4697              	.LCB4157:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4698              		.loc 1 3024 0 discriminator 17
 4699 00f8 092B     		cmp	r3, #9
 4700 00fa 01D1     		bne	.LCB4159
 4701 00fc 00F064FD 		bl	.L567	@far jump
 4702              	.LCB4159:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4703              		.loc 1 3024 0 discriminator 19
 4704 0100 0A2B     		cmp	r3, #10
 4705 0102 01D1     		bne	.LCB4161
 4706 0104 00F063FD 		bl	.L568	@far jump
 4707              	.LCB4161:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4708              		.loc 1 3024 0 discriminator 21
 4709 0108 0B2B     		cmp	r3, #11
 4710 010a 01D1     		bne	.LCB4163
 4711 010c 00F039FD 		bl	.L578	@far jump
 4712              	.LCB4163:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4713              		.loc 1 3024 0
 4714 0110 8023     		movs	r3, #128
 4715 0112 1B02     		lsls	r3, r3, #8
 4716 0114 00F039FD 		bl	.L362	@ far jump
 4717              	.LVL353:
 4718              	.L572:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4719              		.loc 1 2903 0 is_stmt 1 discriminator 1
 4720 0118 854A     		ldr	r2, .L599+32
 4721 011a 516D     		ldr	r1, [r2, #84]
 4722 011c 0322     		movs	r2, #3
 4723 011e 0A40     		ands	r2, r1
 4724 0120 012A     		cmp	r2, #1
 4725 0122 09D0     		beq	.L307
 4726 0124 002A     		cmp	r2, #0
 4727 0126 05D0     		beq	.L308
 4728 0128 022A     		cmp	r2, #2
 4729 012a 3AD0     		beq	.L363
 4730 012c 032A     		cmp	r2, #3
 4731 012e 05D0     		beq	.L310
 4732              	.LVL354:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4733              		.loc 1 2903 0 is_stmt 0 discriminator 3
 4734 0130 1025     		movs	r5, #16
 4735 0132 A3E7     		b	.L309
ARM GAS  /tmp/ccxOFv0R.s 			page 165


 4736              	.LVL355:
 4737              	.L308:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4738              		.loc 1 2903 0
 4739 0134 0025     		movs	r5, #0
 4740 0136 A1E7     		b	.L309
 4741              	.L307:
 4742              	.LVL356:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4743              		.loc 1 2903 0 discriminator 5
 4744 0138 0425     		movs	r5, #4
 4745 013a 9FE7     		b	.L309
 4746              	.LVL357:
 4747              	.L310:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4748              		.loc 1 2903 0 discriminator 7
 4749 013c 0825     		movs	r5, #8
 4750 013e 9DE7     		b	.L309
 4751              	.LVL358:
 4752              	.L573:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4753              		.loc 1 2903 0 discriminator 13
 4754 0140 7B4A     		ldr	r2, .L599+32
 4755 0142 516D     		ldr	r1, [r2, #84]
 4756 0144 0C22     		movs	r2, #12
 4757 0146 0A40     		ands	r2, r1
 4758 0148 042A     		cmp	r2, #4
 4759 014a 0AD0     		beq	.L313
 4760 014c 05D9     		bls	.L579
 4761 014e 082A     		cmp	r2, #8
 4762 0150 29D0     		beq	.L364
 4763 0152 0C2A     		cmp	r2, #12
 4764 0154 07D1     		bne	.L312
 4765              	.LVL359:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4766              		.loc 1 2903 0 discriminator 19
 4767 0156 0825     		movs	r5, #8
 4768 0158 90E7     		b	.L309
 4769              	.LVL360:
 4770              	.L579:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4771              		.loc 1 2903 0 discriminator 13
 4772 015a 002A     		cmp	r2, #0
 4773 015c 03D1     		bne	.L312
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4774              		.loc 1 2903 0
 4775 015e 0025     		movs	r5, #0
 4776 0160 8CE7     		b	.L309
 4777              	.L313:
 4778              	.LVL361:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4779              		.loc 1 2903 0 discriminator 17
 4780 0162 0425     		movs	r5, #4
 4781 0164 8AE7     		b	.L309
 4782              	.LVL362:
 4783              	.L312:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccxOFv0R.s 			page 166


 4784              		.loc 1 2903 0 discriminator 15
 4785 0166 1025     		movs	r5, #16
 4786 0168 88E7     		b	.L309
 4787              	.LVL363:
 4788              	.L574:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4789              		.loc 1 2903 0 discriminator 29
 4790 016a 714A     		ldr	r2, .L599+32
 4791 016c 526D     		ldr	r2, [r2, #84]
 4792 016e C021     		movs	r1, #192
 4793 0170 0901     		lsls	r1, r1, #4
 4794 0172 0A40     		ands	r2, r1
 4795 0174 8021     		movs	r1, #128
 4796 0176 C900     		lsls	r1, r1, #3
 4797 0178 8A42     		cmp	r2, r1
 4798 017a 0ED0     		beq	.L318
 4799 017c 09D9     		bls	.L580
 4800 017e 8021     		movs	r1, #128
 4801 0180 0901     		lsls	r1, r1, #4
 4802 0182 8A42     		cmp	r2, r1
 4803 0184 15D0     		beq	.L368
 4804 0186 C021     		movs	r1, #192
 4805 0188 0901     		lsls	r1, r1, #4
 4806 018a 8A42     		cmp	r2, r1
 4807 018c 07D1     		bne	.L317
 4808              	.LVL364:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4809              		.loc 1 2903 0 discriminator 35
 4810 018e 0825     		movs	r5, #8
 4811 0190 74E7     		b	.L309
 4812              	.LVL365:
 4813              	.L580:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4814              		.loc 1 2903 0 discriminator 29
 4815 0192 002A     		cmp	r2, #0
 4816 0194 03D1     		bne	.L317
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4817              		.loc 1 2903 0
 4818 0196 0025     		movs	r5, #0
 4819 0198 70E7     		b	.L309
 4820              	.L318:
 4821              	.LVL366:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4822              		.loc 1 2903 0 discriminator 33
 4823 019a 0425     		movs	r5, #4
 4824 019c 6EE7     		b	.L309
 4825              	.LVL367:
 4826              	.L317:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4827              		.loc 1 2903 0 discriminator 31
 4828 019e 1025     		movs	r5, #16
 4829 01a0 6CE7     		b	.L309
 4830              	.LVL368:
 4831              	.L363:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4832              		.loc 1 2903 0
 4833 01a2 0225     		movs	r5, #2
ARM GAS  /tmp/ccxOFv0R.s 			page 167


 4834 01a4 6AE7     		b	.L309
 4835              	.L364:
 4836 01a6 0225     		movs	r5, #2
 4837 01a8 68E7     		b	.L309
 4838              	.L365:
 4839 01aa 0025     		movs	r5, #0
 4840 01ac 66E7     		b	.L309
 4841              	.L366:
 4842 01ae 0025     		movs	r5, #0
 4843 01b0 64E7     		b	.L309
 4844              	.L368:
 4845 01b2 0225     		movs	r5, #2
 4846 01b4 62E7     		b	.L309
 4847              	.LVL369:
 4848              	.L575:
2909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4849              		.loc 1 2909 0 is_stmt 1
 4850 01b6 022D     		cmp	r5, #2
 4851 01b8 00D1     		bne	.LCB4324
 4852 01ba C1E0     		b	.L324	@long jump
 4853              	.LCB4324:
 4854 01bc 2ED9     		bls	.L581
 4855 01be 042D     		cmp	r5, #4
 4856 01c0 00D1     		bne	.LCB4328
 4857 01c2 DAE0     		b	.L327	@long jump
 4858              	.LCB4328:
 4859 01c4 082D     		cmp	r5, #8
 4860 01c6 01D0     		beq	.LCB4330
 4861 01c8 00F007FD 		bl	.L369	@far jump
 4862              	.LCB4330:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4863              		.loc 1 2921 0
 4864 01cc 636A     		ldr	r3, [r4, #36]
 4865 01ce 002B     		cmp	r3, #0
 4866 01d0 00D1     		bne	.LCB4333
 4867 01d2 22E1     		b	.L406	@long jump
 4868              	.LCB4333:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4869              		.loc 1 2921 0 is_stmt 0 discriminator 1
 4870 01d4 012B     		cmp	r3, #1
 4871 01d6 00D1     		bne	.LCB4335
 4872 01d8 22E1     		b	.L407	@long jump
 4873              	.LCB4335:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4874              		.loc 1 2921 0 discriminator 3
 4875 01da 022B     		cmp	r3, #2
 4876 01dc 00D1     		bne	.LCB4337
 4877 01de 22E1     		b	.L408	@long jump
 4878              	.LCB4337:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4879              		.loc 1 2921 0 discriminator 5
 4880 01e0 032B     		cmp	r3, #3
 4881 01e2 00D1     		bne	.LCB4339
 4882 01e4 22E1     		b	.L409	@long jump
 4883              	.LCB4339:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4884              		.loc 1 2921 0 discriminator 7
ARM GAS  /tmp/ccxOFv0R.s 			page 168


 4885 01e6 042B     		cmp	r3, #4
 4886 01e8 00D1     		bne	.LCB4341
 4887 01ea 21E1     		b	.L410	@long jump
 4888              	.LCB4341:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4889              		.loc 1 2921 0 discriminator 9
 4890 01ec 052B     		cmp	r3, #5
 4891 01ee 00D1     		bne	.LCB4343
 4892 01f0 21E1     		b	.L411	@long jump
 4893              	.LCB4343:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4894              		.loc 1 2921 0 discriminator 11
 4895 01f2 062B     		cmp	r3, #6
 4896 01f4 00D1     		bne	.LCB4345
 4897 01f6 20E1     		b	.L412	@long jump
 4898              	.LCB4345:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4899              		.loc 1 2921 0 discriminator 13
 4900 01f8 072B     		cmp	r3, #7
 4901 01fa 00D1     		bne	.LCB4347
 4902 01fc 1FE1     		b	.L413	@long jump
 4903              	.LCB4347:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4904              		.loc 1 2921 0 discriminator 15
 4905 01fe 082B     		cmp	r3, #8
 4906 0200 00D1     		bne	.LCB4349
 4907 0202 1FE1     		b	.L414	@long jump
 4908              	.LCB4349:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4909              		.loc 1 2921 0 discriminator 17
 4910 0204 092B     		cmp	r3, #9
 4911 0206 00D1     		bne	.LCB4351
 4912 0208 1FE1     		b	.L415	@long jump
 4913              	.LCB4351:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4914              		.loc 1 2921 0 discriminator 19
 4915 020a 0A2B     		cmp	r3, #10
 4916 020c 00D1     		bne	.LCB4353
 4917 020e 1FE1     		b	.L416	@long jump
 4918              	.LCB4353:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4919              		.loc 1 2921 0 discriminator 21
 4920 0210 0B2B     		cmp	r3, #11
 4921 0212 00D1     		bne	.LCB4355
 4922 0214 E9E0     		b	.L582	@long jump
 4923              	.LCB4355:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4924              		.loc 1 2921 0
 4925 0216 8020     		movs	r0, #128
 4926 0218 0002     		lsls	r0, r0, #8
 4927 021a 26E0     		b	.L330
 4928              	.L581:
2909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4929              		.loc 1 2909 0 is_stmt 1
 4930 021c 002D     		cmp	r5, #0
 4931 021e 01D0     		beq	.LCB4364
 4932 0220 00F0DBFC 		bl	.L369	@far jump
ARM GAS  /tmp/ccxOFv0R.s 			page 169


 4933              	.LCB4364:
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4934              		.loc 1 2912 0
 4935 0224 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4936              	.LVL370:
 4937 0228 636A     		ldr	r3, [r4, #36]
 4938 022a 002B     		cmp	r3, #0
 4939 022c 1AD0     		beq	.L370
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4940              		.loc 1 2912 0 is_stmt 0 discriminator 1
 4941 022e 012B     		cmp	r3, #1
 4942 0230 5FD0     		beq	.L371
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4943              		.loc 1 2912 0 discriminator 3
 4944 0232 022B     		cmp	r3, #2
 4945 0234 5FD0     		beq	.L372
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4946              		.loc 1 2912 0 discriminator 5
 4947 0236 032B     		cmp	r3, #3
 4948 0238 5FD0     		beq	.L373
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4949              		.loc 1 2912 0 discriminator 7
 4950 023a 042B     		cmp	r3, #4
 4951 023c 5FD0     		beq	.L374
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4952              		.loc 1 2912 0 discriminator 9
 4953 023e 052B     		cmp	r3, #5
 4954 0240 5FD0     		beq	.L375
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4955              		.loc 1 2912 0 discriminator 11
 4956 0242 062B     		cmp	r3, #6
 4957 0244 5FD0     		beq	.L376
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4958              		.loc 1 2912 0 discriminator 13
 4959 0246 072B     		cmp	r3, #7
 4960 0248 5FD0     		beq	.L377
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4961              		.loc 1 2912 0 discriminator 15
 4962 024a 082B     		cmp	r3, #8
 4963 024c 72D0     		beq	.L378
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4964              		.loc 1 2912 0 discriminator 17
 4965 024e 092B     		cmp	r3, #9
 4966 0250 72D0     		beq	.L379
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4967              		.loc 1 2912 0 discriminator 19
 4968 0252 0A2B     		cmp	r3, #10
 4969 0254 72D0     		beq	.L380
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4970              		.loc 1 2912 0 discriminator 21
 4971 0256 0B2B     		cmp	r3, #11
 4972 0258 01D0     		beq	.L583
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4973              		.loc 1 2912 0
 4974 025a 0121     		movs	r1, #1
 4975 025c 03E0     		b	.L329
 4976              	.L583:
ARM GAS  /tmp/ccxOFv0R.s 			page 170


 4977 025e 8021     		movs	r1, #128
 4978 0260 4900     		lsls	r1, r1, #1
 4979 0262 00E0     		b	.L329
 4980              	.L370:
 4981 0264 0121     		movs	r1, #1
 4982              	.L329:
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 4983              		.loc 1 2912 0 discriminator 48
 4984 0266 FFF7FEFF 		bl	__aeabi_uidiv
 4985              	.LVL371:
 4986              	.L330:
2929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4987              		.loc 1 2929 0 is_stmt 1
 4988 026a 0028     		cmp	r0, #0
 4989 026c 01D1     		bne	.LCB4416
 4990 026e 00F0B6FC 		bl	.L418	@far jump
 4991              	.LCB4416:
2932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 4992              		.loc 1 2932 0
 4993 0272 6268     		ldr	r2, [r4, #4]
 4994 0274 5300     		lsls	r3, r2, #1
 4995 0276 9B18     		adds	r3, r3, r2
 4996 0278 8342     		cmp	r3, r0
 4997 027a 01D9     		bls	.LCB4421
 4998 027c 00F0B1FC 		bl	.L419	@far jump
 4999              	.LCB4421:
2933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 5000              		.loc 1 2933 0 discriminator 1
 5001 0280 1303     		lsls	r3, r2, #12
2932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 5002              		.loc 1 2932 0 discriminator 1
 5003 0282 8342     		cmp	r3, r0
 5004 0284 01D2     		bcs	.LCB4424
 5005 0286 00F0AEFC 		bl	.L420	@far jump
 5006              	.LCB4424:
2939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 5007              		.loc 1 2939 0
 5008 028a 022D     		cmp	r5, #2
 5009 028c 00D1     		bne	.LCB4426
 5010 028e 42E1     		b	.L333	@long jump
 5011              	.LCB4426:
 5012 0290 00D8     		bhi	.LCB4428
 5013 0292 E0E0     		b	.L584	@long jump
 5014              	.LCB4428:
 5015 0294 042D     		cmp	r5, #4
 5016 0296 00D1     		bne	.LCB4430
 5017 0298 86E1     		b	.L336	@long jump
 5018              	.LCB4430:
 5019 029a 082D     		cmp	r5, #8
 5020 029c 00D0     		beq	.LCB4432
 5021 029e 46E2     		b	.L421	@long jump
 5022              	.LCB4432:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5023              		.loc 1 2953 0
 5024 02a0 636A     		ldr	r3, [r4, #36]
 5025 02a2 002B     		cmp	r3, #0
 5026 02a4 00D1     		bne	.LCB4435
ARM GAS  /tmp/ccxOFv0R.s 			page 171


 5027 02a6 10E2     		b	.L458	@long jump
 5028              	.LCB4435:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5029              		.loc 1 2953 0 is_stmt 0 discriminator 1
 5030 02a8 012B     		cmp	r3, #1
 5031 02aa 00D1     		bne	.LCB4437
 5032 02ac 1AE2     		b	.L459	@long jump
 5033              	.LCB4437:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5034              		.loc 1 2953 0 discriminator 3
 5035 02ae 022B     		cmp	r3, #2
 5036 02b0 00D1     		bne	.LCB4439
 5037 02b2 1BE2     		b	.L460	@long jump
 5038              	.LCB4439:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5039              		.loc 1 2953 0 discriminator 5
 5040 02b4 032B     		cmp	r3, #3
 5041 02b6 00D1     		bne	.LCB4441
 5042 02b8 1CE2     		b	.L461	@long jump
 5043              	.LCB4441:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5044              		.loc 1 2953 0 discriminator 7
 5045 02ba 042B     		cmp	r3, #4
 5046 02bc 00D1     		bne	.LCB4443
 5047 02be 1CE2     		b	.L462	@long jump
 5048              	.LCB4443:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5049              		.loc 1 2953 0 discriminator 9
 5050 02c0 052B     		cmp	r3, #5
 5051 02c2 00D1     		bne	.LCB4445
 5052 02c4 1DE2     		b	.L463	@long jump
 5053              	.LCB4445:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5054              		.loc 1 2953 0 discriminator 11
 5055 02c6 062B     		cmp	r3, #6
 5056 02c8 00D1     		bne	.LCB4447
 5057 02ca 1DE2     		b	.L464	@long jump
 5058              	.LCB4447:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5059              		.loc 1 2953 0 discriminator 13
 5060 02cc 072B     		cmp	r3, #7
 5061 02ce 00D1     		bne	.LCB4449
 5062 02d0 1DE2     		b	.L465	@long jump
 5063              	.LCB4449:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5064              		.loc 1 2953 0 discriminator 15
 5065 02d2 082B     		cmp	r3, #8
 5066 02d4 00D1     		bne	.LCB4451
 5067 02d6 1EE2     		b	.L466	@long jump
 5068              	.LCB4451:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5069              		.loc 1 2953 0 discriminator 17
 5070 02d8 092B     		cmp	r3, #9
 5071 02da 00D1     		bne	.LCB4453
 5072 02dc 1FE2     		b	.L467	@long jump
 5073              	.LCB4453:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
ARM GAS  /tmp/ccxOFv0R.s 			page 172


 5074              		.loc 1 2953 0 discriminator 19
 5075 02de 0A2B     		cmp	r3, #10
 5076 02e0 00D1     		bne	.LCB4455
 5077 02e2 20E2     		b	.L468	@long jump
 5078              	.LCB4455:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5079              		.loc 1 2953 0 discriminator 21
 5080 02e4 0B2B     		cmp	r3, #11
 5081 02e6 00D1     		bne	.LCB4457
 5082 02e8 EBE1     		b	.L585	@long jump
 5083              	.LCB4457:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5084              		.loc 1 2953 0
 5085 02ea 8026     		movs	r6, #128
 5086 02ec 3604     		lsls	r6, r6, #16
 5087 02ee 0027     		movs	r7, #0
 5088 02f0 EEE1     		b	.L341
 5089              	.LVL372:
 5090              	.L371:
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5091              		.loc 1 2912 0 is_stmt 1
 5092 02f2 0221     		movs	r1, #2
 5093 02f4 B7E7     		b	.L329
 5094              	.L372:
 5095 02f6 0421     		movs	r1, #4
 5096 02f8 B5E7     		b	.L329
 5097              	.L373:
 5098 02fa 0621     		movs	r1, #6
 5099 02fc B3E7     		b	.L329
 5100              	.L374:
 5101 02fe 0821     		movs	r1, #8
 5102 0300 B1E7     		b	.L329
 5103              	.L375:
 5104 0302 0A21     		movs	r1, #10
 5105 0304 AFE7     		b	.L329
 5106              	.L376:
 5107 0306 0C21     		movs	r1, #12
 5108 0308 ADE7     		b	.L329
 5109              	.L377:
 5110 030a 1021     		movs	r1, #16
 5111 030c ABE7     		b	.L329
 5112              	.L600:
 5113 030e C046     		.align	2
 5114              	.L599:
 5115 0310 F369FFCF 		.word	-805344781
 5116 0314 FFCFFFFF 		.word	-12289
 5117 0318 00800040 		.word	1073774592
 5118 031c FFF4FF11 		.word	301987071
 5119 0320 00380140 		.word	1073821696
 5120 0324 00440040 		.word	1073759232
 5121 0328 00480040 		.word	1073760256
 5122 032c 004C0040 		.word	1073761280
 5123 0330 00100240 		.word	1073876992
 5124              	.L378:
 5125 0334 2021     		movs	r1, #32
 5126 0336 96E7     		b	.L329
 5127              	.L379:
ARM GAS  /tmp/ccxOFv0R.s 			page 173


 5128 0338 4021     		movs	r1, #64
 5129 033a 94E7     		b	.L329
 5130              	.L380:
 5131 033c 8021     		movs	r1, #128
 5132 033e 92E7     		b	.L329
 5133              	.L324:
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5134              		.loc 1 2915 0
 5135 0340 636A     		ldr	r3, [r4, #36]
 5136 0342 002B     		cmp	r3, #0
 5137 0344 53D0     		beq	.L382
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5138              		.loc 1 2915 0 is_stmt 0 discriminator 1
 5139 0346 012B     		cmp	r3, #1
 5140 0348 53D0     		beq	.L383
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5141              		.loc 1 2915 0 discriminator 3
 5142 034a 022B     		cmp	r3, #2
 5143 034c 53D0     		beq	.L384
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5144              		.loc 1 2915 0 discriminator 5
 5145 034e 032B     		cmp	r3, #3
 5146 0350 53D0     		beq	.L385
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5147              		.loc 1 2915 0 discriminator 7
 5148 0352 042B     		cmp	r3, #4
 5149 0354 53D0     		beq	.L386
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5150              		.loc 1 2915 0 discriminator 9
 5151 0356 052B     		cmp	r3, #5
 5152 0358 53D0     		beq	.L387
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5153              		.loc 1 2915 0 discriminator 11
 5154 035a 062B     		cmp	r3, #6
 5155 035c 53D0     		beq	.L388
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5156              		.loc 1 2915 0 discriminator 13
 5157 035e 072B     		cmp	r3, #7
 5158 0360 53D0     		beq	.L389
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5159              		.loc 1 2915 0 discriminator 15
 5160 0362 082B     		cmp	r3, #8
 5161 0364 53D0     		beq	.L390
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5162              		.loc 1 2915 0 discriminator 17
 5163 0366 092B     		cmp	r3, #9
 5164 0368 53D0     		beq	.L391
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5165              		.loc 1 2915 0 discriminator 19
 5166 036a 0A2B     		cmp	r3, #10
 5167 036c 53D0     		beq	.L392
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5168              		.loc 1 2915 0 discriminator 21
 5169 036e 0B2B     		cmp	r3, #11
 5170 0370 01D0     		beq	.L586
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5171              		.loc 1 2915 0
ARM GAS  /tmp/ccxOFv0R.s 			page 174


 5172 0372 AA48     		ldr	r0, .L601
 5173 0374 79E7     		b	.L330
 5174              	.L586:
 5175 0376 AA48     		ldr	r0, .L601+4
 5176 0378 77E7     		b	.L330
 5177              	.L327:
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5178              		.loc 1 2918 0 is_stmt 1
 5179 037a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5180              	.LVL373:
 5181 037e 636A     		ldr	r3, [r4, #36]
 5182 0380 002B     		cmp	r3, #0
 5183 0382 1AD0     		beq	.L394
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5184              		.loc 1 2918 0 is_stmt 0 discriminator 1
 5185 0384 012B     		cmp	r3, #1
 5186 0386 1CD0     		beq	.L395
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5187              		.loc 1 2918 0 discriminator 3
 5188 0388 022B     		cmp	r3, #2
 5189 038a 1CD0     		beq	.L396
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5190              		.loc 1 2918 0 discriminator 5
 5191 038c 032B     		cmp	r3, #3
 5192 038e 1CD0     		beq	.L397
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5193              		.loc 1 2918 0 discriminator 7
 5194 0390 042B     		cmp	r3, #4
 5195 0392 1CD0     		beq	.L398
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5196              		.loc 1 2918 0 discriminator 9
 5197 0394 052B     		cmp	r3, #5
 5198 0396 1CD0     		beq	.L399
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5199              		.loc 1 2918 0 discriminator 11
 5200 0398 062B     		cmp	r3, #6
 5201 039a 1CD0     		beq	.L400
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5202              		.loc 1 2918 0 discriminator 13
 5203 039c 072B     		cmp	r3, #7
 5204 039e 1CD0     		beq	.L401
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5205              		.loc 1 2918 0 discriminator 15
 5206 03a0 082B     		cmp	r3, #8
 5207 03a2 1CD0     		beq	.L402
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5208              		.loc 1 2918 0 discriminator 17
 5209 03a4 092B     		cmp	r3, #9
 5210 03a6 1CD0     		beq	.L403
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5211              		.loc 1 2918 0 discriminator 19
 5212 03a8 0A2B     		cmp	r3, #10
 5213 03aa 1CD0     		beq	.L404
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5214              		.loc 1 2918 0 discriminator 21
 5215 03ac 0B2B     		cmp	r3, #11
 5216 03ae 01D0     		beq	.L587
ARM GAS  /tmp/ccxOFv0R.s 			page 175


2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5217              		.loc 1 2918 0
 5218 03b0 0121     		movs	r1, #1
 5219 03b2 03E0     		b	.L331
 5220              	.L587:
 5221 03b4 8021     		movs	r1, #128
 5222 03b6 4900     		lsls	r1, r1, #1
 5223 03b8 00E0     		b	.L331
 5224              	.L394:
 5225 03ba 0121     		movs	r1, #1
 5226              	.L331:
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5227              		.loc 1 2918 0 discriminator 48
 5228 03bc FFF7FEFF 		bl	__aeabi_uidiv
 5229              	.LVL374:
2919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 5230              		.loc 1 2919 0 is_stmt 1 discriminator 48
 5231 03c0 53E7     		b	.L330
 5232              	.LVL375:
 5233              	.L395:
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5234              		.loc 1 2918 0
 5235 03c2 0221     		movs	r1, #2
 5236 03c4 FAE7     		b	.L331
 5237              	.L396:
 5238 03c6 0421     		movs	r1, #4
 5239 03c8 F8E7     		b	.L331
 5240              	.L397:
 5241 03ca 0621     		movs	r1, #6
 5242 03cc F6E7     		b	.L331
 5243              	.L398:
 5244 03ce 0821     		movs	r1, #8
 5245 03d0 F4E7     		b	.L331
 5246              	.L399:
 5247 03d2 0A21     		movs	r1, #10
 5248 03d4 F2E7     		b	.L331
 5249              	.L400:
 5250 03d6 0C21     		movs	r1, #12
 5251 03d8 F0E7     		b	.L331
 5252              	.L401:
 5253 03da 1021     		movs	r1, #16
 5254 03dc EEE7     		b	.L331
 5255              	.L402:
 5256 03de 2021     		movs	r1, #32
 5257 03e0 ECE7     		b	.L331
 5258              	.L403:
 5259 03e2 4021     		movs	r1, #64
 5260 03e4 EAE7     		b	.L331
 5261              	.L404:
 5262 03e6 8021     		movs	r1, #128
 5263 03e8 E8E7     		b	.L331
 5264              	.L582:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5265              		.loc 1 2921 0
 5266 03ea 8020     		movs	r0, #128
 5267 03ec 3DE7     		b	.L330
 5268              	.L382:
ARM GAS  /tmp/ccxOFv0R.s 			page 176


2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5269              		.loc 1 2915 0
 5270 03ee 8B48     		ldr	r0, .L601
 5271 03f0 3BE7     		b	.L330
 5272              	.L383:
 5273 03f2 8C48     		ldr	r0, .L601+8
 5274 03f4 39E7     		b	.L330
 5275              	.L384:
 5276 03f6 8C48     		ldr	r0, .L601+12
 5277 03f8 37E7     		b	.L330
 5278              	.L385:
 5279 03fa 8C48     		ldr	r0, .L601+16
 5280 03fc 35E7     		b	.L330
 5281              	.L386:
 5282 03fe 8C48     		ldr	r0, .L601+20
 5283 0400 33E7     		b	.L330
 5284              	.L387:
 5285 0402 8C48     		ldr	r0, .L601+24
 5286 0404 31E7     		b	.L330
 5287              	.L388:
 5288 0406 8C48     		ldr	r0, .L601+28
 5289 0408 2FE7     		b	.L330
 5290              	.L389:
 5291 040a 8C48     		ldr	r0, .L601+32
 5292 040c 2DE7     		b	.L330
 5293              	.L390:
 5294 040e 8C48     		ldr	r0, .L601+36
 5295 0410 2BE7     		b	.L330
 5296              	.L391:
 5297 0412 8C48     		ldr	r0, .L601+40
 5298 0414 29E7     		b	.L330
 5299              	.L392:
 5300 0416 8C48     		ldr	r0, .L601+44
 5301 0418 27E7     		b	.L330
 5302              	.L406:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5303              		.loc 1 2921 0
 5304 041a 8020     		movs	r0, #128
 5305 041c 0002     		lsls	r0, r0, #8
 5306 041e 24E7     		b	.L330
 5307              	.L407:
 5308 0420 8020     		movs	r0, #128
 5309 0422 C001     		lsls	r0, r0, #7
 5310 0424 21E7     		b	.L330
 5311              	.L408:
 5312 0426 8020     		movs	r0, #128
 5313 0428 8001     		lsls	r0, r0, #6
 5314 042a 1EE7     		b	.L330
 5315              	.L409:
 5316 042c 8748     		ldr	r0, .L601+48
 5317 042e 1CE7     		b	.L330
 5318              	.L410:
 5319 0430 8020     		movs	r0, #128
 5320 0432 4001     		lsls	r0, r0, #5
 5321 0434 19E7     		b	.L330
 5322              	.L411:
 5323 0436 8648     		ldr	r0, .L601+52
ARM GAS  /tmp/ccxOFv0R.s 			page 177


 5324 0438 17E7     		b	.L330
 5325              	.L412:
 5326 043a 8648     		ldr	r0, .L601+56
 5327 043c 15E7     		b	.L330
 5328              	.L413:
 5329 043e 8020     		movs	r0, #128
 5330 0440 0001     		lsls	r0, r0, #4
 5331 0442 12E7     		b	.L330
 5332              	.L414:
 5333 0444 8020     		movs	r0, #128
 5334 0446 C000     		lsls	r0, r0, #3
 5335 0448 0FE7     		b	.L330
 5336              	.L415:
 5337 044a 8020     		movs	r0, #128
 5338 044c 8000     		lsls	r0, r0, #2
 5339 044e 0CE7     		b	.L330
 5340              	.L416:
 5341 0450 8020     		movs	r0, #128
 5342 0452 4000     		lsls	r0, r0, #1
 5343 0454 09E7     		b	.L330
 5344              	.LVL376:
 5345              	.L584:
2939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 5346              		.loc 1 2939 0
 5347 0456 002D     		cmp	r5, #0
 5348 0458 00D0     		beq	.LCB4796
 5349 045a 68E1     		b	.L421	@long jump
 5350              	.LCB4796:
2942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPres
 5351              		.loc 1 2942 0
 5352 045c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5353              	.LVL377:
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5354              		.loc 1 2943 0
 5355 0460 636A     		ldr	r3, [r4, #36]
 5356 0462 002B     		cmp	r3, #0
 5357 0464 1CD0     		beq	.L422
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5358              		.loc 1 2943 0 is_stmt 0 discriminator 1
 5359 0466 012B     		cmp	r3, #1
 5360 0468 37D0     		beq	.L423
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5361              		.loc 1 2943 0 discriminator 3
 5362 046a 022B     		cmp	r3, #2
 5363 046c 38D0     		beq	.L424
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5364              		.loc 1 2943 0 discriminator 5
 5365 046e 032B     		cmp	r3, #3
 5366 0470 39D0     		beq	.L425
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5367              		.loc 1 2943 0 discriminator 7
 5368 0472 042B     		cmp	r3, #4
 5369 0474 3AD0     		beq	.L426
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5370              		.loc 1 2943 0 discriminator 9
 5371 0476 052B     		cmp	r3, #5
 5372 0478 3BD0     		beq	.L427
ARM GAS  /tmp/ccxOFv0R.s 			page 178


2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5373              		.loc 1 2943 0 discriminator 11
 5374 047a 062B     		cmp	r3, #6
 5375 047c 3CD0     		beq	.L428
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5376              		.loc 1 2943 0 discriminator 13
 5377 047e 072B     		cmp	r3, #7
 5378 0480 3DD0     		beq	.L429
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5379              		.loc 1 2943 0 discriminator 15
 5380 0482 082B     		cmp	r3, #8
 5381 0484 3ED0     		beq	.L430
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5382              		.loc 1 2943 0 discriminator 17
 5383 0486 092B     		cmp	r3, #9
 5384 0488 3FD0     		beq	.L431
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5385              		.loc 1 2943 0 discriminator 19
 5386 048a 0A2B     		cmp	r3, #10
 5387 048c 40D0     		beq	.L432
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5388              		.loc 1 2943 0 discriminator 21
 5389 048e 0B2B     		cmp	r3, #11
 5390 0490 02D0     		beq	.L588
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5391              		.loc 1 2943 0
 5392 0492 0122     		movs	r2, #1
 5393 0494 0023     		movs	r3, #0
 5394 0496 05E0     		b	.L338
 5395              	.L588:
 5396 0498 8022     		movs	r2, #128
 5397 049a 5200     		lsls	r2, r2, #1
 5398 049c 0023     		movs	r3, #0
 5399 049e 01E0     		b	.L338
 5400              	.L422:
 5401 04a0 0122     		movs	r2, #1
 5402 04a2 0023     		movs	r3, #0
 5403              	.L338:
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5404              		.loc 1 2943 0 discriminator 48
 5405 04a4 0021     		movs	r1, #0
 5406 04a6 FFF7FEFF 		bl	__aeabi_uldivmod
 5407              	.LVL378:
 5408 04aa 050E     		lsrs	r5, r0, #24
 5409              	.LVL379:
 5410 04ac 0B02     		lsls	r3, r1, #8
 5411 04ae 2B43     		orrs	r3, r5
 5412 04b0 0202     		lsls	r2, r0, #8
 5413 04b2 6568     		ldr	r5, [r4, #4]
 5414 04b4 6808     		lsrs	r0, r5, #1
 5415 04b6 0021     		movs	r1, #0
 5416 04b8 8018     		adds	r0, r0, r2
 5417 04ba 5941     		adcs	r1, r1, r3
 5418 04bc 2A00     		movs	r2, r5
 5419 04be 0023     		movs	r3, #0
 5420 04c0 FFF7FEFF 		bl	__aeabi_uldivmod
 5421              	.LVL380:
ARM GAS  /tmp/ccxOFv0R.s 			page 179


 5422 04c4 0200     		movs	r2, r0
 5423              	.LVL381:
2944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
 5424              		.loc 1 2944 0 is_stmt 1 discriminator 48
 5425 04c6 0020     		movs	r0, #0
 5426              	.LVL382:
 5427              	.L332:
2961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 5428              		.loc 1 2961 0
 5429 04c8 6349     		ldr	r1, .L601+60
 5430 04ca 644B     		ldr	r3, .L601+64
 5431 04cc D318     		adds	r3, r2, r3
 5432 04ce 8B42     		cmp	r3, r1
 5433 04d0 00D9     		bls	.LCB4874
 5434 04d2 8AE3     		b	.L470	@long jump
 5435              	.LCB4874:
2963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 5436              		.loc 1 2963 0
 5437 04d4 2368     		ldr	r3, [r4]
 5438 04d6 DA60     		str	r2, [r3, #12]
 5439 04d8 B9E2     		b	.L323
 5440              	.LVL383:
 5441              	.L423:
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5442              		.loc 1 2943 0
 5443 04da 0222     		movs	r2, #2
 5444 04dc 0023     		movs	r3, #0
 5445 04de E1E7     		b	.L338
 5446              	.L424:
 5447 04e0 0422     		movs	r2, #4
 5448 04e2 0023     		movs	r3, #0
 5449 04e4 DEE7     		b	.L338
 5450              	.L425:
 5451 04e6 0622     		movs	r2, #6
 5452 04e8 0023     		movs	r3, #0
 5453 04ea DBE7     		b	.L338
 5454              	.L426:
 5455 04ec 0822     		movs	r2, #8
 5456 04ee 0023     		movs	r3, #0
 5457 04f0 D8E7     		b	.L338
 5458              	.L427:
 5459 04f2 0A22     		movs	r2, #10
 5460 04f4 0023     		movs	r3, #0
 5461 04f6 D5E7     		b	.L338
 5462              	.L428:
 5463 04f8 0C22     		movs	r2, #12
 5464 04fa 0023     		movs	r3, #0
 5465 04fc D2E7     		b	.L338
 5466              	.L429:
 5467 04fe 1022     		movs	r2, #16
 5468 0500 0023     		movs	r3, #0
 5469 0502 CFE7     		b	.L338
 5470              	.L430:
 5471 0504 2022     		movs	r2, #32
 5472 0506 0023     		movs	r3, #0
 5473 0508 CCE7     		b	.L338
 5474              	.L431:
ARM GAS  /tmp/ccxOFv0R.s 			page 180


 5475 050a 4022     		movs	r2, #64
 5476 050c 0023     		movs	r3, #0
 5477 050e C9E7     		b	.L338
 5478              	.L432:
 5479 0510 8022     		movs	r2, #128
 5480 0512 0023     		movs	r3, #0
 5481 0514 C6E7     		b	.L338
 5482              	.LVL384:
 5483              	.L333:
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5484              		.loc 1 2946 0
 5485 0516 636A     		ldr	r3, [r4, #36]
 5486 0518 002B     		cmp	r3, #0
 5487 051a 1BD0     		beq	.L434
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5488              		.loc 1 2946 0 is_stmt 0 discriminator 1
 5489 051c 012B     		cmp	r3, #1
 5490 051e 25D0     		beq	.L435
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5491              		.loc 1 2946 0 discriminator 3
 5492 0520 022B     		cmp	r3, #2
 5493 0522 26D0     		beq	.L436
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5494              		.loc 1 2946 0 discriminator 5
 5495 0524 032B     		cmp	r3, #3
 5496 0526 27D0     		beq	.L437
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5497              		.loc 1 2946 0 discriminator 7
 5498 0528 042B     		cmp	r3, #4
 5499 052a 28D0     		beq	.L438
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5500              		.loc 1 2946 0 discriminator 9
 5501 052c 052B     		cmp	r3, #5
 5502 052e 29D0     		beq	.L439
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5503              		.loc 1 2946 0 discriminator 11
 5504 0530 062B     		cmp	r3, #6
 5505 0532 2AD0     		beq	.L440
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5506              		.loc 1 2946 0 discriminator 13
 5507 0534 072B     		cmp	r3, #7
 5508 0536 2BD0     		beq	.L441
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5509              		.loc 1 2946 0 discriminator 15
 5510 0538 082B     		cmp	r3, #8
 5511 053a 2CD0     		beq	.L442
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5512              		.loc 1 2946 0 discriminator 17
 5513 053c 092B     		cmp	r3, #9
 5514 053e 2DD0     		beq	.L443
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5515              		.loc 1 2946 0 discriminator 19
 5516 0540 0A2B     		cmp	r3, #10
 5517 0542 2ED0     		beq	.L444
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5518              		.loc 1 2946 0 discriminator 21
 5519 0544 0B2B     		cmp	r3, #11
ARM GAS  /tmp/ccxOFv0R.s 			page 181


 5520 0546 02D0     		beq	.L589
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5521              		.loc 1 2946 0
 5522 0548 454E     		ldr	r6, .L601+68
 5523 054a 0027     		movs	r7, #0
 5524 054c 04E0     		b	.L339
 5525              	.L589:
 5526 054e 334E     		ldr	r6, .L601
 5527 0550 0027     		movs	r7, #0
 5528 0552 01E0     		b	.L339
 5529              	.L434:
 5530 0554 424E     		ldr	r6, .L601+68
 5531 0556 0027     		movs	r7, #0
 5532              	.L339:
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5533              		.loc 1 2946 0 discriminator 48
 5534 0558 5008     		lsrs	r0, r2, #1
 5535              	.LVL385:
 5536 055a 0021     		movs	r1, #0
 5537 055c 8019     		adds	r0, r0, r6
 5538 055e 7941     		adcs	r1, r1, r7
 5539 0560 0023     		movs	r3, #0
 5540 0562 FFF7FEFF 		bl	__aeabi_uldivmod
 5541              	.LVL386:
 5542 0566 0200     		movs	r2, r0
 5543              	.LVL387:
2947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           case UART_CLOCKSOURCE_SYSCLK:
 5544              		.loc 1 2947 0 is_stmt 1 discriminator 48
 5545 0568 0020     		movs	r0, #0
 5546              	.LVL388:
 5547 056a ADE7     		b	.L332
 5548              	.LVL389:
 5549              	.L435:
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5550              		.loc 1 2946 0
 5551 056c 3D4E     		ldr	r6, .L601+72
 5552 056e 0027     		movs	r7, #0
 5553 0570 F2E7     		b	.L339
 5554              	.L436:
 5555 0572 3D4E     		ldr	r6, .L601+76
 5556 0574 0027     		movs	r7, #0
 5557 0576 EFE7     		b	.L339
 5558              	.L437:
 5559 0578 3C4E     		ldr	r6, .L601+80
 5560 057a 0027     		movs	r7, #0
 5561 057c ECE7     		b	.L339
 5562              	.L438:
 5563 057e 3C4E     		ldr	r6, .L601+84
 5564 0580 0027     		movs	r7, #0
 5565 0582 E9E7     		b	.L339
 5566              	.L439:
 5567 0584 3B4E     		ldr	r6, .L601+88
 5568 0586 0027     		movs	r7, #0
 5569 0588 E6E7     		b	.L339
 5570              	.L440:
 5571 058a 3B4E     		ldr	r6, .L601+92
 5572 058c 0027     		movs	r7, #0
ARM GAS  /tmp/ccxOFv0R.s 			page 182


 5573 058e E3E7     		b	.L339
 5574              	.L441:
 5575 0590 3A4E     		ldr	r6, .L601+96
 5576 0592 0027     		movs	r7, #0
 5577 0594 E0E7     		b	.L339
 5578              	.L442:
 5579 0596 3A4E     		ldr	r6, .L601+100
 5580 0598 0027     		movs	r7, #0
 5581 059a DDE7     		b	.L339
 5582              	.L443:
 5583 059c 394E     		ldr	r6, .L601+104
 5584 059e 0027     		movs	r7, #0
 5585 05a0 DAE7     		b	.L339
 5586              	.L444:
 5587 05a2 394E     		ldr	r6, .L601+108
 5588 05a4 0027     		movs	r7, #0
 5589 05a6 D7E7     		b	.L339
 5590              	.L336:
2949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPres
 5591              		.loc 1 2949 0
 5592 05a8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5593              	.LVL390:
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5594              		.loc 1 2950 0
 5595 05ac 636A     		ldr	r3, [r4, #36]
 5596 05ae 002B     		cmp	r3, #0
 5597 05b0 1CD0     		beq	.L446
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5598              		.loc 1 2950 0 is_stmt 0 discriminator 1
 5599 05b2 012B     		cmp	r3, #1
 5600 05b4 2FD0     		beq	.L447
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5601              		.loc 1 2950 0 discriminator 3
 5602 05b6 022B     		cmp	r3, #2
 5603 05b8 68D0     		beq	.L448
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5604              		.loc 1 2950 0 discriminator 5
 5605 05ba 032B     		cmp	r3, #3
 5606 05bc 69D0     		beq	.L449
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5607              		.loc 1 2950 0 discriminator 7
 5608 05be 042B     		cmp	r3, #4
 5609 05c0 6AD0     		beq	.L450
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5610              		.loc 1 2950 0 discriminator 9
 5611 05c2 052B     		cmp	r3, #5
 5612 05c4 6BD0     		beq	.L451
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5613              		.loc 1 2950 0 discriminator 11
 5614 05c6 062B     		cmp	r3, #6
 5615 05c8 6CD0     		beq	.L452
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5616              		.loc 1 2950 0 discriminator 13
 5617 05ca 072B     		cmp	r3, #7
 5618 05cc 6DD0     		beq	.L453
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5619              		.loc 1 2950 0 discriminator 15
ARM GAS  /tmp/ccxOFv0R.s 			page 183


 5620 05ce 082B     		cmp	r3, #8
 5621 05d0 6ED0     		beq	.L454
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5622              		.loc 1 2950 0 discriminator 17
 5623 05d2 092B     		cmp	r3, #9
 5624 05d4 6FD0     		beq	.L455
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5625              		.loc 1 2950 0 discriminator 19
 5626 05d6 0A2B     		cmp	r3, #10
 5627 05d8 70D0     		beq	.L456
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5628              		.loc 1 2950 0 discriminator 21
 5629 05da 0B2B     		cmp	r3, #11
 5630 05dc 02D0     		beq	.L590
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5631              		.loc 1 2950 0
 5632 05de 0122     		movs	r2, #1
 5633 05e0 0023     		movs	r3, #0
 5634 05e2 05E0     		b	.L340
 5635              	.L590:
 5636 05e4 8022     		movs	r2, #128
 5637 05e6 5200     		lsls	r2, r2, #1
 5638 05e8 0023     		movs	r3, #0
 5639 05ea 01E0     		b	.L340
 5640              	.L446:
 5641 05ec 0122     		movs	r2, #1
 5642 05ee 0023     		movs	r3, #0
 5643              	.L340:
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5644              		.loc 1 2950 0 discriminator 48
 5645 05f0 0021     		movs	r1, #0
 5646 05f2 FFF7FEFF 		bl	__aeabi_uldivmod
 5647              	.LVL391:
 5648 05f6 050E     		lsrs	r5, r0, #24
 5649              	.LVL392:
 5650 05f8 0B02     		lsls	r3, r1, #8
 5651 05fa 2B43     		orrs	r3, r5
 5652 05fc 0202     		lsls	r2, r0, #8
 5653 05fe 6568     		ldr	r5, [r4, #4]
 5654 0600 6808     		lsrs	r0, r5, #1
 5655 0602 0021     		movs	r1, #0
 5656 0604 8018     		adds	r0, r0, r2
 5657 0606 5941     		adcs	r1, r1, r3
 5658 0608 2A00     		movs	r2, r5
 5659 060a 0023     		movs	r3, #0
 5660 060c FFF7FEFF 		bl	__aeabi_uldivmod
 5661              	.LVL393:
 5662 0610 0200     		movs	r2, r0
 5663              	.LVL394:
2951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
 5664              		.loc 1 2951 0 is_stmt 1 discriminator 48
 5665 0612 0020     		movs	r0, #0
 5666              	.LVL395:
 5667 0614 58E7     		b	.L332
 5668              	.LVL396:
 5669              	.L447:
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
ARM GAS  /tmp/ccxOFv0R.s 			page 184


 5670              		.loc 1 2950 0
 5671 0616 0222     		movs	r2, #2
 5672 0618 0023     		movs	r3, #0
 5673 061a E9E7     		b	.L340
 5674              	.L602:
 5675              		.align	2
 5676              	.L601:
 5677 061c 0024F400 		.word	16000000
 5678 0620 24F40000 		.word	62500
 5679 0624 00127A00 		.word	8000000
 5680 0628 00093D00 		.word	4000000
 5681 062c AAB02800 		.word	2666666
 5682 0630 80841E00 		.word	2000000
 5683 0634 006A1800 		.word	1600000
 5684 0638 55581400 		.word	1333333
 5685 063c 40420F00 		.word	1000000
 5686 0640 20A10700 		.word	500000
 5687 0644 90D00300 		.word	250000
 5688 0648 48E80100 		.word	125000
 5689 064c 55150000 		.word	5461
 5690 0650 CC0C0000 		.word	3276
 5691 0654 AA0A0000 		.word	2730
 5692 0658 FFFC0F00 		.word	1047807
 5693 065c 00FDFFFF 		.word	-768
 5694 0660 000024F4 		.word	-198967296
 5695 0664 0000127A 		.word	2048000000
 5696 0668 0000093D 		.word	1024000000
 5697 066c 00AAB028 		.word	682666496
 5698 0670 0080841E 		.word	512000000
 5699 0674 00006A18 		.word	409600000
 5700 0678 00555814 		.word	341333248
 5701 067c 0040420F 		.word	256000000
 5702 0680 0020A107 		.word	128000000
 5703 0684 0090D003 		.word	64000000
 5704 0688 0048E801 		.word	32000000
 5705              	.L448:
 5706 068c 0422     		movs	r2, #4
 5707 068e 0023     		movs	r3, #0
 5708 0690 AEE7     		b	.L340
 5709              	.L449:
 5710 0692 0622     		movs	r2, #6
 5711 0694 0023     		movs	r3, #0
 5712 0696 ABE7     		b	.L340
 5713              	.L450:
 5714 0698 0822     		movs	r2, #8
 5715 069a 0023     		movs	r3, #0
 5716 069c A8E7     		b	.L340
 5717              	.L451:
 5718 069e 0A22     		movs	r2, #10
 5719 06a0 0023     		movs	r3, #0
 5720 06a2 A5E7     		b	.L340
 5721              	.L452:
 5722 06a4 0C22     		movs	r2, #12
 5723 06a6 0023     		movs	r3, #0
 5724 06a8 A2E7     		b	.L340
 5725              	.L453:
 5726 06aa 1022     		movs	r2, #16
ARM GAS  /tmp/ccxOFv0R.s 			page 185


 5727 06ac 0023     		movs	r3, #0
 5728 06ae 9FE7     		b	.L340
 5729              	.L454:
 5730 06b0 2022     		movs	r2, #32
 5731 06b2 0023     		movs	r3, #0
 5732 06b4 9CE7     		b	.L340
 5733              	.L455:
 5734 06b6 4022     		movs	r2, #64
 5735 06b8 0023     		movs	r3, #0
 5736 06ba 99E7     		b	.L340
 5737              	.L456:
 5738 06bc 8022     		movs	r2, #128
 5739 06be 0023     		movs	r3, #0
 5740 06c0 96E7     		b	.L340
 5741              	.LVL397:
 5742              	.L585:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5743              		.loc 1 2953 0
 5744 06c2 8026     		movs	r6, #128
 5745 06c4 3602     		lsls	r6, r6, #8
 5746 06c6 0027     		movs	r7, #0
 5747 06c8 02E0     		b	.L341
 5748              	.L458:
 5749 06ca 8026     		movs	r6, #128
 5750 06cc 3604     		lsls	r6, r6, #16
 5751 06ce 0027     		movs	r7, #0
 5752              	.L341:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5753              		.loc 1 2953 0 is_stmt 0 discriminator 48
 5754 06d0 5008     		lsrs	r0, r2, #1
 5755              	.LVL398:
 5756 06d2 0021     		movs	r1, #0
 5757 06d4 8019     		adds	r0, r0, r6
 5758 06d6 7941     		adcs	r1, r1, r7
 5759 06d8 0023     		movs	r3, #0
 5760 06da FFF7FEFF 		bl	__aeabi_uldivmod
 5761              	.LVL399:
 5762 06de 0200     		movs	r2, r0
 5763              	.LVL400:
2954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           default:
 5764              		.loc 1 2954 0 is_stmt 1 discriminator 48
 5765 06e0 0020     		movs	r0, #0
 5766              	.LVL401:
 5767 06e2 F1E6     		b	.L332
 5768              	.LVL402:
 5769              	.L459:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5770              		.loc 1 2953 0
 5771 06e4 8026     		movs	r6, #128
 5772 06e6 F603     		lsls	r6, r6, #15
 5773 06e8 0027     		movs	r7, #0
 5774 06ea F1E7     		b	.L341
 5775              	.L460:
 5776 06ec 8026     		movs	r6, #128
 5777 06ee B603     		lsls	r6, r6, #14
 5778 06f0 0027     		movs	r7, #0
 5779 06f2 EDE7     		b	.L341
ARM GAS  /tmp/ccxOFv0R.s 			page 186


 5780              	.L461:
 5781 06f4 A74E     		ldr	r6, .L603
 5782 06f6 0027     		movs	r7, #0
 5783 06f8 EAE7     		b	.L341
 5784              	.L462:
 5785 06fa 8026     		movs	r6, #128
 5786 06fc 7603     		lsls	r6, r6, #13
 5787 06fe 0027     		movs	r7, #0
 5788 0700 E6E7     		b	.L341
 5789              	.L463:
 5790 0702 A54E     		ldr	r6, .L603+4
 5791 0704 0027     		movs	r7, #0
 5792 0706 E3E7     		b	.L341
 5793              	.L464:
 5794 0708 A44E     		ldr	r6, .L603+8
 5795 070a 0027     		movs	r7, #0
 5796 070c E0E7     		b	.L341
 5797              	.L465:
 5798 070e 8026     		movs	r6, #128
 5799 0710 3603     		lsls	r6, r6, #12
 5800 0712 0027     		movs	r7, #0
 5801 0714 DCE7     		b	.L341
 5802              	.L466:
 5803 0716 8026     		movs	r6, #128
 5804 0718 F602     		lsls	r6, r6, #11
 5805 071a 0027     		movs	r7, #0
 5806 071c D8E7     		b	.L341
 5807              	.L467:
 5808 071e 8026     		movs	r6, #128
 5809 0720 B602     		lsls	r6, r6, #10
 5810 0722 0027     		movs	r7, #0
 5811 0724 D4E7     		b	.L341
 5812              	.L468:
 5813 0726 8026     		movs	r6, #128
 5814 0728 7602     		lsls	r6, r6, #9
 5815 072a 0027     		movs	r7, #0
 5816 072c D0E7     		b	.L341
 5817              	.L421:
2956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             break;
 5818              		.loc 1 2956 0
 5819 072e 0120     		movs	r0, #1
 5820              	.LVL403:
2843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 5821              		.loc 1 2843 0
 5822 0730 0022     		movs	r2, #0
 5823 0732 C9E6     		b	.L332
 5824              	.LVL404:
 5825              	.L576:
2975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 5826              		.loc 1 2975 0
 5827 0734 022D     		cmp	r5, #2
 5828 0736 00D1     		bne	.LCB5343
 5829 0738 82E0     		b	.L344	@long jump
 5830              	.LCB5343:
 5831 073a 2DD9     		bls	.L591
 5832 073c 042D     		cmp	r5, #4
 5833 073e 00D1     		bne	.LCB5347
ARM GAS  /tmp/ccxOFv0R.s 			page 187


 5834 0740 BAE0     		b	.L347	@long jump
 5835              	.LCB5347:
 5836 0742 082D     		cmp	r5, #8
 5837 0744 00D0     		beq	.LCB5349
 5838 0746 22E1     		b	.L471	@long jump
 5839              	.LCB5349:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5840              		.loc 1 2989 0
 5841 0748 636A     		ldr	r3, [r4, #36]
 5842 074a 002B     		cmp	r3, #0
 5843 074c 00D1     		bne	.LCB5352
 5844 074e F7E0     		b	.L508	@long jump
 5845              	.LCB5352:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5846              		.loc 1 2989 0 is_stmt 0 discriminator 1
 5847 0750 012B     		cmp	r3, #1
 5848 0752 00D1     		bne	.LCB5354
 5849 0754 00E1     		b	.L509	@long jump
 5850              	.LCB5354:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5851              		.loc 1 2989 0 discriminator 3
 5852 0756 022B     		cmp	r3, #2
 5853 0758 00D1     		bne	.LCB5356
 5854 075a 00E1     		b	.L510	@long jump
 5855              	.LCB5356:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5856              		.loc 1 2989 0 discriminator 5
 5857 075c 032B     		cmp	r3, #3
 5858 075e 00D1     		bne	.LCB5358
 5859 0760 00E1     		b	.L511	@long jump
 5860              	.LCB5358:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5861              		.loc 1 2989 0 discriminator 7
 5862 0762 042B     		cmp	r3, #4
 5863 0764 00D1     		bne	.LCB5360
 5864 0766 FFE0     		b	.L512	@long jump
 5865              	.LCB5360:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5866              		.loc 1 2989 0 discriminator 9
 5867 0768 052B     		cmp	r3, #5
 5868 076a 00D1     		bne	.LCB5362
 5869 076c FFE0     		b	.L513	@long jump
 5870              	.LCB5362:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5871              		.loc 1 2989 0 discriminator 11
 5872 076e 062B     		cmp	r3, #6
 5873 0770 00D1     		bne	.LCB5364
 5874 0772 FEE0     		b	.L514	@long jump
 5875              	.LCB5364:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5876              		.loc 1 2989 0 discriminator 13
 5877 0774 072B     		cmp	r3, #7
 5878 0776 00D1     		bne	.LCB5366
 5879 0778 FDE0     		b	.L515	@long jump
 5880              	.LCB5366:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5881              		.loc 1 2989 0 discriminator 15
ARM GAS  /tmp/ccxOFv0R.s 			page 188


 5882 077a 082B     		cmp	r3, #8
 5883 077c 00D1     		bne	.LCB5368
 5884 077e FDE0     		b	.L516	@long jump
 5885              	.LCB5368:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5886              		.loc 1 2989 0 discriminator 17
 5887 0780 092B     		cmp	r3, #9
 5888 0782 00D1     		bne	.LCB5370
 5889 0784 FDE0     		b	.L517	@long jump
 5890              	.LCB5370:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5891              		.loc 1 2989 0 discriminator 19
 5892 0786 0A2B     		cmp	r3, #10
 5893 0788 00D1     		bne	.LCB5372
 5894 078a FDE0     		b	.L518	@long jump
 5895              	.LCB5372:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5896              		.loc 1 2989 0 discriminator 21
 5897 078c 0B2B     		cmp	r3, #11
 5898 078e 00D1     		bne	.LCB5374
 5899 0790 D4E0     		b	.L592	@long jump
 5900              	.LCB5374:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5901              		.loc 1 2989 0
 5902 0792 8023     		movs	r3, #128
 5903 0794 5B02     		lsls	r3, r3, #9
 5904 0796 D5E0     		b	.L352
 5905              	.L591:
2975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 5906              		.loc 1 2975 0 is_stmt 1
 5907 0798 002D     		cmp	r5, #0
 5908 079a 00D0     		beq	.LCB5383
 5909 079c F7E0     		b	.L471	@long jump
 5910              	.LCB5383:
2978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
 5911              		.loc 1 2978 0
 5912 079e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5913              	.LVL405:
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5914              		.loc 1 2979 0
 5915 07a2 636A     		ldr	r3, [r4, #36]
 5916 07a4 002B     		cmp	r3, #0
 5917 07a6 1AD0     		beq	.L472
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5918              		.loc 1 2979 0 is_stmt 0 discriminator 1
 5919 07a8 012B     		cmp	r3, #1
 5920 07aa 35D0     		beq	.L473
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5921              		.loc 1 2979 0 discriminator 3
 5922 07ac 022B     		cmp	r3, #2
 5923 07ae 35D0     		beq	.L474
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5924              		.loc 1 2979 0 discriminator 5
 5925 07b0 032B     		cmp	r3, #3
 5926 07b2 35D0     		beq	.L475
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5927              		.loc 1 2979 0 discriminator 7
ARM GAS  /tmp/ccxOFv0R.s 			page 189


 5928 07b4 042B     		cmp	r3, #4
 5929 07b6 35D0     		beq	.L476
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5930              		.loc 1 2979 0 discriminator 9
 5931 07b8 052B     		cmp	r3, #5
 5932 07ba 35D0     		beq	.L477
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5933              		.loc 1 2979 0 discriminator 11
 5934 07bc 062B     		cmp	r3, #6
 5935 07be 35D0     		beq	.L478
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5936              		.loc 1 2979 0 discriminator 13
 5937 07c0 072B     		cmp	r3, #7
 5938 07c2 35D0     		beq	.L479
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5939              		.loc 1 2979 0 discriminator 15
 5940 07c4 082B     		cmp	r3, #8
 5941 07c6 35D0     		beq	.L480
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5942              		.loc 1 2979 0 discriminator 17
 5943 07c8 092B     		cmp	r3, #9
 5944 07ca 35D0     		beq	.L481
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5945              		.loc 1 2979 0 discriminator 19
 5946 07cc 0A2B     		cmp	r3, #10
 5947 07ce 35D0     		beq	.L482
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5948              		.loc 1 2979 0 discriminator 21
 5949 07d0 0B2B     		cmp	r3, #11
 5950 07d2 01D0     		beq	.L593
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5951              		.loc 1 2979 0
 5952 07d4 0121     		movs	r1, #1
 5953 07d6 03E0     		b	.L349
 5954              	.L593:
 5955 07d8 8021     		movs	r1, #128
 5956 07da 4900     		lsls	r1, r1, #1
 5957 07dc 00E0     		b	.L349
 5958              	.L472:
 5959 07de 0121     		movs	r1, #1
 5960              	.L349:
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 5961              		.loc 1 2979 0 discriminator 48
 5962 07e0 FFF7FEFF 		bl	__aeabi_uidiv
 5963              	.LVL406:
 5964 07e4 4000     		lsls	r0, r0, #1
 5965 07e6 6368     		ldr	r3, [r4, #4]
 5966 07e8 5B08     		lsrs	r3, r3, #1
 5967 07ea C018     		adds	r0, r0, r3
 5968 07ec 6168     		ldr	r1, [r4, #4]
 5969 07ee FFF7FEFF 		bl	__aeabi_uidiv
 5970              	.LVL407:
 5971 07f2 0304     		lsls	r3, r0, #16
 5972 07f4 1B0C     		lsrs	r3, r3, #16
 5973              	.LVL408:
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5974              		.loc 1 2844 0 is_stmt 1 discriminator 48
ARM GAS  /tmp/ccxOFv0R.s 			page 190


 5975 07f6 0020     		movs	r0, #0
 5976              	.LVL409:
 5977              	.L343:
2997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 5978              		.loc 1 2997 0
 5979 07f8 6949     		ldr	r1, .L603+12
 5980 07fa 1A00     		movs	r2, r3
 5981 07fc 103A     		subs	r2, r2, #16
 5982 07fe 8A42     		cmp	r2, r1
 5983 0800 00D9     		bls	.LCB5452
 5984 0802 F4E1     		b	.L520	@long jump
 5985              	.LCB5452:
2999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 5986              		.loc 1 2999 0
 5987 0804 0F22     		movs	r2, #15
 5988 0806 1900     		movs	r1, r3
 5989 0808 9143     		bics	r1, r2
 5990              	.LVL410:
3000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 5991              		.loc 1 3000 0
 5992 080a 5B08     		lsrs	r3, r3, #1
 5993              	.LVL411:
 5994 080c 083A     		subs	r2, r2, #8
 5995 080e 1340     		ands	r3, r2
 5996 0810 0B43     		orrs	r3, r1
 5997              	.LVL412:
3001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 5998              		.loc 1 3001 0
 5999 0812 2268     		ldr	r2, [r4]
 6000 0814 D360     		str	r3, [r2, #12]
 6001 0816 1AE1     		b	.L323
 6002              	.LVL413:
 6003              	.L473:
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6004              		.loc 1 2979 0
 6005 0818 0221     		movs	r1, #2
 6006 081a E1E7     		b	.L349
 6007              	.L474:
 6008 081c 0421     		movs	r1, #4
 6009 081e DFE7     		b	.L349
 6010              	.L475:
 6011 0820 0621     		movs	r1, #6
 6012 0822 DDE7     		b	.L349
 6013              	.L476:
 6014 0824 0821     		movs	r1, #8
 6015 0826 DBE7     		b	.L349
 6016              	.L477:
 6017 0828 0A21     		movs	r1, #10
 6018 082a D9E7     		b	.L349
 6019              	.L478:
 6020 082c 0C21     		movs	r1, #12
 6021 082e D7E7     		b	.L349
 6022              	.L479:
 6023 0830 1021     		movs	r1, #16
 6024 0832 D5E7     		b	.L349
 6025              	.L480:
 6026 0834 2021     		movs	r1, #32
ARM GAS  /tmp/ccxOFv0R.s 			page 191


 6027 0836 D3E7     		b	.L349
 6028              	.L481:
 6029 0838 4021     		movs	r1, #64
 6030 083a D1E7     		b	.L349
 6031              	.L482:
 6032 083c 8021     		movs	r1, #128
 6033 083e CFE7     		b	.L349
 6034              	.LVL414:
 6035              	.L344:
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6036              		.loc 1 2982 0
 6037 0840 636A     		ldr	r3, [r4, #36]
 6038 0842 002B     		cmp	r3, #0
 6039 0844 19D0     		beq	.L484
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6040              		.loc 1 2982 0 is_stmt 0 discriminator 1
 6041 0846 012B     		cmp	r3, #1
 6042 0848 22D0     		beq	.L485
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6043              		.loc 1 2982 0 discriminator 3
 6044 084a 022B     		cmp	r3, #2
 6045 084c 22D0     		beq	.L486
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6046              		.loc 1 2982 0 discriminator 5
 6047 084e 032B     		cmp	r3, #3
 6048 0850 22D0     		beq	.L487
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6049              		.loc 1 2982 0 discriminator 7
 6050 0852 042B     		cmp	r3, #4
 6051 0854 22D0     		beq	.L488
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6052              		.loc 1 2982 0 discriminator 9
 6053 0856 052B     		cmp	r3, #5
 6054 0858 22D0     		beq	.L489
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6055              		.loc 1 2982 0 discriminator 11
 6056 085a 062B     		cmp	r3, #6
 6057 085c 22D0     		beq	.L490
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6058              		.loc 1 2982 0 discriminator 13
 6059 085e 072B     		cmp	r3, #7
 6060 0860 22D0     		beq	.L491
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6061              		.loc 1 2982 0 discriminator 15
 6062 0862 082B     		cmp	r3, #8
 6063 0864 22D0     		beq	.L492
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6064              		.loc 1 2982 0 discriminator 17
 6065 0866 092B     		cmp	r3, #9
 6066 0868 22D0     		beq	.L493
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6067              		.loc 1 2982 0 discriminator 19
 6068 086a 0A2B     		cmp	r3, #10
 6069 086c 22D0     		beq	.L494
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6070              		.loc 1 2982 0 discriminator 21
 6071 086e 0B2B     		cmp	r3, #11
ARM GAS  /tmp/ccxOFv0R.s 			page 192


 6072 0870 01D0     		beq	.L594
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6073              		.loc 1 2982 0
 6074 0872 4C4B     		ldr	r3, .L603+16
 6075 0874 02E0     		b	.L350
 6076              	.L594:
 6077 0876 4C4B     		ldr	r3, .L603+20
 6078 0878 00E0     		b	.L350
 6079              	.L484:
 6080 087a 4A4B     		ldr	r3, .L603+16
 6081              	.L350:
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6082              		.loc 1 2982 0 discriminator 48
 6083 087c 6268     		ldr	r2, [r4, #4]
 6084 087e 5008     		lsrs	r0, r2, #1
 6085 0880 C018     		adds	r0, r0, r3
 6086 0882 1100     		movs	r1, r2
 6087 0884 FFF7FEFF 		bl	__aeabi_uidiv
 6088              	.LVL415:
 6089 0888 0304     		lsls	r3, r0, #16
 6090 088a 1B0C     		lsrs	r3, r3, #16
 6091              	.LVL416:
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 6092              		.loc 1 2844 0 is_stmt 1 discriminator 48
 6093 088c 0020     		movs	r0, #0
2983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 6094              		.loc 1 2983 0 discriminator 48
 6095 088e B3E7     		b	.L343
 6096              	.LVL417:
 6097              	.L485:
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6098              		.loc 1 2982 0
 6099 0890 464B     		ldr	r3, .L603+24
 6100 0892 F3E7     		b	.L350
 6101              	.L486:
 6102 0894 464B     		ldr	r3, .L603+28
 6103 0896 F1E7     		b	.L350
 6104              	.L487:
 6105 0898 464B     		ldr	r3, .L603+32
 6106 089a EFE7     		b	.L350
 6107              	.L488:
 6108 089c 464B     		ldr	r3, .L603+36
 6109 089e EDE7     		b	.L350
 6110              	.L489:
 6111 08a0 464B     		ldr	r3, .L603+40
 6112 08a2 EBE7     		b	.L350
 6113              	.L490:
 6114 08a4 464B     		ldr	r3, .L603+44
 6115 08a6 E9E7     		b	.L350
 6116              	.L491:
 6117 08a8 464B     		ldr	r3, .L603+48
 6118 08aa E7E7     		b	.L350
 6119              	.L492:
 6120 08ac 464B     		ldr	r3, .L603+52
 6121 08ae E5E7     		b	.L350
 6122              	.L493:
 6123 08b0 464B     		ldr	r3, .L603+56
ARM GAS  /tmp/ccxOFv0R.s 			page 193


 6124 08b2 E3E7     		b	.L350
 6125              	.L494:
 6126 08b4 464B     		ldr	r3, .L603+60
 6127 08b6 E1E7     		b	.L350
 6128              	.L347:
2985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
 6129              		.loc 1 2985 0
 6130 08b8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 6131              	.LVL418:
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6132              		.loc 1 2986 0
 6133 08bc 636A     		ldr	r3, [r4, #36]
 6134 08be 002B     		cmp	r3, #0
 6135 08c0 1AD0     		beq	.L496
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6136              		.loc 1 2986 0 is_stmt 0 discriminator 1
 6137 08c2 012B     		cmp	r3, #1
 6138 08c4 26D0     		beq	.L497
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6139              		.loc 1 2986 0 discriminator 3
 6140 08c6 022B     		cmp	r3, #2
 6141 08c8 26D0     		beq	.L498
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6142              		.loc 1 2986 0 discriminator 5
 6143 08ca 032B     		cmp	r3, #3
 6144 08cc 26D0     		beq	.L499
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6145              		.loc 1 2986 0 discriminator 7
 6146 08ce 042B     		cmp	r3, #4
 6147 08d0 26D0     		beq	.L500
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6148              		.loc 1 2986 0 discriminator 9
 6149 08d2 052B     		cmp	r3, #5
 6150 08d4 26D0     		beq	.L501
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6151              		.loc 1 2986 0 discriminator 11
 6152 08d6 062B     		cmp	r3, #6
 6153 08d8 26D0     		beq	.L502
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6154              		.loc 1 2986 0 discriminator 13
 6155 08da 072B     		cmp	r3, #7
 6156 08dc 26D0     		beq	.L503
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6157              		.loc 1 2986 0 discriminator 15
 6158 08de 082B     		cmp	r3, #8
 6159 08e0 26D0     		beq	.L504
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6160              		.loc 1 2986 0 discriminator 17
 6161 08e2 092B     		cmp	r3, #9
 6162 08e4 26D0     		beq	.L505
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6163              		.loc 1 2986 0 discriminator 19
 6164 08e6 0A2B     		cmp	r3, #10
 6165 08e8 26D0     		beq	.L506
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6166              		.loc 1 2986 0 discriminator 21
 6167 08ea 0B2B     		cmp	r3, #11
ARM GAS  /tmp/ccxOFv0R.s 			page 194


 6168 08ec 01D0     		beq	.L595
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6169              		.loc 1 2986 0
 6170 08ee 0121     		movs	r1, #1
 6171 08f0 03E0     		b	.L351
 6172              	.L595:
 6173 08f2 8021     		movs	r1, #128
 6174 08f4 4900     		lsls	r1, r1, #1
 6175 08f6 00E0     		b	.L351
 6176              	.L496:
 6177 08f8 0121     		movs	r1, #1
 6178              	.L351:
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6179              		.loc 1 2986 0 discriminator 48
 6180 08fa FFF7FEFF 		bl	__aeabi_uidiv
 6181              	.LVL419:
 6182 08fe 4000     		lsls	r0, r0, #1
 6183 0900 6368     		ldr	r3, [r4, #4]
 6184 0902 5B08     		lsrs	r3, r3, #1
 6185 0904 C018     		adds	r0, r0, r3
 6186 0906 6168     		ldr	r1, [r4, #4]
 6187 0908 FFF7FEFF 		bl	__aeabi_uidiv
 6188              	.LVL420:
 6189 090c 0304     		lsls	r3, r0, #16
 6190 090e 1B0C     		lsrs	r3, r3, #16
 6191              	.LVL421:
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 6192              		.loc 1 2844 0 is_stmt 1 discriminator 48
 6193 0910 0020     		movs	r0, #0
2987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 6194              		.loc 1 2987 0 discriminator 48
 6195 0912 71E7     		b	.L343
 6196              	.LVL422:
 6197              	.L497:
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6198              		.loc 1 2986 0
 6199 0914 0221     		movs	r1, #2
 6200 0916 F0E7     		b	.L351
 6201              	.L498:
 6202 0918 0421     		movs	r1, #4
 6203 091a EEE7     		b	.L351
 6204              	.L499:
 6205 091c 0621     		movs	r1, #6
 6206 091e ECE7     		b	.L351
 6207              	.L500:
 6208 0920 0821     		movs	r1, #8
 6209 0922 EAE7     		b	.L351
 6210              	.L501:
 6211 0924 0A21     		movs	r1, #10
 6212 0926 E8E7     		b	.L351
 6213              	.L502:
 6214 0928 0C21     		movs	r1, #12
 6215 092a E6E7     		b	.L351
 6216              	.L503:
 6217 092c 1021     		movs	r1, #16
 6218 092e E4E7     		b	.L351
 6219              	.L504:
ARM GAS  /tmp/ccxOFv0R.s 			page 195


 6220 0930 2021     		movs	r1, #32
 6221 0932 E2E7     		b	.L351
 6222              	.L505:
 6223 0934 4021     		movs	r1, #64
 6224 0936 E0E7     		b	.L351
 6225              	.L506:
 6226 0938 8021     		movs	r1, #128
 6227 093a DEE7     		b	.L351
 6228              	.LVL423:
 6229              	.L592:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6230              		.loc 1 2989 0
 6231 093c F533     		adds	r3, r3, #245
 6232 093e 01E0     		b	.L352
 6233              	.L508:
 6234 0940 8023     		movs	r3, #128
 6235 0942 5B02     		lsls	r3, r3, #9
 6236              	.L352:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6237              		.loc 1 2989 0 is_stmt 0 discriminator 48
 6238 0944 6268     		ldr	r2, [r4, #4]
 6239 0946 5008     		lsrs	r0, r2, #1
 6240 0948 C018     		adds	r0, r0, r3
 6241 094a 1100     		movs	r1, r2
 6242 094c FFF7FEFF 		bl	__aeabi_uidiv
 6243              	.LVL424:
 6244 0950 0304     		lsls	r3, r0, #16
 6245 0952 1B0C     		lsrs	r3, r3, #16
 6246              	.LVL425:
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 6247              		.loc 1 2844 0 is_stmt 1 discriminator 48
 6248 0954 0020     		movs	r0, #0
2990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default:
 6249              		.loc 1 2990 0 discriminator 48
 6250 0956 4FE7     		b	.L343
 6251              	.LVL426:
 6252              	.L509:
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6253              		.loc 1 2989 0
 6254 0958 8023     		movs	r3, #128
 6255 095a 1B02     		lsls	r3, r3, #8
 6256 095c F2E7     		b	.L352
 6257              	.L510:
 6258 095e 8023     		movs	r3, #128
 6259 0960 DB01     		lsls	r3, r3, #7
 6260 0962 EFE7     		b	.L352
 6261              	.L511:
 6262 0964 1B4B     		ldr	r3, .L603+64
 6263 0966 EDE7     		b	.L352
 6264              	.L512:
 6265 0968 8023     		movs	r3, #128
 6266 096a 9B01     		lsls	r3, r3, #6
 6267 096c EAE7     		b	.L352
 6268              	.L513:
 6269 096e 1A4B     		ldr	r3, .L603+68
 6270 0970 E8E7     		b	.L352
 6271              	.L514:
ARM GAS  /tmp/ccxOFv0R.s 			page 196


 6272 0972 1A4B     		ldr	r3, .L603+72
 6273 0974 E6E7     		b	.L352
 6274              	.L515:
 6275 0976 8023     		movs	r3, #128
 6276 0978 5B01     		lsls	r3, r3, #5
 6277 097a E3E7     		b	.L352
 6278              	.L516:
 6279 097c 8023     		movs	r3, #128
 6280 097e 1B01     		lsls	r3, r3, #4
 6281 0980 E0E7     		b	.L352
 6282              	.L517:
 6283 0982 8023     		movs	r3, #128
 6284 0984 DB00     		lsls	r3, r3, #3
 6285 0986 DDE7     		b	.L352
 6286              	.L518:
 6287 0988 8023     		movs	r3, #128
 6288 098a 9B00     		lsls	r3, r3, #2
 6289 098c DAE7     		b	.L352
 6290              	.L471:
2992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6291              		.loc 1 2992 0
 6292 098e 0120     		movs	r0, #1
2843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 6293              		.loc 1 2843 0
 6294 0990 0023     		movs	r3, #0
 6295 0992 31E7     		b	.L343
 6296              	.L604:
 6297              		.align	2
 6298              	.L603:
 6299 0994 00551500 		.word	1398016
 6300 0998 00CC0C00 		.word	838656
 6301 099c 00AA0A00 		.word	698880
 6302 09a0 EFFF0000 		.word	65519
 6303 09a4 0048E801 		.word	32000000
 6304 09a8 48E80100 		.word	125000
 6305 09ac 0024F400 		.word	16000000
 6306 09b0 00127A00 		.word	8000000
 6307 09b4 54615100 		.word	5333332
 6308 09b8 00093D00 		.word	4000000
 6309 09bc 00D43000 		.word	3200000
 6310 09c0 AAB02800 		.word	2666666
 6311 09c4 80841E00 		.word	2000000
 6312 09c8 40420F00 		.word	1000000
 6313 09cc 20A10700 		.word	500000
 6314 09d0 90D00300 		.word	250000
 6315 09d4 AA2A0000 		.word	10922
 6316 09d8 98190000 		.word	6552
 6317 09dc 54150000 		.word	5460
 6318              	.L577:
3010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 6319              		.loc 1 3010 0
 6320 09e0 002D     		cmp	r5, #0
 6321 09e2 00D0     		beq	.LCB5867
 6322 09e4 F6E0     		b	.L521	@long jump
 6323              	.LCB5867:
3013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
 6324              		.loc 1 3013 0
ARM GAS  /tmp/ccxOFv0R.s 			page 197


 6325 09e6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6326              	.LVL427:
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6327              		.loc 1 3014 0
 6328 09ea 636A     		ldr	r3, [r4, #36]
 6329 09ec 002B     		cmp	r3, #0
 6330 09ee 1AD0     		beq	.L522
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6331              		.loc 1 3014 0 is_stmt 0 discriminator 1
 6332 09f0 012B     		cmp	r3, #1
 6333 09f2 35D0     		beq	.L523
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6334              		.loc 1 3014 0 discriminator 3
 6335 09f4 022B     		cmp	r3, #2
 6336 09f6 35D0     		beq	.L524
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6337              		.loc 1 3014 0 discriminator 5
 6338 09f8 032B     		cmp	r3, #3
 6339 09fa 35D0     		beq	.L525
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6340              		.loc 1 3014 0 discriminator 7
 6341 09fc 042B     		cmp	r3, #4
 6342 09fe 35D0     		beq	.L526
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6343              		.loc 1 3014 0 discriminator 9
 6344 0a00 052B     		cmp	r3, #5
 6345 0a02 35D0     		beq	.L527
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6346              		.loc 1 3014 0 discriminator 11
 6347 0a04 062B     		cmp	r3, #6
 6348 0a06 35D0     		beq	.L528
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6349              		.loc 1 3014 0 discriminator 13
 6350 0a08 072B     		cmp	r3, #7
 6351 0a0a 35D0     		beq	.L529
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6352              		.loc 1 3014 0 discriminator 15
 6353 0a0c 082B     		cmp	r3, #8
 6354 0a0e 35D0     		beq	.L530
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6355              		.loc 1 3014 0 discriminator 17
 6356 0a10 092B     		cmp	r3, #9
 6357 0a12 35D0     		beq	.L531
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6358              		.loc 1 3014 0 discriminator 19
 6359 0a14 0A2B     		cmp	r3, #10
 6360 0a16 35D0     		beq	.L532
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6361              		.loc 1 3014 0 discriminator 21
 6362 0a18 0B2B     		cmp	r3, #11
 6363 0a1a 01D0     		beq	.L596
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6364              		.loc 1 3014 0
 6365 0a1c 0121     		movs	r1, #1
 6366 0a1e 03E0     		b	.L359
 6367              	.L596:
 6368 0a20 8021     		movs	r1, #128
ARM GAS  /tmp/ccxOFv0R.s 			page 198


 6369 0a22 4900     		lsls	r1, r1, #1
 6370 0a24 00E0     		b	.L359
 6371              	.L522:
 6372 0a26 0121     		movs	r1, #1
 6373              	.L359:
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6374              		.loc 1 3014 0 discriminator 48
 6375 0a28 FFF7FEFF 		bl	__aeabi_uidiv
 6376              	.LVL428:
 6377 0a2c 6368     		ldr	r3, [r4, #4]
 6378 0a2e 5B08     		lsrs	r3, r3, #1
 6379 0a30 C018     		adds	r0, r0, r3
 6380 0a32 6168     		ldr	r1, [r4, #4]
 6381 0a34 FFF7FEFF 		bl	__aeabi_uidiv
 6382              	.LVL429:
 6383 0a38 0304     		lsls	r3, r0, #16
 6384 0a3a 1B0C     		lsrs	r3, r3, #16
 6385              	.LVL430:
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 6386              		.loc 1 2844 0 is_stmt 1 discriminator 48
 6387 0a3c 0020     		movs	r0, #0
 6388              	.LVL431:
 6389              	.L353:
3032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 6390              		.loc 1 3032 0
 6391 0a3e 6E49     		ldr	r1, .L605
 6392 0a40 1A00     		movs	r2, r3
 6393 0a42 103A     		subs	r2, r2, #16
 6394 0a44 8A42     		cmp	r2, r1
 6395 0a46 00D9     		bls	.LCB5935
 6396 0a48 D3E0     		b	.L570	@long jump
 6397              	.LCB5935:
3034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 6398              		.loc 1 3034 0
 6399 0a4a 2268     		ldr	r2, [r4]
 6400 0a4c D360     		str	r3, [r2, #12]
 6401              	.LVL432:
 6402              	.L323:
3043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
 6403              		.loc 1 3043 0
 6404 0a4e 0123     		movs	r3, #1
 6405 0a50 6A22     		movs	r2, #106
 6406 0a52 A352     		strh	r3, [r4, r2]
3044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 6407              		.loc 1 3044 0
 6408 0a54 023A     		subs	r2, r2, #2
 6409 0a56 A352     		strh	r3, [r4, r2]
3047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxISR = NULL;
 6410              		.loc 1 3047 0
 6411 0a58 0023     		movs	r3, #0
 6412 0a5a E366     		str	r3, [r4, #108]
3048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 6413              		.loc 1 3048 0
 6414 0a5c 2367     		str	r3, [r4, #112]
3051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 6415              		.loc 1 3051 0
 6416              		@ sp needed
ARM GAS  /tmp/ccxOFv0R.s 			page 199


 6417              	.LVL433:
 6418 0a5e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6419              	.LVL434:
 6420              	.L523:
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6421              		.loc 1 3014 0
 6422 0a60 0221     		movs	r1, #2
 6423 0a62 E1E7     		b	.L359
 6424              	.L524:
 6425 0a64 0421     		movs	r1, #4
 6426 0a66 DFE7     		b	.L359
 6427              	.L525:
 6428 0a68 0621     		movs	r1, #6
 6429 0a6a DDE7     		b	.L359
 6430              	.L526:
 6431 0a6c 0821     		movs	r1, #8
 6432 0a6e DBE7     		b	.L359
 6433              	.L527:
 6434 0a70 0A21     		movs	r1, #10
 6435 0a72 D9E7     		b	.L359
 6436              	.L528:
 6437 0a74 0C21     		movs	r1, #12
 6438 0a76 D7E7     		b	.L359
 6439              	.L529:
 6440 0a78 1021     		movs	r1, #16
 6441 0a7a D5E7     		b	.L359
 6442              	.L530:
 6443 0a7c 2021     		movs	r1, #32
 6444 0a7e D3E7     		b	.L359
 6445              	.L531:
 6446 0a80 4021     		movs	r1, #64
 6447 0a82 D1E7     		b	.L359
 6448              	.L532:
 6449 0a84 8021     		movs	r1, #128
 6450 0a86 CFE7     		b	.L359
 6451              	.LVL435:
 6452              	.L354:
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6453              		.loc 1 3017 0
 6454 0a88 636A     		ldr	r3, [r4, #36]
 6455 0a8a 002B     		cmp	r3, #0
 6456 0a8c 19D0     		beq	.L534
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6457              		.loc 1 3017 0 is_stmt 0 discriminator 1
 6458 0a8e 012B     		cmp	r3, #1
 6459 0a90 22D0     		beq	.L535
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6460              		.loc 1 3017 0 discriminator 3
 6461 0a92 022B     		cmp	r3, #2
 6462 0a94 22D0     		beq	.L536
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6463              		.loc 1 3017 0 discriminator 5
 6464 0a96 032B     		cmp	r3, #3
 6465 0a98 22D0     		beq	.L537
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6466              		.loc 1 3017 0 discriminator 7
 6467 0a9a 042B     		cmp	r3, #4
ARM GAS  /tmp/ccxOFv0R.s 			page 200


 6468 0a9c 22D0     		beq	.L538
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6469              		.loc 1 3017 0 discriminator 9
 6470 0a9e 052B     		cmp	r3, #5
 6471 0aa0 22D0     		beq	.L539
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6472              		.loc 1 3017 0 discriminator 11
 6473 0aa2 062B     		cmp	r3, #6
 6474 0aa4 22D0     		beq	.L540
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6475              		.loc 1 3017 0 discriminator 13
 6476 0aa6 072B     		cmp	r3, #7
 6477 0aa8 22D0     		beq	.L541
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6478              		.loc 1 3017 0 discriminator 15
 6479 0aaa 082B     		cmp	r3, #8
 6480 0aac 22D0     		beq	.L542
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6481              		.loc 1 3017 0 discriminator 17
 6482 0aae 092B     		cmp	r3, #9
 6483 0ab0 22D0     		beq	.L543
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6484              		.loc 1 3017 0 discriminator 19
 6485 0ab2 0A2B     		cmp	r3, #10
 6486 0ab4 22D0     		beq	.L544
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6487              		.loc 1 3017 0 discriminator 21
 6488 0ab6 0B2B     		cmp	r3, #11
 6489 0ab8 01D0     		beq	.L597
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6490              		.loc 1 3017 0
 6491 0aba 504B     		ldr	r3, .L605+4
 6492 0abc 02E0     		b	.L360
 6493              	.L597:
 6494 0abe 504B     		ldr	r3, .L605+8
 6495 0ac0 00E0     		b	.L360
 6496              	.L534:
 6497 0ac2 4E4B     		ldr	r3, .L605+4
 6498              	.L360:
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6499              		.loc 1 3017 0 discriminator 48
 6500 0ac4 6268     		ldr	r2, [r4, #4]
 6501 0ac6 5008     		lsrs	r0, r2, #1
 6502 0ac8 C018     		adds	r0, r0, r3
 6503 0aca 1100     		movs	r1, r2
 6504 0acc FFF7FEFF 		bl	__aeabi_uidiv
 6505              	.LVL436:
 6506 0ad0 0304     		lsls	r3, r0, #16
 6507 0ad2 1B0C     		lsrs	r3, r3, #16
 6508              	.LVL437:
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 6509              		.loc 1 2844 0 is_stmt 1 discriminator 48
 6510 0ad4 0020     		movs	r0, #0
3018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 6511              		.loc 1 3018 0 discriminator 48
 6512 0ad6 B2E7     		b	.L353
 6513              	.LVL438:
ARM GAS  /tmp/ccxOFv0R.s 			page 201


 6514              	.L535:
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6515              		.loc 1 3017 0
 6516 0ad8 4A4B     		ldr	r3, .L605+12
 6517 0ada F3E7     		b	.L360
 6518              	.L536:
 6519 0adc 4A4B     		ldr	r3, .L605+16
 6520 0ade F1E7     		b	.L360
 6521              	.L537:
 6522 0ae0 4A4B     		ldr	r3, .L605+20
 6523 0ae2 EFE7     		b	.L360
 6524              	.L538:
 6525 0ae4 4A4B     		ldr	r3, .L605+24
 6526 0ae6 EDE7     		b	.L360
 6527              	.L539:
 6528 0ae8 4A4B     		ldr	r3, .L605+28
 6529 0aea EBE7     		b	.L360
 6530              	.L540:
 6531 0aec 4A4B     		ldr	r3, .L605+32
 6532 0aee E9E7     		b	.L360
 6533              	.L541:
 6534 0af0 4A4B     		ldr	r3, .L605+36
 6535 0af2 E7E7     		b	.L360
 6536              	.L542:
 6537 0af4 4A4B     		ldr	r3, .L605+40
 6538 0af6 E5E7     		b	.L360
 6539              	.L543:
 6540 0af8 4A4B     		ldr	r3, .L605+44
 6541 0afa E3E7     		b	.L360
 6542              	.L544:
 6543 0afc 4A4B     		ldr	r3, .L605+48
 6544 0afe E1E7     		b	.L360
 6545              	.L357:
3020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
 6546              		.loc 1 3020 0
 6547 0b00 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 6548              	.LVL439:
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6549              		.loc 1 3021 0
 6550 0b04 636A     		ldr	r3, [r4, #36]
 6551 0b06 002B     		cmp	r3, #0
 6552 0b08 1AD0     		beq	.L546
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6553              		.loc 1 3021 0 is_stmt 0 discriminator 1
 6554 0b0a 012B     		cmp	r3, #1
 6555 0b0c 25D0     		beq	.L547
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6556              		.loc 1 3021 0 discriminator 3
 6557 0b0e 022B     		cmp	r3, #2
 6558 0b10 25D0     		beq	.L548
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6559              		.loc 1 3021 0 discriminator 5
 6560 0b12 032B     		cmp	r3, #3
 6561 0b14 25D0     		beq	.L549
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6562              		.loc 1 3021 0 discriminator 7
 6563 0b16 042B     		cmp	r3, #4
ARM GAS  /tmp/ccxOFv0R.s 			page 202


 6564 0b18 25D0     		beq	.L550
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6565              		.loc 1 3021 0 discriminator 9
 6566 0b1a 052B     		cmp	r3, #5
 6567 0b1c 25D0     		beq	.L551
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6568              		.loc 1 3021 0 discriminator 11
 6569 0b1e 062B     		cmp	r3, #6
 6570 0b20 25D0     		beq	.L552
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6571              		.loc 1 3021 0 discriminator 13
 6572 0b22 072B     		cmp	r3, #7
 6573 0b24 25D0     		beq	.L553
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6574              		.loc 1 3021 0 discriminator 15
 6575 0b26 082B     		cmp	r3, #8
 6576 0b28 25D0     		beq	.L554
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6577              		.loc 1 3021 0 discriminator 17
 6578 0b2a 092B     		cmp	r3, #9
 6579 0b2c 25D0     		beq	.L555
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6580              		.loc 1 3021 0 discriminator 19
 6581 0b2e 0A2B     		cmp	r3, #10
 6582 0b30 25D0     		beq	.L556
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6583              		.loc 1 3021 0 discriminator 21
 6584 0b32 0B2B     		cmp	r3, #11
 6585 0b34 01D0     		beq	.L598
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6586              		.loc 1 3021 0
 6587 0b36 0121     		movs	r1, #1
 6588 0b38 03E0     		b	.L361
 6589              	.L598:
 6590 0b3a 8021     		movs	r1, #128
 6591 0b3c 4900     		lsls	r1, r1, #1
 6592 0b3e 00E0     		b	.L361
 6593              	.L546:
 6594 0b40 0121     		movs	r1, #1
 6595              	.L361:
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6596              		.loc 1 3021 0 discriminator 48
 6597 0b42 FFF7FEFF 		bl	__aeabi_uidiv
 6598              	.LVL440:
 6599 0b46 6368     		ldr	r3, [r4, #4]
 6600 0b48 5B08     		lsrs	r3, r3, #1
 6601 0b4a C018     		adds	r0, r0, r3
 6602 0b4c 6168     		ldr	r1, [r4, #4]
 6603 0b4e FFF7FEFF 		bl	__aeabi_uidiv
 6604              	.LVL441:
 6605 0b52 0304     		lsls	r3, r0, #16
 6606 0b54 1B0C     		lsrs	r3, r3, #16
 6607              	.LVL442:
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 6608              		.loc 1 2844 0 is_stmt 1 discriminator 48
 6609 0b56 0020     		movs	r0, #0
3022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
ARM GAS  /tmp/ccxOFv0R.s 			page 203


 6610              		.loc 1 3022 0 discriminator 48
 6611 0b58 71E7     		b	.L353
 6612              	.LVL443:
 6613              	.L547:
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6614              		.loc 1 3021 0
 6615 0b5a 0221     		movs	r1, #2
 6616 0b5c F1E7     		b	.L361
 6617              	.L548:
 6618 0b5e 0421     		movs	r1, #4
 6619 0b60 EFE7     		b	.L361
 6620              	.L549:
 6621 0b62 0621     		movs	r1, #6
 6622 0b64 EDE7     		b	.L361
 6623              	.L550:
 6624 0b66 0821     		movs	r1, #8
 6625 0b68 EBE7     		b	.L361
 6626              	.L551:
 6627 0b6a 0A21     		movs	r1, #10
 6628 0b6c E9E7     		b	.L361
 6629              	.L552:
 6630 0b6e 0C21     		movs	r1, #12
 6631 0b70 E7E7     		b	.L361
 6632              	.L553:
 6633 0b72 1021     		movs	r1, #16
 6634 0b74 E5E7     		b	.L361
 6635              	.L554:
 6636 0b76 2021     		movs	r1, #32
 6637 0b78 E3E7     		b	.L361
 6638              	.L555:
 6639 0b7a 4021     		movs	r1, #64
 6640 0b7c E1E7     		b	.L361
 6641              	.L556:
 6642 0b7e 8021     		movs	r1, #128
 6643 0b80 DFE7     		b	.L361
 6644              	.LVL444:
 6645              	.L578:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6646              		.loc 1 3024 0
 6647 0b82 7533     		adds	r3, r3, #117
 6648 0b84 01E0     		b	.L362
 6649              	.L558:
 6650 0b86 8023     		movs	r3, #128
 6651 0b88 1B02     		lsls	r3, r3, #8
 6652              	.L362:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6653              		.loc 1 3024 0 is_stmt 0 discriminator 48
 6654 0b8a 6268     		ldr	r2, [r4, #4]
 6655 0b8c 5008     		lsrs	r0, r2, #1
 6656 0b8e C018     		adds	r0, r0, r3
 6657 0b90 1100     		movs	r1, r2
 6658 0b92 FFF7FEFF 		bl	__aeabi_uidiv
 6659              	.LVL445:
 6660 0b96 0304     		lsls	r3, r0, #16
 6661 0b98 1B0C     		lsrs	r3, r3, #16
 6662              	.LVL446:
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
ARM GAS  /tmp/ccxOFv0R.s 			page 204


 6663              		.loc 1 2844 0 is_stmt 1 discriminator 48
 6664 0b9a 0020     		movs	r0, #0
3025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default:
 6665              		.loc 1 3025 0 discriminator 48
 6666 0b9c 4FE7     		b	.L353
 6667              	.LVL447:
 6668              	.L559:
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6669              		.loc 1 3024 0
 6670 0b9e 8023     		movs	r3, #128
 6671 0ba0 DB01     		lsls	r3, r3, #7
 6672 0ba2 F2E7     		b	.L362
 6673              	.L560:
 6674 0ba4 8023     		movs	r3, #128
 6675 0ba6 9B01     		lsls	r3, r3, #6
 6676 0ba8 EFE7     		b	.L362
 6677              	.L561:
 6678 0baa 204B     		ldr	r3, .L605+52
 6679 0bac EDE7     		b	.L362
 6680              	.L562:
 6681 0bae 8023     		movs	r3, #128
 6682 0bb0 5B01     		lsls	r3, r3, #5
 6683 0bb2 EAE7     		b	.L362
 6684              	.L563:
 6685 0bb4 1E4B     		ldr	r3, .L605+56
 6686 0bb6 E8E7     		b	.L362
 6687              	.L564:
 6688 0bb8 1E4B     		ldr	r3, .L605+60
 6689 0bba E6E7     		b	.L362
 6690              	.L565:
 6691 0bbc 8023     		movs	r3, #128
 6692 0bbe 1B01     		lsls	r3, r3, #4
 6693 0bc0 E3E7     		b	.L362
 6694              	.L566:
 6695 0bc2 8023     		movs	r3, #128
 6696 0bc4 DB00     		lsls	r3, r3, #3
 6697 0bc6 E0E7     		b	.L362
 6698              	.L567:
 6699 0bc8 8023     		movs	r3, #128
 6700 0bca 9B00     		lsls	r3, r3, #2
 6701 0bcc DDE7     		b	.L362
 6702              	.L568:
 6703 0bce 8023     		movs	r3, #128
 6704 0bd0 5B00     		lsls	r3, r3, #1
 6705 0bd2 DAE7     		b	.L362
 6706              	.L521:
3027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6707              		.loc 1 3027 0
 6708 0bd4 0120     		movs	r0, #1
2843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 6709              		.loc 1 2843 0
 6710 0bd6 0023     		movs	r3, #0
 6711 0bd8 31E7     		b	.L353
 6712              	.L369:
2924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 6713              		.loc 1 2924 0
 6714 0bda 0120     		movs	r0, #1
ARM GAS  /tmp/ccxOFv0R.s 			page 205


 6715 0bdc 37E7     		b	.L323
 6716              	.LVL448:
 6717              	.L418:
 6718 0bde 0020     		movs	r0, #0
 6719              	.LVL449:
 6720 0be0 35E7     		b	.L323
 6721              	.LVL450:
 6722              	.L419:
2935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 6723              		.loc 1 2935 0
 6724 0be2 0120     		movs	r0, #1
 6725              	.LVL451:
 6726 0be4 33E7     		b	.L323
 6727              	.LVL452:
 6728              	.L420:
 6729 0be6 0120     		movs	r0, #1
 6730              	.LVL453:
 6731 0be8 31E7     		b	.L323
 6732              	.LVL454:
 6733              	.L470:
2967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 6734              		.loc 1 2967 0
 6735 0bea 0120     		movs	r0, #1
 6736              	.LVL455:
 6737 0bec 2FE7     		b	.L323
 6738              	.LVL456:
 6739              	.L520:
3005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 6740              		.loc 1 3005 0
 6741 0bee 0120     		movs	r0, #1
 6742              	.LVL457:
 6743 0bf0 2DE7     		b	.L323
 6744              	.LVL458:
 6745              	.L570:
3038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 6746              		.loc 1 3038 0
 6747 0bf2 0120     		movs	r0, #1
 6748              	.LVL459:
 6749 0bf4 2BE7     		b	.L323
 6750              	.L606:
 6751 0bf6 C046     		.align	2
 6752              	.L605:
 6753 0bf8 EFFF0000 		.word	65519
 6754 0bfc 0024F400 		.word	16000000
 6755 0c00 24F40000 		.word	62500
 6756 0c04 00127A00 		.word	8000000
 6757 0c08 00093D00 		.word	4000000
 6758 0c0c AAB02800 		.word	2666666
 6759 0c10 80841E00 		.word	2000000
 6760 0c14 006A1800 		.word	1600000
 6761 0c18 55581400 		.word	1333333
 6762 0c1c 40420F00 		.word	1000000
 6763 0c20 20A10700 		.word	500000
 6764 0c24 90D00300 		.word	250000
 6765 0c28 48E80100 		.word	125000
 6766 0c2c 55150000 		.word	5461
 6767 0c30 CC0C0000 		.word	3276
ARM GAS  /tmp/ccxOFv0R.s 			page 206


 6768 0c34 AA0A0000 		.word	2730
 6769              		.cfi_endproc
 6770              	.LFE212:
 6772              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 6773              		.align	1
 6774              		.global	UART_AdvFeatureConfig
 6775              		.syntax unified
 6776              		.code	16
 6777              		.thumb_func
 6778              		.fpu softvfp
 6780              	UART_AdvFeatureConfig:
 6781              	.LFB213:
3059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 6782              		.loc 1 3059 0
 6783              		.cfi_startproc
 6784              		@ args = 0, pretend = 0, frame = 0
 6785              		@ frame_needed = 0, uses_anonymous_args = 0
 6786              		@ link register save eliminated.
 6787              	.LVL460:
3064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 6788              		.loc 1 3064 0
 6789 0000 836A     		ldr	r3, [r0, #40]
 6790 0002 DB07     		lsls	r3, r3, #31
 6791 0004 06D5     		bpl	.L608
3067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 6792              		.loc 1 3067 0
 6793 0006 0268     		ldr	r2, [r0]
 6794 0008 5368     		ldr	r3, [r2, #4]
 6795 000a 2C49     		ldr	r1, .L617
 6796 000c 0B40     		ands	r3, r1
 6797 000e C16A     		ldr	r1, [r0, #44]
 6798 0010 0B43     		orrs	r3, r1
 6799 0012 5360     		str	r3, [r2, #4]
 6800              	.L608:
3071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 6801              		.loc 1 3071 0
 6802 0014 836A     		ldr	r3, [r0, #40]
 6803 0016 9B07     		lsls	r3, r3, #30
 6804 0018 06D5     		bpl	.L609
3074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 6805              		.loc 1 3074 0
 6806 001a 0268     		ldr	r2, [r0]
 6807 001c 5368     		ldr	r3, [r2, #4]
 6808 001e 2849     		ldr	r1, .L617+4
 6809 0020 0B40     		ands	r3, r1
 6810 0022 016B     		ldr	r1, [r0, #48]
 6811 0024 0B43     		orrs	r3, r1
 6812 0026 5360     		str	r3, [r2, #4]
 6813              	.L609:
3078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 6814              		.loc 1 3078 0
 6815 0028 836A     		ldr	r3, [r0, #40]
 6816 002a 5B07     		lsls	r3, r3, #29
 6817 002c 06D5     		bpl	.L610
3081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 6818              		.loc 1 3081 0
 6819 002e 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccxOFv0R.s 			page 207


 6820 0030 5368     		ldr	r3, [r2, #4]
 6821 0032 2449     		ldr	r1, .L617+8
 6822 0034 0B40     		ands	r3, r1
 6823 0036 416B     		ldr	r1, [r0, #52]
 6824 0038 0B43     		orrs	r3, r1
 6825 003a 5360     		str	r3, [r2, #4]
 6826              	.L610:
3085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 6827              		.loc 1 3085 0
 6828 003c 836A     		ldr	r3, [r0, #40]
 6829 003e 1B07     		lsls	r3, r3, #28
 6830 0040 06D5     		bpl	.L611
3088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 6831              		.loc 1 3088 0
 6832 0042 0268     		ldr	r2, [r0]
 6833 0044 5368     		ldr	r3, [r2, #4]
 6834 0046 2049     		ldr	r1, .L617+12
 6835 0048 0B40     		ands	r3, r1
 6836 004a 816B     		ldr	r1, [r0, #56]
 6837 004c 0B43     		orrs	r3, r1
 6838 004e 5360     		str	r3, [r2, #4]
 6839              	.L611:
3092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 6840              		.loc 1 3092 0
 6841 0050 836A     		ldr	r3, [r0, #40]
 6842 0052 DB06     		lsls	r3, r3, #27
 6843 0054 06D5     		bpl	.L612
3095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 6844              		.loc 1 3095 0
 6845 0056 0268     		ldr	r2, [r0]
 6846 0058 9368     		ldr	r3, [r2, #8]
 6847 005a 1C49     		ldr	r1, .L617+16
 6848 005c 0B40     		ands	r3, r1
 6849 005e C16B     		ldr	r1, [r0, #60]
 6850 0060 0B43     		orrs	r3, r1
 6851 0062 9360     		str	r3, [r2, #8]
 6852              	.L612:
3099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 6853              		.loc 1 3099 0
 6854 0064 836A     		ldr	r3, [r0, #40]
 6855 0066 9B06     		lsls	r3, r3, #26
 6856 0068 06D5     		bpl	.L613
3102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 6857              		.loc 1 3102 0
 6858 006a 0268     		ldr	r2, [r0]
 6859 006c 9368     		ldr	r3, [r2, #8]
 6860 006e 1849     		ldr	r1, .L617+20
 6861 0070 0B40     		ands	r3, r1
 6862 0072 016C     		ldr	r1, [r0, #64]
 6863 0074 0B43     		orrs	r3, r1
 6864 0076 9360     		str	r3, [r2, #8]
 6865              	.L613:
3106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 6866              		.loc 1 3106 0
 6867 0078 836A     		ldr	r3, [r0, #40]
 6868 007a 5B06     		lsls	r3, r3, #25
 6869 007c 0BD5     		bpl	.L614
ARM GAS  /tmp/ccxOFv0R.s 			page 208


3110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 6870              		.loc 1 3110 0
 6871 007e 0268     		ldr	r2, [r0]
 6872 0080 5368     		ldr	r3, [r2, #4]
 6873 0082 1449     		ldr	r1, .L617+24
 6874 0084 0B40     		ands	r3, r1
 6875 0086 416C     		ldr	r1, [r0, #68]
 6876 0088 0B43     		orrs	r3, r1
 6877 008a 5360     		str	r3, [r2, #4]
3112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 6878              		.loc 1 3112 0
 6879 008c 8023     		movs	r3, #128
 6880 008e 5B03     		lsls	r3, r3, #13
 6881 0090 426C     		ldr	r2, [r0, #68]
 6882 0092 9A42     		cmp	r2, r3
 6883 0094 0AD0     		beq	.L616
 6884              	.L614:
3120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 6885              		.loc 1 3120 0
 6886 0096 836A     		ldr	r3, [r0, #40]
 6887 0098 1B06     		lsls	r3, r3, #24
 6888 009a 06D5     		bpl	.L607
3123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 6889              		.loc 1 3123 0
 6890 009c 0268     		ldr	r2, [r0]
 6891 009e 5368     		ldr	r3, [r2, #4]
 6892 00a0 0D49     		ldr	r1, .L617+28
 6893 00a2 0B40     		ands	r3, r1
 6894 00a4 C16C     		ldr	r1, [r0, #76]
 6895 00a6 0B43     		orrs	r3, r1
 6896 00a8 5360     		str	r3, [r2, #4]
 6897              	.L607:
3125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 6898              		.loc 1 3125 0
 6899              		@ sp needed
 6900 00aa 7047     		bx	lr
 6901              	.L616:
3115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 6902              		.loc 1 3115 0
 6903 00ac 0268     		ldr	r2, [r0]
 6904 00ae 5368     		ldr	r3, [r2, #4]
 6905 00b0 0A49     		ldr	r1, .L617+32
 6906 00b2 0B40     		ands	r3, r1
 6907 00b4 816C     		ldr	r1, [r0, #72]
 6908 00b6 0B43     		orrs	r3, r1
 6909 00b8 5360     		str	r3, [r2, #4]
 6910 00ba ECE7     		b	.L614
 6911              	.L618:
 6912              		.align	2
 6913              	.L617:
 6914 00bc FFFFFDFF 		.word	-131073
 6915 00c0 FFFFFEFF 		.word	-65537
 6916 00c4 FFFFFBFF 		.word	-262145
 6917 00c8 FF7FFFFF 		.word	-32769
 6918 00cc FFEFFFFF 		.word	-4097
 6919 00d0 FFDFFFFF 		.word	-8193
 6920 00d4 FFFFEFFF 		.word	-1048577
ARM GAS  /tmp/ccxOFv0R.s 			page 209


 6921 00d8 FFFFF7FF 		.word	-524289
 6922 00dc FFFF9FFF 		.word	-6291457
 6923              		.cfi_endproc
 6924              	.LFE213:
 6926              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 6927              		.align	1
 6928              		.global	UART_WaitOnFlagUntilTimeout
 6929              		.syntax unified
 6930              		.code	16
 6931              		.thumb_func
 6932              		.fpu softvfp
 6934              	UART_WaitOnFlagUntilTimeout:
 6935              	.LFB215:
3184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Wait until flag is set */
 6936              		.loc 1 3184 0
 6937              		.cfi_startproc
 6938              		@ args = 4, pretend = 0, frame = 0
 6939              		@ frame_needed = 0, uses_anonymous_args = 0
 6940              	.LVL461:
 6941 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6942              	.LCFI33:
 6943              		.cfi_def_cfa_offset 20
 6944              		.cfi_offset 4, -20
 6945              		.cfi_offset 5, -16
 6946              		.cfi_offset 6, -12
 6947              		.cfi_offset 7, -8
 6948              		.cfi_offset 14, -4
 6949 0002 C646     		mov	lr, r8
 6950 0004 00B5     		push	{lr}
 6951              	.LCFI34:
 6952              		.cfi_def_cfa_offset 24
 6953              		.cfi_offset 8, -24
 6954 0006 0600     		movs	r6, r0
 6955 0008 0C00     		movs	r4, r1
 6956 000a 1700     		movs	r7, r2
 6957 000c 9846     		mov	r8, r3
 6958 000e 069D     		ldr	r5, [sp, #24]
 6959              	.LVL462:
 6960              	.L621:
3186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 6961              		.loc 1 3186 0
 6962 0010 3368     		ldr	r3, [r6]
 6963 0012 DB69     		ldr	r3, [r3, #28]
 6964 0014 2340     		ands	r3, r4
 6965 0016 1B1B     		subs	r3, r3, r4
 6966 0018 5A42     		rsbs	r2, r3, #0
 6967 001a 5341     		adcs	r3, r3, r2
 6968 001c BB42     		cmp	r3, r7
 6969 001e 1ED1     		bne	.L625
3189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 6970              		.loc 1 3189 0
 6971 0020 6B1C     		adds	r3, r5, #1
 6972 0022 F5D0     		beq	.L621
3191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 6973              		.loc 1 3191 0
 6974 0024 FFF7FEFF 		bl	HAL_GetTick
 6975              	.LVL463:
ARM GAS  /tmp/ccxOFv0R.s 			page 210


 6976 0028 4346     		mov	r3, r8
 6977 002a C01A     		subs	r0, r0, r3
 6978 002c A842     		cmp	r0, r5
 6979 002e 01D8     		bhi	.L622
 6980              	.LVL464:
3191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 6981              		.loc 1 3191 0 is_stmt 0 discriminator 1
 6982 0030 002D     		cmp	r5, #0
 6983 0032 EDD1     		bne	.L621
 6984              	.L622:
3194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6985              		.loc 1 3194 0 is_stmt 1
 6986 0034 3268     		ldr	r2, [r6]
 6987 0036 1368     		ldr	r3, [r2]
 6988              	.LVL465:
 6989 0038 0B49     		ldr	r1, .L626
 6990 003a 0B40     		ands	r3, r1
 6991 003c 1360     		str	r3, [r2]
3195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 6992              		.loc 1 3195 0
 6993 003e 3268     		ldr	r2, [r6]
 6994 0040 9368     		ldr	r3, [r2, #8]
 6995 0042 A331     		adds	r1, r1, #163
 6996 0044 FF31     		adds	r1, r1, #255
 6997 0046 8B43     		bics	r3, r1
 6998 0048 9360     		str	r3, [r2, #8]
3197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6999              		.loc 1 3197 0
 7000 004a 2023     		movs	r3, #32
 7001 004c 8022     		movs	r2, #128
 7002 004e B350     		str	r3, [r6, r2]
3198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7003              		.loc 1 3198 0
 7004 0050 0432     		adds	r2, r2, #4
 7005 0052 B350     		str	r3, [r6, r2]
3200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7006              		.loc 1 3200 0
 7007 0054 5C33     		adds	r3, r3, #92
 7008 0056 0022     		movs	r2, #0
 7009 0058 F254     		strb	r2, [r6, r3]
3202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 7010              		.loc 1 3202 0
 7011 005a 0320     		movs	r0, #3
 7012 005c 00E0     		b	.L623
 7013              	.L625:
3206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 7014              		.loc 1 3206 0
 7015 005e 0020     		movs	r0, #0
 7016              	.L623:
3207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7017              		.loc 1 3207 0
 7018              		@ sp needed
 7019              	.LVL466:
 7020              	.LVL467:
 7021              	.LVL468:
 7022 0060 04BC     		pop	{r2}
 7023 0062 9046     		mov	r8, r2
ARM GAS  /tmp/ccoGswsS.s 			page 211


 7024 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 7025              	.L627:
 7026 0066 C046     		.align	2
 7027              	.L626:
 7028 0068 5FFEFFFF 		.word	-417
 7029              		.cfi_endproc
 7030              	.LFE215:
 7032              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 7033              		.align	1
 7034              		.global	HAL_UART_Transmit
 7035              		.syntax unified
 7036              		.code	16
 7037              		.thumb_func
 7038              		.fpu softvfp
 7040              	HAL_UART_Transmit:
 7041              	.LFB180:
1036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint8_t  *pdata8bits;
 7042              		.loc 1 1036 0
 7043              		.cfi_startproc
 7044              		@ args = 0, pretend = 0, frame = 8
 7045              		@ frame_needed = 0, uses_anonymous_args = 0
 7046              	.LVL469:
 7047 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7048              	.LCFI35:
 7049              		.cfi_def_cfa_offset 20
 7050              		.cfi_offset 4, -20
 7051              		.cfi_offset 5, -16
 7052              		.cfi_offset 6, -12
 7053              		.cfi_offset 7, -8
 7054              		.cfi_offset 14, -4
 7055 0002 85B0     		sub	sp, sp, #20
 7056              	.LCFI36:
 7057              		.cfi_def_cfa_offset 40
 7058 0004 0400     		movs	r4, r0
 7059 0006 0E00     		movs	r6, r1
 7060 0008 1700     		movs	r7, r2
 7061 000a 1D00     		movs	r5, r3
1042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7062              		.loc 1 1042 0
 7063 000c 8023     		movs	r3, #128
 7064              	.LVL470:
 7065 000e C358     		ldr	r3, [r0, r3]
 7066 0010 202B     		cmp	r3, #32
 7067 0012 62D1     		bne	.L636
1044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7068              		.loc 1 1044 0
 7069 0014 0029     		cmp	r1, #0
 7070 0016 63D0     		beq	.L637
1044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7071              		.loc 1 1044 0 is_stmt 0 discriminator 1
 7072 0018 002A     		cmp	r2, #0
 7073 001a 63D0     		beq	.L638
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7074              		.loc 1 1052 0 is_stmt 1
 7075 001c 8023     		movs	r3, #128
 7076 001e 5B01     		lsls	r3, r3, #5
 7077 0020 8268     		ldr	r2, [r0, #8]
ARM GAS  /tmp/ccoGswsS.s 			page 212


 7078              	.LVL471:
 7079 0022 9A42     		cmp	r2, r3
 7080 0024 1AD0     		beq	.L645
 7081              	.L630:
1060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7082              		.loc 1 1060 0
 7083 0026 7C23     		movs	r3, #124
 7084 0028 E35C     		ldrb	r3, [r4, r3]
 7085 002a 012B     		cmp	r3, #1
 7086 002c 5CD0     		beq	.L640
1060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7087              		.loc 1 1060 0 is_stmt 0 discriminator 2
 7088 002e 7C23     		movs	r3, #124
 7089 0030 0122     		movs	r2, #1
 7090 0032 E254     		strb	r2, [r4, r3]
1062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 7091              		.loc 1 1062 0 is_stmt 1 discriminator 2
 7092 0034 0C33     		adds	r3, r3, #12
 7093 0036 0022     		movs	r2, #0
 7094 0038 E250     		str	r2, [r4, r3]
1063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7095              		.loc 1 1063 0 discriminator 2
 7096 003a 083B     		subs	r3, r3, #8
 7097 003c 2132     		adds	r2, r2, #33
 7098 003e E250     		str	r2, [r4, r3]
1066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7099              		.loc 1 1066 0 discriminator 2
 7100 0040 FFF7FEFF 		bl	HAL_GetTick
 7101              	.LVL472:
 7102 0044 0390     		str	r0, [sp, #12]
 7103              	.LVL473:
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = Size;
 7104              		.loc 1 1068 0 discriminator 2
 7105 0046 5423     		movs	r3, #84
 7106 0048 E752     		strh	r7, [r4, r3]
1069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7107              		.loc 1 1069 0 discriminator 2
 7108 004a 0233     		adds	r3, r3, #2
 7109 004c E752     		strh	r7, [r4, r3]
1072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7110              		.loc 1 1072 0 discriminator 2
 7111 004e 8023     		movs	r3, #128
 7112 0050 5B01     		lsls	r3, r3, #5
 7113 0052 A268     		ldr	r2, [r4, #8]
 7114 0054 9A42     		cmp	r2, r3
 7115 0056 08D0     		beq	.L646
1080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7116              		.loc 1 1080 0
 7117 0058 0027     		movs	r7, #0
 7118 005a 16E0     		b	.L634
 7119              	.LVL474:
 7120              	.L645:
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7121              		.loc 1 1052 0 discriminator 1
 7122 005c 0369     		ldr	r3, [r0, #16]
 7123 005e 002B     		cmp	r3, #0
 7124 0060 E1D1     		bne	.L630
ARM GAS  /tmp/ccoGswsS.s 			page 213


1054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 7125              		.loc 1 1054 0
 7126 0062 CB07     		lsls	r3, r1, #31
 7127 0064 DFD5     		bpl	.L630
1056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 7128              		.loc 1 1056 0
 7129 0066 0120     		movs	r0, #1
 7130              	.LVL475:
 7131 0068 38E0     		b	.L629
 7132              	.LVL476:
 7133              	.L646:
1072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7134              		.loc 1 1072 0 discriminator 1
 7135 006a 2369     		ldr	r3, [r4, #16]
 7136 006c 002B     		cmp	r3, #0
 7137 006e 21D0     		beq	.L642
1080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7138              		.loc 1 1080 0
 7139 0070 0027     		movs	r7, #0
 7140 0072 0AE0     		b	.L634
 7141              	.LVL477:
 7142              	.L648:
1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata16bits++;
 7143              		.loc 1 1091 0
 7144 0074 3B88     		ldrh	r3, [r7]
 7145 0076 2268     		ldr	r2, [r4]
 7146 0078 DB05     		lsls	r3, r3, #23
 7147 007a DB0D     		lsrs	r3, r3, #23
 7148 007c 9362     		str	r3, [r2, #40]
1092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 7149              		.loc 1 1092 0
 7150 007e 0237     		adds	r7, r7, #2
 7151              	.LVL478:
 7152              	.L633:
1099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7153              		.loc 1 1099 0
 7154 0080 5622     		movs	r2, #86
 7155 0082 A35A     		ldrh	r3, [r4, r2]
 7156 0084 013B     		subs	r3, r3, #1
 7157 0086 9BB2     		uxth	r3, r3
 7158 0088 A352     		strh	r3, [r4, r2]
 7159              	.LVL479:
 7160              	.L634:
1083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7161              		.loc 1 1083 0
 7162 008a 5623     		movs	r3, #86
 7163 008c E35A     		ldrh	r3, [r4, r3]
 7164 008e 9BB2     		uxth	r3, r3
 7165 0090 002B     		cmp	r3, #0
 7166 0092 12D0     		beq	.L647
1085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 7167              		.loc 1 1085 0
 7168 0094 0095     		str	r5, [sp]
 7169 0096 039B     		ldr	r3, [sp, #12]
 7170 0098 0022     		movs	r2, #0
 7171 009a 8021     		movs	r1, #128
 7172 009c 2000     		movs	r0, r4
ARM GAS  /tmp/ccoGswsS.s 			page 214


 7173 009e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7174              	.LVL480:
 7175 00a2 0028     		cmp	r0, #0
 7176 00a4 22D1     		bne	.L643
1089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 7177              		.loc 1 1089 0
 7178 00a6 002E     		cmp	r6, #0
 7179 00a8 E4D0     		beq	.L648
1096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata8bits++;
 7180              		.loc 1 1096 0
 7181 00aa 3278     		ldrb	r2, [r6]
 7182 00ac 2368     		ldr	r3, [r4]
 7183 00ae 9A62     		str	r2, [r3, #40]
1097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 7184              		.loc 1 1097 0
 7185 00b0 0136     		adds	r6, r6, #1
 7186              	.LVL481:
 7187 00b2 E5E7     		b	.L633
 7188              	.LVL482:
 7189              	.L642:
1075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7190              		.loc 1 1075 0
 7191 00b4 3700     		movs	r7, r6
1074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 7192              		.loc 1 1074 0
 7193 00b6 0026     		movs	r6, #0
 7194              	.LVL483:
 7195 00b8 E7E7     		b	.L634
 7196              	.LVL484:
 7197              	.L647:
1102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7198              		.loc 1 1102 0
 7199 00ba 0095     		str	r5, [sp]
 7200 00bc 039B     		ldr	r3, [sp, #12]
 7201 00be 0022     		movs	r2, #0
 7202 00c0 4021     		movs	r1, #64
 7203 00c2 2000     		movs	r0, r4
 7204 00c4 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7205              	.LVL485:
 7206 00c8 0028     		cmp	r0, #0
 7207 00ca 11D1     		bne	.L644
1108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7208              		.loc 1 1108 0
 7209 00cc 8023     		movs	r3, #128
 7210 00ce 2022     		movs	r2, #32
 7211 00d0 E250     		str	r2, [r4, r3]
1110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7212              		.loc 1 1110 0
 7213 00d2 043B     		subs	r3, r3, #4
 7214 00d4 0022     		movs	r2, #0
 7215 00d6 E254     		strb	r2, [r4, r3]
1112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 7216              		.loc 1 1112 0
 7217 00d8 00E0     		b	.L629
 7218              	.LVL486:
 7219              	.L636:
1116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccoGswsS.s 			page 215


 7220              		.loc 1 1116 0
 7221 00da 0220     		movs	r0, #2
 7222              	.LVL487:
 7223              	.L629:
1118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7224              		.loc 1 1118 0
 7225 00dc 05B0     		add	sp, sp, #20
 7226              		@ sp needed
 7227              	.LVL488:
 7228              	.LVL489:
 7229 00de F0BD     		pop	{r4, r5, r6, r7, pc}
 7230              	.LVL490:
 7231              	.L637:
1046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7232              		.loc 1 1046 0
 7233 00e0 0120     		movs	r0, #1
 7234              	.LVL491:
 7235 00e2 FBE7     		b	.L629
 7236              	.LVL492:
 7237              	.L638:
 7238 00e4 0120     		movs	r0, #1
 7239              	.LVL493:
 7240 00e6 F9E7     		b	.L629
 7241              	.LVL494:
 7242              	.L640:
1060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7243              		.loc 1 1060 0
 7244 00e8 0220     		movs	r0, #2
 7245              	.LVL495:
 7246 00ea F7E7     		b	.L629
 7247              	.LVL496:
 7248              	.L643:
1087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 7249              		.loc 1 1087 0
 7250 00ec 0320     		movs	r0, #3
 7251 00ee F5E7     		b	.L629
 7252              	.L644:
1104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7253              		.loc 1 1104 0
 7254 00f0 0320     		movs	r0, #3
 7255 00f2 F3E7     		b	.L629
 7256              		.cfi_endproc
 7257              	.LFE180:
 7259              		.section	.text.HAL_UART_Receive,"ax",%progbits
 7260              		.align	1
 7261              		.global	HAL_UART_Receive
 7262              		.syntax unified
 7263              		.code	16
 7264              		.thumb_func
 7265              		.fpu softvfp
 7267              	HAL_UART_Receive:
 7268              	.LFB181:
1140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint8_t  *pdata8bits;
 7269              		.loc 1 1140 0
 7270              		.cfi_startproc
 7271              		@ args = 0, pretend = 0, frame = 8
 7272              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccoGswsS.s 			page 216


 7273              	.LVL497:
 7274 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7275              	.LCFI37:
 7276              		.cfi_def_cfa_offset 20
 7277              		.cfi_offset 4, -20
 7278              		.cfi_offset 5, -16
 7279              		.cfi_offset 6, -12
 7280              		.cfi_offset 7, -8
 7281              		.cfi_offset 14, -4
 7282 0002 C646     		mov	lr, r8
 7283 0004 00B5     		push	{lr}
 7284              	.LCFI38:
 7285              		.cfi_def_cfa_offset 24
 7286              		.cfi_offset 8, -24
 7287 0006 84B0     		sub	sp, sp, #16
 7288              	.LCFI39:
 7289              		.cfi_def_cfa_offset 40
 7290 0008 0400     		movs	r4, r0
 7291 000a 0F00     		movs	r7, r1
 7292 000c 1600     		movs	r6, r2
 7293 000e 1D00     		movs	r5, r3
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7294              		.loc 1 1147 0
 7295 0010 8423     		movs	r3, #132
 7296              	.LVL498:
 7297 0012 C358     		ldr	r3, [r0, r3]
 7298 0014 202B     		cmp	r3, #32
 7299 0016 00D0     		beq	.LCB6987
 7300 0018 93E0     		b	.L664	@long jump
 7301              	.LCB6987:
1149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7302              		.loc 1 1149 0
 7303 001a 0029     		cmp	r1, #0
 7304 001c 00D1     		bne	.LCB6989
 7305 001e 95E0     		b	.L665	@long jump
 7306              	.LCB6989:
1149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7307              		.loc 1 1149 0 is_stmt 0 discriminator 1
 7308 0020 002A     		cmp	r2, #0
 7309 0022 00D1     		bne	.LCB6991
 7310 0024 94E0     		b	.L666	@long jump
 7311              	.LCB6991:
1157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7312              		.loc 1 1157 0 is_stmt 1
 7313 0026 8023     		movs	r3, #128
 7314 0028 5B01     		lsls	r3, r3, #5
 7315 002a 8268     		ldr	r2, [r0, #8]
 7316              	.LVL499:
 7317 002c 9A42     		cmp	r2, r3
 7318 002e 22D0     		beq	.L672
 7319              	.L651:
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7320              		.loc 1 1165 0
 7321 0030 7C23     		movs	r3, #124
 7322 0032 E35C     		ldrb	r3, [r4, r3]
 7323 0034 012B     		cmp	r3, #1
 7324 0036 00D1     		bne	.LCB7003
ARM GAS  /tmp/ccoGswsS.s 			page 217


 7325 0038 8CE0     		b	.L668	@long jump
 7326              	.LCB7003:
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7327              		.loc 1 1165 0 is_stmt 0 discriminator 2
 7328 003a 7C23     		movs	r3, #124
 7329 003c 0122     		movs	r2, #1
 7330 003e E254     		strb	r2, [r4, r3]
1167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 7331              		.loc 1 1167 0 is_stmt 1 discriminator 2
 7332 0040 0C33     		adds	r3, r3, #12
 7333 0042 0022     		movs	r2, #0
 7334 0044 E250     		str	r2, [r4, r3]
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7335              		.loc 1 1168 0 discriminator 2
 7336 0046 043B     		subs	r3, r3, #4
 7337 0048 2232     		adds	r2, r2, #34
 7338 004a E250     		str	r2, [r4, r3]
1171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7339              		.loc 1 1171 0 discriminator 2
 7340 004c FFF7FEFF 		bl	HAL_GetTick
 7341              	.LVL500:
 7342 0050 0390     		str	r0, [sp, #12]
 7343              	.LVL501:
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = Size;
 7344              		.loc 1 1173 0 discriminator 2
 7345 0052 5C23     		movs	r3, #92
 7346 0054 E652     		strh	r6, [r4, r3]
1174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7347              		.loc 1 1174 0 discriminator 2
 7348 0056 0233     		adds	r3, r3, #2
 7349 0058 E652     		strh	r6, [r4, r3]
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 7350              		.loc 1 1177 0 discriminator 2
 7351 005a A368     		ldr	r3, [r4, #8]
 7352 005c 8022     		movs	r2, #128
 7353 005e 5201     		lsls	r2, r2, #5
 7354 0060 9342     		cmp	r3, r2
 7355 0062 0FD0     		beq	.L673
 7356 0064 002B     		cmp	r3, #0
 7357 0066 1CD1     		bne	.L655
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 7358              		.loc 1 1177 0 is_stmt 0 discriminator 5
 7359 0068 2269     		ldr	r2, [r4, #16]
 7360 006a 002A     		cmp	r2, #0
 7361 006c 15D1     		bne	.L656
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 7362              		.loc 1 1177 0 discriminator 7
 7363 006e 6032     		adds	r2, r2, #96
 7364 0070 FF21     		movs	r1, #255
 7365 0072 A152     		strh	r1, [r4, r2]
 7366 0074 1CE0     		b	.L654
 7367              	.LVL502:
 7368              	.L672:
1157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7369              		.loc 1 1157 0 is_stmt 1 discriminator 1
 7370 0076 0369     		ldr	r3, [r0, #16]
 7371 0078 002B     		cmp	r3, #0
ARM GAS  /tmp/ccoGswsS.s 			page 218


 7372 007a D9D1     		bne	.L651
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 7373              		.loc 1 1159 0
 7374 007c CB07     		lsls	r3, r1, #31
 7375 007e D7D5     		bpl	.L651
1161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 7376              		.loc 1 1161 0
 7377 0080 0120     		movs	r0, #1
 7378              	.LVL503:
 7379 0082 5FE0     		b	.L650
 7380              	.LVL504:
 7381              	.L673:
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 7382              		.loc 1 1177 0 discriminator 1
 7383 0084 2269     		ldr	r2, [r4, #16]
 7384 0086 002A     		cmp	r2, #0
 7385 0088 03D1     		bne	.L653
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 7386              		.loc 1 1177 0 is_stmt 0 discriminator 3
 7387 008a 6032     		adds	r2, r2, #96
 7388 008c 3349     		ldr	r1, .L678
 7389 008e A152     		strh	r1, [r4, r2]
 7390 0090 0EE0     		b	.L654
 7391              	.L653:
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 7392              		.loc 1 1177 0 discriminator 4
 7393 0092 6022     		movs	r2, #96
 7394 0094 FF21     		movs	r1, #255
 7395 0096 A152     		strh	r1, [r4, r2]
 7396 0098 0AE0     		b	.L654
 7397              	.L656:
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 7398              		.loc 1 1177 0 discriminator 8
 7399 009a 6022     		movs	r2, #96
 7400 009c 7F21     		movs	r1, #127
 7401 009e A152     		strh	r1, [r4, r2]
 7402 00a0 06E0     		b	.L654
 7403              	.L655:
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 7404              		.loc 1 1177 0 discriminator 6
 7405 00a2 8022     		movs	r2, #128
 7406 00a4 5205     		lsls	r2, r2, #21
 7407 00a6 9342     		cmp	r3, r2
 7408 00a8 0BD0     		beq	.L674
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 7409              		.loc 1 1177 0 discriminator 10
 7410 00aa 6022     		movs	r2, #96
 7411 00ac 0021     		movs	r1, #0
 7412 00ae A152     		strh	r1, [r4, r2]
 7413              	.L654:
1178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7414              		.loc 1 1178 0 is_stmt 1
 7415 00b0 6022     		movs	r2, #96
 7416 00b2 A65A     		ldrh	r6, [r4, r2]
 7417              	.LVL505:
1181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7418              		.loc 1 1181 0
ARM GAS  /tmp/ccoGswsS.s 			page 219


 7419 00b4 8022     		movs	r2, #128
 7420 00b6 5201     		lsls	r2, r2, #5
 7421 00b8 9342     		cmp	r3, r2
 7422 00ba 0DD0     		beq	.L675
1189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7423              		.loc 1 1189 0
 7424 00bc 0023     		movs	r3, #0
 7425 00be 9846     		mov	r8, r3
 7426 00c0 20E0     		b	.L660
 7427              	.LVL506:
 7428              	.L674:
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 7429              		.loc 1 1177 0 discriminator 9
 7430 00c2 2269     		ldr	r2, [r4, #16]
 7431 00c4 002A     		cmp	r2, #0
 7432 00c6 03D1     		bne	.L658
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 7433              		.loc 1 1177 0 is_stmt 0 discriminator 11
 7434 00c8 6032     		adds	r2, r2, #96
 7435 00ca 7F21     		movs	r1, #127
 7436 00cc A152     		strh	r1, [r4, r2]
 7437 00ce EFE7     		b	.L654
 7438              	.L658:
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 7439              		.loc 1 1177 0 discriminator 12
 7440 00d0 6022     		movs	r2, #96
 7441 00d2 3F21     		movs	r1, #63
 7442 00d4 A152     		strh	r1, [r4, r2]
 7443 00d6 EBE7     		b	.L654
 7444              	.LVL507:
 7445              	.L675:
1181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7446              		.loc 1 1181 0 is_stmt 1 discriminator 1
 7447 00d8 2369     		ldr	r3, [r4, #16]
 7448 00da 002B     		cmp	r3, #0
 7449 00dc 02D0     		beq	.L670
1189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7450              		.loc 1 1189 0
 7451 00de 0023     		movs	r3, #0
 7452 00e0 9846     		mov	r8, r3
 7453 00e2 0FE0     		b	.L660
 7454              	.L670:
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7455              		.loc 1 1184 0
 7456 00e4 B846     		mov	r8, r7
1183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 7457              		.loc 1 1183 0
 7458 00e6 0027     		movs	r7, #0
 7459              	.LVL508:
 7460 00e8 0CE0     		b	.L660
 7461              	.LVL509:
 7462              	.L677:
1201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata16bits++;
 7463              		.loc 1 1201 0
 7464 00ea 2368     		ldr	r3, [r4]
 7465 00ec 5B6A     		ldr	r3, [r3, #36]
 7466 00ee 3340     		ands	r3, r6
ARM GAS  /tmp/ccoGswsS.s 			page 220


 7467 00f0 4246     		mov	r2, r8
 7468 00f2 1380     		strh	r3, [r2]
1202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 7469              		.loc 1 1202 0
 7470 00f4 0223     		movs	r3, #2
 7471 00f6 9C46     		mov	ip, r3
 7472 00f8 E044     		add	r8, r8, ip
 7473              	.LVL510:
 7474              	.L662:
1209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7475              		.loc 1 1209 0
 7476 00fa 5E22     		movs	r2, #94
 7477 00fc A35A     		ldrh	r3, [r4, r2]
 7478 00fe 013B     		subs	r3, r3, #1
 7479 0100 9BB2     		uxth	r3, r3
 7480 0102 A352     		strh	r3, [r4, r2]
 7481              	.LVL511:
 7482              	.L660:
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7483              		.loc 1 1193 0
 7484 0104 5E23     		movs	r3, #94
 7485 0106 E35A     		ldrh	r3, [r4, r3]
 7486 0108 9BB2     		uxth	r3, r3
 7487 010a 002B     		cmp	r3, #0
 7488 010c 11D0     		beq	.L676
1195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 7489              		.loc 1 1195 0
 7490 010e 0095     		str	r5, [sp]
 7491 0110 039B     		ldr	r3, [sp, #12]
 7492 0112 0022     		movs	r2, #0
 7493 0114 2021     		movs	r1, #32
 7494 0116 2000     		movs	r0, r4
 7495 0118 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7496              	.LVL512:
 7497 011c 0028     		cmp	r0, #0
 7498 011e 1BD1     		bne	.L671
1199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 7499              		.loc 1 1199 0
 7500 0120 002F     		cmp	r7, #0
 7501 0122 E2D0     		beq	.L677
1206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata8bits++;
 7502              		.loc 1 1206 0
 7503 0124 2368     		ldr	r3, [r4]
 7504 0126 5B6A     		ldr	r3, [r3, #36]
 7505 0128 F2B2     		uxtb	r2, r6
 7506 012a 1340     		ands	r3, r2
 7507 012c 3B70     		strb	r3, [r7]
1207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 7508              		.loc 1 1207 0
 7509 012e 0137     		adds	r7, r7, #1
 7510              	.LVL513:
 7511 0130 E3E7     		b	.L662
 7512              	.L676:
1213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7513              		.loc 1 1213 0
 7514 0132 8433     		adds	r3, r3, #132
 7515 0134 2022     		movs	r2, #32
ARM GAS  /tmp/ccoGswsS.s 			page 221


 7516 0136 E250     		str	r2, [r4, r3]
1215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7517              		.loc 1 1215 0
 7518 0138 083B     		subs	r3, r3, #8
 7519 013a 0022     		movs	r2, #0
 7520 013c E254     		strb	r2, [r4, r3]
1217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 7521              		.loc 1 1217 0
 7522 013e 0020     		movs	r0, #0
 7523 0140 00E0     		b	.L650
 7524              	.LVL514:
 7525              	.L664:
1221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 7526              		.loc 1 1221 0
 7527 0142 0220     		movs	r0, #2
 7528              	.LVL515:
 7529              	.L650:
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7530              		.loc 1 1223 0
 7531 0144 04B0     		add	sp, sp, #16
 7532              		@ sp needed
 7533              	.LVL516:
 7534              	.LVL517:
 7535 0146 04BC     		pop	{r2}
 7536 0148 9046     		mov	r8, r2
 7537 014a F0BD     		pop	{r4, r5, r6, r7, pc}
 7538              	.LVL518:
 7539              	.L665:
1151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7540              		.loc 1 1151 0
 7541 014c 0120     		movs	r0, #1
 7542              	.LVL519:
 7543 014e F9E7     		b	.L650
 7544              	.LVL520:
 7545              	.L666:
 7546 0150 0120     		movs	r0, #1
 7547              	.LVL521:
 7548 0152 F7E7     		b	.L650
 7549              	.LVL522:
 7550              	.L668:
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7551              		.loc 1 1165 0
 7552 0154 0220     		movs	r0, #2
 7553              	.LVL523:
 7554 0156 F5E7     		b	.L650
 7555              	.LVL524:
 7556              	.L671:
1197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 7557              		.loc 1 1197 0
 7558 0158 0320     		movs	r0, #3
 7559 015a F3E7     		b	.L650
 7560              	.L679:
 7561              		.align	2
 7562              	.L678:
 7563 015c FF010000 		.word	511
 7564              		.cfi_endproc
 7565              	.LFE181:
ARM GAS  /tmp/ccoGswsS.s 			page 222


 7567              		.section	.text.UART_CheckIdleState,"ax",%progbits
 7568              		.align	1
 7569              		.global	UART_CheckIdleState
 7570              		.syntax unified
 7571              		.code	16
 7572              		.thumb_func
 7573              		.fpu softvfp
 7575              	UART_CheckIdleState:
 7576              	.LFB214:
3133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t tickstart;
 7577              		.loc 1 3133 0
 7578              		.cfi_startproc
 7579              		@ args = 0, pretend = 0, frame = 0
 7580              		@ frame_needed = 0, uses_anonymous_args = 0
 7581              	.LVL525:
 7582 0000 30B5     		push	{r4, r5, lr}
 7583              	.LCFI40:
 7584              		.cfi_def_cfa_offset 12
 7585              		.cfi_offset 4, -12
 7586              		.cfi_offset 5, -8
 7587              		.cfi_offset 14, -4
 7588 0002 83B0     		sub	sp, sp, #12
 7589              	.LCFI41:
 7590              		.cfi_def_cfa_offset 24
 7591 0004 0400     		movs	r4, r0
3137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7592              		.loc 1 3137 0
 7593 0006 8823     		movs	r3, #136
 7594 0008 0022     		movs	r2, #0
 7595 000a C250     		str	r2, [r0, r3]
3140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7596              		.loc 1 3140 0
 7597 000c FFF7FEFF 		bl	HAL_GetTick
 7598              	.LVL526:
 7599 0010 0500     		movs	r5, r0
 7600              	.LVL527:
3143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7601              		.loc 1 3143 0
 7602 0012 2368     		ldr	r3, [r4]
 7603 0014 1B68     		ldr	r3, [r3]
 7604 0016 1B07     		lsls	r3, r3, #28
 7605 0018 0ED4     		bmi	.L686
 7606              	.LVL528:
 7607              	.L681:
3154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7608              		.loc 1 3154 0
 7609 001a 2368     		ldr	r3, [r4]
 7610 001c 1B68     		ldr	r3, [r3]
 7611 001e 5B07     		lsls	r3, r3, #29
 7612 0020 17D4     		bmi	.L687
 7613              	.L683:
3165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7614              		.loc 1 3165 0
 7615 0022 2023     		movs	r3, #32
 7616 0024 8022     		movs	r2, #128
 7617 0026 A350     		str	r3, [r4, r2]
3166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 223


 7618              		.loc 1 3166 0
 7619 0028 0432     		adds	r2, r2, #4
 7620 002a A350     		str	r3, [r4, r2]
3168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7621              		.loc 1 3168 0
 7622 002c 5C33     		adds	r3, r3, #92
 7623 002e 0022     		movs	r2, #0
 7624 0030 E254     		strb	r2, [r4, r3]
3170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 7625              		.loc 1 3170 0
 7626 0032 0020     		movs	r0, #0
 7627              	.L682:
3171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7628              		.loc 1 3171 0
 7629 0034 03B0     		add	sp, sp, #12
 7630              		@ sp needed
 7631              	.LVL529:
 7632              	.LVL530:
 7633 0036 30BD     		pop	{r4, r5, pc}
 7634              	.LVL531:
 7635              	.L686:
3146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7636              		.loc 1 3146 0
 7637 0038 8021     		movs	r1, #128
 7638 003a 0C4B     		ldr	r3, .L688
 7639 003c 0093     		str	r3, [sp]
 7640 003e 0300     		movs	r3, r0
 7641 0040 0022     		movs	r2, #0
 7642 0042 8903     		lsls	r1, r1, #14
 7643 0044 2000     		movs	r0, r4
 7644              	.LVL532:
 7645 0046 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7646              	.LVL533:
 7647 004a 0028     		cmp	r0, #0
 7648 004c E5D0     		beq	.L681
3149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7649              		.loc 1 3149 0
 7650 004e 0320     		movs	r0, #3
 7651 0050 F0E7     		b	.L682
 7652              	.L687:
3157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7653              		.loc 1 3157 0
 7654 0052 8021     		movs	r1, #128
 7655 0054 054B     		ldr	r3, .L688
 7656 0056 0093     		str	r3, [sp]
 7657 0058 2B00     		movs	r3, r5
 7658 005a 0022     		movs	r2, #0
 7659 005c C903     		lsls	r1, r1, #15
 7660 005e 2000     		movs	r0, r4
 7661 0060 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7662              	.LVL534:
 7663 0064 0028     		cmp	r0, #0
 7664 0066 DCD0     		beq	.L683
3160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7665              		.loc 1 3160 0
 7666 0068 0320     		movs	r0, #3
 7667 006a E3E7     		b	.L682
ARM GAS  /tmp/ccoGswsS.s 			page 224


 7668              	.L689:
 7669              		.align	2
 7670              	.L688:
 7671 006c FFFFFF01 		.word	33554431
 7672              		.cfi_endproc
 7673              	.LFE214:
 7675              		.section	.text.HAL_UART_Init,"ax",%progbits
 7676              		.align	1
 7677              		.global	HAL_UART_Init
 7678              		.syntax unified
 7679              		.code	16
 7680              		.thumb_func
 7681              		.fpu softvfp
 7683              	HAL_UART_Init:
 7684              	.LFB173:
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 7685              		.loc 1 296 0
 7686              		.cfi_startproc
 7687              		@ args = 0, pretend = 0, frame = 0
 7688              		@ frame_needed = 0, uses_anonymous_args = 0
 7689              	.LVL535:
 7690 0000 10B5     		push	{r4, lr}
 7691              	.LCFI42:
 7692              		.cfi_def_cfa_offset 8
 7693              		.cfi_offset 4, -8
 7694              		.cfi_offset 14, -4
 7695 0002 041E     		subs	r4, r0, #0
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7696              		.loc 1 298 0
 7697 0004 30D0     		beq	.L694
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7698              		.loc 1 314 0
 7699 0006 8023     		movs	r3, #128
 7700 0008 C358     		ldr	r3, [r0, r3]
 7701 000a 002B     		cmp	r3, #0
 7702 000c 22D0     		beq	.L695
 7703              	.LVL536:
 7704              	.L692:
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7705              		.loc 1 335 0
 7706 000e 8023     		movs	r3, #128
 7707 0010 2422     		movs	r2, #36
 7708 0012 E250     		str	r2, [r4, r3]
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7709              		.loc 1 337 0
 7710 0014 2268     		ldr	r2, [r4]
 7711 0016 1368     		ldr	r3, [r2]
 7712 0018 0121     		movs	r1, #1
 7713 001a 8B43     		bics	r3, r1
 7714 001c 1360     		str	r3, [r2]
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7715              		.loc 1 340 0
 7716 001e 2000     		movs	r0, r4
 7717 0020 FFF7FEFF 		bl	UART_SetConfig
 7718              	.LVL537:
 7719 0024 0128     		cmp	r0, #1
 7720 0026 14D0     		beq	.L691
ARM GAS  /tmp/ccoGswsS.s 			page 225


 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7721              		.loc 1 345 0
 7722 0028 A36A     		ldr	r3, [r4, #40]
 7723 002a 002B     		cmp	r3, #0
 7724 002c 18D1     		bne	.L696
 7725              	.L693:
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 7726              		.loc 1 353 0
 7727 002e 2268     		ldr	r2, [r4]
 7728 0030 5368     		ldr	r3, [r2, #4]
 7729 0032 0E49     		ldr	r1, .L697
 7730 0034 0B40     		ands	r3, r1
 7731 0036 5360     		str	r3, [r2, #4]
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7732              		.loc 1 354 0
 7733 0038 2268     		ldr	r2, [r4]
 7734 003a 9368     		ldr	r3, [r2, #8]
 7735 003c 2A21     		movs	r1, #42
 7736 003e 8B43     		bics	r3, r1
 7737 0040 9360     		str	r3, [r2, #8]
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7738              		.loc 1 356 0
 7739 0042 2268     		ldr	r2, [r4]
 7740 0044 1368     		ldr	r3, [r2]
 7741 0046 2939     		subs	r1, r1, #41
 7742 0048 0B43     		orrs	r3, r1
 7743 004a 1360     		str	r3, [r2]
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 7744              		.loc 1 359 0
 7745 004c 2000     		movs	r0, r4
 7746 004e FFF7FEFF 		bl	UART_CheckIdleState
 7747              	.LVL538:
 7748              	.L691:
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7749              		.loc 1 360 0
 7750              		@ sp needed
 7751              	.LVL539:
 7752 0052 10BD     		pop	{r4, pc}
 7753              	.LVL540:
 7754              	.L695:
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7755              		.loc 1 317 0
 7756 0054 7C33     		adds	r3, r3, #124
 7757 0056 0022     		movs	r2, #0
 7758 0058 C254     		strb	r2, [r0, r3]
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 7759              		.loc 1 331 0
 7760 005a FFF7FEFF 		bl	HAL_UART_MspInit
 7761              	.LVL541:
 7762 005e D6E7     		b	.L692
 7763              	.L696:
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 7764              		.loc 1 347 0
 7765 0060 2000     		movs	r0, r4
 7766 0062 FFF7FEFF 		bl	UART_AdvFeatureConfig
 7767              	.LVL542:
 7768 0066 E2E7     		b	.L693
ARM GAS  /tmp/ccoGswsS.s 			page 226


 7769              	.LVL543:
 7770              	.L694:
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 7771              		.loc 1 300 0
 7772 0068 0120     		movs	r0, #1
 7773              	.LVL544:
 7774 006a F2E7     		b	.L691
 7775              	.L698:
 7776              		.align	2
 7777              	.L697:
 7778 006c FFB7FFFF 		.word	-18433
 7779              		.cfi_endproc
 7780              	.LFE173:
 7782              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 7783              		.align	1
 7784              		.global	HAL_HalfDuplex_Init
 7785              		.syntax unified
 7786              		.code	16
 7787              		.thumb_func
 7788              		.fpu softvfp
 7790              	HAL_HalfDuplex_Init:
 7791              	.LFB174:
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 7792              		.loc 1 369 0
 7793              		.cfi_startproc
 7794              		@ args = 0, pretend = 0, frame = 0
 7795              		@ frame_needed = 0, uses_anonymous_args = 0
 7796              	.LVL545:
 7797 0000 10B5     		push	{r4, lr}
 7798              	.LCFI43:
 7799              		.cfi_def_cfa_offset 8
 7800              		.cfi_offset 4, -8
 7801              		.cfi_offset 14, -4
 7802 0002 041E     		subs	r4, r0, #0
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7803              		.loc 1 371 0
 7804 0004 35D0     		beq	.L703
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7805              		.loc 1 379 0
 7806 0006 8023     		movs	r3, #128
 7807 0008 C358     		ldr	r3, [r0, r3]
 7808 000a 002B     		cmp	r3, #0
 7809 000c 27D0     		beq	.L704
 7810              	.LVL546:
 7811              	.L701:
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7812              		.loc 1 400 0
 7813 000e 8023     		movs	r3, #128
 7814 0010 2422     		movs	r2, #36
 7815 0012 E250     		str	r2, [r4, r3]
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7816              		.loc 1 402 0
 7817 0014 2268     		ldr	r2, [r4]
 7818 0016 1368     		ldr	r3, [r2]
 7819 0018 0121     		movs	r1, #1
 7820 001a 8B43     		bics	r3, r1
 7821 001c 1360     		str	r3, [r2]
ARM GAS  /tmp/ccoGswsS.s 			page 227


 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7822              		.loc 1 405 0
 7823 001e 2000     		movs	r0, r4
 7824 0020 FFF7FEFF 		bl	UART_SetConfig
 7825              	.LVL547:
 7826 0024 0128     		cmp	r0, #1
 7827 0026 19D0     		beq	.L700
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7828              		.loc 1 410 0
 7829 0028 A36A     		ldr	r3, [r4, #40]
 7830 002a 002B     		cmp	r3, #0
 7831 002c 1DD1     		bne	.L705
 7832              	.L702:
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 7833              		.loc 1 418 0
 7834 002e 2268     		ldr	r2, [r4]
 7835 0030 5368     		ldr	r3, [r2, #4]
 7836 0032 1149     		ldr	r1, .L706
 7837 0034 0B40     		ands	r3, r1
 7838 0036 5360     		str	r3, [r2, #4]
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7839              		.loc 1 419 0
 7840 0038 2268     		ldr	r2, [r4]
 7841 003a 9368     		ldr	r3, [r2, #8]
 7842 003c 2221     		movs	r1, #34
 7843 003e 8B43     		bics	r3, r1
 7844 0040 9360     		str	r3, [r2, #8]
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7845              		.loc 1 422 0
 7846 0042 2268     		ldr	r2, [r4]
 7847 0044 9368     		ldr	r3, [r2, #8]
 7848 0046 1A39     		subs	r1, r1, #26
 7849 0048 0B43     		orrs	r3, r1
 7850 004a 9360     		str	r3, [r2, #8]
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7851              		.loc 1 424 0
 7852 004c 2268     		ldr	r2, [r4]
 7853 004e 1368     		ldr	r3, [r2]
 7854 0050 0739     		subs	r1, r1, #7
 7855 0052 0B43     		orrs	r3, r1
 7856 0054 1360     		str	r3, [r2]
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 7857              		.loc 1 427 0
 7858 0056 2000     		movs	r0, r4
 7859 0058 FFF7FEFF 		bl	UART_CheckIdleState
 7860              	.LVL548:
 7861              	.L700:
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7862              		.loc 1 428 0
 7863              		@ sp needed
 7864              	.LVL549:
 7865 005c 10BD     		pop	{r4, pc}
 7866              	.LVL550:
 7867              	.L704:
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7868              		.loc 1 382 0
 7869 005e 7C33     		adds	r3, r3, #124
ARM GAS  /tmp/ccoGswsS.s 			page 228


 7870 0060 0022     		movs	r2, #0
 7871 0062 C254     		strb	r2, [r0, r3]
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 7872              		.loc 1 396 0
 7873 0064 FFF7FEFF 		bl	HAL_UART_MspInit
 7874              	.LVL551:
 7875 0068 D1E7     		b	.L701
 7876              	.L705:
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 7877              		.loc 1 412 0
 7878 006a 2000     		movs	r0, r4
 7879 006c FFF7FEFF 		bl	UART_AdvFeatureConfig
 7880              	.LVL552:
 7881 0070 DDE7     		b	.L702
 7882              	.LVL553:
 7883              	.L703:
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 7884              		.loc 1 373 0
 7885 0072 0120     		movs	r0, #1
 7886              	.LVL554:
 7887 0074 F2E7     		b	.L700
 7888              	.L707:
 7889 0076 C046     		.align	2
 7890              	.L706:
 7891 0078 FFB7FFFF 		.word	-18433
 7892              		.cfi_endproc
 7893              	.LFE174:
 7895              		.section	.text.HAL_LIN_Init,"ax",%progbits
 7896              		.align	1
 7897              		.global	HAL_LIN_Init
 7898              		.syntax unified
 7899              		.code	16
 7900              		.thumb_func
 7901              		.fpu softvfp
 7903              	HAL_LIN_Init:
 7904              	.LFB175:
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 7905              		.loc 1 442 0
 7906              		.cfi_startproc
 7907              		@ args = 0, pretend = 0, frame = 0
 7908              		@ frame_needed = 0, uses_anonymous_args = 0
 7909              	.LVL555:
 7910 0000 70B5     		push	{r4, r5, r6, lr}
 7911              	.LCFI44:
 7912              		.cfi_def_cfa_offset 16
 7913              		.cfi_offset 4, -16
 7914              		.cfi_offset 5, -12
 7915              		.cfi_offset 6, -8
 7916              		.cfi_offset 14, -4
 7917 0002 0400     		movs	r4, r0
 7918 0004 0D00     		movs	r5, r1
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7919              		.loc 1 444 0
 7920 0006 0028     		cmp	r0, #0
 7921 0008 44D0     		beq	.L712
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7922              		.loc 1 455 0
ARM GAS  /tmp/ccoGswsS.s 			page 229


 7923 000a 8023     		movs	r3, #128
 7924 000c 1B02     		lsls	r3, r3, #8
 7925 000e C269     		ldr	r2, [r0, #28]
 7926 0010 9A42     		cmp	r2, r3
 7927 0012 41D0     		beq	.L713
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7928              		.loc 1 460 0
 7929 0014 8368     		ldr	r3, [r0, #8]
 7930 0016 002B     		cmp	r3, #0
 7931 0018 40D1     		bne	.L714
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7932              		.loc 1 465 0
 7933 001a 8033     		adds	r3, r3, #128
 7934 001c C358     		ldr	r3, [r0, r3]
 7935 001e 002B     		cmp	r3, #0
 7936 0020 2ED0     		beq	.L715
 7937              	.LVL556:
 7938              	.L710:
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7939              		.loc 1 486 0
 7940 0022 8023     		movs	r3, #128
 7941 0024 2422     		movs	r2, #36
 7942 0026 E250     		str	r2, [r4, r3]
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7943              		.loc 1 488 0
 7944 0028 2268     		ldr	r2, [r4]
 7945 002a 1368     		ldr	r3, [r2]
 7946 002c 0121     		movs	r1, #1
 7947 002e 8B43     		bics	r3, r1
 7948 0030 1360     		str	r3, [r2]
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7949              		.loc 1 491 0
 7950 0032 2000     		movs	r0, r4
 7951 0034 FFF7FEFF 		bl	UART_SetConfig
 7952              	.LVL557:
 7953 0038 0128     		cmp	r0, #1
 7954 003a 2CD0     		beq	.L709
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7955              		.loc 1 496 0
 7956 003c A36A     		ldr	r3, [r4, #40]
 7957 003e 002B     		cmp	r3, #0
 7958 0040 24D1     		bne	.L716
 7959              	.L711:
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 7960              		.loc 1 504 0
 7961 0042 2268     		ldr	r2, [r4]
 7962 0044 5368     		ldr	r3, [r2, #4]
 7963 0046 1649     		ldr	r1, .L717
 7964 0048 0B40     		ands	r3, r1
 7965 004a 5360     		str	r3, [r2, #4]
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7966              		.loc 1 505 0
 7967 004c 2268     		ldr	r2, [r4]
 7968 004e 9368     		ldr	r3, [r2, #8]
 7969 0050 2A21     		movs	r1, #42
 7970 0052 8B43     		bics	r3, r1
 7971 0054 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccoGswsS.s 			page 230


 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7972              		.loc 1 508 0
 7973 0056 2268     		ldr	r2, [r4]
 7974 0058 5168     		ldr	r1, [r2, #4]
 7975 005a 8023     		movs	r3, #128
 7976 005c DB01     		lsls	r3, r3, #7
 7977 005e 0B43     		orrs	r3, r1
 7978 0060 5360     		str	r3, [r2, #4]
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7979              		.loc 1 511 0
 7980 0062 2268     		ldr	r2, [r4]
 7981 0064 5368     		ldr	r3, [r2, #4]
 7982 0066 2021     		movs	r1, #32
 7983 0068 8B43     		bics	r3, r1
 7984 006a 1D43     		orrs	r5, r3
 7985              	.LVL558:
 7986 006c 5560     		str	r5, [r2, #4]
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7987              		.loc 1 513 0
 7988 006e 2268     		ldr	r2, [r4]
 7989 0070 1368     		ldr	r3, [r2]
 7990 0072 1F39     		subs	r1, r1, #31
 7991 0074 0B43     		orrs	r3, r1
 7992 0076 1360     		str	r3, [r2]
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 7993              		.loc 1 516 0
 7994 0078 2000     		movs	r0, r4
 7995 007a FFF7FEFF 		bl	UART_CheckIdleState
 7996              	.LVL559:
 7997 007e 0AE0     		b	.L709
 7998              	.LVL560:
 7999              	.L715:
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8000              		.loc 1 468 0
 8001 0080 7C33     		adds	r3, r3, #124
 8002 0082 0022     		movs	r2, #0
 8003 0084 C254     		strb	r2, [r0, r3]
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 8004              		.loc 1 482 0
 8005 0086 FFF7FEFF 		bl	HAL_UART_MspInit
 8006              	.LVL561:
 8007 008a CAE7     		b	.L710
 8008              	.L716:
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8009              		.loc 1 498 0
 8010 008c 2000     		movs	r0, r4
 8011 008e FFF7FEFF 		bl	UART_AdvFeatureConfig
 8012              	.LVL562:
 8013 0092 D6E7     		b	.L711
 8014              	.LVL563:
 8015              	.L712:
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8016              		.loc 1 446 0
 8017 0094 0120     		movs	r0, #1
 8018              	.LVL564:
 8019              	.L709:
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/ccoGswsS.s 			page 231


 8020              		.loc 1 517 0
 8021              		@ sp needed
 8022              	.LVL565:
 8023 0096 70BD     		pop	{r4, r5, r6, pc}
 8024              	.LVL566:
 8025              	.L713:
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8026              		.loc 1 457 0
 8027 0098 0120     		movs	r0, #1
 8028              	.LVL567:
 8029 009a FCE7     		b	.L709
 8030              	.LVL568:
 8031              	.L714:
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8032              		.loc 1 462 0
 8033 009c 0120     		movs	r0, #1
 8034              	.LVL569:
 8035 009e FAE7     		b	.L709
 8036              	.L718:
 8037              		.align	2
 8038              	.L717:
 8039 00a0 FFF7FFFF 		.word	-2049
 8040              		.cfi_endproc
 8041              	.LFE175:
 8043              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 8044              		.align	1
 8045              		.global	HAL_MultiProcessor_Init
 8046              		.syntax unified
 8047              		.code	16
 8048              		.thumb_func
 8049              		.fpu softvfp
 8051              	HAL_MultiProcessor_Init:
 8052              	.LFB176:
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 8053              		.loc 1 539 0
 8054              		.cfi_startproc
 8055              		@ args = 0, pretend = 0, frame = 0
 8056              		@ frame_needed = 0, uses_anonymous_args = 0
 8057              	.LVL570:
 8058 0000 70B5     		push	{r4, r5, r6, lr}
 8059              	.LCFI45:
 8060              		.cfi_def_cfa_offset 16
 8061              		.cfi_offset 4, -16
 8062              		.cfi_offset 5, -12
 8063              		.cfi_offset 6, -8
 8064              		.cfi_offset 14, -4
 8065 0002 0400     		movs	r4, r0
 8066 0004 0D00     		movs	r5, r1
 8067 0006 1600     		movs	r6, r2
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8068              		.loc 1 541 0
 8069 0008 0028     		cmp	r0, #0
 8070 000a 42D0     		beq	.L724
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8071              		.loc 1 549 0
 8072 000c 8023     		movs	r3, #128
 8073 000e C358     		ldr	r3, [r0, r3]
ARM GAS  /tmp/ccoGswsS.s 			page 232


 8074 0010 002B     		cmp	r3, #0
 8075 0012 2CD0     		beq	.L725
 8076              	.LVL571:
 8077              	.L721:
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8078              		.loc 1 570 0
 8079 0014 8023     		movs	r3, #128
 8080 0016 2422     		movs	r2, #36
 8081 0018 E250     		str	r2, [r4, r3]
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8082              		.loc 1 572 0
 8083 001a 2268     		ldr	r2, [r4]
 8084 001c 1368     		ldr	r3, [r2]
 8085 001e 0121     		movs	r1, #1
 8086 0020 8B43     		bics	r3, r1
 8087 0022 1360     		str	r3, [r2]
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8088              		.loc 1 575 0
 8089 0024 2000     		movs	r0, r4
 8090 0026 FFF7FEFF 		bl	UART_SetConfig
 8091              	.LVL572:
 8092 002a 0128     		cmp	r0, #1
 8093 002c 1ED0     		beq	.L720
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8094              		.loc 1 580 0
 8095 002e A36A     		ldr	r3, [r4, #40]
 8096 0030 002B     		cmp	r3, #0
 8097 0032 22D1     		bne	.L726
 8098              	.L722:
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8099              		.loc 1 588 0
 8100 0034 2268     		ldr	r2, [r4]
 8101 0036 5368     		ldr	r3, [r2, #4]
 8102 0038 1749     		ldr	r1, .L728
 8103 003a 0B40     		ands	r3, r1
 8104 003c 5360     		str	r3, [r2, #4]
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8105              		.loc 1 589 0
 8106 003e 2268     		ldr	r2, [r4]
 8107 0040 9368     		ldr	r3, [r2, #8]
 8108 0042 2A21     		movs	r1, #42
 8109 0044 8B43     		bics	r3, r1
 8110 0046 9360     		str	r3, [r2, #8]
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8111              		.loc 1 591 0
 8112 0048 8023     		movs	r3, #128
 8113 004a 1B01     		lsls	r3, r3, #4
 8114 004c 9E42     		cmp	r6, r3
 8115 004e 18D0     		beq	.L727
 8116              	.L723:
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8117              		.loc 1 598 0
 8118 0050 2368     		ldr	r3, [r4]
 8119 0052 1A68     		ldr	r2, [r3]
 8120 0054 1149     		ldr	r1, .L728+4
 8121 0056 0A40     		ands	r2, r1
 8122 0058 3243     		orrs	r2, r6
ARM GAS  /tmp/ccoGswsS.s 			page 233


 8123 005a 1A60     		str	r2, [r3]
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8124              		.loc 1 600 0
 8125 005c 2268     		ldr	r2, [r4]
 8126 005e 1368     		ldr	r3, [r2]
 8127 0060 0121     		movs	r1, #1
 8128 0062 0B43     		orrs	r3, r1
 8129 0064 1360     		str	r3, [r2]
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 8130              		.loc 1 603 0
 8131 0066 2000     		movs	r0, r4
 8132 0068 FFF7FEFF 		bl	UART_CheckIdleState
 8133              	.LVL573:
 8134              	.L720:
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8135              		.loc 1 604 0
 8136              		@ sp needed
 8137              	.LVL574:
 8138              	.LVL575:
 8139 006c 70BD     		pop	{r4, r5, r6, pc}
 8140              	.LVL576:
 8141              	.L725:
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8142              		.loc 1 552 0
 8143 006e 7C33     		adds	r3, r3, #124
 8144 0070 0022     		movs	r2, #0
 8145              	.LVL577:
 8146 0072 C254     		strb	r2, [r0, r3]
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 8147              		.loc 1 566 0
 8148 0074 FFF7FEFF 		bl	HAL_UART_MspInit
 8149              	.LVL578:
 8150 0078 CCE7     		b	.L721
 8151              	.L726:
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8152              		.loc 1 582 0
 8153 007a 2000     		movs	r0, r4
 8154 007c FFF7FEFF 		bl	UART_AdvFeatureConfig
 8155              	.LVL579:
 8156 0080 D8E7     		b	.L722
 8157              	.L727:
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8158              		.loc 1 594 0
 8159 0082 2268     		ldr	r2, [r4]
 8160 0084 5368     		ldr	r3, [r2, #4]
 8161 0086 1B02     		lsls	r3, r3, #8
 8162 0088 1B0A     		lsrs	r3, r3, #8
 8163 008a 2D06     		lsls	r5, r5, #24
 8164 008c 1D43     		orrs	r5, r3
 8165 008e 5560     		str	r5, [r2, #4]
 8166 0090 DEE7     		b	.L723
 8167              	.LVL580:
 8168              	.L724:
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8169              		.loc 1 543 0
 8170 0092 0120     		movs	r0, #1
 8171              	.LVL581:
ARM GAS  /tmp/ccoGswsS.s 			page 234


 8172 0094 EAE7     		b	.L720
 8173              	.L729:
 8174 0096 C046     		.align	2
 8175              	.L728:
 8176 0098 FFB7FFFF 		.word	-18433
 8177 009c FFF7FFFF 		.word	-2049
 8178              		.cfi_endproc
 8179              	.LFE176:
 8181              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 8182              		.align	1
 8183              		.global	HAL_MultiProcessor_EnableMuteMode
 8184              		.syntax unified
 8185              		.code	16
 8186              		.thumb_func
 8187              		.fpu softvfp
 8189              	HAL_MultiProcessor_EnableMuteMode:
 8190              	.LFB204:
2636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 8191              		.loc 1 2636 0
 8192              		.cfi_startproc
 8193              		@ args = 0, pretend = 0, frame = 0
 8194              		@ frame_needed = 0, uses_anonymous_args = 0
 8195              	.LVL582:
 8196 0000 10B5     		push	{r4, lr}
 8197              	.LCFI46:
 8198              		.cfi_def_cfa_offset 8
 8199              		.cfi_offset 4, -8
 8200              		.cfi_offset 14, -4
2637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8201              		.loc 1 2637 0
 8202 0002 7C23     		movs	r3, #124
 8203 0004 C35C     		ldrb	r3, [r0, r3]
 8204 0006 012B     		cmp	r3, #1
 8205 0008 10D0     		beq	.L732
2637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8206              		.loc 1 2637 0 is_stmt 0 discriminator 2
 8207 000a 7C23     		movs	r3, #124
 8208 000c 0122     		movs	r2, #1
 8209 000e C254     		strb	r2, [r0, r3]
2639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8210              		.loc 1 2639 0 is_stmt 1 discriminator 2
 8211 0010 7F32     		adds	r2, r2, #127
 8212 0012 583B     		subs	r3, r3, #88
 8213 0014 8350     		str	r3, [r0, r2]
2642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8214              		.loc 1 2642 0 discriminator 2
 8215 0016 0168     		ldr	r1, [r0]
 8216 0018 0C68     		ldr	r4, [r1]
 8217 001a 8023     		movs	r3, #128
 8218 001c 9B01     		lsls	r3, r3, #6
 8219 001e 2343     		orrs	r3, r4
 8220 0020 0B60     		str	r3, [r1]
2644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8221              		.loc 1 2644 0 discriminator 2
 8222 0022 2023     		movs	r3, #32
 8223 0024 8350     		str	r3, [r0, r2]
2646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
ARM GAS  /tmp/ccoGswsS.s 			page 235


 8224              		.loc 1 2646 0 discriminator 2
 8225 0026 FFF7FEFF 		bl	UART_CheckIdleState
 8226              	.LVL583:
 8227              	.L731:
2647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8228              		.loc 1 2647 0
 8229              		@ sp needed
 8230 002a 10BD     		pop	{r4, pc}
 8231              	.LVL584:
 8232              	.L732:
2637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8233              		.loc 1 2637 0
 8234 002c 0220     		movs	r0, #2
 8235              	.LVL585:
 8236 002e FCE7     		b	.L731
 8237              		.cfi_endproc
 8238              	.LFE204:
 8240              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 8241              		.align	1
 8242              		.global	HAL_MultiProcessor_DisableMuteMode
 8243              		.syntax unified
 8244              		.code	16
 8245              		.thumb_func
 8246              		.fpu softvfp
 8248              	HAL_MultiProcessor_DisableMuteMode:
 8249              	.LFB205:
2656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 8250              		.loc 1 2656 0
 8251              		.cfi_startproc
 8252              		@ args = 0, pretend = 0, frame = 0
 8253              		@ frame_needed = 0, uses_anonymous_args = 0
 8254              	.LVL586:
 8255 0000 10B5     		push	{r4, lr}
 8256              	.LCFI47:
 8257              		.cfi_def_cfa_offset 8
 8258              		.cfi_offset 4, -8
 8259              		.cfi_offset 14, -4
2657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8260              		.loc 1 2657 0
 8261 0002 7C23     		movs	r3, #124
 8262 0004 C35C     		ldrb	r3, [r0, r3]
 8263 0006 012B     		cmp	r3, #1
 8264 0008 0FD0     		beq	.L735
2657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8265              		.loc 1 2657 0 is_stmt 0 discriminator 2
 8266 000a 7C23     		movs	r3, #124
 8267 000c 0122     		movs	r2, #1
 8268 000e C254     		strb	r2, [r0, r3]
2659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8269              		.loc 1 2659 0 is_stmt 1 discriminator 2
 8270 0010 7F32     		adds	r2, r2, #127
 8271 0012 583B     		subs	r3, r3, #88
 8272 0014 8350     		str	r3, [r0, r2]
2662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8273              		.loc 1 2662 0 discriminator 2
 8274 0016 0168     		ldr	r1, [r0]
 8275 0018 0B68     		ldr	r3, [r1]
ARM GAS  /tmp/ccoGswsS.s 			page 236


 8276 001a 054C     		ldr	r4, .L736
 8277 001c 2340     		ands	r3, r4
 8278 001e 0B60     		str	r3, [r1]
2664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8279              		.loc 1 2664 0 discriminator 2
 8280 0020 2023     		movs	r3, #32
 8281 0022 8350     		str	r3, [r0, r2]
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 8282              		.loc 1 2666 0 discriminator 2
 8283 0024 FFF7FEFF 		bl	UART_CheckIdleState
 8284              	.LVL587:
 8285              	.L734:
2667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8286              		.loc 1 2667 0
 8287              		@ sp needed
 8288 0028 10BD     		pop	{r4, pc}
 8289              	.LVL588:
 8290              	.L735:
2657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8291              		.loc 1 2657 0
 8292 002a 0220     		movs	r0, #2
 8293              	.LVL589:
 8294 002c FCE7     		b	.L734
 8295              	.L737:
 8296 002e C046     		.align	2
 8297              	.L736:
 8298 0030 FFDFFFFF 		.word	-8193
 8299              		.cfi_endproc
 8300              	.LFE205:
 8302              		.text
 8303              	.Letext0:
 8304              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 8305              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 8306              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 8307              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 8308              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 8309              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 8310              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 8311              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 8312              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 8313              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 8314              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 8315              		.file 13 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h"
ARM GAS  /tmp/ccoGswsS.s 			page 237


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_uart.c
     /tmp/ccoGswsS.s:16     .text.UART_EndTxTransfer:00000000 $t
     /tmp/ccoGswsS.s:22     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
     /tmp/ccoGswsS.s:53     .text.UART_EndTxTransfer:0000001c $d
     /tmp/ccoGswsS.s:58     .text.UART_EndRxTransfer:00000000 $t
     /tmp/ccoGswsS.s:64     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
     /tmp/ccoGswsS.s:97     .text.UART_EndRxTransfer:00000020 $d
     /tmp/ccoGswsS.s:103    .text.UART_TxISR_8BIT:00000000 $t
     /tmp/ccoGswsS.s:109    .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
     /tmp/ccoGswsS.s:168    .text.UART_TxISR_16BIT:00000000 $t
     /tmp/ccoGswsS.s:174    .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
     /tmp/ccoGswsS.s:237    .text.UART_TxISR_8BIT_FIFOEN:00000000 $t
     /tmp/ccoGswsS.s:243    .text.UART_TxISR_8BIT_FIFOEN:00000000 UART_TxISR_8BIT_FIFOEN
     /tmp/ccoGswsS.s:322    .text.UART_TxISR_8BIT_FIFOEN:00000058 $d
     /tmp/ccoGswsS.s:327    .text.UART_TxISR_16BIT_FIFOEN:00000000 $t
     /tmp/ccoGswsS.s:333    .text.UART_TxISR_16BIT_FIFOEN:00000000 UART_TxISR_16BIT_FIFOEN
     /tmp/ccoGswsS.s:416    .text.UART_TxISR_16BIT_FIFOEN:0000005c $d
     /tmp/ccoGswsS.s:421    .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccoGswsS.s:428    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccoGswsS.s:443    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccoGswsS.s:450    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccoGswsS.s:465    .text.HAL_UART_DeInit:00000000 $t
     /tmp/ccoGswsS.s:472    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
     /tmp/ccoGswsS.s:540    .text.HAL_UART_Transmit_IT:00000000 $t
     /tmp/ccoGswsS.s:547    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
     /tmp/ccoGswsS.s:727    .text.HAL_UART_Transmit_IT:000000c4 $d
     /tmp/ccoGswsS.s:735    .text.HAL_UART_Receive_IT:00000000 $t
     /tmp/ccoGswsS.s:742    .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
     /tmp/ccoGswsS.s:1018   .text.HAL_UART_Receive_IT:0000014c $d
     /tmp/ccoGswsS.s:2311   .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
     /tmp/ccoGswsS.s:2511   .text.UART_RxISR_8BIT_FIFOEN:00000000 UART_RxISR_8BIT_FIFOEN
     /tmp/ccoGswsS.s:2663   .text.UART_RxISR_16BIT_FIFOEN:00000000 UART_RxISR_16BIT_FIFOEN
     /tmp/ccoGswsS.s:2411   .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
     /tmp/ccoGswsS.s:1027   .text.HAL_UART_Transmit_DMA:00000000 $t
     /tmp/ccoGswsS.s:1034   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
     /tmp/ccoGswsS.s:1195   .text.HAL_UART_Transmit_DMA:000000c0 $d
     /tmp/ccoGswsS.s:2134   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
     /tmp/ccoGswsS.s:2258   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
     /tmp/ccoGswsS.s:2961   .text.UART_DMAError:00000000 UART_DMAError
     /tmp/ccoGswsS.s:1202   .text.HAL_UART_Receive_DMA:00000000 $t
     /tmp/ccoGswsS.s:1209   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
     /tmp/ccoGswsS.s:1374   .text.HAL_UART_Receive_DMA:000000c8 $d
     /tmp/ccoGswsS.s:2816   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
     /tmp/ccoGswsS.s:2908   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
     /tmp/ccoGswsS.s:1381   .text.HAL_UART_DMAPause:00000000 $t
     /tmp/ccoGswsS.s:1388   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
     /tmp/ccoGswsS.s:1488   .text.HAL_UART_DMAPause:00000068 $d
     /tmp/ccoGswsS.s:1493   .text.HAL_UART_DMAResume:00000000 $t
     /tmp/ccoGswsS.s:1500   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
     /tmp/ccoGswsS.s:1583   .text.HAL_UART_DMAStop:00000000 $t
     /tmp/ccoGswsS.s:1590   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
     /tmp/ccoGswsS.s:1721   .text.HAL_UART_Abort:00000000 $t
     /tmp/ccoGswsS.s:1728   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
     /tmp/ccoGswsS.s:1884   .text.HAL_UART_Abort:000000cc $d
     /tmp/ccoGswsS.s:1890   .text.HAL_UART_AbortTransmit:00000000 $t
     /tmp/ccoGswsS.s:1897   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
ARM GAS  /tmp/ccoGswsS.s 			page 238


     /tmp/ccoGswsS.s:1995   .text.HAL_UART_AbortTransmit:00000078 $d
     /tmp/ccoGswsS.s:2000   .text.HAL_UART_AbortReceive:00000000 $t
     /tmp/ccoGswsS.s:2007   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
     /tmp/ccoGswsS.s:2100   .text.HAL_UART_AbortReceive:00000070 $d
     /tmp/ccoGswsS.s:2106   .text.HAL_UART_TxCpltCallback:00000000 $t
     /tmp/ccoGswsS.s:2113   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
     /tmp/ccoGswsS.s:2128   .text.UART_DMATransmitCplt:00000000 $t
     /tmp/ccoGswsS.s:2189   .text.UART_EndTransmit_IT:00000000 $t
     /tmp/ccoGswsS.s:2195   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
     /tmp/ccoGswsS.s:2230   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
     /tmp/ccoGswsS.s:2237   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccoGswsS.s:2252   .text.UART_DMATxHalfCplt:00000000 $t
     /tmp/ccoGswsS.s:2283   .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/ccoGswsS.s:2290   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/ccoGswsS.s:2305   .text.UART_RxISR_8BIT:00000000 $t
     /tmp/ccoGswsS.s:2400   .text.UART_RxISR_8BIT:00000064 $d
     /tmp/ccoGswsS.s:2405   .text.UART_RxISR_16BIT:00000000 $t
     /tmp/ccoGswsS.s:2500   .text.UART_RxISR_16BIT:00000064 $d
     /tmp/ccoGswsS.s:2505   .text.UART_RxISR_8BIT_FIFOEN:00000000 $t
     /tmp/ccoGswsS.s:2649   .text.UART_RxISR_8BIT_FIFOEN:000000a0 $d
     /tmp/ccoGswsS.s:2657   .text.UART_RxISR_16BIT_FIFOEN:00000000 $t
     /tmp/ccoGswsS.s:2802   .text.UART_RxISR_16BIT_FIFOEN:000000a0 $d
     /tmp/ccoGswsS.s:2810   .text.UART_DMAReceiveCplt:00000000 $t
     /tmp/ccoGswsS.s:2875   .text.UART_DMAReceiveCplt:00000040 $d
     /tmp/ccoGswsS.s:2880   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
     /tmp/ccoGswsS.s:2887   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccoGswsS.s:2902   .text.UART_DMARxHalfCplt:00000000 $t
     /tmp/ccoGswsS.s:2933   .text.HAL_UART_ErrorCallback:00000000 $t
     /tmp/ccoGswsS.s:2940   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
     /tmp/ccoGswsS.s:2955   .text.UART_DMAError:00000000 $t
     /tmp/ccoGswsS.s:3046   .text.HAL_UART_IRQHandler:00000000 $t
     /tmp/ccoGswsS.s:3053   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
     /tmp/ccoGswsS.s:3393   .text.HAL_UART_IRQHandler:0000017c $d
     /tmp/ccoGswsS.s:3405   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
     /tmp/ccoGswsS.s:3399   .text.UART_DMAAbortOnError:00000000 $t
     /tmp/ccoGswsS.s:3437   .text.HAL_UART_AbortCpltCallback:00000000 $t
     /tmp/ccoGswsS.s:3444   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
     /tmp/ccoGswsS.s:3459   .text.HAL_UART_Abort_IT:00000000 $t
     /tmp/ccoGswsS.s:3466   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
     /tmp/ccoGswsS.s:3662   .text.HAL_UART_Abort_IT:000000f0 $d
     /tmp/ccoGswsS.s:3751   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
     /tmp/ccoGswsS.s:3676   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
     /tmp/ccoGswsS.s:3670   .text.UART_DMARxAbortCallback:00000000 $t
     /tmp/ccoGswsS.s:3745   .text.UART_DMATxAbortCallback:00000000 $t
     /tmp/ccoGswsS.s:3827   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
     /tmp/ccoGswsS.s:3834   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccoGswsS.s:3849   .text.HAL_UART_AbortTransmit_IT:00000000 $t
     /tmp/ccoGswsS.s:3856   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
     /tmp/ccoGswsS.s:3968   .text.HAL_UART_AbortTransmit_IT:00000084 $d
     /tmp/ccoGswsS.s:3980   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
     /tmp/ccoGswsS.s:3974   .text.UART_DMATxOnlyAbortCallback:00000000 $t
     /tmp/ccoGswsS.s:4029   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
     /tmp/ccoGswsS.s:4036   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccoGswsS.s:4051   .text.HAL_UART_AbortReceive_IT:00000000 $t
     /tmp/ccoGswsS.s:4058   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
     /tmp/ccoGswsS.s:4166   .text.HAL_UART_AbortReceive_IT:00000084 $d
     /tmp/ccoGswsS.s:4179   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
ARM GAS  /tmp/ccoGswsS.s 			page 239


     /tmp/ccoGswsS.s:4173   .text.UART_DMARxOnlyAbortCallback:00000000 $t
     /tmp/ccoGswsS.s:4222   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
     /tmp/ccoGswsS.s:4229   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccoGswsS.s:4250   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
     /tmp/ccoGswsS.s:4257   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccoGswsS.s:4318   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
     /tmp/ccoGswsS.s:4325   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccoGswsS.s:4386   .text.HAL_LIN_SendBreak:00000000 $t
     /tmp/ccoGswsS.s:4393   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
     /tmp/ccoGswsS.s:4448   .text.HAL_UART_GetState:00000000 $t
     /tmp/ccoGswsS.s:4455   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
     /tmp/ccoGswsS.s:4481   .text.HAL_UART_GetError:00000000 $t
     /tmp/ccoGswsS.s:4488   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
     /tmp/ccoGswsS.s:4509   .text.UART_SetConfig:00000000 $t
     /tmp/ccoGswsS.s:4516   .text.UART_SetConfig:00000000 UART_SetConfig
     /tmp/ccoGswsS.s:5115   .text.UART_SetConfig:00000310 $d
     /tmp/ccoGswsS.s:5125   .text.UART_SetConfig:00000334 $t
     /tmp/ccoGswsS.s:5677   .text.UART_SetConfig:0000061c $d
     /tmp/ccoGswsS.s:5706   .text.UART_SetConfig:0000068c $t
     /tmp/ccoGswsS.s:6299   .text.UART_SetConfig:00000994 $d
     /tmp/ccoGswsS.s:6320   .text.UART_SetConfig:000009e0 $t
     /tmp/ccoGswsS.s:6753   .text.UART_SetConfig:00000bf8 $d
     /tmp/ccoGswsS.s:6773   .text.UART_AdvFeatureConfig:00000000 $t
     /tmp/ccoGswsS.s:6780   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
     /tmp/ccoGswsS.s:6914   .text.UART_AdvFeatureConfig:000000bc $d
     /tmp/ccoGswsS.s:6927   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/ccoGswsS.s:6934   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccoGswsS.s:7028   .text.UART_WaitOnFlagUntilTimeout:00000068 $d
     /tmp/ccoGswsS.s:7033   .text.HAL_UART_Transmit:00000000 $t
     /tmp/ccoGswsS.s:7040   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
     /tmp/ccoGswsS.s:7260   .text.HAL_UART_Receive:00000000 $t
     /tmp/ccoGswsS.s:7267   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
     /tmp/ccoGswsS.s:7563   .text.HAL_UART_Receive:0000015c $d
     /tmp/ccoGswsS.s:7568   .text.UART_CheckIdleState:00000000 $t
     /tmp/ccoGswsS.s:7575   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
     /tmp/ccoGswsS.s:7671   .text.UART_CheckIdleState:0000006c $d
     /tmp/ccoGswsS.s:7676   .text.HAL_UART_Init:00000000 $t
     /tmp/ccoGswsS.s:7683   .text.HAL_UART_Init:00000000 HAL_UART_Init
     /tmp/ccoGswsS.s:7778   .text.HAL_UART_Init:0000006c $d
     /tmp/ccoGswsS.s:7783   .text.HAL_HalfDuplex_Init:00000000 $t
     /tmp/ccoGswsS.s:7790   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
     /tmp/ccoGswsS.s:7891   .text.HAL_HalfDuplex_Init:00000078 $d
     /tmp/ccoGswsS.s:7896   .text.HAL_LIN_Init:00000000 $t
     /tmp/ccoGswsS.s:7903   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
     /tmp/ccoGswsS.s:8039   .text.HAL_LIN_Init:000000a0 $d
     /tmp/ccoGswsS.s:8044   .text.HAL_MultiProcessor_Init:00000000 $t
     /tmp/ccoGswsS.s:8051   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
     /tmp/ccoGswsS.s:8176   .text.HAL_MultiProcessor_Init:00000098 $d
     /tmp/ccoGswsS.s:8182   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
     /tmp/ccoGswsS.s:8189   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccoGswsS.s:8241   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
     /tmp/ccoGswsS.s:8248   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccoGswsS.s:8298   .text.HAL_MultiProcessor_DisableMuteMode:00000030 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
ARM GAS  /tmp/ccoGswsS.s 			page 240


HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_UARTEx_RxFifoFullCallback
HAL_UARTEx_TxFifoEmptyCallback
__aeabi_uidiv
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
