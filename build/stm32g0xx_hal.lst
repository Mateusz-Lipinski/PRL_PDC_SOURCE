ARM GAS  /tmp/ccT0DS2L.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB175:
  25              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @file    stm32g0xx_hal.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   @verbatim
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ==============================================================================
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   @endverbatim
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @attention
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics. 
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * the "License"; You may not use this file except in compliance with the 
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
ARM GAS  /tmp/ccT0DS2L.s 			page 2


  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #include "stm32g0xx_hal.h"
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup STM32G0xx_HAL_Driver
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief HAL module driver
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  * @brief STM32G0xx HAL Driver version number
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****    */
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION_SUB1   (0x03U) /*!< [23:16] sub1 version */
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION_SUB2   (0x00U) /*!< [15:8]  sub2 version */
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION         ((__STM32G0xx_HAL_VERSION_MAIN << 24U)\
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                                         |(__STM32G0xx_HAL_VERSION_SUB1 << 16U)\
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                                         |(__STM32G0xx_HAL_VERSION_SUB2 << 8U )\
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                                         |(__STM32G0xx_HAL_VERSION_RC))
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if defined(VREFBUF)
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define VREFBUF_TIMEOUT_VALUE     10U   /*!<  10 ms */
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* VREFBUF */
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @defgroup HAL_Exported_Variables HAL Exported Variables
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __IO uint32_t uwTick;
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t uwTickPrio = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Exported functions --------------------------------------------------------*/
  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions
ARM GAS  /tmp/ccT0DS2L.s 			page 3


  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group1
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *  @brief    HAL Initialization and Configuration functions
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @verbatim
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****            ##### HAL Initialization and Configuration functions #####
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]  This section provides functions allowing to:
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Initialize the Flash interface the NVIC allocation and initial time base
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****           clock configuration.
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) De-initialize common part of the HAL.
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****           Tick interrupt priority.
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              handled in milliseconds basis.
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****             ISR process will be blocked.
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @endverbatim
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Configure the Flash prefetch and the Instruction cache,
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         the time base source, NVIC and any required global low level hardware
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         by calling the HAL_MspInit() callback function to be optionally defined in user file
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         stm32g0xx_hal_msp.c.
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note   HAL_Init() function is called at the beginning of program after reset and before
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         the clock configuration.
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note   In the default implementation the System Timer (Systick) is used as source of time base
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         The Systick configuration is based on HSI clock, as HSI is the clock
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         used after a system Reset.
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         Once done, time base tick starts incrementing: the tick variable counter is incremented
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         each 1ms in the SysTick_Handler() interrupt handler.
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval HAL status
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Configure Flash prefetch, Instruction cache             */
ARM GAS  /tmp/ccT0DS2L.s 			page 4


 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Default configuration at reset is:                      */
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* - Prefetch disabled                                     */
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* - Instruction cache enabled                             */
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if (INSTRUCTION_CACHE_ENABLE == 0U)
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* INSTRUCTION_CACHE_ENABLE */
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     status = HAL_ERROR;
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   else
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Init the low level hardware */
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_MspInit();
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Return function status */
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return status;
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the source of time base.
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note   This function is optional.
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval HAL status
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Reset of all peripherals */
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_IOP_FORCE_RESET();
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* De-Init the low level hardware */
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_MspDeInit();
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Return function status */
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return HAL_OK;
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Initialize the MSP.
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
ARM GAS  /tmp/ccT0DS2L.s 			page 5


 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_MspInit(void)
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
  26              		.loc 1 207 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****    */
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
  31              		.loc 1 211 0
  32              		@ sp needed
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE175:
  37              		.section	.text.HAL_MspDeInit,"ax",%progbits
  38              		.align	1
  39              		.weak	HAL_MspDeInit
  40              		.syntax unified
  41              		.code	16
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HAL_MspDeInit:
  46              	.LFB176:
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  DeInitializes the MSP.
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_MspDeInit(void)
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
  47              		.loc 1 218 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****    */
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
  52              		.loc 1 222 0
  53              		@ sp needed
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE176:
  58              		.section	.text.HAL_DeInit,"ax",%progbits
  59              		.align	1
  60              		.global	HAL_DeInit
  61              		.syntax unified
  62              		.code	16
  63              		.thumb_func
  64              		.fpu softvfp
  66              	HAL_DeInit:
  67              	.LFB174:
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Reset of all peripherals */
ARM GAS  /tmp/ccT0DS2L.s 			page 6


  68              		.loc 1 181 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 10B5     		push	{r4, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  77              		.loc 1 183 0
  78 0002 084B     		ldr	r3, .L4
  79 0004 0121     		movs	r1, #1
  80 0006 4942     		rsbs	r1, r1, #0
  81 0008 D962     		str	r1, [r3, #44]
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  82              		.loc 1 184 0
  83 000a 0022     		movs	r2, #0
  84 000c DA62     		str	r2, [r3, #44]
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  85              		.loc 1 186 0
  86 000e 1963     		str	r1, [r3, #48]
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  87              		.loc 1 187 0
  88 0010 1A63     		str	r2, [r3, #48]
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  89              		.loc 1 189 0
  90 0012 9962     		str	r1, [r3, #40]
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  91              		.loc 1 190 0
  92 0014 9A62     		str	r2, [r3, #40]
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
  93              		.loc 1 192 0
  94 0016 5962     		str	r1, [r3, #36]
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  95              		.loc 1 193 0
  96 0018 5A62     		str	r2, [r3, #36]
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  97              		.loc 1 196 0
  98 001a FFF7FEFF 		bl	HAL_MspDeInit
  99              	.LVL0:
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 100              		.loc 1 200 0
 101 001e 0020     		movs	r0, #0
 102              		@ sp needed
 103 0020 10BD     		pop	{r4, pc}
 104              	.L5:
 105 0022 C046     		.align	2
 106              	.L4:
 107 0024 00100240 		.word	1073876992
 108              		.cfi_endproc
 109              	.LFE174:
 111              		.global	__aeabi_uidiv
 112              		.section	.text.HAL_InitTick,"ax",%progbits
 113              		.align	1
 114              		.weak	HAL_InitTick
 115              		.syntax unified
ARM GAS  /tmp/ccT0DS2L.s 			page 7


 116              		.code	16
 117              		.thumb_func
 118              		.fpu softvfp
 120              	HAL_InitTick:
 121              	.LFB177:
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief This function configures the source of the time base:
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *        Tick interrupt priority.
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementation  in user file.
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval HAL status
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 122              		.loc 1 241 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              	.LVL1:
 127 0000 10B5     		push	{r4, lr}
 128              	.LCFI1:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132 0002 0400     		movs	r4, r0
 133              	.LVL2:
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   if (uwTickFreq != 0U)
 134              		.loc 1 244 0
 135 0004 114B     		ldr	r3, .L13
 136 0006 1968     		ldr	r1, [r3]
 137 0008 0029     		cmp	r1, #0
 138 000a 01D1     		bne	.L11
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     /*Configure the SysTick to have interrupt in 1ms time basis*/
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     if (HAL_SYSTICK_Config(SystemCoreClock / (1000U /uwTickFreq)) == 0U)
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       /* Configure the SysTick IRQ priority */
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       {
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         uwTickPrio = TickPriority;
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       else
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       {
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         status = HAL_ERROR;
ARM GAS  /tmp/ccT0DS2L.s 			page 8


 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     else
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       status = HAL_ERROR;
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   else
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     status = HAL_ERROR;
 139              		.loc 1 267 0
 140 000c 0120     		movs	r0, #1
 141              	.LVL3:
 142              	.L7:
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Return function status */
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return status;
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 143              		.loc 1 272 0
 144              		@ sp needed
 145              	.LVL4:
 146 000e 10BD     		pop	{r4, pc}
 147              	.LVL5:
 148              	.L11:
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 149              		.loc 1 247 0
 150 0010 FA20     		movs	r0, #250
 151              	.LVL6:
 152 0012 8000     		lsls	r0, r0, #2
 153 0014 FFF7FEFF 		bl	__aeabi_uidiv
 154              	.LVL7:
 155 0018 0100     		movs	r1, r0
 156 001a 0D4B     		ldr	r3, .L13+4
 157 001c 1868     		ldr	r0, [r3]
 158 001e FFF7FEFF 		bl	__aeabi_uidiv
 159              	.LVL8:
 160 0022 FFF7FEFF 		bl	HAL_SYSTICK_Config
 161              	.LVL9:
 162 0026 0028     		cmp	r0, #0
 163 0028 0DD1     		bne	.L9
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       {
 164              		.loc 1 250 0
 165 002a 032C     		cmp	r4, #3
 166 002c 01D9     		bls	.L12
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 167              		.loc 1 257 0
 168 002e 0120     		movs	r0, #1
 169 0030 EDE7     		b	.L7
 170              	.L12:
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         uwTickPrio = TickPriority;
 171              		.loc 1 252 0
 172 0032 0130     		adds	r0, r0, #1
 173 0034 0022     		movs	r2, #0
 174 0036 2100     		movs	r1, r4
 175 0038 4042     		rsbs	r0, r0, #0
 176 003a FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccT0DS2L.s 			page 9


 177              	.LVL10:
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 178              		.loc 1 253 0
 179 003e 054B     		ldr	r3, .L13+8
 180 0040 1C60     		str	r4, [r3]
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 181              		.loc 1 242 0
 182 0042 0020     		movs	r0, #0
 183 0044 E3E7     		b	.L7
 184              	.L9:
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 185              		.loc 1 262 0
 186 0046 0120     		movs	r0, #1
 187 0048 E1E7     		b	.L7
 188              	.L14:
 189 004a C046     		.align	2
 190              	.L13:
 191 004c 00000000 		.word	.LANCHOR0
 192 0050 00000000 		.word	SystemCoreClock
 193 0054 00000000 		.word	.LANCHOR1
 194              		.cfi_endproc
 195              	.LFE177:
 197              		.section	.text.HAL_Init,"ax",%progbits
 198              		.align	1
 199              		.global	HAL_Init
 200              		.syntax unified
 201              		.code	16
 202              		.thumb_func
 203              		.fpu softvfp
 205              	HAL_Init:
 206              	.LFB173:
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 207              		.loc 1 144 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 10B5     		push	{r4, lr}
 212              	.LCFI2:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 4, -8
 215              		.cfi_offset 14, -4
 216              	.LVL11:
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 217              		.loc 1 157 0
 218 0002 084A     		ldr	r2, .L19
 219 0004 1168     		ldr	r1, [r2]
 220 0006 8023     		movs	r3, #128
 221 0008 5B00     		lsls	r3, r3, #1
 222 000a 0B43     		orrs	r3, r1
 223 000c 1360     		str	r3, [r2]
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 224              		.loc 1 161 0
 225 000e 0320     		movs	r0, #3
 226 0010 FFF7FEFF 		bl	HAL_InitTick
 227              	.LVL12:
 228 0014 041E     		subs	r4, r0, #0
 229 0016 02D0     		beq	.L18
ARM GAS  /tmp/ccT0DS2L.s 			page 10


 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 230              		.loc 1 163 0
 231 0018 0124     		movs	r4, #1
 232              	.L16:
 233              	.LVL13:
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 234              		.loc 1 173 0
 235 001a 2000     		movs	r0, r4
 236              		@ sp needed
 237              	.LVL14:
 238 001c 10BD     		pop	{r4, pc}
 239              	.LVL15:
 240              	.L18:
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 241              		.loc 1 168 0
 242 001e FFF7FEFF 		bl	HAL_MspInit
 243              	.LVL16:
 244 0022 FAE7     		b	.L16
 245              	.L20:
 246              		.align	2
 247              	.L19:
 248 0024 00200240 		.word	1073881088
 249              		.cfi_endproc
 250              	.LFE173:
 252              		.section	.text.HAL_IncTick,"ax",%progbits
 253              		.align	1
 254              		.weak	HAL_IncTick
 255              		.syntax unified
 256              		.code	16
 257              		.thumb_func
 258              		.fpu softvfp
 260              	HAL_IncTick:
 261              	.LFB178:
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group2
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *  @brief    HAL Control functions
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @verbatim
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                       ##### HAL Control functions #####
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]  This section provides functions allowing to:
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Provide a tick value in millisecond
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Suspend the time base source interrupt
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Resume the time base source interrupt
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Get the HAL API driver version
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Get the device identifier
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Get the device revision identifier
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @endverbatim
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
ARM GAS  /tmp/ccT0DS2L.s 			page 11


 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *        used as application time base.
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       in SysTick ISR.
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *      implementations in user file.
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_IncTick(void)
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 262              		.loc 1 308 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uwTick += uwTickFreq;
 267              		.loc 1 309 0
 268 0000 034A     		ldr	r2, .L22
 269 0002 1368     		ldr	r3, [r2]
 270 0004 0349     		ldr	r1, .L22+4
 271 0006 0968     		ldr	r1, [r1]
 272 0008 5B18     		adds	r3, r3, r1
 273 000a 1360     		str	r3, [r2]
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 274              		.loc 1 310 0
 275              		@ sp needed
 276 000c 7047     		bx	lr
 277              	.L23:
 278 000e C046     		.align	2
 279              	.L22:
 280 0010 00000000 		.word	uwTick
 281 0014 00000000 		.word	.LANCHOR0
 282              		.cfi_endproc
 283              	.LFE178:
 285              		.section	.text.HAL_GetTick,"ax",%progbits
 286              		.align	1
 287              		.weak	HAL_GetTick
 288              		.syntax unified
 289              		.code	16
 290              		.thumb_func
 291              		.fpu softvfp
 293              	HAL_GetTick:
 294              	.LFB179:
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Provides a tick value in millisecond.
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementations in user file.
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval tick value
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 295              		.loc 1 319 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccT0DS2L.s 			page 12


 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return uwTick;
 300              		.loc 1 320 0
 301 0000 014B     		ldr	r3, .L25
 302 0002 1868     		ldr	r0, [r3]
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 303              		.loc 1 321 0
 304              		@ sp needed
 305 0004 7047     		bx	lr
 306              	.L26:
 307 0006 C046     		.align	2
 308              	.L25:
 309 0008 00000000 		.word	uwTick
 310              		.cfi_endproc
 311              	.LFE179:
 313              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 314              		.align	1
 315              		.global	HAL_GetTickPrio
 316              		.syntax unified
 317              		.code	16
 318              		.thumb_func
 319              		.fpu softvfp
 321              	HAL_GetTickPrio:
 322              	.LFB180:
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief This function returns a tick priority.
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval tick priority
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 323              		.loc 1 328 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return uwTickPrio;
 328              		.loc 1 329 0
 329 0000 014B     		ldr	r3, .L28
 330 0002 1868     		ldr	r0, [r3]
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 331              		.loc 1 330 0
 332              		@ sp needed
 333 0004 7047     		bx	lr
 334              	.L29:
 335 0006 C046     		.align	2
 336              	.L28:
 337 0008 00000000 		.word	.LANCHOR1
 338              		.cfi_endproc
 339              	.LFE180:
 341              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 342              		.align	1
 343              		.global	HAL_SetTickFreq
 344              		.syntax unified
 345              		.code	16
 346              		.thumb_func
ARM GAS  /tmp/ccT0DS2L.s 			page 13


 347              		.fpu softvfp
 349              	HAL_SetTickFreq:
 350              	.LFB181:
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Set new tick Freq.
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval status
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(uint32_t Freq)
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 351              		.loc 1 337 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              	.LVL17:
 356 0000 10B5     		push	{r4, lr}
 357              	.LCFI3:
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 4, -8
 360              		.cfi_offset 14, -4
 361 0002 0400     		movs	r4, r0
 362              	.LVL18:
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   if (uwTickFreq != Freq)
 363              		.loc 1 341 0
 364 0004 074B     		ldr	r3, .L33
 365 0006 1B68     		ldr	r3, [r3]
 366 0008 8342     		cmp	r3, r0
 367 000a 08D0     		beq	.L32
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     /* Apply the new tick Freq  */
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 368              		.loc 1 344 0
 369 000c 064B     		ldr	r3, .L33+4
 370 000e 1868     		ldr	r0, [r3]
 371              	.LVL19:
 372 0010 FFF7FEFF 		bl	HAL_InitTick
 373              	.LVL20:
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     if (status == HAL_OK)
 374              		.loc 1 345 0
 375 0014 0028     		cmp	r0, #0
 376 0016 03D1     		bne	.L31
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       uwTickFreq = Freq;
 377              		.loc 1 347 0
 378 0018 024B     		ldr	r3, .L33
 379 001a 1C60     		str	r4, [r3]
 380 001c 00E0     		b	.L31
 381              	.LVL21:
 382              	.L32:
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 383              		.loc 1 338 0
 384 001e 0020     		movs	r0, #0
 385              	.LVL22:
 386              	.L31:
ARM GAS  /tmp/ccT0DS2L.s 			page 14


 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return status;
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 387              		.loc 1 352 0
 388              		@ sp needed
 389              	.LVL23:
 390 0020 10BD     		pop	{r4, pc}
 391              	.L34:
 392 0022 C046     		.align	2
 393              	.L33:
 394 0024 00000000 		.word	.LANCHOR0
 395 0028 00000000 		.word	.LANCHOR1
 396              		.cfi_endproc
 397              	.LFE181:
 399              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 400              		.align	1
 401              		.global	HAL_GetTickFreq
 402              		.syntax unified
 403              		.code	16
 404              		.thumb_func
 405              		.fpu softvfp
 407              	HAL_GetTickFreq:
 408              	.LFB182:
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief return tick frequency.
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval tick period in Hz
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetTickFreq(void)
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 409              		.loc 1 359 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return uwTickFreq;
 414              		.loc 1 360 0
 415 0000 014B     		ldr	r3, .L36
 416 0002 1868     		ldr	r0, [r3]
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 417              		.loc 1 361 0
 418              		@ sp needed
 419 0004 7047     		bx	lr
 420              	.L37:
 421 0006 C046     		.align	2
 422              	.L36:
 423 0008 00000000 		.word	.LANCHOR0
 424              		.cfi_endproc
 425              	.LFE182:
 427              		.section	.text.HAL_Delay,"ax",%progbits
 428              		.align	1
 429              		.weak	HAL_Delay
 430              		.syntax unified
 431              		.code	16
 432              		.thumb_func
ARM GAS  /tmp/ccT0DS2L.s 			page 15


 433              		.fpu softvfp
 435              	HAL_Delay:
 436              	.LFB183:
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *        on variable incremented.
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is incremented.
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementations in user file.
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 437              		.loc 1 375 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              	.LVL24:
 442 0000 70B5     		push	{r4, r5, r6, lr}
 443              	.LCFI4:
 444              		.cfi_def_cfa_offset 16
 445              		.cfi_offset 4, -16
 446              		.cfi_offset 5, -12
 447              		.cfi_offset 6, -8
 448              		.cfi_offset 14, -4
 449 0002 0400     		movs	r4, r0
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 450              		.loc 1 376 0
 451 0004 FFF7FEFF 		bl	HAL_GetTick
 452              	.LVL25:
 453 0008 0500     		movs	r5, r0
 454              	.LVL26:
 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uint32_t wait = Delay;
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 455              		.loc 1 380 0
 456 000a 631C     		adds	r3, r4, #1
 457 000c 02D0     		beq	.L40
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 458              		.loc 1 382 0
 459 000e 044B     		ldr	r3, .L41
 460 0010 1B68     		ldr	r3, [r3]
 461 0012 E418     		adds	r4, r4, r3
 462              	.LVL27:
 463              	.L40:
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 464              		.loc 1 385 0 discriminator 1
 465 0014 FFF7FEFF 		bl	HAL_GetTick
 466              	.LVL28:
ARM GAS  /tmp/ccT0DS2L.s 			page 16


 467 0018 401B     		subs	r0, r0, r5
 468 001a A042     		cmp	r0, r4
 469 001c FAD3     		bcc	.L40
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 470              		.loc 1 388 0
 471              		@ sp needed
 472              	.LVL29:
 473              	.LVL30:
 474 001e 70BD     		pop	{r4, r5, r6, pc}
 475              	.L42:
 476              		.align	2
 477              	.L41:
 478 0020 00000000 		.word	.LANCHOR0
 479              		.cfi_endproc
 480              	.LFE183:
 482              		.section	.text.HAL_SuspendTick,"ax",%progbits
 483              		.align	1
 484              		.weak	HAL_SuspendTick
 485              		.syntax unified
 486              		.code	16
 487              		.thumb_func
 488              		.fpu softvfp
 490              	HAL_SuspendTick:
 491              	.LFB184:
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Suspend Tick increment.
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is suspended.
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementations in user file.
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_SuspendTick(void)
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 492              		.loc 1 401 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Disable SysTick Interrupt */
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 497              		.loc 1 403 0
 498 0000 024A     		ldr	r2, .L44
 499 0002 1368     		ldr	r3, [r2]
 500 0004 0221     		movs	r1, #2
 501 0006 8B43     		bics	r3, r1
 502 0008 1360     		str	r3, [r2]
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 503              		.loc 1 404 0
 504              		@ sp needed
 505 000a 7047     		bx	lr
 506              	.L45:
ARM GAS  /tmp/ccT0DS2L.s 			page 17


 507              		.align	2
 508              	.L44:
 509 000c 10E000E0 		.word	-536813552
 510              		.cfi_endproc
 511              	.LFE184:
 513              		.section	.text.HAL_ResumeTick,"ax",%progbits
 514              		.align	1
 515              		.weak	HAL_ResumeTick
 516              		.syntax unified
 517              		.code	16
 518              		.thumb_func
 519              		.fpu softvfp
 521              	HAL_ResumeTick:
 522              	.LFB185:
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Resume Tick increment.
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is resumed.
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementations in user file.
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_ResumeTick(void)
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 523              		.loc 1 417 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Enable SysTick Interrupt */
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 528              		.loc 1 419 0
 529 0000 024A     		ldr	r2, .L47
 530 0002 1368     		ldr	r3, [r2]
 531 0004 0221     		movs	r1, #2
 532 0006 0B43     		orrs	r3, r1
 533 0008 1360     		str	r3, [r2]
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 534              		.loc 1 420 0
 535              		@ sp needed
 536 000a 7047     		bx	lr
 537              	.L48:
 538              		.align	2
 539              	.L47:
 540 000c 10E000E0 		.word	-536813552
 541              		.cfi_endproc
 542              	.LFE185:
 544              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 545              		.align	1
 546              		.global	HAL_GetHalVersion
 547              		.syntax unified
 548              		.code	16
 549              		.thumb_func
 550              		.fpu softvfp
ARM GAS  /tmp/ccT0DS2L.s 			page 18


 552              	HAL_GetHalVersion:
 553              	.LFB186:
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns the HAL revision
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 554              		.loc 1 427 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              		@ link register save eliminated.
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return __STM32G0xx_HAL_VERSION;
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 559              		.loc 1 429 0
 560 0000 0048     		ldr	r0, .L50
 561              		@ sp needed
 562 0002 7047     		bx	lr
 563              	.L51:
 564              		.align	2
 565              	.L50:
 566 0004 00000301 		.word	16973824
 567              		.cfi_endproc
 568              	.LFE186:
 570              		.section	.text.HAL_GetREVID,"ax",%progbits
 571              		.align	1
 572              		.global	HAL_GetREVID
 573              		.syntax unified
 574              		.code	16
 575              		.thumb_func
 576              		.fpu softvfp
 578              	HAL_GetREVID:
 579              	.LFB187:
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns the device revision identifier.
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device revision identifier
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetREVID(void)
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 580              		.loc 1 436 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return ((DBG->IDCODE & DBG_IDCODE_REV_ID) >> 16U);
 585              		.loc 1 437 0
 586 0000 014B     		ldr	r3, .L53
 587 0002 1868     		ldr	r0, [r3]
 588 0004 000C     		lsrs	r0, r0, #16
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 589              		.loc 1 438 0
 590              		@ sp needed
 591 0006 7047     		bx	lr
 592              	.L54:
ARM GAS  /tmp/ccT0DS2L.s 			page 19


 593              		.align	2
 594              	.L53:
 595 0008 00580140 		.word	1073829888
 596              		.cfi_endproc
 597              	.LFE187:
 599              		.section	.text.HAL_GetDEVID,"ax",%progbits
 600              		.align	1
 601              		.global	HAL_GetDEVID
 602              		.syntax unified
 603              		.code	16
 604              		.thumb_func
 605              		.fpu softvfp
 607              	HAL_GetDEVID:
 608              	.LFB188:
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns the device identifier.
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device identifier
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 609              		.loc 1 445 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return ((DBG->IDCODE) & DBG_IDCODE_DEV_ID);
 614              		.loc 1 446 0
 615 0000 024B     		ldr	r3, .L56
 616 0002 1868     		ldr	r0, [r3]
 617 0004 0005     		lsls	r0, r0, #20
 618 0006 000D     		lsrs	r0, r0, #20
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 619              		.loc 1 447 0
 620              		@ sp needed
 621 0008 7047     		bx	lr
 622              	.L57:
 623 000a C046     		.align	2
 624              	.L56:
 625 000c 00580140 		.word	1073829888
 626              		.cfi_endproc
 627              	.LFE188:
 629              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 630              		.align	1
 631              		.global	HAL_GetUIDw0
 632              		.syntax unified
 633              		.code	16
 634              		.thumb_func
 635              		.fpu softvfp
 637              	HAL_GetUIDw0:
 638              	.LFB189:
 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device identifier
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
ARM GAS  /tmp/ccT0DS2L.s 			page 20


 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 639              		.loc 1 454 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return (READ_REG(*((uint32_t *)UID_BASE)));
 644              		.loc 1 455 0
 645 0000 014B     		ldr	r3, .L59
 646 0002 1868     		ldr	r0, [r3]
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 647              		.loc 1 456 0
 648              		@ sp needed
 649 0004 7047     		bx	lr
 650              	.L60:
 651 0006 C046     		.align	2
 652              	.L59:
 653 0008 9075FF1F 		.word	536835472
 654              		.cfi_endproc
 655              	.LFE189:
 657              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 658              		.align	1
 659              		.global	HAL_GetUIDw1
 660              		.syntax unified
 661              		.code	16
 662              		.thumb_func
 663              		.fpu softvfp
 665              	HAL_GetUIDw1:
 666              	.LFB190:
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device identifier
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 667              		.loc 1 463 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 672              		.loc 1 464 0
 673 0000 014B     		ldr	r3, .L62
 674 0002 1868     		ldr	r0, [r3]
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 675              		.loc 1 465 0
 676              		@ sp needed
 677 0004 7047     		bx	lr
 678              	.L63:
 679 0006 C046     		.align	2
 680              	.L62:
 681 0008 9475FF1F 		.word	536835476
 682              		.cfi_endproc
 683              	.LFE190:
 685              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 686              		.align	1
ARM GAS  /tmp/ccT0DS2L.s 			page 21


 687              		.global	HAL_GetUIDw2
 688              		.syntax unified
 689              		.code	16
 690              		.thumb_func
 691              		.fpu softvfp
 693              	HAL_GetUIDw2:
 694              	.LFB191:
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device identifier
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 695              		.loc 1 472 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 700              		.loc 1 473 0
 701 0000 014B     		ldr	r3, .L65
 702 0002 1868     		ldr	r0, [r3]
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 703              		.loc 1 474 0
 704              		@ sp needed
 705 0004 7047     		bx	lr
 706              	.L66:
 707 0006 C046     		.align	2
 708              	.L65:
 709 0008 9875FF1F 		.word	536835480
 710              		.cfi_endproc
 711              	.LFE191:
 713              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 714              		.align	1
 715              		.global	HAL_DBGMCU_EnableDBGStopMode
 716              		.syntax unified
 717              		.code	16
 718              		.thumb_func
 719              		.fpu softvfp
 721              	HAL_DBGMCU_EnableDBGStopMode:
 722              	.LFB192:
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group3
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *  @brief    HAL Debug functions
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @verbatim
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                       ##### HAL Debug functions #####
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]  This section provides functions allowing to:
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
ARM GAS  /tmp/ccT0DS2L.s 			page 22


 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @endverbatim
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 723              		.loc 1 500 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(DBG->CR, DBG_CR_DBG_STOP);
 728              		.loc 1 501 0
 729 0000 024A     		ldr	r2, .L68
 730 0002 5368     		ldr	r3, [r2, #4]
 731 0004 0221     		movs	r1, #2
 732 0006 0B43     		orrs	r3, r1
 733 0008 5360     		str	r3, [r2, #4]
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 734              		.loc 1 502 0
 735              		@ sp needed
 736 000a 7047     		bx	lr
 737              	.L69:
 738              		.align	2
 739              	.L68:
 740 000c 00580140 		.word	1073829888
 741              		.cfi_endproc
 742              	.LFE192:
 744              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 745              		.align	1
 746              		.global	HAL_DBGMCU_DisableDBGStopMode
 747              		.syntax unified
 748              		.code	16
 749              		.thumb_func
 750              		.fpu softvfp
 752              	HAL_DBGMCU_DisableDBGStopMode:
 753              	.LFB193:
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 754              		.loc 1 509 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(DBG->CR, DBG_CR_DBG_STOP);
 759              		.loc 1 510 0
 760 0000 024A     		ldr	r2, .L71
ARM GAS  /tmp/ccT0DS2L.s 			page 23


 761 0002 5368     		ldr	r3, [r2, #4]
 762 0004 0221     		movs	r1, #2
 763 0006 8B43     		bics	r3, r1
 764 0008 5360     		str	r3, [r2, #4]
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 765              		.loc 1 511 0
 766              		@ sp needed
 767 000a 7047     		bx	lr
 768              	.L72:
 769              		.align	2
 770              	.L71:
 771 000c 00580140 		.word	1073829888
 772              		.cfi_endproc
 773              	.LFE193:
 775              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 776              		.align	1
 777              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 778              		.syntax unified
 779              		.code	16
 780              		.thumb_func
 781              		.fpu softvfp
 783              	HAL_DBGMCU_EnableDBGStandbyMode:
 784              	.LFB194:
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 785              		.loc 1 518 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              		@ link register save eliminated.
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(DBG->CR, DBG_CR_DBG_STANDBY);
 790              		.loc 1 519 0
 791 0000 024A     		ldr	r2, .L74
 792 0002 5368     		ldr	r3, [r2, #4]
 793 0004 0421     		movs	r1, #4
 794 0006 0B43     		orrs	r3, r1
 795 0008 5360     		str	r3, [r2, #4]
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 796              		.loc 1 520 0
 797              		@ sp needed
 798 000a 7047     		bx	lr
 799              	.L75:
 800              		.align	2
 801              	.L74:
 802 000c 00580140 		.word	1073829888
 803              		.cfi_endproc
 804              	.LFE194:
 806              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 807              		.align	1
 808              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 809              		.syntax unified
 810              		.code	16
ARM GAS  /tmp/ccT0DS2L.s 			page 24


 811              		.thumb_func
 812              		.fpu softvfp
 814              	HAL_DBGMCU_DisableDBGStandbyMode:
 815              	.LFB195:
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 816              		.loc 1 527 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              		@ link register save eliminated.
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(DBG->CR, DBG_CR_DBG_STANDBY);
 821              		.loc 1 528 0
 822 0000 024A     		ldr	r2, .L77
 823 0002 5368     		ldr	r3, [r2, #4]
 824 0004 0421     		movs	r1, #4
 825 0006 8B43     		bics	r3, r1
 826 0008 5360     		str	r3, [r2, #4]
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 827              		.loc 1 529 0
 828              		@ sp needed
 829 000a 7047     		bx	lr
 830              	.L78:
 831              		.align	2
 832              	.L77:
 833 000c 00580140 		.word	1073829888
 834              		.cfi_endproc
 835              	.LFE195:
 837              		.section	.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig,"ax",%progbits
 838              		.align	1
 839              		.global	HAL_SYSCFG_VREFBUF_VoltageScalingConfig
 840              		.syntax unified
 841              		.code	16
 842              		.thumb_func
 843              		.fpu softvfp
 845              	HAL_SYSCFG_VREFBUF_VoltageScalingConfig:
 846              	.LFB196:
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group4
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *  @brief    SYSCFG configuration functions
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @verbatim
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                       ##### HAL SYSCFG configuration functions #####
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]  This section provides functions allowing to:
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable Pin remap
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Configure the Voltage reference buffer
ARM GAS  /tmp/ccT0DS2L.s 			page 25


 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable the Voltage reference buffer
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable the I/O analog switch voltage booster
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable dead battery behavior(*)
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Configure Clamping Diode on specific pins(*)
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****    (*) Feature not available on all devices
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @endverbatim
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if defined(VREFBUF)
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Configure the internal voltage reference buffer voltage scale.
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  VoltageScaling specifies the output voltage to achieve
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be one of the following values:
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_VREFBUF_VoltageScale
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_VREFBUF_VoltageScalingConfig(uint32_t VoltageScaling)
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 847              		.loc 1 563 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852              	.LVL31:
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameters */
 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_VOLTAGE_SCALE(VoltageScaling));
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_VRS, VoltageScaling);
 853              		.loc 1 567 0
 854 0000 034A     		ldr	r2, .L80
 855 0002 1368     		ldr	r3, [r2]
 856 0004 0421     		movs	r1, #4
 857 0006 8B43     		bics	r3, r1
 858 0008 1843     		orrs	r0, r3
 859              	.LVL32:
 860 000a 1060     		str	r0, [r2]
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 861              		.loc 1 568 0
 862              		@ sp needed
 863 000c 7047     		bx	lr
 864              	.L81:
 865 000e C046     		.align	2
 866              	.L80:
 867 0010 30000140 		.word	1073807408
 868              		.cfi_endproc
 869              	.LFE196:
 871              		.section	.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig,"ax",%progbits
 872              		.align	1
 873              		.global	HAL_SYSCFG_VREFBUF_HighImpedanceConfig
 874              		.syntax unified
 875              		.code	16
 876              		.thumb_func
 877              		.fpu softvfp
 879              	HAL_SYSCFG_VREFBUF_HighImpedanceConfig:
 880              	.LFB197:
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
ARM GAS  /tmp/ccT0DS2L.s 			page 26


 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Configure the internal voltage reference buffer high impedance mode.
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  Mode specifies the high impedance mode
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *          This parameter can be one of the following values:
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *          @arg @ref SYSCFG_VREFBUF_HighImpedance
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_VREFBUF_HighImpedanceConfig(uint32_t Mode)
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 881              		.loc 1 578 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              		@ link register save eliminated.
 886              	.LVL33:
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameters */
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_HIGH_IMPEDANCE(Mode));
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_HIZ, Mode);
 887              		.loc 1 582 0
 888 0000 034A     		ldr	r2, .L83
 889 0002 1368     		ldr	r3, [r2]
 890 0004 0221     		movs	r1, #2
 891 0006 8B43     		bics	r3, r1
 892 0008 1843     		orrs	r0, r3
 893              	.LVL34:
 894 000a 1060     		str	r0, [r2]
 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 895              		.loc 1 583 0
 896              		@ sp needed
 897 000c 7047     		bx	lr
 898              	.L84:
 899 000e C046     		.align	2
 900              	.L83:
 901 0010 30000140 		.word	1073807408
 902              		.cfi_endproc
 903              	.LFE197:
 905              		.section	.text.HAL_SYSCFG_VREFBUF_TrimmingConfig,"ax",%progbits
 906              		.align	1
 907              		.global	HAL_SYSCFG_VREFBUF_TrimmingConfig
 908              		.syntax unified
 909              		.code	16
 910              		.thumb_func
 911              		.fpu softvfp
 913              	HAL_SYSCFG_VREFBUF_TrimmingConfig:
 914              	.LFB198:
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Tune the Internal Voltage Reference buffer (VREFBUF).
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_VREFBUF_TrimmingConfig(uint32_t TrimmingValue)
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 915              		.loc 1 590 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccT0DS2L.s 			page 27


 919              		@ link register save eliminated.
 920              	.LVL35:
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameters */
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_TRIMMING(TrimmingValue));
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   MODIFY_REG(VREFBUF->CCR, VREFBUF_CCR_TRIM, TrimmingValue);
 921              		.loc 1 594 0
 922 0000 034A     		ldr	r2, .L86
 923 0002 5368     		ldr	r3, [r2, #4]
 924 0004 3F21     		movs	r1, #63
 925 0006 8B43     		bics	r3, r1
 926 0008 1843     		orrs	r0, r3
 927              	.LVL36:
 928 000a 5060     		str	r0, [r2, #4]
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 929              		.loc 1 595 0
 930              		@ sp needed
 931 000c 7047     		bx	lr
 932              	.L87:
 933 000e C046     		.align	2
 934              	.L86:
 935 0010 30000140 		.word	1073807408
 936              		.cfi_endproc
 937              	.LFE198:
 939              		.section	.text.HAL_SYSCFG_EnableVREFBUF,"ax",%progbits
 940              		.align	1
 941              		.global	HAL_SYSCFG_EnableVREFBUF
 942              		.syntax unified
 943              		.code	16
 944              		.thumb_func
 945              		.fpu softvfp
 947              	HAL_SYSCFG_EnableVREFBUF:
 948              	.LFB199:
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the Internal Voltage Reference buffer (VREFBUF).
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval HAL_OK/HAL_TIMEOUT
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_StatusTypeDef HAL_SYSCFG_EnableVREFBUF(void)
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 949              		.loc 1 602 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 0
 952              		@ frame_needed = 0, uses_anonymous_args = 0
 953 0000 10B5     		push	{r4, lr}
 954              	.LCFI5:
 955              		.cfi_def_cfa_offset 8
 956              		.cfi_offset 4, -8
 957              		.cfi_offset 14, -4
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uint32_t  tickstart;
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 958              		.loc 1 605 0
 959 0002 0A4A     		ldr	r2, .L94
 960 0004 1368     		ldr	r3, [r2]
 961 0006 0121     		movs	r1, #1
 962 0008 0B43     		orrs	r3, r1
ARM GAS  /tmp/ccT0DS2L.s 			page 28


 963 000a 1360     		str	r3, [r2]
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Get Start Tick*/
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   tickstart = HAL_GetTick();
 964              		.loc 1 608 0
 965 000c FFF7FEFF 		bl	HAL_GetTick
 966              	.LVL37:
 967 0010 0400     		movs	r4, r0
 968              	.LVL38:
 969              	.L89:
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Wait for VRR bit  */
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   while (READ_BIT(VREFBUF->CSR, VREFBUF_CSR_VRR) == 0x00U)
 970              		.loc 1 611 0
 971 0012 064B     		ldr	r3, .L94
 972 0014 1B68     		ldr	r3, [r3]
 973 0016 1B07     		lsls	r3, r3, #28
 974 0018 06D4     		bmi	.L93
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     if ((HAL_GetTick() - tickstart) > VREFBUF_TIMEOUT_VALUE)
 975              		.loc 1 613 0
 976 001a FFF7FEFF 		bl	HAL_GetTick
 977              	.LVL39:
 978 001e 001B     		subs	r0, r0, r4
 979 0020 0A28     		cmp	r0, #10
 980 0022 F6D9     		bls	.L89
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       return HAL_TIMEOUT;
 981              		.loc 1 615 0
 982 0024 0320     		movs	r0, #3
 983 0026 00E0     		b	.L90
 984              	.L93:
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return HAL_OK;
 985              		.loc 1 619 0
 986 0028 0020     		movs	r0, #0
 987              	.L90:
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 988              		.loc 1 620 0
 989              		@ sp needed
 990              	.LVL40:
 991 002a 10BD     		pop	{r4, pc}
 992              	.L95:
 993              		.align	2
 994              	.L94:
 995 002c 30000140 		.word	1073807408
 996              		.cfi_endproc
 997              	.LFE199:
 999              		.section	.text.HAL_SYSCFG_DisableVREFBUF,"ax",%progbits
 1000              		.align	1
 1001              		.global	HAL_SYSCFG_DisableVREFBUF
 1002              		.syntax unified
 1003              		.code	16
 1004              		.thumb_func
 1005              		.fpu softvfp
ARM GAS  /tmp/ccT0DS2L.s 			page 29


 1007              	HAL_SYSCFG_DisableVREFBUF:
 1008              	.LFB200:
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the Internal Voltage Reference buffer (VREFBUF).
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_DisableVREFBUF(void)
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 1009              		.loc 1 628 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013              		@ link register save eliminated.
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 1014              		.loc 1 629 0
 1015 0000 024A     		ldr	r2, .L97
 1016 0002 1368     		ldr	r3, [r2]
 1017 0004 0121     		movs	r1, #1
 1018 0006 8B43     		bics	r3, r1
 1019 0008 1360     		str	r3, [r2]
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1020              		.loc 1 630 0
 1021              		@ sp needed
 1022 000a 7047     		bx	lr
 1023              	.L98:
 1024              		.align	2
 1025              	.L97:
 1026 000c 30000140 		.word	1073807408
 1027              		.cfi_endproc
 1028              	.LFE200:
 1030              		.section	.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster,"ax",%progbits
 1031              		.align	1
 1032              		.global	HAL_SYSCFG_EnableIOAnalogSwitchBooster
 1033              		.syntax unified
 1034              		.code	16
 1035              		.thumb_func
 1036              		.fpu softvfp
 1038              	HAL_SYSCFG_EnableIOAnalogSwitchBooster:
 1039              	.LFB201:
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* VREFBUF */
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the I/O analog switch voltage booster
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_EnableIOAnalogSwitchBooster(void)
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 1040              		.loc 1 638 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOSTEN);
 1045              		.loc 1 639 0
 1046 0000 034A     		ldr	r2, .L100
ARM GAS  /tmp/ccT0DS2L.s 			page 30


 1047 0002 1168     		ldr	r1, [r2]
 1048 0004 8023     		movs	r3, #128
 1049 0006 5B00     		lsls	r3, r3, #1
 1050 0008 0B43     		orrs	r3, r1
 1051 000a 1360     		str	r3, [r2]
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1052              		.loc 1 640 0
 1053              		@ sp needed
 1054 000c 7047     		bx	lr
 1055              	.L101:
 1056 000e C046     		.align	2
 1057              	.L100:
 1058 0010 00000140 		.word	1073807360
 1059              		.cfi_endproc
 1060              	.LFE201:
 1062              		.section	.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster,"ax",%progbits
 1063              		.align	1
 1064              		.global	HAL_SYSCFG_DisableIOAnalogSwitchBooster
 1065              		.syntax unified
 1066              		.code	16
 1067              		.thumb_func
 1068              		.fpu softvfp
 1070              	HAL_SYSCFG_DisableIOAnalogSwitchBooster:
 1071              	.LFB202:
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the I/O analog switch voltage booster
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_DisableIOAnalogSwitchBooster(void)
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 1072              		.loc 1 647 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOSTEN);
 1077              		.loc 1 648 0
 1078 0000 024A     		ldr	r2, .L103
 1079 0002 1368     		ldr	r3, [r2]
 1080 0004 0249     		ldr	r1, .L103+4
 1081 0006 0B40     		ands	r3, r1
 1082 0008 1360     		str	r3, [r2]
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1083              		.loc 1 649 0
 1084              		@ sp needed
 1085 000a 7047     		bx	lr
 1086              	.L104:
 1087              		.align	2
 1088              	.L103:
 1089 000c 00000140 		.word	1073807360
 1090 0010 FFFEFFFF 		.word	-257
 1091              		.cfi_endproc
 1092              	.LFE202:
 1094              		.section	.text.HAL_SYSCFG_EnableRemap,"ax",%progbits
 1095              		.align	1
 1096              		.global	HAL_SYSCFG_EnableRemap
ARM GAS  /tmp/ccT0DS2L.s 			page 31


 1097              		.syntax unified
 1098              		.code	16
 1099              		.thumb_func
 1100              		.fpu softvfp
 1102              	HAL_SYSCFG_EnableRemap:
 1103              	.LFB203:
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the remap on PA11_PA12
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  PinRemap specifies which pins have to be remapped
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_REMAP_PA11
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_REMAP_PA12
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_EnableRemap(uint32_t PinRemap)
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 1104              		.loc 1 660 0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 0
 1107              		@ frame_needed = 0, uses_anonymous_args = 0
 1108              		@ link register save eliminated.
 1109              	.LVL41:
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameter */
 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_HAL_REMAP_PIN(PinRemap));
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SYSCFG->CFGR1, PinRemap);
 1110              		.loc 1 663 0
 1111 0000 024A     		ldr	r2, .L106
 1112 0002 1368     		ldr	r3, [r2]
 1113 0004 1843     		orrs	r0, r3
 1114              	.LVL42:
 1115 0006 1060     		str	r0, [r2]
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1116              		.loc 1 664 0
 1117              		@ sp needed
 1118 0008 7047     		bx	lr
 1119              	.L107:
 1120 000a C046     		.align	2
 1121              	.L106:
 1122 000c 00000140 		.word	1073807360
 1123              		.cfi_endproc
 1124              	.LFE203:
 1126              		.section	.text.HAL_SYSCFG_DisableRemap,"ax",%progbits
 1127              		.align	1
 1128              		.global	HAL_SYSCFG_DisableRemap
 1129              		.syntax unified
 1130              		.code	16
 1131              		.thumb_func
 1132              		.fpu softvfp
 1134              	HAL_SYSCFG_DisableRemap:
 1135              	.LFB204:
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the remap on PA11_PA12
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  PinRemap specifies which pins will behave normally
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_REMAP_PA11
ARM GAS  /tmp/ccT0DS2L.s 			page 32


 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_REMAP_PA12
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_DisableRemap(uint32_t PinRemap)
 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 1136              		.loc 1 675 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
 1141              	.LVL43:
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameter */
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_HAL_REMAP_PIN(PinRemap));
 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SYSCFG->CFGR1, PinRemap);
 1142              		.loc 1 678 0
 1143 0000 024A     		ldr	r2, .L109
 1144 0002 1368     		ldr	r3, [r2]
 1145 0004 8343     		bics	r3, r0
 1146 0006 1360     		str	r3, [r2]
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1147              		.loc 1 679 0
 1148              		@ sp needed
 1149 0008 7047     		bx	lr
 1150              	.L110:
 1151 000a C046     		.align	2
 1152              	.L109:
 1153 000c 00000140 		.word	1073807360
 1154              		.cfi_endproc
 1155              	.LFE204:
 1157              		.section	.text.HAL_SYSCFG_StrobeDBattpinsConfig,"ax",%progbits
 1158              		.align	1
 1159              		.global	HAL_SYSCFG_StrobeDBattpinsConfig
 1160              		.syntax unified
 1161              		.code	16
 1162              		.thumb_func
 1163              		.fpu softvfp
 1165              	HAL_SYSCFG_StrobeDBattpinsConfig:
 1166              	.LFB205:
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if defined(STM32G041xx) || defined(STM32G031xx) || defined(STM32G030xx)
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable Clamping Diode on specified IO
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  PinConfig specifies on which pins clamping Diode has to be enabled
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_ClampingDiode
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_EnableClampingDiode(uint32_t PinConfig)
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameter */
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_CLAMPINGDIODE(PinConfig));
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SYSCFG->CFGR2, PinConfig);
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable Clamping Diode on specified IO
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  PinConfig specifies on which pins clamping Diode has to be disabled
ARM GAS  /tmp/ccT0DS2L.s 			page 33


 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_ClampingDiode
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_DisableClampingDiode(uint32_t PinConfig)
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameter */
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_CLAMPINGDIODE(PinConfig));
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SYSCFG->CFGR2, PinConfig);
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if defined (SYSCFG_CFGR1_UCPD1_STROBE) || defined (SYSCFG_CFGR1_UCPD2_STROBE)
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Strobe configuration of GPIO depending on UCPDx dead battery settings
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  ConfigDeadBattery specifies on which pins to make effective or not Dead Battery sw conf
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_UCPD1_STROBE
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_UCPD2_STROBE
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_StrobeDBattpinsConfig(uint32_t ConfigDeadBattery)
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 1167              		.loc 1 721 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              		@ link register save eliminated.
 1172              	.LVL44:
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_DBATT_CONFIG(ConfigDeadBattery));
 723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Change strobe configuration of GPIO depending on UCPDx dead battery settings */
 725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   MODIFY_REG(SYSCFG->CFGR1, (SYSCFG_CFGR1_UCPD1_STROBE | SYSCFG_CFGR1_UCPD2_STROBE), ConfigDeadBatt
 1173              		.loc 1 725 0
 1174 0000 034A     		ldr	r2, .L112
 1175 0002 1368     		ldr	r3, [r2]
 1176 0004 0349     		ldr	r1, .L112+4
 1177 0006 0B40     		ands	r3, r1
 1178 0008 1843     		orrs	r0, r3
 1179              	.LVL45:
 1180 000a 1060     		str	r0, [r2]
 726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1181              		.loc 1 726 0
 1182              		@ sp needed
 1183 000c 7047     		bx	lr
 1184              	.L113:
 1185 000e C046     		.align	2
 1186              	.L112:
 1187 0010 00000140 		.word	1073807360
 1188 0014 FFF9FFFF 		.word	-1537
 1189              		.cfi_endproc
 1190              	.LFE205:
 1192              		.global	uwTickFreq
 1193              		.global	uwTickPrio
 1194              		.comm	uwTick,4,4
 1195              		.section	.data.uwTickFreq,"aw",%progbits
 1196              		.align	2
ARM GAS  /tmp/ccT0DS2L.s 			page 34


 1197              		.set	.LANCHOR0,. + 0
 1200              	uwTickFreq:
 1201 0000 01000000 		.word	1
 1202              		.section	.data.uwTickPrio,"aw",%progbits
 1203              		.align	2
 1204              		.set	.LANCHOR1,. + 0
 1207              	uwTickPrio:
 1208 0000 04000000 		.word	4
 1209              		.text
 1210              	.Letext0:
 1211              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1212              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1213              		.file 4 "Drivers/CMSIS/Include/core_cm0plus.h"
 1214              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 1215              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 1216              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 1217              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 1218              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 1219              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_cortex.h"
ARM GAS  /tmp/ccT0DS2L.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal.c
     /tmp/ccT0DS2L.s:16     .text.HAL_MspInit:00000000 $t
     /tmp/ccT0DS2L.s:23     .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/ccT0DS2L.s:38     .text.HAL_MspDeInit:00000000 $t
     /tmp/ccT0DS2L.s:45     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
     /tmp/ccT0DS2L.s:59     .text.HAL_DeInit:00000000 $t
     /tmp/ccT0DS2L.s:66     .text.HAL_DeInit:00000000 HAL_DeInit
     /tmp/ccT0DS2L.s:107    .text.HAL_DeInit:00000024 $d
     /tmp/ccT0DS2L.s:113    .text.HAL_InitTick:00000000 $t
     /tmp/ccT0DS2L.s:120    .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccT0DS2L.s:191    .text.HAL_InitTick:0000004c $d
     /tmp/ccT0DS2L.s:198    .text.HAL_Init:00000000 $t
     /tmp/ccT0DS2L.s:205    .text.HAL_Init:00000000 HAL_Init
     /tmp/ccT0DS2L.s:248    .text.HAL_Init:00000024 $d
     /tmp/ccT0DS2L.s:253    .text.HAL_IncTick:00000000 $t
     /tmp/ccT0DS2L.s:260    .text.HAL_IncTick:00000000 HAL_IncTick
     /tmp/ccT0DS2L.s:280    .text.HAL_IncTick:00000010 $d
                            *COM*:00000004 uwTick
     /tmp/ccT0DS2L.s:286    .text.HAL_GetTick:00000000 $t
     /tmp/ccT0DS2L.s:293    .text.HAL_GetTick:00000000 HAL_GetTick
     /tmp/ccT0DS2L.s:309    .text.HAL_GetTick:00000008 $d
     /tmp/ccT0DS2L.s:314    .text.HAL_GetTickPrio:00000000 $t
     /tmp/ccT0DS2L.s:321    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
     /tmp/ccT0DS2L.s:337    .text.HAL_GetTickPrio:00000008 $d
     /tmp/ccT0DS2L.s:342    .text.HAL_SetTickFreq:00000000 $t
     /tmp/ccT0DS2L.s:349    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
     /tmp/ccT0DS2L.s:394    .text.HAL_SetTickFreq:00000024 $d
     /tmp/ccT0DS2L.s:400    .text.HAL_GetTickFreq:00000000 $t
     /tmp/ccT0DS2L.s:407    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
     /tmp/ccT0DS2L.s:423    .text.HAL_GetTickFreq:00000008 $d
     /tmp/ccT0DS2L.s:428    .text.HAL_Delay:00000000 $t
     /tmp/ccT0DS2L.s:435    .text.HAL_Delay:00000000 HAL_Delay
     /tmp/ccT0DS2L.s:478    .text.HAL_Delay:00000020 $d
     /tmp/ccT0DS2L.s:483    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccT0DS2L.s:490    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccT0DS2L.s:509    .text.HAL_SuspendTick:0000000c $d
     /tmp/ccT0DS2L.s:514    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccT0DS2L.s:521    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccT0DS2L.s:540    .text.HAL_ResumeTick:0000000c $d
     /tmp/ccT0DS2L.s:545    .text.HAL_GetHalVersion:00000000 $t
     /tmp/ccT0DS2L.s:552    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
     /tmp/ccT0DS2L.s:566    .text.HAL_GetHalVersion:00000004 $d
     /tmp/ccT0DS2L.s:571    .text.HAL_GetREVID:00000000 $t
     /tmp/ccT0DS2L.s:578    .text.HAL_GetREVID:00000000 HAL_GetREVID
     /tmp/ccT0DS2L.s:595    .text.HAL_GetREVID:00000008 $d
     /tmp/ccT0DS2L.s:600    .text.HAL_GetDEVID:00000000 $t
     /tmp/ccT0DS2L.s:607    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
     /tmp/ccT0DS2L.s:625    .text.HAL_GetDEVID:0000000c $d
     /tmp/ccT0DS2L.s:630    .text.HAL_GetUIDw0:00000000 $t
     /tmp/ccT0DS2L.s:637    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
     /tmp/ccT0DS2L.s:653    .text.HAL_GetUIDw0:00000008 $d
     /tmp/ccT0DS2L.s:658    .text.HAL_GetUIDw1:00000000 $t
     /tmp/ccT0DS2L.s:665    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
     /tmp/ccT0DS2L.s:681    .text.HAL_GetUIDw1:00000008 $d
     /tmp/ccT0DS2L.s:686    .text.HAL_GetUIDw2:00000000 $t
     /tmp/ccT0DS2L.s:693    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
ARM GAS  /tmp/ccT0DS2L.s 			page 36


     /tmp/ccT0DS2L.s:709    .text.HAL_GetUIDw2:00000008 $d
     /tmp/ccT0DS2L.s:714    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
     /tmp/ccT0DS2L.s:721    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccT0DS2L.s:740    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
     /tmp/ccT0DS2L.s:745    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
     /tmp/ccT0DS2L.s:752    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccT0DS2L.s:771    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
     /tmp/ccT0DS2L.s:776    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
     /tmp/ccT0DS2L.s:783    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccT0DS2L.s:802    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
     /tmp/ccT0DS2L.s:807    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
     /tmp/ccT0DS2L.s:814    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccT0DS2L.s:833    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
     /tmp/ccT0DS2L.s:838    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:00000000 $t
     /tmp/ccT0DS2L.s:845    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:00000000 HAL_SYSCFG_VREFBUF_VoltageScalingConfig
     /tmp/ccT0DS2L.s:867    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:00000010 $d
     /tmp/ccT0DS2L.s:872    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:00000000 $t
     /tmp/ccT0DS2L.s:879    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:00000000 HAL_SYSCFG_VREFBUF_HighImpedanceConfig
     /tmp/ccT0DS2L.s:901    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:00000010 $d
     /tmp/ccT0DS2L.s:906    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:00000000 $t
     /tmp/ccT0DS2L.s:913    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:00000000 HAL_SYSCFG_VREFBUF_TrimmingConfig
     /tmp/ccT0DS2L.s:935    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:00000010 $d
     /tmp/ccT0DS2L.s:940    .text.HAL_SYSCFG_EnableVREFBUF:00000000 $t
     /tmp/ccT0DS2L.s:947    .text.HAL_SYSCFG_EnableVREFBUF:00000000 HAL_SYSCFG_EnableVREFBUF
     /tmp/ccT0DS2L.s:995    .text.HAL_SYSCFG_EnableVREFBUF:0000002c $d
     /tmp/ccT0DS2L.s:1000   .text.HAL_SYSCFG_DisableVREFBUF:00000000 $t
     /tmp/ccT0DS2L.s:1007   .text.HAL_SYSCFG_DisableVREFBUF:00000000 HAL_SYSCFG_DisableVREFBUF
     /tmp/ccT0DS2L.s:1026   .text.HAL_SYSCFG_DisableVREFBUF:0000000c $d
     /tmp/ccT0DS2L.s:1031   .text.HAL_SYSCFG_EnableIOAnalogSwitchBooster:00000000 $t
     /tmp/ccT0DS2L.s:1038   .text.HAL_SYSCFG_EnableIOAnalogSwitchBooster:00000000 HAL_SYSCFG_EnableIOAnalogSwitchBooster
     /tmp/ccT0DS2L.s:1058   .text.HAL_SYSCFG_EnableIOAnalogSwitchBooster:00000010 $d
     /tmp/ccT0DS2L.s:1063   .text.HAL_SYSCFG_DisableIOAnalogSwitchBooster:00000000 $t
     /tmp/ccT0DS2L.s:1070   .text.HAL_SYSCFG_DisableIOAnalogSwitchBooster:00000000 HAL_SYSCFG_DisableIOAnalogSwitchBooster
     /tmp/ccT0DS2L.s:1089   .text.HAL_SYSCFG_DisableIOAnalogSwitchBooster:0000000c $d
     /tmp/ccT0DS2L.s:1095   .text.HAL_SYSCFG_EnableRemap:00000000 $t
     /tmp/ccT0DS2L.s:1102   .text.HAL_SYSCFG_EnableRemap:00000000 HAL_SYSCFG_EnableRemap
     /tmp/ccT0DS2L.s:1122   .text.HAL_SYSCFG_EnableRemap:0000000c $d
     /tmp/ccT0DS2L.s:1127   .text.HAL_SYSCFG_DisableRemap:00000000 $t
     /tmp/ccT0DS2L.s:1134   .text.HAL_SYSCFG_DisableRemap:00000000 HAL_SYSCFG_DisableRemap
     /tmp/ccT0DS2L.s:1153   .text.HAL_SYSCFG_DisableRemap:0000000c $d
     /tmp/ccT0DS2L.s:1158   .text.HAL_SYSCFG_StrobeDBattpinsConfig:00000000 $t
     /tmp/ccT0DS2L.s:1165   .text.HAL_SYSCFG_StrobeDBattpinsConfig:00000000 HAL_SYSCFG_StrobeDBattpinsConfig
     /tmp/ccT0DS2L.s:1187   .text.HAL_SYSCFG_StrobeDBattpinsConfig:00000010 $d
     /tmp/ccT0DS2L.s:1200   .data.uwTickFreq:00000000 uwTickFreq
     /tmp/ccT0DS2L.s:1207   .data.uwTickPrio:00000000 uwTickPrio
     /tmp/ccT0DS2L.s:1196   .data.uwTickFreq:00000000 $d
     /tmp/ccT0DS2L.s:1203   .data.uwTickPrio:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
