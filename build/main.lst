ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Error_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	Error_Handler
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Error_Handler:
  25              	.LFB286:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "dma.h"
  24:Src/main.c    **** #include "lptim.h"
  25:Src/main.c    **** #include "spi.h"
  26:Src/main.c    **** #include "usart.h"
  27:Src/main.c    **** #include "gpio.h"
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN Includes */
  31:Src/main.c    **** #include "state.h"
  32:Src/main.c    **** #include "usart_utils.h"
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 2


  33:Src/main.c    **** /* USER CODE END Includes */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PD */
  42:Src/main.c    **** /* USER CODE END PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** uint8_t volatile UART_RX_BUFF[UART_RX_BUFFER_LENGTH] = {0};
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** /* USER CODE BEGIN PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PFP */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  63:Src/main.c    **** /* USER CODE BEGIN 0 */
  64:Src/main.c    **** state State = {0};
  65:Src/main.c    **** /* USER CODE END 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /**
  68:Src/main.c    ****   * @brief  The application entry point.
  69:Src/main.c    ****   * @retval int
  70:Src/main.c    ****   */
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  73:Src/main.c    ****   /* USER CODE BEGIN 1 */
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* USER CODE END 1 */
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Src/main.c    ****   HAL_Init();
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* USER CODE BEGIN Init */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE END Init */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* Configure the system clock */
  87:Src/main.c    ****   SystemClock_Config();
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE BEGIN SysInit */
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE END SysInit */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* Initialize all configured peripherals */
  94:Src/main.c    ****   MX_GPIO_Init();
  95:Src/main.c    ****   MX_DMA_Init();
  96:Src/main.c    ****   MX_LPTIM1_Init();
  97:Src/main.c    ****   MX_USART2_UART_Init();
  98:Src/main.c    ****   MX_SPI2_Init();
  99:Src/main.c    ****   /* USER CODE BEGIN 2 */
 100:Src/main.c    **** 
 101:Src/main.c    ****   HAL_LPTIM_MspInit(&hlptim1);
 102:Src/main.c    ****   HAL_LPTIM_Counter_Start_IT(&hlptim1, 250); // 255 for LSE 250 for LSI for 1s timer
 103:Src/main.c    ****   HAL_SPI_MspInit(&hspi2);
 104:Src/main.c    ****   ADC_reset();
 105:Src/main.c    **** 
 106:Src/main.c    ****   SERIAL_WRITE(RESET);
 107:Src/main.c    **** 
 108:Src/main.c    ****   HAL_UART_Receive_DMA(&huart2, UART_RX_BUFF, UART_RX_BUFFER_LENGTH);
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE END 2 */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* Infinite loop */
 113:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 114:Src/main.c    ****   while (1)
 115:Src/main.c    ****   {
 116:Src/main.c    ****     HAL_Delay(1000);
 117:Src/main.c    ****     /* USER CODE END WHILE */
 118:Src/main.c    **** 
 119:Src/main.c    ****     /* USER CODE BEGIN 3 */
 120:Src/main.c    ****   }
 121:Src/main.c    ****   /* USER CODE END 3 */
 122:Src/main.c    **** }
 123:Src/main.c    **** 
 124:Src/main.c    **** /**
 125:Src/main.c    ****   * @brief System Clock Configuration
 126:Src/main.c    ****   * @retval None
 127:Src/main.c    ****   */
 128:Src/main.c    **** void SystemClock_Config(void)
 129:Src/main.c    **** {
 130:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 131:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 132:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 133:Src/main.c    **** 
 134:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 135:Src/main.c    ****   */
 136:Src/main.c    ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 137:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 138:Src/main.c    ****   */
 139:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI | RCC_OSCILLATORTYPE_LSI;
 140:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 141:Src/main.c    ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 142:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 143:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 4


 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 8;
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 151:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 152:Src/main.c    ****   {
 153:Src/main.c    ****     Error_Handler();
 154:Src/main.c    ****   }
 155:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 156:Src/main.c    ****   */
 157:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 158:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 159:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 160:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 161:Src/main.c    **** 
 162:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 163:Src/main.c    ****   {
 164:Src/main.c    ****     Error_Handler();
 165:Src/main.c    ****   }
 166:Src/main.c    ****   /** Initializes the peripherals clocks 
 167:Src/main.c    ****   */
 168:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2 | RCC_PERIPHCLK_LPTIM1;
 169:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 170:Src/main.c    ****   PeriphClkInit.Lptim1ClockSelection = RCC_LPTIM1CLKSOURCE_LSI;
 171:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 172:Src/main.c    ****   {
 173:Src/main.c    ****     Error_Handler();
 174:Src/main.c    ****   }
 175:Src/main.c    **** }
 176:Src/main.c    **** 
 177:Src/main.c    **** /* USER CODE BEGIN 4 */
 178:Src/main.c    **** 
 179:Src/main.c    **** /* USER CODE END 4 */
 180:Src/main.c    **** 
 181:Src/main.c    **** /**
 182:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 183:Src/main.c    ****   * @retval None
 184:Src/main.c    ****   */
 185:Src/main.c    **** void Error_Handler(void)
 186:Src/main.c    **** {
  27              		.loc 1 186 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 187:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 188:Src/main.c    ****   for (int i = 0; i < 10; i++)
  36              		.loc 1 188 3 view .LVU1
  37              	.LBB2:
  38              		.loc 1 188 8 view .LVU2
  39              	.LVL0:
  40              		.loc 1 188 12 is_stmt 0 view .LVU3
  41 0002 0024     		movs	r4, #0
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 5


  42              	.LVL1:
  43              	.L2:
  44              		.loc 1 188 19 is_stmt 1 discriminator 1 view .LVU4
  45              		.loc 1 188 3 is_stmt 0 discriminator 1 view .LVU5
  46 0004 092C     		cmp	r4, #9
  47 0006 09DC     		bgt	.L4
 189:Src/main.c    ****   {
 190:Src/main.c    ****     HAL_GPIO_TogglePin(LED_PHASE_GPIO_Port, LED_PHASE_Pin);
  48              		.loc 1 190 5 is_stmt 1 discriminator 3 view .LVU6
  49 0008 A020     		movs	r0, #160
  50 000a 0121     		movs	r1, #1
  51 000c C005     		lsls	r0, r0, #23
  52 000e FFF7FEFF 		bl	HAL_GPIO_TogglePin
  53              	.LVL2:
 191:Src/main.c    ****     HAL_Delay(100);
  54              		.loc 1 191 5 discriminator 3 view .LVU7
  55 0012 6420     		movs	r0, #100
  56 0014 FFF7FEFF 		bl	HAL_Delay
  57              	.LVL3:
 188:Src/main.c    ****   {
  58              		.loc 1 188 27 discriminator 3 view .LVU8
 188:Src/main.c    ****   {
  59              		.loc 1 188 28 is_stmt 0 discriminator 3 view .LVU9
  60 0018 0134     		adds	r4, r4, #1
  61              	.LVL4:
 188:Src/main.c    ****   {
  62              		.loc 1 188 28 discriminator 3 view .LVU10
  63 001a F3E7     		b	.L2
  64              	.L4:
 188:Src/main.c    ****   {
  65              		.loc 1 188 28 discriminator 3 view .LVU11
  66              	.LBE2:
 192:Src/main.c    ****   }
 193:Src/main.c    ****   HAL_GPIO_WritePin(LED_PHASE_GPIO_Port, LED_PHASE_Pin, 0);
  67              		.loc 1 193 3 is_stmt 1 view .LVU12
  68 001c A020     		movs	r0, #160
  69 001e 0022     		movs	r2, #0
  70 0020 0121     		movs	r1, #1
  71 0022 C005     		lsls	r0, r0, #23
  72 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL5:
 194:Src/main.c    **** 
 195:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 196:Src/main.c    **** 
 197:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 198:Src/main.c    **** }
  74              		.loc 1 198 1 is_stmt 0 view .LVU13
  75              		@ sp needed
  76              	.LVL6:
  77              		.loc 1 198 1 view .LVU14
  78 0028 10BD     		pop	{r4, pc}
  79              		.cfi_endproc
  80              	.LFE286:
  82              		.section	.text.SystemClock_Config,"ax",%progbits
  83              		.align	1
  84              		.global	SystemClock_Config
  85              		.syntax unified
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 6


  86              		.code	16
  87              		.thumb_func
  88              		.fpu softvfp
  90              	SystemClock_Config:
  91              	.LFB285:
 129:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  92              		.loc 1 129 1 is_stmt 1 view -0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 128
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96 0000 00B5     		push	{lr}
  97              	.LCFI1:
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 14, -4
 100 0002 A1B0     		sub	sp, sp, #132
 101              	.LCFI2:
 102              		.cfi_def_cfa_offset 136
 130:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 103              		.loc 1 130 3 view .LVU16
 130:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 104              		.loc 1 130 22 is_stmt 0 view .LVU17
 105 0004 3822     		movs	r2, #56
 106 0006 0021     		movs	r1, #0
 107 0008 12A8     		add	r0, sp, #72
 108 000a FFF7FEFF 		bl	memset
 109              	.LVL7:
 131:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 110              		.loc 1 131 3 is_stmt 1 view .LVU18
 131:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 111              		.loc 1 131 22 is_stmt 0 view .LVU19
 112 000e 1022     		movs	r2, #16
 113 0010 0021     		movs	r1, #0
 114 0012 0EA8     		add	r0, sp, #56
 115 0014 FFF7FEFF 		bl	memset
 116              	.LVL8:
 132:Src/main.c    **** 
 117              		.loc 1 132 3 is_stmt 1 view .LVU20
 132:Src/main.c    **** 
 118              		.loc 1 132 28 is_stmt 0 view .LVU21
 119 0018 3422     		movs	r2, #52
 120 001a 0021     		movs	r1, #0
 121 001c 01A8     		add	r0, sp, #4
 122 001e FFF7FEFF 		bl	memset
 123              	.LVL9:
 136:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 124              		.loc 1 136 3 is_stmt 1 view .LVU22
 125 0022 8020     		movs	r0, #128
 126 0024 8000     		lsls	r0, r0, #2
 127 0026 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 128              	.LVL10:
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 129              		.loc 1 139 3 view .LVU23
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 130              		.loc 1 139 36 is_stmt 0 view .LVU24
 131 002a 0A23     		movs	r3, #10
 132 002c 1293     		str	r3, [sp, #72]
 140:Src/main.c    ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 7


 133              		.loc 1 140 3 is_stmt 1 view .LVU25
 140:Src/main.c    ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 134              		.loc 1 140 30 is_stmt 0 view .LVU26
 135 002e F633     		adds	r3, r3, #246
 136 0030 1593     		str	r3, [sp, #84]
 141:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 137              		.loc 1 141 3 is_stmt 1 view .LVU27
 141:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 138              		.loc 1 141 28 is_stmt 0 view .LVU28
 139 0032 0023     		movs	r3, #0
 140 0034 1693     		str	r3, [sp, #88]
 142:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 141              		.loc 1 142 3 is_stmt 1 view .LVU29
 142:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 142              		.loc 1 142 41 is_stmt 0 view .LVU30
 143 0036 4022     		movs	r2, #64
 144 0038 1792     		str	r2, [sp, #92]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 145              		.loc 1 143 3 is_stmt 1 view .LVU31
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 146              		.loc 1 143 30 is_stmt 0 view .LVU32
 147 003a 3F3A     		subs	r2, r2, #63
 148 003c 1892     		str	r2, [sp, #96]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 149              		.loc 1 144 3 is_stmt 1 view .LVU33
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 150              		.loc 1 144 34 is_stmt 0 view .LVU34
 151 003e 0132     		adds	r2, r2, #1
 152 0040 1992     		str	r2, [sp, #100]
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 153              		.loc 1 145 3 is_stmt 1 view .LVU35
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 154              		.loc 1 145 35 is_stmt 0 view .LVU36
 155 0042 1A92     		str	r2, [sp, #104]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 8;
 156              		.loc 1 146 3 is_stmt 1 view .LVU37
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 8;
 157              		.loc 1 146 30 is_stmt 0 view .LVU38
 158 0044 1B93     		str	r3, [sp, #108]
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 159              		.loc 1 147 3 is_stmt 1 view .LVU39
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 160              		.loc 1 147 30 is_stmt 0 view .LVU40
 161 0046 0833     		adds	r3, r3, #8
 162 0048 1C93     		str	r3, [sp, #112]
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 163              		.loc 1 148 3 is_stmt 1 view .LVU41
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 164              		.loc 1 148 30 is_stmt 0 view .LVU42
 165 004a 8023     		movs	r3, #128
 166 004c 9B02     		lsls	r3, r3, #10
 167 004e 1D93     		str	r3, [sp, #116]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 168              		.loc 1 149 3 is_stmt 1 view .LVU43
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 169              		.loc 1 149 30 is_stmt 0 view .LVU44
 170 0050 8023     		movs	r3, #128
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 8


 171 0052 9B04     		lsls	r3, r3, #18
 172 0054 1E93     		str	r3, [sp, #120]
 150:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 173              		.loc 1 150 3 is_stmt 1 view .LVU45
 150:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 174              		.loc 1 150 30 is_stmt 0 view .LVU46
 175 0056 8023     		movs	r3, #128
 176 0058 9B05     		lsls	r3, r3, #22
 177 005a 1F93     		str	r3, [sp, #124]
 151:Src/main.c    ****   {
 178              		.loc 1 151 3 is_stmt 1 view .LVU47
 151:Src/main.c    ****   {
 179              		.loc 1 151 7 is_stmt 0 view .LVU48
 180 005c 12A8     		add	r0, sp, #72
 181 005e FFF7FEFF 		bl	HAL_RCC_OscConfig
 182              	.LVL11:
 151:Src/main.c    ****   {
 183              		.loc 1 151 6 view .LVU49
 184 0062 0028     		cmp	r0, #0
 185 0064 1AD1     		bne	.L9
 186              	.L6:
 157:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 187              		.loc 1 157 3 is_stmt 1 view .LVU50
 157:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 188              		.loc 1 157 31 is_stmt 0 view .LVU51
 189 0066 0723     		movs	r3, #7
 190 0068 0E93     		str	r3, [sp, #56]
 158:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 191              		.loc 1 158 3 is_stmt 1 view .LVU52
 158:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 192              		.loc 1 158 34 is_stmt 0 view .LVU53
 193 006a 053B     		subs	r3, r3, #5
 194 006c 0F93     		str	r3, [sp, #60]
 159:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 195              		.loc 1 159 3 is_stmt 1 view .LVU54
 159:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 196              		.loc 1 159 35 is_stmt 0 view .LVU55
 197 006e 0023     		movs	r3, #0
 198 0070 1093     		str	r3, [sp, #64]
 160:Src/main.c    **** 
 199              		.loc 1 160 3 is_stmt 1 view .LVU56
 160:Src/main.c    **** 
 200              		.loc 1 160 36 is_stmt 0 view .LVU57
 201 0072 1193     		str	r3, [sp, #68]
 162:Src/main.c    ****   {
 202              		.loc 1 162 3 is_stmt 1 view .LVU58
 162:Src/main.c    ****   {
 203              		.loc 1 162 7 is_stmt 0 view .LVU59
 204 0074 0221     		movs	r1, #2
 205 0076 0EA8     		add	r0, sp, #56
 206 0078 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 207              	.LVL12:
 162:Src/main.c    ****   {
 208              		.loc 1 162 6 view .LVU60
 209 007c 0028     		cmp	r0, #0
 210 007e 10D1     		bne	.L10
 211              	.L7:
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 9


 168:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 212              		.loc 1 168 3 is_stmt 1 view .LVU61
 168:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 213              		.loc 1 168 38 is_stmt 0 view .LVU62
 214 0080 0B4B     		ldr	r3, .L12
 215 0082 0193     		str	r3, [sp, #4]
 169:Src/main.c    ****   PeriphClkInit.Lptim1ClockSelection = RCC_LPTIM1CLKSOURCE_LSI;
 216              		.loc 1 169 3 is_stmt 1 view .LVU63
 169:Src/main.c    ****   PeriphClkInit.Lptim1ClockSelection = RCC_LPTIM1CLKSOURCE_LSI;
 217              		.loc 1 169 38 is_stmt 0 view .LVU64
 218 0084 0023     		movs	r3, #0
 219 0086 0393     		str	r3, [sp, #12]
 170:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 220              		.loc 1 170 3 is_stmt 1 view .LVU65
 170:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 221              		.loc 1 170 38 is_stmt 0 view .LVU66
 222 0088 8023     		movs	r3, #128
 223 008a DB02     		lsls	r3, r3, #11
 224 008c 0793     		str	r3, [sp, #28]
 171:Src/main.c    ****   {
 225              		.loc 1 171 3 is_stmt 1 view .LVU67
 171:Src/main.c    ****   {
 226              		.loc 1 171 7 is_stmt 0 view .LVU68
 227 008e 01A8     		add	r0, sp, #4
 228 0090 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 229              	.LVL13:
 171:Src/main.c    ****   {
 230              		.loc 1 171 6 view .LVU69
 231 0094 0028     		cmp	r0, #0
 232 0096 07D1     		bne	.L11
 233              	.L5:
 175:Src/main.c    **** 
 234              		.loc 1 175 1 view .LVU70
 235 0098 21B0     		add	sp, sp, #132
 236              		@ sp needed
 237 009a 00BD     		pop	{pc}
 238              	.L9:
 153:Src/main.c    ****   }
 239              		.loc 1 153 5 is_stmt 1 view .LVU71
 240 009c FFF7FEFF 		bl	Error_Handler
 241              	.LVL14:
 242 00a0 E1E7     		b	.L6
 243              	.L10:
 164:Src/main.c    ****   }
 244              		.loc 1 164 5 view .LVU72
 245 00a2 FFF7FEFF 		bl	Error_Handler
 246              	.LVL15:
 247 00a6 EBE7     		b	.L7
 248              	.L11:
 173:Src/main.c    ****   }
 249              		.loc 1 173 5 view .LVU73
 250 00a8 FFF7FEFF 		bl	Error_Handler
 251              	.LVL16:
 175:Src/main.c    **** 
 252              		.loc 1 175 1 is_stmt 0 view .LVU74
 253 00ac F4E7     		b	.L5
 254              	.L13:
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 10


 255 00ae C046     		.align	2
 256              	.L12:
 257 00b0 02020000 		.word	514
 258              		.cfi_endproc
 259              	.LFE285:
 261              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 262              		.align	2
 263              	.LC2:
 264 0000 0D524553 		.ascii	"\015RESET\012\000"
 264      45540A00 
 265              		.section	.text.main,"ax",%progbits
 266              		.align	1
 267              		.global	main
 268              		.syntax unified
 269              		.code	16
 270              		.thumb_func
 271              		.fpu softvfp
 273              	main:
 274              	.LFB284:
  72:Src/main.c    ****   /* USER CODE BEGIN 1 */
 275              		.loc 1 72 1 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 104
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279 0000 30B5     		push	{r4, r5, lr}
 280              	.LCFI3:
 281              		.cfi_def_cfa_offset 12
 282              		.cfi_offset 4, -12
 283              		.cfi_offset 5, -8
 284              		.cfi_offset 14, -4
 285 0002 9BB0     		sub	sp, sp, #108
 286              	.LCFI4:
 287              		.cfi_def_cfa_offset 120
  80:Src/main.c    **** 
 288              		.loc 1 80 3 view .LVU76
 289 0004 FFF7FEFF 		bl	HAL_Init
 290              	.LVL17:
  87:Src/main.c    **** 
 291              		.loc 1 87 3 view .LVU77
 292 0008 FFF7FEFF 		bl	SystemClock_Config
 293              	.LVL18:
  94:Src/main.c    ****   MX_DMA_Init();
 294              		.loc 1 94 3 view .LVU78
 295 000c FFF7FEFF 		bl	MX_GPIO_Init
 296              	.LVL19:
  95:Src/main.c    ****   MX_LPTIM1_Init();
 297              		.loc 1 95 3 view .LVU79
 298 0010 FFF7FEFF 		bl	MX_DMA_Init
 299              	.LVL20:
  96:Src/main.c    ****   MX_USART2_UART_Init();
 300              		.loc 1 96 3 view .LVU80
 301 0014 FFF7FEFF 		bl	MX_LPTIM1_Init
 302              	.LVL21:
  97:Src/main.c    ****   MX_SPI2_Init();
 303              		.loc 1 97 3 view .LVU81
 304 0018 FFF7FEFF 		bl	MX_USART2_UART_Init
 305              	.LVL22:
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 11


  98:Src/main.c    ****   /* USER CODE BEGIN 2 */
 306              		.loc 1 98 3 view .LVU82
 307 001c FFF7FEFF 		bl	MX_SPI2_Init
 308              	.LVL23:
 101:Src/main.c    ****   HAL_LPTIM_Counter_Start_IT(&hlptim1, 250); // 255 for LSE 250 for LSI for 1s timer
 309              		.loc 1 101 3 view .LVU83
 310 0020 144C     		ldr	r4, .L16
 311 0022 2000     		movs	r0, r4
 312 0024 FFF7FEFF 		bl	HAL_LPTIM_MspInit
 313              	.LVL24:
 102:Src/main.c    ****   HAL_SPI_MspInit(&hspi2);
 314              		.loc 1 102 3 view .LVU84
 315 0028 FA21     		movs	r1, #250
 316 002a 2000     		movs	r0, r4
 317 002c FFF7FEFF 		bl	HAL_LPTIM_Counter_Start_IT
 318              	.LVL25:
 103:Src/main.c    ****   ADC_reset();
 319              		.loc 1 103 3 view .LVU85
 320 0030 1148     		ldr	r0, .L16+4
 321 0032 FFF7FEFF 		bl	HAL_SPI_MspInit
 322              	.LVL26:
 104:Src/main.c    **** 
 323              		.loc 1 104 3 view .LVU86
 324 0036 FFF7FEFF 		bl	ADC_reset
 325              	.LVL27:
 326              	.LBB3:
 106:Src/main.c    **** 
 327              		.loc 1 106 3 view .LVU87
 328 003a 01AC     		add	r4, sp, #4
 329 003c 6022     		movs	r2, #96
 330 003e 0021     		movs	r1, #0
 331 0040 02A8     		add	r0, sp, #8
 332 0042 FFF7FEFF 		bl	memset
 333              	.LVL28:
 106:Src/main.c    **** 
 334              		.loc 1 106 3 view .LVU88
 335 0046 0D4B     		ldr	r3, .L16+8
 336 0048 2200     		movs	r2, r4
 337 004a 03CB     		ldmia	r3!, {r0, r1}
 338 004c 03C2     		stmia	r2!, {r0, r1}
 339              	.LVL29:
 106:Src/main.c    **** 
 340              		.loc 1 106 3 view .LVU89
 341 004e FA23     		movs	r3, #250
 342 0050 0B4D     		ldr	r5, .L16+12
 343 0052 9B00     		lsls	r3, r3, #2
 344 0054 0722     		movs	r2, #7
 345 0056 2100     		movs	r1, r4
 346 0058 2800     		movs	r0, r5
 347 005a FFF7FEFF 		bl	HAL_UART_Transmit
 348              	.LVL30:
 349              	.LBE3:
 106:Src/main.c    **** 
 350              		.loc 1 106 22 view .LVU90
 108:Src/main.c    **** 
 351              		.loc 1 108 3 view .LVU91
 352 005e 4022     		movs	r2, #64
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 12


 353 0060 0849     		ldr	r1, .L16+16
 354 0062 2800     		movs	r0, r5
 355 0064 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 356              	.LVL31:
 357              	.L15:
 114:Src/main.c    ****   {
 358              		.loc 1 114 3 discriminator 1 view .LVU92
 116:Src/main.c    ****     /* USER CODE END WHILE */
 359              		.loc 1 116 5 discriminator 1 view .LVU93
 360 0068 FA20     		movs	r0, #250
 361 006a 8000     		lsls	r0, r0, #2
 362 006c FFF7FEFF 		bl	HAL_Delay
 363              	.LVL32:
 114:Src/main.c    ****   {
 364              		.loc 1 114 9 discriminator 1 view .LVU94
 365 0070 FAE7     		b	.L15
 366              	.L17:
 367 0072 C046     		.align	2
 368              	.L16:
 369 0074 00000000 		.word	hlptim1
 370 0078 00000000 		.word	hspi2
 371 007c 00000000 		.word	.LC2
 372 0080 00000000 		.word	huart2
 373 0084 00000000 		.word	.LANCHOR0
 374              		.cfi_endproc
 375              	.LFE284:
 377              		.global	State
 378              		.global	UART_RX_BUFF
 379              		.section	.bss.State,"aw",%nobits
 380              		.align	2
 383              	State:
 384 0000 00000000 		.space	4
 385              		.section	.bss.UART_RX_BUFF,"aw",%nobits
 386              		.align	2
 387              		.set	.LANCHOR0,. + 0
 390              	UART_RX_BUFF:
 391 0000 00000000 		.space	64
 391      00000000 
 391      00000000 
 391      00000000 
 391      00000000 
 392              		.text
 393              	.Letext0:
 394              		.file 2 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\machine\\_default_ty
 395              		.file 3 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 396              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 397              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 398              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 399              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 400              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc_ex.h"
 401              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 402              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 403              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_lptim.h"
 404              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h"
 405              		.file 13 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 406              		.file 14 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 407              		.file 15 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 13


 408              		.file 16 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 409              		.file 17 "c:\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\st
 410              		.file 18 "c:\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 411              		.file 19 "Inc/usart.h"
 412              		.file 20 "Inc/lptim.h"
 413              		.file 21 "Inc/spi.h"
 414              		.file 22 "Inc/state.h"
 415              		.file 23 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 416              		.file 24 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_pwr_ex.h"
 417              		.file 25 "Inc/gpio.h"
 418              		.file 26 "Inc/dma.h"
 419              		.file 27 "<built-in>"
ARM GAS  C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:16     .text.Error_Handler:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:24     .text.Error_Handler:00000000 Error_Handler
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:83     .text.SystemClock_Config:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:90     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:257    .text.SystemClock_Config:000000b0 $d
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:262    .rodata.main.str1.4:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:266    .text.main:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:273    .text.main:00000000 main
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:369    .text.main:00000074 $d
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:383    .bss.State:00000000 State
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:390    .bss.UART_RX_BUFF:00000000 UART_RX_BUFF
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:380    .bss.State:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\ccNRZivW.s:386    .bss.UART_RX_BUFF:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_TogglePin
HAL_Delay
HAL_GPIO_WritePin
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_LPTIM1_Init
MX_USART2_UART_Init
MX_SPI2_Init
HAL_LPTIM_MspInit
HAL_LPTIM_Counter_Start_IT
HAL_SPI_MspInit
ADC_reset
HAL_UART_Transmit
HAL_UART_Receive_DMA
hlptim1
hspi2
huart2
