ARM GAS  /tmp/ccQ5vJp4.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_hal_spi.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SPI_WaitFlagStateUntilTimeout:
  23              	.LFB220:
  24              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @file    stm32g0xx_hal_spi.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     [..]
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
ARM GAS  /tmp/ccQ5vJp4.s 			page 2


  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****      [..]
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****      [..]
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        Master Receive mode restriction:
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****      [..]
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        Callback registration:
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           and a pointer to the user callback function.
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           weak function.
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           and the Callback ID.
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           This function allows to reset following callbacks:
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
ARM GAS  /tmp/ccQ5vJp4.s 			page 3


  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        or HAL_SPI_Init() function.
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        When The compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        not defined, the callback registering feature is not available
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****      [..]
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   @endverbatim
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   Additional table :
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |===========================================================================================
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
ARM GAS  /tmp/ccQ5vJp4.s 			page 4


 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |===========================================================================================
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (4bits, 5bits,..., 8bits,...15bits, 16bi
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        @note
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   ******************************************************************************
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @attention
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * All rights reserved.</center></h2>
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   ******************************************************************************
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #include "stm32g0xx_hal.h"
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /** @addtogroup STM32G0xx_HAL_Driver
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @{
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /** @defgroup SPI SPI
ARM GAS  /tmp/ccQ5vJp4.s 			page 5


 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief SPI HAL module driver
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @{
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @{
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @}
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @{
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
ARM GAS  /tmp/ccQ5vJp4.s 			page 6


 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @}
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @{
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****  *  @brief    Initialization and Configuration functions
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****  *
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** @verbatim
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****  ===============================================================================
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****  ===============================================================================
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           the selected configuration:
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (++) Mode
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (++) Direction
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (++) Data Size
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (++) Clock Polarity and Phase
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (++) NSS Management
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (++) BaudRate Prescaler
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (++) FirstBit
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (++) TIMode
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (++) CRC Calculation
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (++) CRC Length, used only with Data8 and Data16
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (++) FIFO reception threshold
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           of the selected SPIx peripheral.
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** @endverbatim
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @{
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t frxth;
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi == NULL)
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQ5vJp4.s 			page 7


 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_ERROR;
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check the parameters */
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Init the SPI Callback settings */
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccQ5vJp4.s 			page 8


 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Align by default the rs fifo threshold on the data size */
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_HF;
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_QF;
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* CRC calculation is valid only for 16Bit and 8 Bit */
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* CRC must be disabled */
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Align the CRC Length on the data size */
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_DATASIZE)
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* CRC Length aligned on the data size : value set by default */
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_16BIT;
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     else
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_8BIT;
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction |
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Configure : CRC Length */
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->Instance->CR1 |= SPI_CR1_CRCL;
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode |
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
ARM GAS  /tmp/ccQ5vJp4.s 			page 9


 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return HAL_OK;
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi == NULL)
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_ERROR;
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check SPI Instance parameter */
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Release Lock */
ARM GAS  /tmp/ccQ5vJp4.s 			page 10


 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return HAL_OK;
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   UNUSED(hspi);
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****    */
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   UNUSED(hspi);
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****    */
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (pCallback == NULL)
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Update the error code */
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccQ5vJp4.s 			page 11


 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process locked */
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     switch (CallbackID)
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       default :
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Update the error code */
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Return error status */
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         status =  HAL_ERROR;
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccQ5vJp4.s 			page 12


 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     switch (CallbackID)
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       default :
 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Update the error code */
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Return error status */
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         status =  HAL_ERROR;
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Update the error code */
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Return error status */
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     status =  HAL_ERROR;
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Release Lock */
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return status;
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process locked */
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     switch (CallbackID)
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
ARM GAS  /tmp/ccQ5vJp4.s 			page 13


 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       default :
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Update the error code */
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Return error status */
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         status =  HAL_ERROR;
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     switch (CallbackID)
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
ARM GAS  /tmp/ccQ5vJp4.s 			page 14


 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       default :
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Update the error code */
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Return error status */
 725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         status =  HAL_ERROR;
 726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
 730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Update the error code */
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Return error status */
 735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     status =  HAL_ERROR;
 736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Release Lock */
 739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return status;
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @}
 745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****  *  @brief   Data transfers functions
 749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****  *
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** @verbatim
 751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   ==============================================================================
 752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                       ##### IO operation functions #####
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****  ===============================================================================
 754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****  [..]
 755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     data transfers.
 757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     (#) There are two modes of transfer:
 761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             after finishing transfer.
 764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             The end of the data processing will be indicated through the
 767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             using DMA mode.
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
ARM GAS  /tmp/ccQ5vJp4.s 			page 15


 776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** @endverbatim
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @{
 778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
 781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
 784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pData pointer to data buffer
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Size amount of data to be sent
 786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Timeout Timeout duration
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
 788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
 792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check Direction parameter */
 796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Locked */
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tickstart = HAL_GetTick();
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   initial_TxXferCount = Size;
 804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_BUSY;
 808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the transaction information */
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /*Init field not used in handle to zero */
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
ARM GAS  /tmp/ccQ5vJp4.s 			page 16


 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Reset CRC Calculation */
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Enable SPI peripheral */
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->TxXferCount--;
 860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount--;
 870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
 872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Timeout management */
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           goto error;
 878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
 884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (hspi->TxXferCount > 1U)
 888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* write on the data register in packing mode */
ARM GAS  /tmp/ccQ5vJp4.s 			page 17


 890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
 895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pTxBuffPtr ++;
 898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount--;
 899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
 907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           /* write on the data register in packing mode */
 909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         else
 914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->TxXferCount--;
 918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
 921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Timeout management */
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           goto error;
 927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable CRC Transmission */
 933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check the end of the transaction */
 940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
ARM GAS  /tmp/ccQ5vJp4.s 			page 18


 947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** error:
 957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Unlocked */
 959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
 961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
 964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
 967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pData pointer to data buffer
 968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Size amount of data to be received
 969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Timeout Timeout duration
 970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
 971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
 972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
 974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
 975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Locked */
 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tickstart = HAL_GetTick();
 989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_BUSY;
 993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the transaction information */
1003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
ARM GAS  /tmp/ccQ5vJp4.s 			page 19


1004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /*Init field not used in handle to zero */
1010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Reset CRC Calculation */
1018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
1022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxXferCount--;
1023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
1027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16bit */
1030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
1033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
1035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Enable SPI peripheral */
1048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
1053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Transfer loop */
1055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Check the RXNE flag */
1058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* read the received data */
ARM GAS  /tmp/ccQ5vJp4.s 			page 20


1061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
1063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount--;
1064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
1066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Timeout management */
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
1070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           goto error;
1072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
1073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
1077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Transfer loop */
1079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Check the RXNE flag */
1082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount--;
1087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
1089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Timeout management */
1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
1093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           goto error;
1095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
1096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Handle the CRC Transmission */
1102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Read the latest data */
1108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* the latest data has not been received */
1111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       goto error;
1113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
1116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
ARM GAS  /tmp/ccQ5vJp4.s 			page 21


1118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     else
1122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Wait the CRC data */
1127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       goto error;
1132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
1135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Read 16bit CRC */
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
1139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     else
1141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Read 8bit CRC */
1143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16B
1146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
1149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           /* Error on the CRC reception */
1150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           goto error;
1153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
1154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
1155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check the end of the transaction */
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if CRC error occurred */
1169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  /tmp/ccQ5vJp4.s 			page 22


1175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** error :
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
1185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
1186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
1188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
1191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Timeout Timeout duration
1195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
1196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
1197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                           uint32_t Timeout)
1199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
1200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint16_t             initial_RxXferCount;
1202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t             tmp_mode;
1203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t             tickstart;
1205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t             spi_cr1;
1207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t             spi_cr2;
1208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t             txallowed = 1U;
1212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check Direction parameter */
1215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Locked */
1218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tickstart = HAL_GetTick();
1222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init temporary variables */
1224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tmp_state           = hspi->State;
1225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   initial_TxXferCount = Size;
1227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   initial_RxXferCount = Size;
1228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   spi_cr1             = READ_REG(hspi->Instance->CR1);
1230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   spi_cr2             = READ_REG(hspi->Instance->CR2);
1231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  /tmp/ccQ5vJp4.s 			page 23


1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the transaction information */
1253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /*Init field not used in handle to zero */
1262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Reset CRC Calculation */
1267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
1274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (initial_RxXferCount > 1U))
1275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 16bit */
1277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
1280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 8bit */
1282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Enable SPI peripheral */
ARM GAS  /tmp/ccQ5vJp4.s 			page 24


1289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->TxXferCount--;
1300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Check TXE flag */
1304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount--;
1309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         txallowed = 0U;
1311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Enable CRC Transmission */
1314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
1316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR
1318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           {
1319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           }
1321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
1323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Check RXNE flag */
1327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount--;
1332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         txallowed = 1U;
1334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
1336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         goto error;
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
1344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
ARM GAS  /tmp/ccQ5vJp4.s 			page 25


1346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (hspi->TxXferCount > 1U)
1348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
1352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
1354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pTxBuffPtr++;
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount--;
1358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Check TXE flag */
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
1366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
1367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
1369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
1370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
1371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         else
1372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
1373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->pTxBuffPtr++;
1375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->TxXferCount--;
1376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
1377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         txallowed = 0U;
1379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Enable CRC Transmission */
1382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
1384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR
1386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           {
1387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           }
1389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
1391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if (hspi->RxXferCount > 1U)
1398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
1399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
1401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
1402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
ARM GAS  /tmp/ccQ5vJp4.s 			page 26


1403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           {
1404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             /* Set RX Fifo threshold before to switch on 8 bit data size */
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           }
1407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
1408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         else
1409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
1410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->pRxBuffPtr++;
1412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->RxXferCount--;
1413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
1414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         txallowed = 1U;
1416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
1418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         goto error;
1421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Wait until TXE flag */
1430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Error on the CRC reception */
1433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       goto error;
1436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Read CRC */
1438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Read 16bit CRC */
1441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
1442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     else
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Read 8bit CRC */
1446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
1449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
1452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           /* Error on the CRC reception */
1453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           goto error;
1456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
1457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
1458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
ARM GAS  /tmp/ccQ5vJp4.s 			page 27


1460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if CRC error occurred */
1464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Clear CRC Flag */
1468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check the end of the transaction */
1475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** error :
1482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
1485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
1486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
1488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
1491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
1494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
1495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
1497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check Direction parameter */
1500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Locked */
1503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
ARM GAS  /tmp/ccQ5vJp4.s 			page 28


1517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the transaction information */
1518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the function for IT treatment */
1531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
1536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Reset CRC Calculation */
1548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
1556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Enable SPI peripheral */
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** error :
1566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
1569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
1571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
ARM GAS  /tmp/ccQ5vJp4.s 			page 29


1574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
1577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
1578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
1580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Locked */
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the transaction information */
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check the data size to adapt Rx threshold and the set the function for IT treatment */
1618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16 bit */
1621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8 bit */
1627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
ARM GAS  /tmp/ccQ5vJp4.s 			page 30


1631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Reset CRC Calculation */
1639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->CRCSize = 1U;
1642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->CRCSize = 2U;
1645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
1649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->CRCSize = 0U;
1651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             process unlock */
1660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Enable SPI peripheral */
1665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** error :
1669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Unlocked */
1670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
1672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
1673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
1678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
1683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
1685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t             tmp_mode;
1686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
ARM GAS  /tmp/ccQ5vJp4.s 			page 31


1688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check Direction parameter */
1690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process locked */
1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init temporary variables */
1696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tmp_state           = hspi->State;
1697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the transaction information */
1719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the function for IT treatment */
1728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
1731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
1732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
1734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
1736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
1737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Reset CRC Calculation */
1741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->CRCSize = 1U;
1744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
ARM GAS  /tmp/ccQ5vJp4.s 			page 32


1745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->CRCSize = 2U;
1747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
1751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->CRCSize = 0U;
1753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if packing mode is enabled and if there is more than 2 data to receive */
1757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (Size >= 2U))
1758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16 bit */
1760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
1763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8 bit */
1765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Enable SPI peripheral */
1775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** error :
1779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Unlocked */
1780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
1782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
1783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
1785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
1788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
1791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
1792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
1794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check tx dma handle */
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check Direction parameter */
1800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
ARM GAS  /tmp/ccQ5vJp4.s 			page 33


1802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Locked */
1803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the transaction information */
1818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Reset CRC Calculation */
1839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the DMA error callback */
1852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
1856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Packing mode is enabled only if the DMA setting is HALWORD */
ARM GAS  /tmp/ccQ5vJp4.s 			page 34


1859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmatx->Init.MemDataAlignment == DMA_MDA
1860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Check the even/odd of the data size + crc if enabled */
1862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if ((hspi->TxXferCount & 0x1U) == 0U)
1863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
1866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     else
1868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
1871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
1872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Update SPI error code */
1878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Enable SPI peripheral */
1889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable Tx DMA Request */
1896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** error :
1899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Unlocked */
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
1902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
1903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
1905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
1909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
1913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
1914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
ARM GAS  /tmp/ccQ5vJp4.s 			page 35


1916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check rx dma handle */
1919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Check tx dma handle */
1926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Locked */
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
1945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the transaction information */
1948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /*Init field not used in handle to zero */
1955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Reset CRC Calculation */
1968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  /tmp/ccQ5vJp4.s 			page 36


1973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
1976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16bit */
1979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
1981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
1982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
1983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
1984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
1987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
1988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 16bit */
1989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
1991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
1992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
1994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
1995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
1996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
1997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
1998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
1999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
2000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
2005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
2008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
2009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the DMA error callback */
2011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
2018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Update SPI error code */
2020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
2025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
2029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQ5vJp4.s 			page 37


2030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Enable SPI peripheral */
2031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
2032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
2036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable Rx DMA Request */
2038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** error:
2041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Unlocked */
2042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
2044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
2048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
2050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
2051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
2052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
2053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Size amount of data to be sent
2054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
2055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
2057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                               uint16_t Size)
2058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t             tmp_mode;
2060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
2061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check rx & tx dma handles */
2064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
2065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
2066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check Direction parameter */
2068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
2069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process locked */
2071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
2072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init temporary variables */
2074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tmp_state           = hspi->State;
2075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
2076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
2078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
2079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_BUSY;
2081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
2082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
2085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
ARM GAS  /tmp/ccQ5vJp4.s 			page 38


2087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
2088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
2091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
2092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
2094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the transaction information */
2097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
2098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
2099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
2100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = Size;
2101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
2102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
2103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = Size;
2104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init field not used in handle to zero */
2106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxISR       = NULL;
2107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
2108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Reset CRC Calculation */
2111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
2114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Reset the threshold bit */
2118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX | SPI_CR2_LDMARX);
2119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* The packing mode management is enabled by the DMA settings according the spi data size */
2121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
2122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 16bit */
2124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
2127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
2129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if ((hspi->TxXferSize & 0x1U) == 0x0U)
2134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
2136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
2137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
2139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
2141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
2142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
ARM GAS  /tmp/ccQ5vJp4.s 			page 39


2144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 16bit */
2148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
2151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
2154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
2156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
2159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
2164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
2165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
2167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
2171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
2173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
2174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
2175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the DMA error callback */
2178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
2185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Update SPI error code */
2187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
2192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable Rx DMA Request */
2195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   is performed in DMA reception complete callback  */
2199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
2200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
ARM GAS  /tmp/ccQ5vJp4.s 			page 40


2201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
2202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
2203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
2205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Update SPI error code */
2208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
2213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
2217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Enable SPI peripheral */
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
2220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
2223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable Tx DMA Request */
2225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** error :
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Unlocked */
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
2231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
2235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi SPI handle.
2236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         This procedure performs following operations :
2239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           - Set handle State to READY
2243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
2245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** */
2246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __IO uint32_t count, resetcount;
2250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Initialized local variable  */
2252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   errorcode = HAL_OK;
2253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   count = resetcount;
2255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
ARM GAS  /tmp/ccQ5vJp4.s 			page 41


2258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
2260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     do
2265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (count == 0U)
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
2270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       count--;
2272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Reset Timeout Counter */
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     count = resetcount;
2276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     do
2283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (count == 0U)
2285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
2288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       count--;
2290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Reset Timeout Counter */
2293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     count = resetcount;
2294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Disable Tx DMA Request */
2313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
2314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
ARM GAS  /tmp/ccQ5vJp4.s 			page 42


2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
2316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Disable SPI Peripheral */
2321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Empty the FRLVL fifo */
2324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
2325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Disable peripheral */
2348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Control the BSY flag */
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick
2352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Empty the FRLVL fifo */
2357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
2358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Disable Rx DMA Request */
2363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
2364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check error during Abort procedure */
2371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
ARM GAS  /tmp/ccQ5vJp4.s 			page 43


2372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Reset errorCode */
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
2385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Restore hspi->state to ready */
2387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
2390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi SPI handle.
2395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         This procedure performs following operations :
2398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           - Set handle State to READY
2402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
2406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** */
2407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t abortcplt ;
2411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __IO uint32_t count, resetcount;
2412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Initialized local variable  */
2414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   errorcode = HAL_OK;
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   abortcplt = 1U;
2416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   count = resetcount;
2418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     do
2428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
ARM GAS  /tmp/ccQ5vJp4.s 			page 44


2429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (count == 0U)
2430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
2433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       count--;
2435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Reset Timeout Counter */
2438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     count = resetcount;
2439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     do
2446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (count == 0U)
2448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
2451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       count--;
2453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Reset Timeout Counter */
2456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     count = resetcount;
2457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****      before any call to DMA Abort functions */
2461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        Otherwise, set it to NULL */
2466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     else
2471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****        Otherwise, set it to NULL */
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     else
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
ARM GAS  /tmp/ccQ5vJp4.s 			page 45


2486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
2500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         abortcplt = 0U;
2505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
2518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
2521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         abortcplt = 0U;
2523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (abortcplt == 1U)
2528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Check error during Abort procedure */
2534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       errorcode = HAL_ERROR;
2538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     else
2540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Reset errorCode */
2542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
ARM GAS  /tmp/ccQ5vJp4.s 			page 46


2543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
2547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
2548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
2556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
2561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
2568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Locked */
2572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
2573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Unlocked */
2578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return HAL_OK;
2581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
2588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Locked */
2592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_LOCK(hspi);
2593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Unlocked */
2598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
ARM GAS  /tmp/ccQ5vJp4.s 			page 47


2600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return HAL_OK;
2601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
2608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****      */
2617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
2622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       errorcode = HAL_ERROR;
2625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
2631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       errorcode = HAL_ERROR;
2634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
2641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
2648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
2652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
2656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
ARM GAS  /tmp/ccQ5vJp4.s 			page 48


2657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxISR(hspi);
2659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return;
2660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
2664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxISR(hspi);
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return;
2667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
2674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
2676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
2681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         return;
2684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
2689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
2692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
2696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
2699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Disable all interrupts */
2704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
2705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
2707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
2711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
ARM GAS  /tmp/ccQ5vJp4.s 			page 49


2714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
2715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
2719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           {
2720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           }
2722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
2723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
2725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
2729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
2730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           {
2731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           }
2733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
2734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
2736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
2737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Call user error callback */
2738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
2741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
2744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return;
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
2753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
2754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   UNUSED(hspi);
2759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****    */
2763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
2769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
ARM GAS  /tmp/ccQ5vJp4.s 			page 50


2771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   UNUSED(hspi);
2775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****    */
2779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
2785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
2786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   UNUSED(hspi);
2791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****    */
2795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
2801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
2802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   UNUSED(hspi);
2807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****    */
2811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
2817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
2818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   UNUSED(hspi);
2823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****    */
2827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
ARM GAS  /tmp/ccQ5vJp4.s 			page 51


2828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
2833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
2834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   UNUSED(hspi);
2839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****    */
2843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  SPI error callback.
2847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
2849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
2850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   UNUSED(hspi);
2855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****    */
2859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****    */
2862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi SPI handle.
2867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
2868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   UNUSED(hspi);
2873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****    */
2877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @}
2881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief   SPI control functions
ARM GAS  /tmp/ccQ5vJp4.s 			page 52


2885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *
2886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** @verbatim
2887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****  ===============================================================================
2888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****  ===============================================================================
2890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     [..]
2891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** @endverbatim
2895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @{
2896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
2902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval SPI state
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Return SPI handle state */
2907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return hspi->State;
2908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Return the SPI error code.
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
2914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Return SPI ErrorCode */
2919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return hspi->ErrorCode;
2920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @}
2924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @}
2928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief   Private functions
2932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @{
2933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
2937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
2940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccQ5vJp4.s 			page 53


2942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
2945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tickstart = HAL_GetTick();
2948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* DMA Normal Mode */
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
2952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable ERR interrupt */
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable Tx DMA Request */
2956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Check the end of the transaction */
2959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
2966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
2968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
2975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Call user error callback */
2976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return;
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
2983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
2984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Call user Tx complete callback */
2985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
2987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
2988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
2991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
2992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
2993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
2994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
2997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
2998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccQ5vJp4.s 			page 54


2999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
3002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tickstart = HAL_GetTick();
3005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* DMA Normal Mode */
3007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
3008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable ERR interrupt */
3010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* CRC handling */
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Wait until RXNE flag */
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
3018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
3019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Error on the CRC reception */
3020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
3022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Read CRC */
3023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
3025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Read 16bit CRC */
3026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         READ_REG(hspi->Instance->DR);
3027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
3028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
3029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
3030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Read 8bit CRC */
3031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
3034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
3035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstar
3036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           {
3037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             /* Error on the CRC reception */
3038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           }
3040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
3041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
3043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
3044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
3048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Check the end of the transaction */
3051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
3054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
ARM GAS  /tmp/ccQ5vJp4.s 			page 55


3056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
3057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Check if CRC error occurred */
3061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
3062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Call user error callback */
3071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
3074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return;
3077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Call user Rx complete callback */
3080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
3082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
3083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
3084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
3089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
3097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tickstart = HAL_GetTick();
3100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* DMA Normal Mode */
3102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
3103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable ERR interrupt */
3105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* CRC handling */
3109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_8BI
3112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
ARM GAS  /tmp/ccQ5vJp4.s 			page 56


3113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_QUARTER_FULL, SPI_DEFAULT
3114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                           tickstart) != HAL_OK)
3115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
3116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           /* Error on the CRC reception */
3117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
3119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
3120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
3122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
3123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
3124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_HALF_FULL, SPI_DEFAULT_TI
3125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
3126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           /* Error on the CRC reception */
3127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
3129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
3130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         READ_REG(hspi->Instance->DR);
3131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
3132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Check the end of the transaction */
3136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
3142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
3145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
3146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Check if CRC error occurred */
3150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
3151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Call user error callback */
3160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
3163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return;
3166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Call user TxRx complete callback */
3169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
ARM GAS  /tmp/ccQ5vJp4.s 			page 57


3170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
3171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
3172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
3173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
3178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
3183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Call user Tx half complete callback */
3187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
3189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
3190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
3191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
3196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
3201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Call user Rx half complete callback */
3205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
3207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
3208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
3209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
3214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Call user TxRx half complete callback */
3223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
3225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
3226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
ARM GAS  /tmp/ccQ5vJp4.s 			page 58


3227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
3232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
3237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
3241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
3244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Call user error callback */
3246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
3249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
3255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hdma DMA handle.
3257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Call user error callback */
3266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
3269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hdma DMA handle.
3279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
ARM GAS  /tmp/ccQ5vJp4.s 			page 59


3284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
3286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable Tx DMA Request */
3288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
3289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable SPI Peripheral */
3296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
3300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
3306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
3308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return;
3310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check no error during Abort procedure */
3318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Reset errorCode */
3321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Call user Abort complete callback */
3332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
3335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
ARM GAS  /tmp/ccQ5vJp4.s 			page 60


3341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hdma DMA handle.
3345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable SPI Peripheral */
3352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable Rx DMA Request */
3357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
3358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Control the BSY flag */
3360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
3361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
3367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return;
3377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check no error during Abort procedure */
3385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Reset errorCode */
3388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
ARM GAS  /tmp/ccQ5vJp4.s 			page 61


3398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Call user Abort complete callback */
3399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
3402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Receive data in packing mode */
3415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->RxXferCount > 1U)
3416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
3419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
3420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
3421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 8bit */
3423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
3424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
3427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
3428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
3430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->pRxBuffPtr++;
3431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxXferCount--;
3432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check end of the reception */
3435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
3441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return;
3443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
ARM GAS  /tmp/ccQ5vJp4.s 			page 62


3455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Regsiter */
3466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->CRCSize--;
3469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check end of the reception */
3471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable RXNE and ERR interrupt */
3474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
3493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->TxXferCount >= 2U)
3494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
3497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
3498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
3500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
3501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->pTxBuffPtr++;
3504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxXferCount--;
3505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check the end of the transmission */
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
ARM GAS  /tmp/ccQ5vJp4.s 			page 63


3512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Disable TXE interrupt */
3516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return;
3518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable TXE interrupt */
3522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount--;
3543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return;
3551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable RXNE interrupt */
3555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
ARM GAS  /tmp/ccQ5vJp4.s 			page 64


3569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Regsiter */
3574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable RXNE interrupt */
3577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount--;
3595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable CRC Transmission */
3597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Disable TXE interrupt */
3605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return;
3607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable TXE interrupt */
3611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
ARM GAS  /tmp/ccQ5vJp4.s 			page 65


3626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->CRCSize--;
3633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
3650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount--;
3652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable CRC Transmission */
3655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return;
3668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
ARM GAS  /tmp/ccQ5vJp4.s 			page 66


3683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount--;
3704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Enable CRC Transmission */
3707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return;
3720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount--;
3737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQ5vJp4.s 			page 67


3740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Enable CRC Transmission */
3744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount--;
3763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Enable CRC Transmission */
3770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *              the configuration information for SPI module.
3781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Flag SPI flag to check
3782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  State flag state to check
3783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Tickstart tick start value
3785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
3786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
  25              		.loc 1 3789 0
  26              		.cfi_startproc
  27              		@ args = 4, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  31              	.LCFI0:
ARM GAS  /tmp/ccQ5vJp4.s 			page 68


  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 3, -24
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 0600     		movs	r6, r0
  40 0004 0C00     		movs	r4, r1
  41 0006 1700     		movs	r7, r2
  42 0008 1D00     		movs	r5, r3
  43              	.LVL1:
  44              	.L3:
3790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
  45              		.loc 1 3790 0
  46 000a 3368     		ldr	r3, [r6]
  47 000c 9B68     		ldr	r3, [r3, #8]
  48 000e 2340     		ands	r3, r4
  49 0010 1B1B     		subs	r3, r3, r4
  50 0012 5A42     		rsbs	r2, r3, #0
  51 0014 5341     		adcs	r3, r3, r2
  52 0016 BB42     		cmp	r3, r7
  53 0018 3BD0     		beq	.L10
3791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
  54              		.loc 1 3792 0
  55 001a 6B1C     		adds	r3, r5, #1
  56 001c F5D0     		beq	.L3
3793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
  57              		.loc 1 3794 0
  58 001e FFF7FEFF 		bl	HAL_GetTick
  59              	.LVL2:
  60 0022 069B     		ldr	r3, [sp, #24]
  61 0024 C01A     		subs	r0, r0, r3
  62 0026 A842     		cmp	r0, r5
  63 0028 01D2     		bcs	.L4
  64              		.loc 1 3794 0 is_stmt 0 discriminator 1
  65 002a 002D     		cmp	r5, #0
  66 002c EDD1     		bne	.L3
  67              	.L4:
3795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
3796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
3798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         and slave for their respective CRC calculation */
3799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
  68              		.loc 1 3801 0 is_stmt 1
  69 002e 3268     		ldr	r2, [r6]
  70 0030 5368     		ldr	r3, [r2, #4]
  71 0032 E021     		movs	r1, #224
  72 0034 8B43     		bics	r3, r1
  73 0036 5360     		str	r3, [r2, #4]
3802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
  74              		.loc 1 3803 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 69


  75 0038 8223     		movs	r3, #130
  76 003a 5B00     		lsls	r3, r3, #1
  77 003c 7268     		ldr	r2, [r6, #4]
  78 003e 9A42     		cmp	r2, r3
  79 0040 0CD0     		beq	.L11
  80              	.L5:
3804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
3806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           /* Disable SPI peripheral */
3807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
3809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Reset CRC Calculation */
3811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  81              		.loc 1 3811 0
  82 0042 8023     		movs	r3, #128
  83 0044 9B01     		lsls	r3, r3, #6
  84 0046 B26A     		ldr	r2, [r6, #40]
  85 0048 9A42     		cmp	r2, r3
  86 004a 16D0     		beq	.L12
  87              	.L7:
3812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
3813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
3815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
  88              		.loc 1 3816 0
  89 004c 5D23     		movs	r3, #93
  90 004e 0122     		movs	r2, #1
  91 0050 F254     		strb	r2, [r6, r3]
3817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Process Unlocked */
3819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
  92              		.loc 1 3819 0
  93 0052 013B     		subs	r3, r3, #1
  94 0054 0022     		movs	r2, #0
  95 0056 F254     		strb	r2, [r6, r3]
3820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         return HAL_TIMEOUT;
  96              		.loc 1 3821 0
  97 0058 0320     		movs	r0, #3
  98 005a 1BE0     		b	.L8
  99              	.L11:
3803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 100              		.loc 1 3803 0 discriminator 1
 101 005c B368     		ldr	r3, [r6, #8]
 102 005e 8022     		movs	r2, #128
 103 0060 1202     		lsls	r2, r2, #8
 104 0062 9342     		cmp	r3, r2
 105 0064 03D0     		beq	.L6
3804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 106              		.loc 1 3804 0
 107 0066 8022     		movs	r2, #128
 108 0068 D200     		lsls	r2, r2, #3
 109 006a 9342     		cmp	r3, r2
 110 006c E9D1     		bne	.L5
 111              	.L6:
ARM GAS  /tmp/ccQ5vJp4.s 			page 70


3807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 112              		.loc 1 3807 0
 113 006e 3268     		ldr	r2, [r6]
 114 0070 1368     		ldr	r3, [r2]
 115 0072 4021     		movs	r1, #64
 116 0074 8B43     		bics	r3, r1
 117 0076 1360     		str	r3, [r2]
 118 0078 E3E7     		b	.L5
 119              	.L12:
3813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 120              		.loc 1 3813 0
 121 007a 3268     		ldr	r2, [r6]
 122 007c 1368     		ldr	r3, [r2]
 123 007e 0649     		ldr	r1, .L13
 124 0080 0B40     		ands	r3, r1
 125 0082 1360     		str	r3, [r2]
 126 0084 3268     		ldr	r2, [r6]
 127 0086 1168     		ldr	r1, [r2]
 128 0088 8023     		movs	r3, #128
 129 008a 9B01     		lsls	r3, r3, #6
 130 008c 0B43     		orrs	r3, r1
 131 008e 1360     		str	r3, [r2]
 132 0090 DCE7     		b	.L7
 133              	.L10:
3822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
3823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return HAL_OK;
 134              		.loc 1 3826 0
 135 0092 0020     		movs	r0, #0
 136              	.L8:
3827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 137              		.loc 1 3827 0
 138              		@ sp needed
 139              	.LVL3:
 140              	.LVL4:
 141              	.LVL5:
 142 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 143              	.L14:
 144 0096 C046     		.align	2
 145              	.L13:
 146 0098 FFDFFFFF 		.word	-8193
 147              		.cfi_endproc
 148              	.LFE220:
 150              		.section	.text.SPI_WaitFifoStateUntilTimeout,"ax",%progbits
 151              		.align	1
 152              		.syntax unified
 153              		.code	16
 154              		.thumb_func
 155              		.fpu softvfp
 157              	SPI_WaitFifoStateUntilTimeout:
 158              	.LFB221:
3828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Handle SPI FIFO Communication Timeout.
3831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccQ5vJp4.s 			page 71


3832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *              the configuration information for SPI module.
3833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Fifo Fifo to check
3834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  State Fifo state to check
3835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Tickstart tick start value
3837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
3838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
3840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
 159              		.loc 1 3841 0
 160              		.cfi_startproc
 161              		@ args = 4, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              	.LVL6:
 164 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 165              	.LCFI1:
 166              		.cfi_def_cfa_offset 24
 167              		.cfi_offset 3, -24
 168              		.cfi_offset 4, -20
 169              		.cfi_offset 5, -16
 170              		.cfi_offset 6, -12
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 0700     		movs	r7, r0
 174 0004 0C00     		movs	r4, r1
 175 0006 1500     		movs	r5, r2
 176 0008 1E00     		movs	r6, r3
3842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 177              		.loc 1 3842 0
 178 000a 01E0     		b	.L18
 179              	.LVL7:
 180              	.L17:
3843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
3845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Read 8bit CRC to flush Data Register */
3847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       READ_REG(*((__IO uint8_t *)&hspi->Instance->DR));
3848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 181              		.loc 1 3850 0
 182 000c 731C     		adds	r3, r6, #1
 183 000e 0CD1     		bne	.L25
 184              	.L18:
3842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 185              		.loc 1 3842 0
 186 0010 3A68     		ldr	r2, [r7]
 187 0012 9368     		ldr	r3, [r2, #8]
 188 0014 2340     		ands	r3, r4
 189 0016 AB42     		cmp	r3, r5
 190 0018 41D0     		beq	.L26
3844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 191              		.loc 1 3844 0
 192 001a C023     		movs	r3, #192
 193 001c DB00     		lsls	r3, r3, #3
 194 001e 9C42     		cmp	r4, r3
ARM GAS  /tmp/ccQ5vJp4.s 			page 72


 195 0020 F4D1     		bne	.L17
3844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 196              		.loc 1 3844 0 is_stmt 0 discriminator 1
 197 0022 002D     		cmp	r5, #0
 198 0024 F2D1     		bne	.L17
3847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 199              		.loc 1 3847 0 is_stmt 1
 200 0026 137B     		ldrb	r3, [r2, #12]
 201 0028 F0E7     		b	.L17
 202              	.L25:
3851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 203              		.loc 1 3852 0
 204 002a FFF7FEFF 		bl	HAL_GetTick
 205              	.LVL8:
 206 002e 069B     		ldr	r3, [sp, #24]
 207 0030 C01A     		subs	r0, r0, r3
 208 0032 B042     		cmp	r0, r6
 209 0034 01D2     		bcs	.L19
 210              		.loc 1 3852 0 is_stmt 0 discriminator 1
 211 0036 002E     		cmp	r6, #0
 212 0038 EAD1     		bne	.L18
 213              	.L19:
3853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
3854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****            on both master and slave sides in order to resynchronize the master
3856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****            and slave for their respective CRC calculation */
3857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 214              		.loc 1 3859 0 is_stmt 1
 215 003a 3A68     		ldr	r2, [r7]
 216 003c 5368     		ldr	r3, [r2, #4]
 217 003e E021     		movs	r1, #224
 218 0040 8B43     		bics	r3, r1
 219 0042 5360     		str	r3, [r2, #4]
3860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 220              		.loc 1 3861 0
 221 0044 8223     		movs	r3, #130
 222 0046 5B00     		lsls	r3, r3, #1
 223 0048 7A68     		ldr	r2, [r7, #4]
 224 004a 9A42     		cmp	r2, r3
 225 004c 0CD0     		beq	.L27
 226              	.L20:
3862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
3864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           /* Disable SPI peripheral */
3865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
3867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Reset CRC Calculation */
3869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 227              		.loc 1 3869 0
 228 004e 8023     		movs	r3, #128
 229 0050 9B01     		lsls	r3, r3, #6
 230 0052 BA6A     		ldr	r2, [r7, #40]
ARM GAS  /tmp/ccQ5vJp4.s 			page 73


 231 0054 9A42     		cmp	r2, r3
 232 0056 16D0     		beq	.L28
 233              	.L22:
3870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
3871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
3873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 234              		.loc 1 3874 0
 235 0058 5D23     		movs	r3, #93
 236 005a 0122     		movs	r2, #1
 237 005c FA54     		strb	r2, [r7, r3]
3875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Process Unlocked */
3877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 238              		.loc 1 3877 0
 239 005e 013B     		subs	r3, r3, #1
 240 0060 0022     		movs	r2, #0
 241 0062 FA54     		strb	r2, [r7, r3]
3878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         return HAL_TIMEOUT;
 242              		.loc 1 3879 0
 243 0064 0320     		movs	r0, #3
 244 0066 1BE0     		b	.L23
 245              	.L27:
3861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 246              		.loc 1 3861 0 discriminator 1
 247 0068 BB68     		ldr	r3, [r7, #8]
 248 006a 8022     		movs	r2, #128
 249 006c 1202     		lsls	r2, r2, #8
 250 006e 9342     		cmp	r3, r2
 251 0070 03D0     		beq	.L21
3862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 252              		.loc 1 3862 0
 253 0072 8022     		movs	r2, #128
 254 0074 D200     		lsls	r2, r2, #3
 255 0076 9342     		cmp	r3, r2
 256 0078 E9D1     		bne	.L20
 257              	.L21:
3865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 258              		.loc 1 3865 0
 259 007a 3A68     		ldr	r2, [r7]
 260 007c 1368     		ldr	r3, [r2]
 261 007e 4021     		movs	r1, #64
 262 0080 8B43     		bics	r3, r1
 263 0082 1360     		str	r3, [r2]
 264 0084 E3E7     		b	.L20
 265              	.L28:
3871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 266              		.loc 1 3871 0
 267 0086 3A68     		ldr	r2, [r7]
 268 0088 1368     		ldr	r3, [r2]
 269 008a 0649     		ldr	r1, .L29
 270 008c 0B40     		ands	r3, r1
 271 008e 1360     		str	r3, [r2]
 272 0090 3A68     		ldr	r2, [r7]
 273 0092 1168     		ldr	r1, [r2]
ARM GAS  /tmp/ccQ5vJp4.s 			page 74


 274 0094 8023     		movs	r3, #128
 275 0096 9B01     		lsls	r3, r3, #6
 276 0098 0B43     		orrs	r3, r1
 277 009a 1360     		str	r3, [r2]
 278 009c DCE7     		b	.L22
 279              	.L26:
3880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
3881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return HAL_OK;
 280              		.loc 1 3884 0
 281 009e 0020     		movs	r0, #0
 282              	.L23:
3885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 283              		.loc 1 3885 0
 284              		@ sp needed
 285              	.LVL9:
 286              	.LVL10:
 287              	.LVL11:
 288              	.LVL12:
 289 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 290              	.L30:
 291 00a2 C046     		.align	2
 292              	.L29:
 293 00a4 FFDFFFFF 		.word	-8193
 294              		.cfi_endproc
 295              	.LFE221:
 297              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 298              		.align	1
 299              		.syntax unified
 300              		.code	16
 301              		.thumb_func
 302              		.fpu softvfp
 304              	SPI_EndRxTxTransaction:
 305              	.LFB223:
3886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Tickstart tick start value
3893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
3894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable SPI peripheral */
3901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
3902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Control the BSY flag */
3905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQ5vJp4.s 			page 75


3907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_TIMEOUT;
3909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Empty the FRLVL fifo */
3915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) !=
3916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return HAL_TIMEOUT;
3919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
3920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return HAL_OK;
3922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
3923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
3926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi SPI handle
3927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  Tickstart tick start value
3929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval HAL status
3930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
 306              		.loc 1 3932 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              	.LVL13:
 311 0000 70B5     		push	{r4, r5, r6, lr}
 312              	.LCFI2:
 313              		.cfi_def_cfa_offset 16
 314              		.cfi_offset 4, -16
 315              		.cfi_offset 5, -12
 316              		.cfi_offset 6, -8
 317              		.cfi_offset 14, -4
 318 0002 82B0     		sub	sp, sp, #8
 319              	.LCFI3:
 320              		.cfi_def_cfa_offset 24
 321 0004 0400     		movs	r4, r0
 322 0006 0D00     		movs	r5, r1
 323 0008 1600     		movs	r6, r2
3933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Control if the TX fifo is empty */
3934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != H
 324              		.loc 1 3934 0
 325 000a C021     		movs	r1, #192
 326              	.LVL14:
 327 000c 0092     		str	r2, [sp]
 328 000e 2B00     		movs	r3, r5
 329 0010 0022     		movs	r2, #0
 330              	.LVL15:
 331 0012 4901     		lsls	r1, r1, #5
 332 0014 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 333              	.LVL16:
 334 0018 0028     		cmp	r0, #0
ARM GAS  /tmp/ccQ5vJp4.s 			page 76


 335 001a 18D1     		bne	.L35
3935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_TIMEOUT;
3938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Control the BSY flag */
3941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 336              		.loc 1 3941 0
 337 001c 0096     		str	r6, [sp]
 338 001e 2B00     		movs	r3, r5
 339 0020 0022     		movs	r2, #0
 340 0022 8021     		movs	r1, #128
 341 0024 2000     		movs	r0, r4
 342 0026 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 343              	.LVL17:
 344 002a 0028     		cmp	r0, #0
 345 002c 16D1     		bne	.L36
3942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_TIMEOUT;
3945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Control if the RX fifo is empty */
3948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != H
 346              		.loc 1 3948 0
 347 002e C021     		movs	r1, #192
 348 0030 0096     		str	r6, [sp]
 349 0032 2B00     		movs	r3, r5
 350 0034 0022     		movs	r2, #0
 351 0036 C900     		lsls	r1, r1, #3
 352 0038 2000     		movs	r0, r4
 353 003a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 354              	.LVL18:
 355 003e 0028     		cmp	r0, #0
 356 0040 0AD0     		beq	.L33
3949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 357              		.loc 1 3950 0
 358 0042 236E     		ldr	r3, [r4, #96]
 359 0044 2022     		movs	r2, #32
 360 0046 1343     		orrs	r3, r2
 361 0048 2366     		str	r3, [r4, #96]
3951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_TIMEOUT;
 362              		.loc 1 3951 0
 363 004a 0320     		movs	r0, #3
 364 004c 04E0     		b	.L33
 365              	.L35:
3936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_TIMEOUT;
 366              		.loc 1 3936 0
 367 004e 236E     		ldr	r3, [r4, #96]
 368 0050 2022     		movs	r2, #32
 369 0052 1343     		orrs	r3, r2
 370 0054 2366     		str	r3, [r4, #96]
3937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 371              		.loc 1 3937 0
 372 0056 0320     		movs	r0, #3
ARM GAS  /tmp/ccQ5vJp4.s 			page 77


 373              	.L33:
3952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return HAL_OK;
3955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 374              		.loc 1 3955 0
 375 0058 02B0     		add	sp, sp, #8
 376              		@ sp needed
 377              	.LVL19:
 378              	.LVL20:
 379              	.LVL21:
 380 005a 70BD     		pop	{r4, r5, r6, pc}
 381              	.LVL22:
 382              	.L36:
3943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_TIMEOUT;
 383              		.loc 1 3943 0
 384 005c 236E     		ldr	r3, [r4, #96]
 385 005e 2022     		movs	r2, #32
 386 0060 1343     		orrs	r3, r2
 387 0062 2366     		str	r3, [r4, #96]
3944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 388              		.loc 1 3944 0
 389 0064 0320     		movs	r0, #3
 390 0066 F7E7     		b	.L33
 391              		.cfi_endproc
 392              	.LFE223:
 394              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 395              		.align	1
 396              		.syntax unified
 397              		.code	16
 398              		.thumb_func
 399              		.fpu softvfp
 401              	SPI_EndRxTransaction:
 402              	.LFB222:
3896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 403              		.loc 1 3896 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              	.LVL23:
 408 0000 70B5     		push	{r4, r5, r6, lr}
 409              	.LCFI4:
 410              		.cfi_def_cfa_offset 16
 411              		.cfi_offset 4, -16
 412              		.cfi_offset 5, -12
 413              		.cfi_offset 6, -8
 414              		.cfi_offset 14, -4
 415 0002 82B0     		sub	sp, sp, #8
 416              	.LCFI5:
 417              		.cfi_def_cfa_offset 24
 418 0004 0400     		movs	r4, r0
 419 0006 0D00     		movs	r5, r1
 420 0008 1600     		movs	r6, r2
3897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 421              		.loc 1 3897 0
 422 000a 8223     		movs	r3, #130
 423 000c 5B00     		lsls	r3, r3, #1
ARM GAS  /tmp/ccQ5vJp4.s 			page 78


 424 000e 4268     		ldr	r2, [r0, #4]
 425              	.LVL24:
 426 0010 9A42     		cmp	r2, r3
 427 0012 0FD0     		beq	.L43
 428              	.LVL25:
 429              	.L38:
3905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 430              		.loc 1 3905 0
 431 0014 0096     		str	r6, [sp]
 432 0016 2B00     		movs	r3, r5
 433 0018 0022     		movs	r2, #0
 434 001a 8021     		movs	r1, #128
 435 001c 2000     		movs	r0, r4
 436              	.LVL26:
 437 001e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 438              	.LVL27:
 439 0022 0028     		cmp	r0, #0
 440 0024 15D1     		bne	.L44
3911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 441              		.loc 1 3911 0
 442 0026 8223     		movs	r3, #130
 443 0028 5B00     		lsls	r3, r3, #1
 444 002a 6268     		ldr	r2, [r4, #4]
 445 002c 9A42     		cmp	r2, r3
 446 002e 16D0     		beq	.L45
 447              	.L41:
3922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 448              		.loc 1 3922 0
 449 0030 02B0     		add	sp, sp, #8
 450              		@ sp needed
 451              	.LVL28:
 452              	.LVL29:
 453              	.LVL30:
 454 0032 70BD     		pop	{r4, r5, r6, pc}
 455              	.LVL31:
 456              	.L43:
3897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 457              		.loc 1 3897 0 discriminator 1
 458 0034 8368     		ldr	r3, [r0, #8]
 459 0036 8022     		movs	r2, #128
 460 0038 1202     		lsls	r2, r2, #8
 461 003a 9342     		cmp	r3, r2
 462 003c 03D0     		beq	.L39
3898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 463              		.loc 1 3898 0
 464 003e 8022     		movs	r2, #128
 465 0040 D200     		lsls	r2, r2, #3
 466 0042 9342     		cmp	r3, r2
 467 0044 E6D1     		bne	.L38
 468              	.L39:
3901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 469              		.loc 1 3901 0
 470 0046 2268     		ldr	r2, [r4]
 471 0048 1368     		ldr	r3, [r2]
 472 004a 4021     		movs	r1, #64
 473              	.LVL32:
 474 004c 8B43     		bics	r3, r1
ARM GAS  /tmp/ccQ5vJp4.s 			page 79


 475 004e 1360     		str	r3, [r2]
 476 0050 E0E7     		b	.L38
 477              	.LVL33:
 478              	.L44:
3907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return HAL_TIMEOUT;
 479              		.loc 1 3907 0
 480 0052 236E     		ldr	r3, [r4, #96]
 481 0054 2022     		movs	r2, #32
 482 0056 1343     		orrs	r3, r2
 483 0058 2366     		str	r3, [r4, #96]
3908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 484              		.loc 1 3908 0
 485 005a 0320     		movs	r0, #3
 486 005c E8E7     		b	.L41
 487              	.L45:
3911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 488              		.loc 1 3911 0 discriminator 1
 489 005e A368     		ldr	r3, [r4, #8]
 490 0060 8022     		movs	r2, #128
 491 0062 1202     		lsls	r2, r2, #8
 492 0064 9342     		cmp	r3, r2
 493 0066 03D0     		beq	.L42
3912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 494              		.loc 1 3912 0
 495 0068 8022     		movs	r2, #128
 496 006a D200     		lsls	r2, r2, #3
 497 006c 9342     		cmp	r3, r2
 498 006e DFD1     		bne	.L41
 499              	.L42:
3915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 500              		.loc 1 3915 0
 501 0070 C021     		movs	r1, #192
 502 0072 0096     		str	r6, [sp]
 503 0074 2B00     		movs	r3, r5
 504 0076 0022     		movs	r2, #0
 505 0078 C900     		lsls	r1, r1, #3
 506 007a 2000     		movs	r0, r4
 507 007c FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 508              	.LVL34:
 509 0080 0028     		cmp	r0, #0
 510 0082 D5D0     		beq	.L41
3917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       return HAL_TIMEOUT;
 511              		.loc 1 3917 0
 512 0084 236E     		ldr	r3, [r4, #96]
 513 0086 2022     		movs	r2, #32
 514 0088 1343     		orrs	r3, r2
 515 008a 2366     		str	r3, [r4, #96]
3918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 516              		.loc 1 3918 0
 517 008c 0320     		movs	r0, #3
 518 008e CFE7     		b	.L41
 519              		.cfi_endproc
 520              	.LFE222:
 522              		.global	__aeabi_uidiv
 523              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
 524              		.align	1
 525              		.syntax unified
ARM GAS  /tmp/ccQ5vJp4.s 			page 80


 526              		.code	16
 527              		.thumb_func
 528              		.fpu softvfp
 530              	SPI_AbortRx_ISR:
 531              	.LFB227:
3956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
3958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
3961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
3962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
3963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
3965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
3966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tickstart = HAL_GetTick();
3969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable ERR interrupt */
3971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check the end of the transaction */
3974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
3979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if CRC error occurred */
3981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Call user error callback */
3987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
3990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
3993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
3994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
3995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
3998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
3999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
4000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
4001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Call user Rx complete callback */
4002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
4004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
4005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
4006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
ARM GAS  /tmp/ccQ5vJp4.s 			page 81


4008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       else
4009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
4010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
4011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Call user TxRx complete callback */
4012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
4014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
4015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
4016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
4018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
4019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     else
4020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
4021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
4022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Call user error callback */
4023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
4025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
4026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
4027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
4029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
4033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
4035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
4036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
4038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
4039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
4040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
4041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
4042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
4043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
4044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check the end of the transaction */
4046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
4047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
4048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
4051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check if CRC error occurred */
4054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
4055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
4056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
4057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
4058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Call user error callback */
4059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
4062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccQ5vJp4.s 			page 82


4065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
4066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
4067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
4069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
4070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Call user Rx complete callback */
4071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
4073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
4074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
4075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
4077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     else
4078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
4079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Call user error callback */
4080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
4082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
4083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
4084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
4086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
4090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
4092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
4093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
4095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
4096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
4097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
4098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
4099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
4100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
4102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tickstart = HAL_GetTick();
4103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
4105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
4106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check the end of the transaction */
4108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
4109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
4110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
4114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
4115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
4116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
4117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
4120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
4121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQ5vJp4.s 			page 83


4122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Call user error callback */
4123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
4126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   else
4130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
4131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Call user Rx complete callback */
4132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
4134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #else
4135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
4136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
4139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
4141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
4142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
4144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
4145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
4146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
4147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
 532              		.loc 1 4147 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 8
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              	.LVL35:
 537 0000 30B5     		push	{r4, r5, lr}
 538              	.LCFI6:
 539              		.cfi_def_cfa_offset 12
 540              		.cfi_offset 4, -12
 541              		.cfi_offset 5, -8
 542              		.cfi_offset 14, -4
 543 0002 85B0     		sub	sp, sp, #20
 544              	.LCFI7:
 545              		.cfi_def_cfa_offset 32
 546 0004 0400     		movs	r4, r0
4148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __IO uint32_t count;
4149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable SPI Peripheral */
4151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 547              		.loc 1 4151 0
 548 0006 0268     		ldr	r2, [r0]
 549 0008 1368     		ldr	r3, [r2]
 550 000a 4025     		movs	r5, #64
 551 000c AB43     		bics	r3, r5
 552 000e 1360     		str	r3, [r2]
4152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 553              		.loc 1 4153 0
 554 0010 1D4B     		ldr	r3, .L53
 555 0012 1868     		ldr	r0, [r3]
 556              	.LVL36:
ARM GAS  /tmp/ccQ5vJp4.s 			page 84


 557 0014 1D49     		ldr	r1, .L53+4
 558 0016 FFF7FEFF 		bl	__aeabi_uidiv
 559              	.LVL37:
 560 001a 6423     		movs	r3, #100
 561 001c 5843     		muls	r0, r3
 562 001e 0390     		str	r0, [sp, #12]
4154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable RXNEIE interrupt */
4156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXNEIE));
 563              		.loc 1 4156 0
 564 0020 2268     		ldr	r2, [r4]
 565 0022 5368     		ldr	r3, [r2, #4]
 566 0024 AB43     		bics	r3, r5
 567 0026 5360     		str	r3, [r2, #4]
 568              	.L49:
4157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check RXNEIE is disabled */
4159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   do
4160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
4161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (count == 0U)
 569              		.loc 1 4161 0
 570 0028 039B     		ldr	r3, [sp, #12]
 571 002a 002B     		cmp	r3, #0
 572 002c 07D0     		beq	.L52
4162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
4163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       break;
4165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
4166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     count--;
 573              		.loc 1 4166 0
 574 002e 039B     		ldr	r3, [sp, #12]
 575 0030 013B     		subs	r3, r3, #1
 576 0032 0393     		str	r3, [sp, #12]
4167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE));
 577              		.loc 1 4168 0
 578 0034 2368     		ldr	r3, [r4]
 579 0036 5B68     		ldr	r3, [r3, #4]
 580 0038 5B06     		lsls	r3, r3, #25
 581 003a F5D4     		bmi	.L49
 582 003c 03E0     		b	.L48
 583              	.L52:
4163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       break;
 584              		.loc 1 4163 0
 585 003e 236E     		ldr	r3, [r4, #96]
 586 0040 4022     		movs	r2, #64
 587 0042 1343     		orrs	r3, r2
 588 0044 2366     		str	r3, [r4, #96]
 589              	.L48:
4169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Control the BSY flag */
4171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
 590              		.loc 1 4171 0
 591 0046 FFF7FEFF 		bl	HAL_GetTick
 592              	.LVL38:
 593 004a 0090     		str	r0, [sp]
 594 004c 6423     		movs	r3, #100
ARM GAS  /tmp/ccQ5vJp4.s 			page 85


 595 004e 0022     		movs	r2, #0
 596 0050 8021     		movs	r1, #128
 597 0052 2000     		movs	r0, r4
 598 0054 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 599              	.LVL39:
 600 0058 0028     		cmp	r0, #0
 601 005a 01D0     		beq	.L50
4172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
4173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 602              		.loc 1 4173 0
 603 005c 4023     		movs	r3, #64
 604 005e 2366     		str	r3, [r4, #96]
 605              	.L50:
4174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Empty the FRLVL fifo */
4177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 606              		.loc 1 4177 0
 607 0060 FFF7FEFF 		bl	HAL_GetTick
 608              	.LVL40:
 609 0064 C021     		movs	r1, #192
 610 0066 0090     		str	r0, [sp]
 611 0068 6423     		movs	r3, #100
 612 006a 0022     		movs	r2, #0
 613 006c C900     		lsls	r1, r1, #3
 614 006e 2000     		movs	r0, r4
 615 0070 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 616              	.LVL41:
 617 0074 0028     		cmp	r0, #0
 618 0076 01D0     		beq	.L51
4178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
4179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 619              		.loc 1 4179 0
 620 0078 4023     		movs	r3, #64
 621 007a 2366     		str	r3, [r4, #96]
 622              	.L51:
4180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 623              		.loc 1 4182 0
 624 007c 5D23     		movs	r3, #93
 625 007e 0722     		movs	r2, #7
 626 0080 E254     		strb	r2, [r4, r3]
4183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 627              		.loc 1 4183 0
 628 0082 05B0     		add	sp, sp, #20
 629              		@ sp needed
 630              	.LVL42:
 631 0084 30BD     		pop	{r4, r5, pc}
 632              	.L54:
 633 0086 C046     		.align	2
 634              	.L53:
 635 0088 00000000 		.word	SystemCoreClock
 636 008c C05D0000 		.word	24000
 637              		.cfi_endproc
 638              	.LFE227:
 640              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
ARM GAS  /tmp/ccQ5vJp4.s 			page 86


 641              		.align	1
 642              		.syntax unified
 643              		.code	16
 644              		.thumb_func
 645              		.fpu softvfp
 647              	SPI_AbortTx_ISR:
 648              	.LFB228:
4184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** /**
4186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
4187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *               the configuration information for SPI module.
4189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   * @retval None
4190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   */
4191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
4192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** {
 649              		.loc 1 4192 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              	.LVL43:
 654 0000 10B5     		push	{r4, lr}
 655              	.LCFI8:
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 4, -8
 658              		.cfi_offset 14, -4
 659 0002 84B0     		sub	sp, sp, #16
 660              	.LCFI9:
 661              		.cfi_def_cfa_offset 24
 662 0004 0400     		movs	r4, r0
4193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __IO uint32_t count;
4194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 663              		.loc 1 4195 0
 664 0006 384B     		ldr	r3, .L68
 665 0008 1868     		ldr	r0, [r3]
 666              	.LVL44:
 667 000a 3849     		ldr	r1, .L68+4
 668 000c FFF7FEFF 		bl	__aeabi_uidiv
 669              	.LVL45:
 670 0010 6423     		movs	r3, #100
 671 0012 5843     		muls	r0, r3
 672 0014 0390     		str	r0, [sp, #12]
4196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable TXEIE interrupt */
4198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 673              		.loc 1 4198 0
 674 0016 2268     		ldr	r2, [r4]
 675 0018 5368     		ldr	r3, [r2, #4]
 676 001a 8021     		movs	r1, #128
 677 001c 8B43     		bics	r3, r1
 678 001e 5360     		str	r3, [r2, #4]
 679              	.L58:
4199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check TXEIE is disabled */
4201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   do
4202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQ5vJp4.s 			page 87


4203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (count == 0U)
 680              		.loc 1 4203 0
 681 0020 039B     		ldr	r3, [sp, #12]
 682 0022 002B     		cmp	r3, #0
 683 0024 07D0     		beq	.L66
4204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
4205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       break;
4207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
4208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     count--;
 684              		.loc 1 4208 0
 685 0026 039B     		ldr	r3, [sp, #12]
 686 0028 013B     		subs	r3, r3, #1
 687 002a 0393     		str	r3, [sp, #12]
4209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE));
 688              		.loc 1 4210 0
 689 002c 2368     		ldr	r3, [r4]
 690 002e 5B68     		ldr	r3, [r3, #4]
 691 0030 1B06     		lsls	r3, r3, #24
 692 0032 F5D4     		bmi	.L58
 693 0034 03E0     		b	.L57
 694              	.L66:
4205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       break;
 695              		.loc 1 4205 0
 696 0036 236E     		ldr	r3, [r4, #96]
 697 0038 4022     		movs	r2, #64
 698 003a 1343     		orrs	r3, r2
 699 003c 2366     		str	r3, [r4, #96]
 700              	.L57:
4211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 701              		.loc 1 4212 0
 702 003e FFF7FEFF 		bl	HAL_GetTick
 703              	.LVL46:
 704 0042 0200     		movs	r2, r0
 705 0044 6421     		movs	r1, #100
 706 0046 2000     		movs	r0, r4
 707 0048 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 708              	.LVL47:
 709 004c 0028     		cmp	r0, #0
 710 004e 01D0     		beq	.L59
4213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
4214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 711              		.loc 1 4214 0
 712 0050 4023     		movs	r3, #64
 713 0052 2366     		str	r3, [r4, #96]
 714              	.L59:
4215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable SPI Peripheral */
4218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 715              		.loc 1 4218 0
 716 0054 2268     		ldr	r2, [r4]
 717 0056 1368     		ldr	r3, [r2]
 718 0058 4021     		movs	r1, #64
 719 005a 8B43     		bics	r3, r1
ARM GAS  /tmp/ccQ5vJp4.s 			page 88


 720 005c 1360     		str	r3, [r2]
4219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Empty the FRLVL fifo */
4221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 721              		.loc 1 4221 0
 722 005e FFF7FEFF 		bl	HAL_GetTick
 723              	.LVL48:
 724 0062 C021     		movs	r1, #192
 725 0064 0090     		str	r0, [sp]
 726 0066 6423     		movs	r3, #100
 727 0068 0022     		movs	r2, #0
 728 006a C900     		lsls	r1, r1, #3
 729 006c 2000     		movs	r0, r4
 730 006e FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 731              	.LVL49:
 732 0072 0028     		cmp	r0, #0
 733 0074 01D0     		beq	.L60
4222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
4223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 734              		.loc 1 4223 0
 735 0076 4023     		movs	r3, #64
 736 0078 2366     		str	r3, [r4, #96]
 737              	.L60:
4224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check case of Full-Duplex Mode and disable directly RXNEIE interrupt */
4227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 738              		.loc 1 4227 0
 739 007a 2368     		ldr	r3, [r4]
 740 007c 5A68     		ldr	r2, [r3, #4]
 741 007e 5206     		lsls	r2, r2, #25
 742 0080 2DD5     		bpl	.L61
4228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
4229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Disable RXNEIE interrupt */
4230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXNEIE));
 743              		.loc 1 4230 0
 744 0082 5A68     		ldr	r2, [r3, #4]
 745 0084 4021     		movs	r1, #64
 746 0086 8A43     		bics	r2, r1
 747 0088 5A60     		str	r2, [r3, #4]
 748              	.L64:
4231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Check RXNEIE is disabled */
4233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     do
4234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
4235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       if (count == 0U)
 749              		.loc 1 4235 0
 750 008a 039B     		ldr	r3, [sp, #12]
 751 008c 002B     		cmp	r3, #0
 752 008e 07D0     		beq	.L67
4236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
4237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
4239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
4240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       count--;
 753              		.loc 1 4240 0
 754 0090 039B     		ldr	r3, [sp, #12]
ARM GAS  /tmp/ccQ5vJp4.s 			page 89


 755 0092 013B     		subs	r3, r3, #1
 756 0094 0393     		str	r3, [sp, #12]
4241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
4242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE));
 757              		.loc 1 4242 0
 758 0096 2368     		ldr	r3, [r4]
 759 0098 5B68     		ldr	r3, [r3, #4]
 760 009a 5B06     		lsls	r3, r3, #25
 761 009c F5D4     		bmi	.L64
 762 009e 03E0     		b	.L63
 763              	.L67:
4237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 764              		.loc 1 4237 0
 765 00a0 236E     		ldr	r3, [r4, #96]
 766 00a2 4022     		movs	r2, #64
 767 00a4 1343     		orrs	r3, r2
 768 00a6 2366     		str	r3, [r4, #96]
 769              	.L63:
4243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Control the BSY flag */
4245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()
 770              		.loc 1 4245 0
 771 00a8 FFF7FEFF 		bl	HAL_GetTick
 772              	.LVL50:
 773 00ac 0090     		str	r0, [sp]
 774 00ae 6423     		movs	r3, #100
 775 00b0 0022     		movs	r2, #0
 776 00b2 8021     		movs	r1, #128
 777 00b4 2000     		movs	r0, r4
 778 00b6 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 779              	.LVL51:
 780 00ba 0028     		cmp	r0, #0
 781 00bc 01D0     		beq	.L65
4246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
4247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 782              		.loc 1 4247 0
 783 00be 4023     		movs	r3, #64
 784 00c0 2366     		str	r3, [r4, #96]
 785              	.L65:
4248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
4249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
4250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Empty the FRLVL fifo */
4251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, H
 786              		.loc 1 4251 0
 787 00c2 FFF7FEFF 		bl	HAL_GetTick
 788              	.LVL52:
 789 00c6 C021     		movs	r1, #192
 790 00c8 0090     		str	r0, [sp]
 791 00ca 6423     		movs	r3, #100
 792 00cc 0022     		movs	r2, #0
 793 00ce C900     		lsls	r1, r1, #3
 794 00d0 2000     		movs	r0, r4
 795 00d2 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 796              	.LVL53:
 797 00d6 0028     		cmp	r0, #0
 798 00d8 01D0     		beq	.L61
4252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
ARM GAS  /tmp/ccQ5vJp4.s 			page 90


4253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 799              		.loc 1 4253 0
 800 00da 4023     		movs	r3, #64
 801 00dc 2366     		str	r3, [r4, #96]
 802              	.L61:
4254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
4255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
4256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 803              		.loc 1 4256 0
 804 00de 5D23     		movs	r3, #93
 805 00e0 0722     		movs	r2, #7
 806 00e2 E254     		strb	r2, [r4, r3]
4257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 807              		.loc 1 4257 0
 808 00e4 04B0     		add	sp, sp, #16
 809              		@ sp needed
 810              	.LVL54:
 811 00e6 10BD     		pop	{r4, pc}
 812              	.L69:
 813              		.align	2
 814              	.L68:
 815 00e8 00000000 		.word	SystemCoreClock
 816 00ec C05D0000 		.word	24000
 817              		.cfi_endproc
 818              	.LFE228:
 820              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 821              		.align	1
 822              		.weak	HAL_SPI_MspInit
 823              		.syntax unified
 824              		.code	16
 825              		.thumb_func
 826              		.fpu softvfp
 828              	HAL_SPI_MspInit:
 829              	.LFB175:
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 830              		.loc 1 503 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		@ link register save eliminated.
 835              	.LVL55:
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 836              		.loc 1 510 0
 837              		@ sp needed
 838 0000 7047     		bx	lr
 839              		.cfi_endproc
 840              	.LFE175:
 842              		.section	.text.HAL_SPI_Init,"ax",%progbits
 843              		.align	1
 844              		.global	HAL_SPI_Init
 845              		.syntax unified
 846              		.code	16
 847              		.thumb_func
 848              		.fpu softvfp
 850              	HAL_SPI_Init:
 851              	.LFB173:
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t frxth;
ARM GAS  /tmp/ccQ5vJp4.s 			page 91


 852              		.loc 1 314 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              	.LVL56:
 857 0000 10B5     		push	{r4, lr}
 858              	.LCFI10:
 859              		.cfi_def_cfa_offset 8
 860              		.cfi_offset 4, -8
 861              		.cfi_offset 14, -4
 862 0002 041E     		subs	r4, r0, #0
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 863              		.loc 1 318 0
 864 0004 5ED0     		beq	.L78
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 865              		.loc 1 346 0
 866 0006 0023     		movs	r3, #0
 867 0008 8362     		str	r3, [r0, #40]
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 868              		.loc 1 349 0
 869 000a 5D33     		adds	r3, r3, #93
 870 000c C35C     		ldrb	r3, [r0, r3]
 871 000e 002B     		cmp	r3, #0
 872 0010 4CD0     		beq	.L80
 873              	.LVL57:
 874              	.L73:
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 875              		.loc 1 378 0
 876 0012 5D23     		movs	r3, #93
 877 0014 0222     		movs	r2, #2
 878 0016 E254     		strb	r2, [r4, r3]
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 879              		.loc 1 381 0
 880 0018 2268     		ldr	r2, [r4]
 881 001a 1368     		ldr	r3, [r2]
 882 001c 4021     		movs	r1, #64
 883 001e 8B43     		bics	r3, r1
 884 0020 1360     		str	r3, [r2]
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 885              		.loc 1 384 0
 886 0022 E368     		ldr	r3, [r4, #12]
 887 0024 E022     		movs	r2, #224
 888 0026 D200     		lsls	r2, r2, #3
 889 0028 9342     		cmp	r3, r2
 890 002a 45D9     		bls	.L79
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 891              		.loc 1 386 0
 892 002c 0022     		movs	r2, #0
 893              	.L74:
 894              	.LVL58:
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 895              		.loc 1 394 0
 896 002e F021     		movs	r1, #240
 897 0030 0901     		lsls	r1, r1, #4
 898 0032 8B42     		cmp	r3, r1
 899 0034 05D0     		beq	.L75
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQ5vJp4.s 			page 92


 900              		.loc 1 394 0 is_stmt 0 discriminator 1
 901 0036 E021     		movs	r1, #224
 902 0038 C900     		lsls	r1, r1, #3
 903 003a 8B42     		cmp	r3, r1
 904 003c 01D0     		beq	.L75
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 905              		.loc 1 397 0 is_stmt 1
 906 003e 0021     		movs	r1, #0
 907 0040 A162     		str	r1, [r4, #40]
 908              	.L75:
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 909              		.loc 1 401 0
 910 0042 216B     		ldr	r1, [r4, #48]
 911 0044 0029     		cmp	r1, #0
 912 0046 05D1     		bne	.L76
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 913              		.loc 1 404 0
 914 0048 E021     		movs	r1, #224
 915 004a C900     		lsls	r1, r1, #3
 916 004c 8B42     		cmp	r3, r1
 917 004e 36D9     		bls	.L77
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 918              		.loc 1 406 0
 919 0050 0223     		movs	r3, #2
 920 0052 2363     		str	r3, [r4, #48]
 921              	.L76:
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 922              		.loc 1 417 0
 923 0054 6368     		ldr	r3, [r4, #4]
 924 0056 A168     		ldr	r1, [r4, #8]
 925 0058 0B43     		orrs	r3, r1
 926 005a 2169     		ldr	r1, [r4, #16]
 927 005c 0B43     		orrs	r3, r1
 928 005e 6169     		ldr	r1, [r4, #20]
 929 0060 0B43     		orrs	r3, r1
 930 0062 8021     		movs	r1, #128
 931 0064 8900     		lsls	r1, r1, #2
 932 0066 A069     		ldr	r0, [r4, #24]
 933 0068 0140     		ands	r1, r0
 934 006a 0B43     		orrs	r3, r1
 935 006c E169     		ldr	r1, [r4, #28]
 936 006e 0B43     		orrs	r3, r1
 937 0070 216A     		ldr	r1, [r4, #32]
 938 0072 0B43     		orrs	r3, r1
 939 0074 2168     		ldr	r1, [r4]
 940 0076 A06A     		ldr	r0, [r4, #40]
 941 0078 0343     		orrs	r3, r0
 942 007a 0B60     		str	r3, [r1]
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 943              		.loc 1 429 0
 944 007c 618B     		ldrh	r1, [r4, #26]
 945 007e 0423     		movs	r3, #4
 946 0080 0B40     		ands	r3, r1
 947 0082 616A     		ldr	r1, [r4, #36]
 948 0084 0B43     		orrs	r3, r1
 949 0086 616B     		ldr	r1, [r4, #52]
 950 0088 0B43     		orrs	r3, r1
ARM GAS  /tmp/ccQ5vJp4.s 			page 93


 951 008a E168     		ldr	r1, [r4, #12]
 952 008c 0B43     		orrs	r3, r1
 953 008e 2168     		ldr	r1, [r4]
 954 0090 1343     		orrs	r3, r2
 955 0092 4B60     		str	r3, [r1, #4]
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 956              		.loc 1 443 0
 957 0094 2268     		ldr	r2, [r4]
 958              	.LVL59:
 959 0096 D369     		ldr	r3, [r2, #28]
 960 0098 0B49     		ldr	r1, .L81
 961 009a 0B40     		ands	r3, r1
 962 009c D361     		str	r3, [r2, #28]
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 963              		.loc 1 446 0
 964 009e 0023     		movs	r3, #0
 965 00a0 2366     		str	r3, [r4, #96]
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 966              		.loc 1 447 0
 967 00a2 5D33     		adds	r3, r3, #93
 968 00a4 0122     		movs	r2, #1
 969 00a6 E254     		strb	r2, [r4, r3]
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 970              		.loc 1 449 0
 971 00a8 0020     		movs	r0, #0
 972              	.L72:
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 973              		.loc 1 450 0
 974              		@ sp needed
 975              	.LVL60:
 976 00aa 10BD     		pop	{r4, pc}
 977              	.LVL61:
 978              	.L80:
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 979              		.loc 1 352 0
 980 00ac 5C33     		adds	r3, r3, #92
 981 00ae 0022     		movs	r2, #0
 982 00b0 C254     		strb	r2, [r0, r3]
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 983              		.loc 1 374 0
 984 00b2 FFF7FEFF 		bl	HAL_SPI_MspInit
 985              	.LVL62:
 986 00b6 ACE7     		b	.L73
 987              	.L79:
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 988              		.loc 1 390 0
 989 00b8 8022     		movs	r2, #128
 990 00ba 5201     		lsls	r2, r2, #5
 991 00bc B7E7     		b	.L74
 992              	.LVL63:
 993              	.L77:
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 994              		.loc 1 410 0
 995 00be 0123     		movs	r3, #1
 996 00c0 2363     		str	r3, [r4, #48]
 997 00c2 C7E7     		b	.L76
 998              	.LVL64:
ARM GAS  /tmp/ccQ5vJp4.s 			page 94


 999              	.L78:
 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 1000              		.loc 1 320 0
 1001 00c4 0120     		movs	r0, #1
 1002              	.LVL65:
 1003 00c6 F0E7     		b	.L72
 1004              	.L82:
 1005              		.align	2
 1006              	.L81:
 1007 00c8 FFF7FFFF 		.word	-2049
 1008              		.cfi_endproc
 1009              	.LFE173:
 1011              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 1012              		.align	1
 1013              		.weak	HAL_SPI_MspDeInit
 1014              		.syntax unified
 1015              		.code	16
 1016              		.thumb_func
 1017              		.fpu softvfp
 1019              	HAL_SPI_MspDeInit:
 1020              	.LFB176:
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 1021              		.loc 1 519 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              		@ link register save eliminated.
 1026              	.LVL66:
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1027              		.loc 1 526 0
 1028              		@ sp needed
 1029 0000 7047     		bx	lr
 1030              		.cfi_endproc
 1031              	.LFE176:
 1033              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 1034              		.align	1
 1035              		.global	HAL_SPI_DeInit
 1036              		.syntax unified
 1037              		.code	16
 1038              		.thumb_func
 1039              		.fpu softvfp
 1041              	HAL_SPI_DeInit:
 1042              	.LFB174:
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 1043              		.loc 1 459 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 0
 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047              	.LVL67:
 1048 0000 70B5     		push	{r4, r5, r6, lr}
 1049              	.LCFI11:
 1050              		.cfi_def_cfa_offset 16
 1051              		.cfi_offset 4, -16
 1052              		.cfi_offset 5, -12
 1053              		.cfi_offset 6, -8
 1054              		.cfi_offset 14, -4
 1055 0002 041E     		subs	r4, r0, #0
ARM GAS  /tmp/ccQ5vJp4.s 			page 95


 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1056              		.loc 1 461 0
 1057 0004 10D0     		beq	.L86
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1058              		.loc 1 469 0
 1059 0006 5D25     		movs	r5, #93
 1060 0008 0223     		movs	r3, #2
 1061 000a 4355     		strb	r3, [r0, r5]
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1062              		.loc 1 472 0
 1063 000c 0268     		ldr	r2, [r0]
 1064 000e 1368     		ldr	r3, [r2]
 1065 0010 4021     		movs	r1, #64
 1066 0012 8B43     		bics	r3, r1
 1067 0014 1360     		str	r3, [r2]
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 1068              		.loc 1 484 0
 1069 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 1070              	.LVL68:
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 1071              		.loc 1 487 0
 1072 001a 0023     		movs	r3, #0
 1073 001c 2366     		str	r3, [r4, #96]
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1074              		.loc 1 488 0
 1075 001e 6355     		strb	r3, [r4, r5]
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1076              		.loc 1 491 0
 1077 0020 5C22     		movs	r2, #92
 1078 0022 A354     		strb	r3, [r4, r2]
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 1079              		.loc 1 493 0
 1080 0024 0020     		movs	r0, #0
 1081              	.L85:
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1082              		.loc 1 494 0
 1083              		@ sp needed
 1084              	.LVL69:
 1085 0026 70BD     		pop	{r4, r5, r6, pc}
 1086              	.LVL70:
 1087              	.L86:
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 1088              		.loc 1 463 0
 1089 0028 0120     		movs	r0, #1
 1090              	.LVL71:
 1091 002a FCE7     		b	.L85
 1092              		.cfi_endproc
 1093              	.LFE174:
 1095              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 1096              		.align	1
 1097              		.global	HAL_SPI_Transmit
 1098              		.syntax unified
 1099              		.code	16
 1100              		.thumb_func
 1101              		.fpu softvfp
 1103              	HAL_SPI_Transmit:
 1104              	.LFB177:
ARM GAS  /tmp/ccQ5vJp4.s 			page 96


 790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
 1105              		.loc 1 790 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 16
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109              	.LVL72:
 1110 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1111              	.LCFI12:
 1112              		.cfi_def_cfa_offset 20
 1113              		.cfi_offset 4, -20
 1114              		.cfi_offset 5, -16
 1115              		.cfi_offset 6, -12
 1116              		.cfi_offset 7, -8
 1117              		.cfi_offset 14, -4
 1118 0002 85B0     		sub	sp, sp, #20
 1119              	.LCFI13:
 1120              		.cfi_def_cfa_offset 40
 1121 0004 0400     		movs	r4, r0
 1122 0006 0191     		str	r1, [sp, #4]
 1123 0008 1600     		movs	r6, r2
 1124 000a 1F00     		movs	r7, r3
 1125              	.LVL73:
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1126              		.loc 1 799 0
 1127 000c 5C23     		movs	r3, #92
 1128              	.LVL74:
 1129 000e C35C     		ldrb	r3, [r0, r3]
 1130 0010 012B     		cmp	r3, #1
 1131 0012 00D1     		bne	.LCB1065
 1132 0014 E2E0     		b	.L112	@long jump
 1133              	.LCB1065:
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1134              		.loc 1 799 0 is_stmt 0 discriminator 2
 1135 0016 5C23     		movs	r3, #92
 1136 0018 0122     		movs	r2, #1
 1137              	.LVL75:
 1138 001a C254     		strb	r2, [r0, r3]
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   initial_TxXferCount = Size;
 1139              		.loc 1 802 0 is_stmt 1 discriminator 2
 1140 001c FFF7FEFF 		bl	HAL_GetTick
 1141              	.LVL76:
 1142 0020 0500     		movs	r5, r0
 1143              	.LVL77:
 805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1144              		.loc 1 805 0 discriminator 2
 1145 0022 5D23     		movs	r3, #93
 1146 0024 E35C     		ldrb	r3, [r4, r3]
 1147 0026 012B     		cmp	r3, #1
 1148 0028 08D0     		beq	.L121
 807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 1149              		.loc 1 807 0
 1150 002a 0220     		movs	r0, #2
 1151              	.LVL78:
 1152              	.L89:
 957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Unlocked */
 1153              		.loc 1 957 0
 1154 002c 5D23     		movs	r3, #93
ARM GAS  /tmp/ccQ5vJp4.s 			page 97


 1155 002e 0122     		movs	r2, #1
 1156 0030 E254     		strb	r2, [r4, r3]
 959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
 1157              		.loc 1 959 0
 1158 0032 013B     		subs	r3, r3, #1
 1159 0034 0022     		movs	r2, #0
 1160 0036 E254     		strb	r2, [r4, r3]
 1161              	.LVL79:
 1162              	.L88:
 961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1163              		.loc 1 961 0
 1164 0038 05B0     		add	sp, sp, #20
 1165              		@ sp needed
 1166              	.LVL80:
 1167              	.LVL81:
 1168 003a F0BD     		pop	{r4, r5, r6, r7, pc}
 1169              	.LVL82:
 1170              	.L121:
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1171              		.loc 1 811 0
 1172 003c 0199     		ldr	r1, [sp, #4]
 1173 003e 0029     		cmp	r1, #0
 1174 0040 00D1     		bne	.LCB1121
 1175 0042 BDE0     		b	.L114	@long jump
 1176              	.LCB1121:
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1177              		.loc 1 811 0 is_stmt 0 discriminator 1
 1178 0044 002E     		cmp	r6, #0
 1179 0046 00D1     		bne	.LCB1123
 1180 0048 BCE0     		b	.L115	@long jump
 1181              	.LCB1123:
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1182              		.loc 1 818 0 is_stmt 1
 1183 004a 5C33     		adds	r3, r3, #92
 1184 004c 0322     		movs	r2, #3
 1185 004e E254     		strb	r2, [r4, r3]
 819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1186              		.loc 1 819 0
 1187 0050 0023     		movs	r3, #0
 1188 0052 2366     		str	r3, [r4, #96]
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1189              		.loc 1 820 0
 1190 0054 A163     		str	r1, [r4, #56]
 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1191              		.loc 1 821 0
 1192 0056 A687     		strh	r6, [r4, #60]
 822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1193              		.loc 1 822 0
 1194 0058 E687     		strh	r6, [r4, #62]
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1195              		.loc 1 825 0
 1196 005a 2364     		str	r3, [r4, #64]
 826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1197              		.loc 1 826 0
 1198 005c 4132     		adds	r2, r2, #65
 1199 005e A352     		strh	r3, [r4, r2]
 827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
ARM GAS  /tmp/ccQ5vJp4.s 			page 98


 1200              		.loc 1 827 0
 1201 0060 0232     		adds	r2, r2, #2
 1202 0062 A352     		strh	r3, [r4, r2]
 828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1203              		.loc 1 828 0
 1204 0064 2365     		str	r3, [r4, #80]
 829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1205              		.loc 1 829 0
 1206 0066 E364     		str	r3, [r4, #76]
 832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1207              		.loc 1 832 0
 1208 0068 8023     		movs	r3, #128
 1209 006a 1B02     		lsls	r3, r3, #8
 1210 006c A268     		ldr	r2, [r4, #8]
 1211 006e 9A42     		cmp	r2, r3
 1212 0070 1DD0     		beq	.L122
 1213              	.L90:
 846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1214              		.loc 1 846 0
 1215 0072 2368     		ldr	r3, [r4]
 1216 0074 1A68     		ldr	r2, [r3]
 1217 0076 5206     		lsls	r2, r2, #25
 1218 0078 03D4     		bmi	.L91
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 1219              		.loc 1 849 0
 1220 007a 1A68     		ldr	r2, [r3]
 1221 007c 4021     		movs	r1, #64
 1222 007e 0A43     		orrs	r2, r1
 1223 0080 1A60     		str	r2, [r3]
 1224              	.L91:
 853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1225              		.loc 1 853 0
 1226 0082 E023     		movs	r3, #224
 1227 0084 DB00     		lsls	r3, r3, #3
 1228 0086 E268     		ldr	r2, [r4, #12]
 1229 0088 9A42     		cmp	r2, r3
 1230 008a 35D9     		bls	.L92
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1231              		.loc 1 855 0
 1232 008c 6368     		ldr	r3, [r4, #4]
 1233 008e 002B     		cmp	r3, #0
 1234 0090 01D0     		beq	.L93
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1235              		.loc 1 855 0 is_stmt 0 discriminator 1
 1236 0092 012E     		cmp	r6, #1
 1237 0094 1DD1     		bne	.L95
 1238              	.L93:
 857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1239              		.loc 1 857 0 is_stmt 1
 1240 0096 2368     		ldr	r3, [r4]
 1241 0098 A26B     		ldr	r2, [r4, #56]
 1242 009a 1288     		ldrh	r2, [r2]
 1243 009c DA60     		str	r2, [r3, #12]
 858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->TxXferCount--;
 1244              		.loc 1 858 0
 1245 009e A36B     		ldr	r3, [r4, #56]
 1246 00a0 0233     		adds	r3, r3, #2
ARM GAS  /tmp/ccQ5vJp4.s 			page 99


 1247 00a2 A363     		str	r3, [r4, #56]
 859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 1248              		.loc 1 859 0
 1249 00a4 E38F     		ldrh	r3, [r4, #62]
 1250 00a6 013B     		subs	r3, r3, #1
 1251 00a8 9BB2     		uxth	r3, r3
 1252 00aa E387     		strh	r3, [r4, #62]
 1253 00ac 11E0     		b	.L95
 1254              	.L122:
 834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 1255              		.loc 1 834 0
 1256 00ae 2268     		ldr	r2, [r4]
 1257 00b0 1168     		ldr	r1, [r2]
 1258 00b2 8023     		movs	r3, #128
 1259 00b4 DB01     		lsls	r3, r3, #7
 1260 00b6 0B43     		orrs	r3, r1
 1261 00b8 1360     		str	r3, [r2]
 1262 00ba DAE7     		b	.L90
 1263              	.LVL83:
 1264              	.L96:
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 1265              		.loc 1 874 0
 1266 00bc FFF7FEFF 		bl	HAL_GetTick
 1267              	.LVL84:
 1268 00c0 401B     		subs	r0, r0, r5
 1269 00c2 B842     		cmp	r0, r7
 1270 00c4 02D3     		bcc	.L98
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 1271              		.loc 1 874 0 is_stmt 0 discriminator 1
 1272 00c6 7B1C     		adds	r3, r7, #1
 1273 00c8 00D0     		beq	.LCB1208
 1274 00ca 7DE0     		b	.L116	@long jump
 1275              	.LCB1208:
 1276              	.L98:
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 1277              		.loc 1 874 0 discriminator 3
 1278 00cc 002F     		cmp	r7, #0
 1279 00ce 00D1     		bne	.LCB1211
 1280 00d0 7CE0     		b	.L117	@long jump
 1281              	.LCB1211:
 1282              	.L95:
 862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1283              		.loc 1 862 0 is_stmt 1
 1284 00d2 E38F     		ldrh	r3, [r4, #62]
 1285 00d4 9BB2     		uxth	r3, r3
 1286 00d6 002B     		cmp	r3, #0
 1287 00d8 5AD0     		beq	.L100
 865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1288              		.loc 1 865 0
 1289 00da 2368     		ldr	r3, [r4]
 1290 00dc 9A68     		ldr	r2, [r3, #8]
 1291 00de 9207     		lsls	r2, r2, #30
 1292 00e0 ECD5     		bpl	.L96
 867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1293              		.loc 1 867 0
 1294 00e2 A26B     		ldr	r2, [r4, #56]
 1295 00e4 1288     		ldrh	r2, [r2]
ARM GAS  /tmp/ccQ5vJp4.s 			page 100


 1296 00e6 DA60     		str	r2, [r3, #12]
 868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount--;
 1297              		.loc 1 868 0
 1298 00e8 A36B     		ldr	r3, [r4, #56]
 1299 00ea 0233     		adds	r3, r3, #2
 1300 00ec A363     		str	r3, [r4, #56]
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 1301              		.loc 1 869 0
 1302 00ee E38F     		ldrh	r3, [r4, #62]
 1303 00f0 013B     		subs	r3, r3, #1
 1304 00f2 9BB2     		uxth	r3, r3
 1305 00f4 E387     		strh	r3, [r4, #62]
 1306 00f6 ECE7     		b	.L95
 1307              	.LVL85:
 1308              	.L92:
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1309              		.loc 1 885 0
 1310 00f8 6368     		ldr	r3, [r4, #4]
 1311 00fa 002B     		cmp	r3, #0
 1312 00fc 01D0     		beq	.L101
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1313              		.loc 1 885 0 is_stmt 0 discriminator 1
 1314 00fe 012E     		cmp	r6, #1
 1315 0100 2FD1     		bne	.L104
 1316              	.L101:
 887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1317              		.loc 1 887 0 is_stmt 1
 1318 0102 E38F     		ldrh	r3, [r4, #62]
 1319 0104 9BB2     		uxth	r3, r3
 1320 0106 012B     		cmp	r3, #1
 1321 0108 0BD9     		bls	.L103
 890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1322              		.loc 1 890 0
 1323 010a 2368     		ldr	r3, [r4]
 1324 010c A26B     		ldr	r2, [r4, #56]
 1325 010e 1288     		ldrh	r2, [r2]
 1326 0110 DA60     		str	r2, [r3, #12]
 891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 1327              		.loc 1 891 0
 1328 0112 A36B     		ldr	r3, [r4, #56]
 1329 0114 0233     		adds	r3, r3, #2
 1330 0116 A363     		str	r3, [r4, #56]
 892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 1331              		.loc 1 892 0
 1332 0118 E38F     		ldrh	r3, [r4, #62]
 1333 011a 023B     		subs	r3, r3, #2
 1334 011c 9BB2     		uxth	r3, r3
 1335 011e E387     		strh	r3, [r4, #62]
 1336 0120 1FE0     		b	.L104
 1337              	.L103:
 896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pTxBuffPtr ++;
 1338              		.loc 1 896 0
 1339 0122 A36B     		ldr	r3, [r4, #56]
 1340 0124 1B78     		ldrb	r3, [r3]
 1341 0126 2268     		ldr	r2, [r4]
 1342 0128 1373     		strb	r3, [r2, #12]
 897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount--;
ARM GAS  /tmp/ccQ5vJp4.s 			page 101


 1343              		.loc 1 897 0
 1344 012a A36B     		ldr	r3, [r4, #56]
 1345 012c 0133     		adds	r3, r3, #1
 1346 012e A363     		str	r3, [r4, #56]
 898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 1347              		.loc 1 898 0
 1348 0130 E38F     		ldrh	r3, [r4, #62]
 1349 0132 013B     		subs	r3, r3, #1
 1350 0134 9BB2     		uxth	r3, r3
 1351 0136 E387     		strh	r3, [r4, #62]
 1352 0138 13E0     		b	.L104
 1353              	.LVL86:
 1354              	.L106:
 915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 1355              		.loc 1 915 0
 1356 013a A36B     		ldr	r3, [r4, #56]
 1357 013c 1B78     		ldrb	r3, [r3]
 1358 013e 1373     		strb	r3, [r2, #12]
 916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->TxXferCount--;
 1359              		.loc 1 916 0
 1360 0140 A36B     		ldr	r3, [r4, #56]
 1361 0142 0133     		adds	r3, r3, #1
 1362 0144 A363     		str	r3, [r4, #56]
 917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 1363              		.loc 1 917 0
 1364 0146 E38F     		ldrh	r3, [r4, #62]
 1365 0148 013B     		subs	r3, r3, #1
 1366 014a 9BB2     		uxth	r3, r3
 1367 014c E387     		strh	r3, [r4, #62]
 1368 014e 08E0     		b	.L104
 1369              	.L105:
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 1370              		.loc 1 923 0
 1371 0150 FFF7FEFF 		bl	HAL_GetTick
 1372              	.LVL87:
 1373 0154 401B     		subs	r0, r0, r5
 1374 0156 B842     		cmp	r0, r7
 1375 0158 01D3     		bcc	.L108
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 1376              		.loc 1 923 0 is_stmt 0 discriminator 1
 1377 015a 7B1C     		adds	r3, r7, #1
 1378 015c 38D1     		bne	.L118
 1379              	.L108:
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 1380              		.loc 1 923 0 discriminator 3
 1381 015e 002F     		cmp	r7, #0
 1382 0160 38D0     		beq	.L119
 1383              	.L104:
 901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1384              		.loc 1 901 0 is_stmt 1
 1385 0162 E38F     		ldrh	r3, [r4, #62]
 1386 0164 9BB2     		uxth	r3, r3
 1387 0166 002B     		cmp	r3, #0
 1388 0168 12D0     		beq	.L100
 904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1389              		.loc 1 904 0
 1390 016a 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccQ5vJp4.s 			page 102


 1391 016c 9368     		ldr	r3, [r2, #8]
 1392 016e 9B07     		lsls	r3, r3, #30
 1393 0170 EED5     		bpl	.L105
 906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 1394              		.loc 1 906 0
 1395 0172 E38F     		ldrh	r3, [r4, #62]
 1396 0174 9BB2     		uxth	r3, r3
 1397 0176 012B     		cmp	r3, #1
 1398 0178 DFD9     		bls	.L106
 909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 1399              		.loc 1 909 0
 1400 017a A36B     		ldr	r3, [r4, #56]
 1401 017c 1B88     		ldrh	r3, [r3]
 1402 017e D360     		str	r3, [r2, #12]
 910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1403              		.loc 1 910 0
 1404 0180 A36B     		ldr	r3, [r4, #56]
 1405 0182 0233     		adds	r3, r3, #2
 1406 0184 A363     		str	r3, [r4, #56]
 911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 1407              		.loc 1 911 0
 1408 0186 E38F     		ldrh	r3, [r4, #62]
 1409 0188 023B     		subs	r3, r3, #2
 1410 018a 9BB2     		uxth	r3, r3
 1411 018c E387     		strh	r3, [r4, #62]
 1412 018e E8E7     		b	.L104
 1413              	.L100:
 940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1414              		.loc 1 940 0
 1415 0190 2A00     		movs	r2, r5
 1416 0192 3900     		movs	r1, r7
 1417 0194 2000     		movs	r0, r4
 1418 0196 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1419              	.LVL88:
 1420 019a 0028     		cmp	r0, #0
 1421 019c 01D0     		beq	.L110
 942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 1422              		.loc 1 942 0
 1423 019e 2023     		movs	r3, #32
 1424 01a0 2366     		str	r3, [r4, #96]
 1425              	.L110:
 946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1426              		.loc 1 946 0
 1427 01a2 A368     		ldr	r3, [r4, #8]
 1428 01a4 002B     		cmp	r3, #0
 1429 01a6 06D1     		bne	.L111
 1430              	.LBB2:
 948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 1431              		.loc 1 948 0
 1432 01a8 0393     		str	r3, [sp, #12]
 1433 01aa 2368     		ldr	r3, [r4]
 1434 01ac DA68     		ldr	r2, [r3, #12]
 1435 01ae 0392     		str	r2, [sp, #12]
 1436 01b0 9B68     		ldr	r3, [r3, #8]
 1437 01b2 0393     		str	r3, [sp, #12]
 1438 01b4 039B     		ldr	r3, [sp, #12]
 1439              	.L111:
ARM GAS  /tmp/ccQ5vJp4.s 			page 103


 1440              	.LBE2:
 951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1441              		.loc 1 951 0
 1442 01b6 236E     		ldr	r3, [r4, #96]
 1443 01b8 002B     		cmp	r3, #0
 1444 01ba 0DD1     		bne	.L120
 792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 1445              		.loc 1 792 0
 1446 01bc 0020     		movs	r0, #0
 1447 01be 35E7     		b	.L89
 1448              	.LVL89:
 1449              	.L114:
 813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 1450              		.loc 1 813 0
 1451 01c0 0120     		movs	r0, #1
 1452              	.LVL90:
 1453 01c2 33E7     		b	.L89
 1454              	.LVL91:
 1455              	.L115:
 1456 01c4 0120     		movs	r0, #1
 1457              	.LVL92:
 1458 01c6 31E7     		b	.L89
 1459              	.L116:
 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           goto error;
 1460              		.loc 1 876 0
 1461 01c8 0320     		movs	r0, #3
 1462 01ca 2FE7     		b	.L89
 1463              	.L117:
 1464 01cc 0320     		movs	r0, #3
 1465 01ce 2DE7     		b	.L89
 1466              	.L118:
 925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           goto error;
 1467              		.loc 1 925 0
 1468 01d0 0320     		movs	r0, #3
 1469 01d2 2BE7     		b	.L89
 1470              	.L119:
 1471 01d4 0320     		movs	r0, #3
 1472 01d6 29E7     		b	.L89
 1473              	.L120:
 953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 1474              		.loc 1 953 0
 1475 01d8 0120     		movs	r0, #1
 1476 01da 27E7     		b	.L89
 1477              	.LVL93:
 1478              	.L112:
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1479              		.loc 1 799 0
 1480 01dc 0220     		movs	r0, #2
 1481              	.LVL94:
 1482 01de 2BE7     		b	.L88
 1483              		.cfi_endproc
 1484              	.LFE177:
 1486              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1487              		.align	1
 1488              		.global	HAL_SPI_TransmitReceive
 1489              		.syntax unified
 1490              		.code	16
ARM GAS  /tmp/ccQ5vJp4.s 			page 104


 1491              		.thumb_func
 1492              		.fpu softvfp
 1494              	HAL_SPI_TransmitReceive:
 1495              	.LFB179:
1199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
 1496              		.loc 1 1199 0
 1497              		.cfi_startproc
 1498              		@ args = 4, pretend = 0, frame = 8
 1499              		@ frame_needed = 0, uses_anonymous_args = 0
 1500              	.LVL95:
 1501 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1502              	.LCFI14:
 1503              		.cfi_def_cfa_offset 20
 1504              		.cfi_offset 4, -20
 1505              		.cfi_offset 5, -16
 1506              		.cfi_offset 6, -12
 1507              		.cfi_offset 7, -8
 1508              		.cfi_offset 14, -4
 1509 0002 83B0     		sub	sp, sp, #12
 1510              	.LCFI15:
 1511              		.cfi_def_cfa_offset 32
 1512 0004 0400     		movs	r4, r0
 1513 0006 0E00     		movs	r6, r1
 1514 0008 0192     		str	r2, [sp, #4]
 1515 000a 1D00     		movs	r5, r3
 1516              	.LVL96:
1218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1517              		.loc 1 1218 0
 1518 000c 5C23     		movs	r3, #92
 1519              	.LVL97:
 1520 000e C35C     		ldrb	r3, [r0, r3]
 1521 0010 012B     		cmp	r3, #1
 1522 0012 00D1     		bne	.LCB1484
 1523 0014 57E1     		b	.L150	@long jump
 1524              	.LCB1484:
1218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1525              		.loc 1 1218 0 is_stmt 0 discriminator 2
 1526 0016 5C23     		movs	r3, #92
 1527 0018 0122     		movs	r2, #1
 1528              	.LVL98:
 1529 001a C254     		strb	r2, [r0, r3]
1221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1530              		.loc 1 1221 0 is_stmt 1 discriminator 2
 1531 001c FFF7FEFF 		bl	HAL_GetTick
 1532              	.LVL99:
 1533 0020 0700     		movs	r7, r0
 1534              	.LVL100:
1224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1535              		.loc 1 1224 0 discriminator 2
 1536 0022 5D23     		movs	r3, #93
 1537 0024 E35C     		ldrb	r3, [r4, r3]
 1538 0026 DBB2     		uxtb	r3, r3
 1539              	.LVL101:
1225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   initial_TxXferCount = Size;
 1540              		.loc 1 1225 0 discriminator 2
 1541 0028 6268     		ldr	r2, [r4, #4]
 1542              	.LVL102:
ARM GAS  /tmp/ccQ5vJp4.s 			page 105


1233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1543              		.loc 1 1233 0 discriminator 2
 1544 002a 012B     		cmp	r3, #1
 1545 002c 14D0     		beq	.L125
1233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1546              		.loc 1 1233 0 is_stmt 0 discriminator 1
 1547 002e 8221     		movs	r1, #130
 1548 0030 4900     		lsls	r1, r1, #1
 1549 0032 8A42     		cmp	r2, r1
 1550 0034 08D0     		beq	.L161
1236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 1551              		.loc 1 1236 0 is_stmt 1
 1552 0036 0220     		movs	r0, #2
 1553              	.LVL103:
 1554              	.L126:
1482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1555              		.loc 1 1482 0
 1556 0038 5D23     		movs	r3, #93
 1557 003a 0122     		movs	r2, #1
 1558 003c E254     		strb	r2, [r4, r3]
1483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
 1559              		.loc 1 1483 0
 1560 003e 013B     		subs	r3, r3, #1
 1561 0040 0022     		movs	r2, #0
 1562 0042 E254     		strb	r2, [r4, r3]
 1563              	.LVL104:
 1564              	.L124:
1485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1565              		.loc 1 1485 0
 1566 0044 03B0     		add	sp, sp, #12
 1567              		@ sp needed
 1568              	.LVL105:
 1569              	.LVL106:
 1570 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 1571              	.LVL107:
 1572              	.L161:
1234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1573              		.loc 1 1234 0
 1574 0048 A268     		ldr	r2, [r4, #8]
 1575              	.LVL108:
 1576 004a 002A     		cmp	r2, #0
 1577 004c 00D0     		beq	.LCB1563
 1578 004e 2CE1     		b	.L152	@long jump
 1579              	.LCB1563:
1234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1580              		.loc 1 1234 0 is_stmt 0 discriminator 1
 1581 0050 042B     		cmp	r3, #4
 1582 0052 01D0     		beq	.L125
1236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 1583              		.loc 1 1236 0 is_stmt 1
 1584 0054 0220     		movs	r0, #2
 1585              	.LVL109:
 1586 0056 EFE7     		b	.L126
 1587              	.LVL110:
 1588              	.L125:
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1589              		.loc 1 1240 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 106


 1590 0058 002E     		cmp	r6, #0
 1591 005a 00D1     		bne	.LCB1576
 1592 005c 27E1     		b	.L154	@long jump
 1593              	.LCB1576:
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1594              		.loc 1 1240 0 is_stmt 0 discriminator 1
 1595 005e 019B     		ldr	r3, [sp, #4]
 1596              	.LVL111:
 1597 0060 002B     		cmp	r3, #0
 1598 0062 00D1     		bne	.LCB1580
 1599 0064 25E1     		b	.L155	@long jump
 1600              	.LCB1580:
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1601              		.loc 1 1240 0 discriminator 2
 1602 0066 002D     		cmp	r5, #0
 1603 0068 00D1     		bne	.LCB1582
 1604 006a 24E1     		b	.L156	@long jump
 1605              	.LCB1582:
1247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1606              		.loc 1 1247 0 is_stmt 1
 1607 006c 5D23     		movs	r3, #93
 1608 006e E35C     		ldrb	r3, [r4, r3]
 1609 0070 042B     		cmp	r3, #4
 1610 0072 02D0     		beq	.L127
1249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 1611              		.loc 1 1249 0
 1612 0074 5D23     		movs	r3, #93
 1613 0076 0522     		movs	r2, #5
 1614 0078 E254     		strb	r2, [r4, r3]
 1615              	.LVL112:
 1616              	.L127:
1253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1617              		.loc 1 1253 0
 1618 007a 0023     		movs	r3, #0
 1619 007c 2366     		str	r3, [r4, #96]
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1620              		.loc 1 1254 0
 1621 007e 019A     		ldr	r2, [sp, #4]
 1622 0080 2264     		str	r2, [r4, #64]
1255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1623              		.loc 1 1255 0
 1624 0082 4622     		movs	r2, #70
 1625 0084 A552     		strh	r5, [r4, r2]
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1626              		.loc 1 1256 0
 1627 0086 023A     		subs	r2, r2, #2
 1628 0088 A552     		strh	r5, [r4, r2]
1257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1629              		.loc 1 1257 0
 1630 008a A663     		str	r6, [r4, #56]
1258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1631              		.loc 1 1258 0
 1632 008c E587     		strh	r5, [r4, #62]
1259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1633              		.loc 1 1259 0
 1634 008e A587     		strh	r5, [r4, #60]
1262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
ARM GAS  /tmp/ccQ5vJp4.s 			page 107


 1635              		.loc 1 1262 0
 1636 0090 E364     		str	r3, [r4, #76]
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1637              		.loc 1 1263 0
 1638 0092 2365     		str	r3, [r4, #80]
1274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1639              		.loc 1 1274 0
 1640 0094 E023     		movs	r3, #224
 1641 0096 DB00     		lsls	r3, r3, #3
 1642 0098 E268     		ldr	r2, [r4, #12]
 1643 009a 9A42     		cmp	r2, r3
 1644 009c 01D8     		bhi	.L128
1274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1645              		.loc 1 1274 0 is_stmt 0 discriminator 1
 1646 009e 012D     		cmp	r5, #1
 1647 00a0 23D9     		bls	.L129
 1648              	.L128:
1277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 1649              		.loc 1 1277 0 is_stmt 1
 1650 00a2 2268     		ldr	r2, [r4]
 1651 00a4 5368     		ldr	r3, [r2, #4]
 1652 00a6 8949     		ldr	r1, .L165
 1653 00a8 0B40     		ands	r3, r1
 1654 00aa 5360     		str	r3, [r2, #4]
 1655              	.L130:
1286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1656              		.loc 1 1286 0
 1657 00ac 2368     		ldr	r3, [r4]
 1658 00ae 1A68     		ldr	r2, [r3]
 1659 00b0 5206     		lsls	r2, r2, #25
 1660 00b2 03D4     		bmi	.L131
1289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 1661              		.loc 1 1289 0
 1662 00b4 1A68     		ldr	r2, [r3]
 1663 00b6 4021     		movs	r1, #64
 1664 00b8 0A43     		orrs	r2, r1
 1665 00ba 1A60     		str	r2, [r3]
 1666              	.L131:
1293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 1667              		.loc 1 1293 0
 1668 00bc E023     		movs	r3, #224
 1669 00be DB00     		lsls	r3, r3, #3
 1670 00c0 E268     		ldr	r2, [r4, #12]
 1671 00c2 9A42     		cmp	r2, r3
 1672 00c4 56D9     		bls	.L132
1295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1673              		.loc 1 1295 0
 1674 00c6 6368     		ldr	r3, [r4, #4]
 1675 00c8 002B     		cmp	r3, #0
 1676 00ca 01D0     		beq	.L133
1295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1677              		.loc 1 1295 0 is_stmt 0 discriminator 1
 1678 00cc 012D     		cmp	r5, #1
 1679 00ce 0AD1     		bne	.L134
 1680              	.L133:
1297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1681              		.loc 1 1297 0 is_stmt 1
ARM GAS  /tmp/ccQ5vJp4.s 			page 108


 1682 00d0 2368     		ldr	r3, [r4]
 1683 00d2 A26B     		ldr	r2, [r4, #56]
 1684 00d4 1288     		ldrh	r2, [r2]
 1685 00d6 DA60     		str	r2, [r3, #12]
1298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->TxXferCount--;
 1686              		.loc 1 1298 0
 1687 00d8 A36B     		ldr	r3, [r4, #56]
 1688 00da 0233     		adds	r3, r3, #2
 1689 00dc A363     		str	r3, [r4, #56]
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 1690              		.loc 1 1299 0
 1691 00de E38F     		ldrh	r3, [r4, #62]
 1692 00e0 013B     		subs	r3, r3, #1
 1693 00e2 9BB2     		uxth	r3, r3
 1694 00e4 E387     		strh	r3, [r4, #62]
 1695              	.L134:
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 1696              		.loc 1 1333 0
 1697 00e6 0125     		movs	r5, #1
 1698              	.LVL113:
 1699 00e8 24E0     		b	.L135
 1700              	.LVL114:
 1701              	.L129:
1282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 1702              		.loc 1 1282 0
 1703 00ea 2268     		ldr	r2, [r4]
 1704 00ec 5168     		ldr	r1, [r2, #4]
 1705 00ee 8023     		movs	r3, #128
 1706 00f0 5B01     		lsls	r3, r3, #5
 1707 00f2 0B43     		orrs	r3, r1
 1708 00f4 5360     		str	r3, [r2, #4]
 1709 00f6 D9E7     		b	.L130
 1710              	.LVL115:
 1711              	.L136:
1327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1712              		.loc 1 1327 0
 1713 00f8 2368     		ldr	r3, [r4]
 1714 00fa 9A68     		ldr	r2, [r3, #8]
 1715 00fc D207     		lsls	r2, r2, #31
 1716 00fe 10D5     		bpl	.L137
1327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1717              		.loc 1 1327 0 is_stmt 0 discriminator 1
 1718 0100 4622     		movs	r2, #70
 1719 0102 A25A     		ldrh	r2, [r4, r2]
 1720 0104 92B2     		uxth	r2, r2
 1721 0106 002A     		cmp	r2, #0
 1722 0108 0BD0     		beq	.L137
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1723              		.loc 1 1329 0 is_stmt 1
 1724 010a DB68     		ldr	r3, [r3, #12]
 1725 010c 226C     		ldr	r2, [r4, #64]
 1726 010e 1380     		strh	r3, [r2]
1330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount--;
 1727              		.loc 1 1330 0
 1728 0110 236C     		ldr	r3, [r4, #64]
 1729 0112 0233     		adds	r3, r3, #2
 1730 0114 2364     		str	r3, [r4, #64]
ARM GAS  /tmp/ccQ5vJp4.s 			page 109


1331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1731              		.loc 1 1331 0
 1732 0116 4622     		movs	r2, #70
 1733 0118 A35A     		ldrh	r3, [r4, r2]
 1734 011a 013B     		subs	r3, r3, #1
 1735 011c 9BB2     		uxth	r3, r3
 1736 011e A352     		strh	r3, [r4, r2]
 1737              	.LVL116:
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 1738              		.loc 1 1333 0
 1739 0120 0125     		movs	r5, #1
 1740              	.LVL117:
 1741              	.L137:
1335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1742              		.loc 1 1335 0
 1743 0122 FFF7FEFF 		bl	HAL_GetTick
 1744              	.LVL118:
 1745 0126 C01B     		subs	r0, r0, r7
 1746 0128 089B     		ldr	r3, [sp, #32]
 1747 012a 9842     		cmp	r0, r3
 1748 012c 02D3     		bcc	.L135
1335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1749              		.loc 1 1335 0 is_stmt 0 discriminator 1
 1750 012e 0133     		adds	r3, r3, #1
 1751 0130 00D0     		beq	.LCB1736
 1752 0132 C2E0     		b	.L157	@long jump
 1753              	.LCB1736:
 1754              	.LVL119:
 1755              	.L135:
1301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1756              		.loc 1 1301 0 is_stmt 1
 1757 0134 E38F     		ldrh	r3, [r4, #62]
 1758 0136 9BB2     		uxth	r3, r3
 1759 0138 002B     		cmp	r3, #0
 1760 013a 05D1     		bne	.L138
1301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1761              		.loc 1 1301 0 is_stmt 0 discriminator 1
 1762 013c 4633     		adds	r3, r3, #70
 1763 013e E35A     		ldrh	r3, [r4, r3]
 1764 0140 9BB2     		uxth	r3, r3
 1765 0142 002B     		cmp	r3, #0
 1766 0144 00D1     		bne	.LCB1750
 1767 0146 A4E0     		b	.L139	@long jump
 1768              	.LCB1750:
 1769              	.L138:
1304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1770              		.loc 1 1304 0 is_stmt 1
 1771 0148 2368     		ldr	r3, [r4]
 1772 014a 9A68     		ldr	r2, [r3, #8]
 1773 014c 9207     		lsls	r2, r2, #30
 1774 014e D3D5     		bpl	.L136
1304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1775              		.loc 1 1304 0 is_stmt 0 discriminator 1
 1776 0150 E28F     		ldrh	r2, [r4, #62]
 1777 0152 92B2     		uxth	r2, r2
 1778 0154 002A     		cmp	r2, #0
 1779 0156 CFD0     		beq	.L136
ARM GAS  /tmp/ccQ5vJp4.s 			page 110


1304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1780              		.loc 1 1304 0 discriminator 2
 1781 0158 012D     		cmp	r5, #1
 1782 015a CDD1     		bne	.L136
1306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1783              		.loc 1 1306 0 is_stmt 1
 1784 015c A26B     		ldr	r2, [r4, #56]
 1785 015e 1288     		ldrh	r2, [r2]
 1786 0160 DA60     		str	r2, [r3, #12]
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount--;
 1787              		.loc 1 1307 0
 1788 0162 A36B     		ldr	r3, [r4, #56]
 1789 0164 0233     		adds	r3, r3, #2
 1790 0166 A363     		str	r3, [r4, #56]
1308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1791              		.loc 1 1308 0
 1792 0168 E38F     		ldrh	r3, [r4, #62]
 1793 016a 013B     		subs	r3, r3, #1
 1794 016c 9BB2     		uxth	r3, r3
 1795 016e E387     		strh	r3, [r4, #62]
 1796              	.LVL120:
1310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1797              		.loc 1 1310 0
 1798 0170 0025     		movs	r5, #0
 1799 0172 C1E7     		b	.L136
 1800              	.LVL121:
 1801              	.L132:
1345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1802              		.loc 1 1345 0
 1803 0174 6368     		ldr	r3, [r4, #4]
 1804 0176 002B     		cmp	r3, #0
 1805 0178 01D0     		beq	.L140
1345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1806              		.loc 1 1345 0 is_stmt 0 discriminator 1
 1807 017a 012D     		cmp	r5, #1
 1808 017c 0ED1     		bne	.L141
 1809              	.L140:
1347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1810              		.loc 1 1347 0 is_stmt 1
 1811 017e E38F     		ldrh	r3, [r4, #62]
 1812 0180 9BB2     		uxth	r3, r3
 1813 0182 012B     		cmp	r3, #1
 1814 0184 0CD9     		bls	.L142
1349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1815              		.loc 1 1349 0
 1816 0186 2368     		ldr	r3, [r4]
 1817 0188 A26B     		ldr	r2, [r4, #56]
 1818 018a 1288     		ldrh	r2, [r2]
 1819 018c DA60     		str	r2, [r3, #12]
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 1820              		.loc 1 1350 0
 1821 018e A36B     		ldr	r3, [r4, #56]
 1822 0190 0233     		adds	r3, r3, #2
 1823 0192 A363     		str	r3, [r4, #56]
1351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 1824              		.loc 1 1351 0
 1825 0194 E38F     		ldrh	r3, [r4, #62]
ARM GAS  /tmp/ccQ5vJp4.s 			page 111


 1826 0196 023B     		subs	r3, r3, #2
 1827 0198 9BB2     		uxth	r3, r3
 1828 019a E387     		strh	r3, [r4, #62]
 1829              	.L141:
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 1830              		.loc 1 1415 0
 1831 019c 0125     		movs	r5, #1
 1832              	.LVL122:
 1833 019e 46E0     		b	.L148
 1834              	.LVL123:
 1835              	.L142:
1355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1836              		.loc 1 1355 0
 1837 01a0 A36B     		ldr	r3, [r4, #56]
 1838 01a2 1B78     		ldrb	r3, [r3]
 1839 01a4 2268     		ldr	r2, [r4]
 1840 01a6 1373     		strb	r3, [r2, #12]
1356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount--;
 1841              		.loc 1 1356 0
 1842 01a8 A36B     		ldr	r3, [r4, #56]
 1843 01aa 0133     		adds	r3, r3, #1
 1844 01ac A363     		str	r3, [r4, #56]
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 1845              		.loc 1 1357 0
 1846 01ae E38F     		ldrh	r3, [r4, #62]
 1847 01b0 013B     		subs	r3, r3, #1
 1848 01b2 9BB2     		uxth	r3, r3
 1849 01b4 E387     		strh	r3, [r4, #62]
 1850 01b6 F1E7     		b	.L141
 1851              	.LVL124:
 1852              	.L163:
1365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 1853              		.loc 1 1365 0
 1854 01b8 E28F     		ldrh	r2, [r4, #62]
 1855 01ba 92B2     		uxth	r2, r2
 1856 01bc 012A     		cmp	r2, #1
 1857 01be 0BD9     		bls	.L144
1367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 1858              		.loc 1 1367 0
 1859 01c0 A26B     		ldr	r2, [r4, #56]
 1860 01c2 1288     		ldrh	r2, [r2]
 1861 01c4 DA60     		str	r2, [r3, #12]
1368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1862              		.loc 1 1368 0
 1863 01c6 A36B     		ldr	r3, [r4, #56]
 1864 01c8 0233     		adds	r3, r3, #2
 1865 01ca A363     		str	r3, [r4, #56]
1369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 1866              		.loc 1 1369 0
 1867 01cc E38F     		ldrh	r3, [r4, #62]
 1868 01ce 023B     		subs	r3, r3, #2
 1869 01d0 9BB2     		uxth	r3, r3
 1870 01d2 E387     		strh	r3, [r4, #62]
1378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1871              		.loc 1 1378 0
 1872 01d4 0025     		movs	r5, #0
 1873              	.LVL125:
ARM GAS  /tmp/ccQ5vJp4.s 			page 112


 1874 01d6 3DE0     		b	.L143
 1875              	.LVL126:
 1876              	.L144:
1373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 1877              		.loc 1 1373 0
 1878 01d8 A26B     		ldr	r2, [r4, #56]
 1879 01da 1278     		ldrb	r2, [r2]
 1880 01dc 1A73     		strb	r2, [r3, #12]
1374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->TxXferCount--;
 1881              		.loc 1 1374 0
 1882 01de A36B     		ldr	r3, [r4, #56]
 1883 01e0 0133     		adds	r3, r3, #1
 1884 01e2 A363     		str	r3, [r4, #56]
1375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 1885              		.loc 1 1375 0
 1886 01e4 E38F     		ldrh	r3, [r4, #62]
 1887 01e6 013B     		subs	r3, r3, #1
 1888 01e8 9BB2     		uxth	r3, r3
 1889 01ea E387     		strh	r3, [r4, #62]
1378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 1890              		.loc 1 1378 0
 1891 01ec 0025     		movs	r5, #0
 1892              	.LVL127:
 1893 01ee 31E0     		b	.L143
 1894              	.LVL128:
 1895              	.L164:
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           }
 1896              		.loc 1 1405 0
 1897 01f0 2268     		ldr	r2, [r4]
 1898 01f2 5168     		ldr	r1, [r2, #4]
 1899 01f4 8023     		movs	r3, #128
 1900 01f6 5B01     		lsls	r3, r3, #5
 1901 01f8 0B43     		orrs	r3, r1
 1902 01fa 5360     		str	r3, [r2, #4]
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 1903              		.loc 1 1415 0
 1904 01fc 0125     		movs	r5, #1
 1905              	.LVL129:
 1906 01fe 0BE0     		b	.L145
 1907              	.LVL130:
 1908              	.L146:
1410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->pRxBuffPtr++;
 1909              		.loc 1 1410 0
 1910 0200 1B7B     		ldrb	r3, [r3, #12]
 1911 0202 226C     		ldr	r2, [r4, #64]
 1912 0204 1370     		strb	r3, [r2]
1411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->RxXferCount--;
 1913              		.loc 1 1411 0
 1914 0206 236C     		ldr	r3, [r4, #64]
 1915 0208 0133     		adds	r3, r3, #1
 1916 020a 2364     		str	r3, [r4, #64]
1412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         }
 1917              		.loc 1 1412 0
 1918 020c 4622     		movs	r2, #70
 1919 020e A35A     		ldrh	r3, [r4, r2]
 1920 0210 013B     		subs	r3, r3, #1
 1921 0212 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccQ5vJp4.s 			page 113


 1922 0214 A352     		strh	r3, [r4, r2]
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 1923              		.loc 1 1415 0
 1924 0216 0125     		movs	r5, #1
 1925              	.LVL131:
 1926              	.L145:
1417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1927              		.loc 1 1417 0
 1928 0218 FFF7FEFF 		bl	HAL_GetTick
 1929              	.LVL132:
 1930 021c C01B     		subs	r0, r0, r7
 1931 021e 089B     		ldr	r3, [sp, #32]
 1932 0220 9842     		cmp	r0, r3
 1933 0222 01D3     		bcc	.L147
1417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1934              		.loc 1 1417 0 is_stmt 0 discriminator 1
 1935 0224 0133     		adds	r3, r3, #1
 1936 0226 4AD1     		bne	.L159
 1937              	.L147:
1417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1938              		.loc 1 1417 0 discriminator 3
 1939 0228 089B     		ldr	r3, [sp, #32]
 1940 022a 002B     		cmp	r3, #0
 1941 022c 49D0     		beq	.L162
 1942              	.LVL133:
 1943              	.L148:
1360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1944              		.loc 1 1360 0 is_stmt 1
 1945 022e E38F     		ldrh	r3, [r4, #62]
 1946 0230 9BB2     		uxth	r3, r3
 1947 0232 002B     		cmp	r3, #0
 1948 0234 04D1     		bne	.L149
1360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 1949              		.loc 1 1360 0 is_stmt 0 discriminator 1
 1950 0236 4633     		adds	r3, r3, #70
 1951 0238 E35A     		ldrh	r3, [r4, r3]
 1952 023a 9BB2     		uxth	r3, r3
 1953 023c 002B     		cmp	r3, #0
 1954 023e 28D0     		beq	.L139
 1955              	.L149:
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1956              		.loc 1 1363 0 is_stmt 1
 1957 0240 2368     		ldr	r3, [r4]
 1958 0242 9A68     		ldr	r2, [r3, #8]
 1959 0244 9207     		lsls	r2, r2, #30
 1960 0246 05D5     		bpl	.L143
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1961              		.loc 1 1363 0 is_stmt 0 discriminator 1
 1962 0248 E28F     		ldrh	r2, [r4, #62]
 1963 024a 92B2     		uxth	r2, r2
 1964 024c 002A     		cmp	r2, #0
 1965 024e 01D0     		beq	.L143
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1966              		.loc 1 1363 0 discriminator 2
 1967 0250 012D     		cmp	r5, #1
 1968 0252 B1D0     		beq	.L163
 1969              	.LVL134:
ARM GAS  /tmp/ccQ5vJp4.s 			page 114


 1970              	.L143:
1395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1971              		.loc 1 1395 0 is_stmt 1
 1972 0254 2368     		ldr	r3, [r4]
 1973 0256 9A68     		ldr	r2, [r3, #8]
 1974 0258 D207     		lsls	r2, r2, #31
 1975 025a DDD5     		bpl	.L145
1395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 1976              		.loc 1 1395 0 is_stmt 0 discriminator 1
 1977 025c 4622     		movs	r2, #70
 1978 025e A25A     		ldrh	r2, [r4, r2]
 1979 0260 92B2     		uxth	r2, r2
 1980 0262 002A     		cmp	r2, #0
 1981 0264 D8D0     		beq	.L145
1397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 1982              		.loc 1 1397 0 is_stmt 1
 1983 0266 4622     		movs	r2, #70
 1984 0268 A25A     		ldrh	r2, [r4, r2]
 1985 026a 92B2     		uxth	r2, r2
 1986 026c 012A     		cmp	r2, #1
 1987 026e C7D9     		bls	.L146
1399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
 1988              		.loc 1 1399 0
 1989 0270 DB68     		ldr	r3, [r3, #12]
 1990 0272 226C     		ldr	r2, [r4, #64]
 1991 0274 1380     		strh	r3, [r2]
1400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
 1992              		.loc 1 1400 0
 1993 0276 236C     		ldr	r3, [r4, #64]
 1994 0278 0233     		adds	r3, r3, #2
 1995 027a 2364     		str	r3, [r4, #64]
1401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
 1996              		.loc 1 1401 0
 1997 027c 4622     		movs	r2, #70
 1998 027e A35A     		ldrh	r3, [r4, r2]
 1999 0280 023B     		subs	r3, r3, #2
 2000 0282 9BB2     		uxth	r3, r3
 2001 0284 A352     		strh	r3, [r4, r2]
1402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           {
 2002              		.loc 1 1402 0
 2003 0286 A35A     		ldrh	r3, [r4, r2]
 2004 0288 9BB2     		uxth	r3, r3
 2005 028a 012B     		cmp	r3, #1
 2006 028c B0D9     		bls	.L164
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 2007              		.loc 1 1415 0
 2008 028e 0125     		movs	r5, #1
 2009              	.LVL135:
 2010 0290 C2E7     		b	.L145
 2011              	.LVL136:
 2012              	.L139:
1475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2013              		.loc 1 1475 0
 2014 0292 3A00     		movs	r2, r7
 2015 0294 0899     		ldr	r1, [sp, #32]
 2016 0296 2000     		movs	r0, r4
 2017 0298 FFF7FEFF 		bl	SPI_EndRxTxTransaction
ARM GAS  /tmp/ccQ5vJp4.s 			page 115


 2018              	.LVL137:
 2019 029c 0028     		cmp	r0, #0
 2020 029e 00D1     		bne	.LCB2021
 2021 02a0 CAE6     		b	.L126	@long jump
 2022              	.LCB2021:
 2023              	.LVL138:
1478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2024              		.loc 1 1478 0
 2025 02a2 2023     		movs	r3, #32
 2026 02a4 2366     		str	r3, [r4, #96]
1477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 2027              		.loc 1 1477 0
 2028 02a6 0120     		movs	r0, #1
 2029 02a8 C6E6     		b	.L126
 2030              	.LVL139:
 2031              	.L152:
1236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 2032              		.loc 1 1236 0
 2033 02aa 0220     		movs	r0, #2
 2034              	.LVL140:
 2035 02ac C4E6     		b	.L126
 2036              	.LVL141:
 2037              	.L154:
1242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 2038              		.loc 1 1242 0
 2039 02ae 0120     		movs	r0, #1
 2040              	.LVL142:
 2041 02b0 C2E6     		b	.L126
 2042              	.LVL143:
 2043              	.L155:
 2044 02b2 0120     		movs	r0, #1
 2045              	.LVL144:
 2046 02b4 C0E6     		b	.L126
 2047              	.LVL145:
 2048              	.L156:
 2049 02b6 0120     		movs	r0, #1
 2050              	.LVL146:
 2051 02b8 BEE6     		b	.L126
 2052              	.LVL147:
 2053              	.L157:
1337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         goto error;
 2054              		.loc 1 1337 0
 2055 02ba 0320     		movs	r0, #3
 2056 02bc BCE6     		b	.L126
 2057              	.L159:
1419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         goto error;
 2058              		.loc 1 1419 0
 2059 02be 0320     		movs	r0, #3
 2060 02c0 BAE6     		b	.L126
 2061              	.L162:
 2062 02c2 0320     		movs	r0, #3
 2063 02c4 B8E6     		b	.L126
 2064              	.LVL148:
 2065              	.L150:
1218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2066              		.loc 1 1218 0
 2067 02c6 0220     		movs	r0, #2
ARM GAS  /tmp/ccQ5vJp4.s 			page 116


 2068              	.LVL149:
 2069 02c8 BCE6     		b	.L124
 2070              	.L166:
 2071 02ca C046     		.align	2
 2072              	.L165:
 2073 02cc FFEFFFFF 		.word	-4097
 2074              		.cfi_endproc
 2075              	.LFE179:
 2077              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 2078              		.align	1
 2079              		.global	HAL_SPI_Receive
 2080              		.syntax unified
 2081              		.code	16
 2082              		.thumb_func
 2083              		.fpu softvfp
 2085              	HAL_SPI_Receive:
 2086              	.LFB178:
 973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
 2087              		.loc 1 973 0
 2088              		.cfi_startproc
 2089              		@ args = 0, pretend = 0, frame = 8
 2090              		@ frame_needed = 0, uses_anonymous_args = 0
 2091              	.LVL150:
 2092 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2093              	.LCFI16:
 2094              		.cfi_def_cfa_offset 20
 2095              		.cfi_offset 4, -20
 2096              		.cfi_offset 5, -16
 2097              		.cfi_offset 6, -12
 2098              		.cfi_offset 7, -8
 2099              		.cfi_offset 14, -4
 2100 0002 85B0     		sub	sp, sp, #20
 2101              	.LCFI17:
 2102              		.cfi_def_cfa_offset 40
 2103 0004 0400     		movs	r4, r0
 2104 0006 0D00     		movs	r5, r1
 2105 0008 1600     		movs	r6, r2
 2106 000a 1F00     		movs	r7, r3
 2107              	.LVL151:
 977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2108              		.loc 1 977 0
 2109 000c 8223     		movs	r3, #130
 2110              	.LVL152:
 2111 000e 5B00     		lsls	r3, r3, #1
 2112 0010 4268     		ldr	r2, [r0, #4]
 2113              	.LVL153:
 2114 0012 9A42     		cmp	r2, r3
 2115 0014 17D0     		beq	.L196
 2116              	.L168:
 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2117              		.loc 1 985 0
 2118 0016 5C23     		movs	r3, #92
 2119 0018 E35C     		ldrb	r3, [r4, r3]
 2120 001a 012B     		cmp	r3, #1
 2121 001c 00D1     		bne	.LCB2151
 2122 001e B7E0     		b	.L187	@long jump
 2123              	.LCB2151:
ARM GAS  /tmp/ccQ5vJp4.s 			page 117


 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2124              		.loc 1 985 0 is_stmt 0 discriminator 2
 2125 0020 5C23     		movs	r3, #92
 2126 0022 0122     		movs	r2, #1
 2127 0024 E254     		strb	r2, [r4, r3]
 988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2128              		.loc 1 988 0 is_stmt 1 discriminator 2
 2129 0026 FFF7FEFF 		bl	HAL_GetTick
 2130              	.LVL154:
 2131 002a 0390     		str	r0, [sp, #12]
 2132              	.LVL155:
 990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2133              		.loc 1 990 0 discriminator 2
 2134 002c 5D23     		movs	r3, #93
 2135 002e E35C     		ldrb	r3, [r4, r3]
 2136 0030 012B     		cmp	r3, #1
 2137 0032 14D0     		beq	.L197
 992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 2138              		.loc 1 992 0
 2139 0034 0220     		movs	r0, #2
 2140              	.LVL156:
 2141              	.L170:
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2142              		.loc 1 1182 0
 2143 0036 5D23     		movs	r3, #93
 2144 0038 0122     		movs	r2, #1
 2145 003a E254     		strb	r2, [r4, r3]
1183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
 2146              		.loc 1 1183 0
 2147 003c 013B     		subs	r3, r3, #1
 2148 003e 0022     		movs	r2, #0
 2149 0040 E254     		strb	r2, [r4, r3]
 2150              	.LVL157:
 2151              	.L169:
1185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2152              		.loc 1 1185 0
 2153 0042 05B0     		add	sp, sp, #20
 2154              		@ sp needed
 2155              	.LVL158:
 2156              	.LVL159:
 2157              	.LVL160:
 2158 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
 2159              	.LVL161:
 2160              	.L196:
 977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2161              		.loc 1 977 0 discriminator 1
 2162 0046 8368     		ldr	r3, [r0, #8]
 2163 0048 002B     		cmp	r3, #0
 2164 004a E4D1     		bne	.L168
 979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2165              		.loc 1 979 0
 2166 004c 5D33     		adds	r3, r3, #93
 2167 004e 0422     		movs	r2, #4
 2168 0050 C254     		strb	r2, [r0, r3]
 981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2169              		.loc 1 981 0
 2170 0052 0097     		str	r7, [sp]
ARM GAS  /tmp/ccQ5vJp4.s 			page 118


 2171 0054 3300     		movs	r3, r6
 2172 0056 0A00     		movs	r2, r1
 2173 0058 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 2174              	.LVL162:
 2175 005c F1E7     		b	.L169
 2176              	.LVL163:
 2177              	.L197:
 996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2178              		.loc 1 996 0
 2179 005e 002D     		cmp	r5, #0
 2180 0060 00D1     		bne	.LCB2225
 2181 0062 87E0     		b	.L189	@long jump
 2182              	.LCB2225:
 996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2183              		.loc 1 996 0 is_stmt 0 discriminator 1
 2184 0064 002E     		cmp	r6, #0
 2185 0066 00D1     		bne	.LCB2227
 2186 0068 86E0     		b	.L190	@long jump
 2187              	.LCB2227:
1003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2188              		.loc 1 1003 0 is_stmt 1
 2189 006a 5C33     		adds	r3, r3, #92
 2190 006c 0422     		movs	r2, #4
 2191 006e E254     		strb	r2, [r4, r3]
1004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2192              		.loc 1 1004 0
 2193 0070 0023     		movs	r3, #0
 2194 0072 2366     		str	r3, [r4, #96]
1005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2195              		.loc 1 1005 0
 2196 0074 2564     		str	r5, [r4, #64]
1006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2197              		.loc 1 1006 0
 2198 0076 4032     		adds	r2, r2, #64
 2199 0078 A652     		strh	r6, [r4, r2]
1007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2200              		.loc 1 1007 0
 2201 007a 0232     		adds	r2, r2, #2
 2202 007c A652     		strh	r6, [r4, r2]
1010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2203              		.loc 1 1010 0
 2204 007e A363     		str	r3, [r4, #56]
1011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2205              		.loc 1 1011 0
 2206 0080 A387     		strh	r3, [r4, #60]
1012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2207              		.loc 1 1012 0
 2208 0082 E387     		strh	r3, [r4, #62]
1013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2209              		.loc 1 1013 0
 2210 0084 E364     		str	r3, [r4, #76]
1014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2211              		.loc 1 1014 0
 2212 0086 2365     		str	r3, [r4, #80]
1027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2213              		.loc 1 1027 0
 2214 0088 E023     		movs	r3, #224
ARM GAS  /tmp/ccQ5vJp4.s 			page 119


 2215 008a DB00     		lsls	r3, r3, #3
 2216 008c E268     		ldr	r2, [r4, #12]
 2217 008e 9A42     		cmp	r2, r3
 2218 0090 17D9     		bls	.L171
1030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2219              		.loc 1 1030 0
 2220 0092 2268     		ldr	r2, [r4]
 2221 0094 5368     		ldr	r3, [r2, #4]
 2222 0096 3F49     		ldr	r1, .L199
 2223 0098 0B40     		ands	r3, r1
 2224 009a 5360     		str	r3, [r2, #4]
 2225              	.L172:
1039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2226              		.loc 1 1039 0
 2227 009c 8023     		movs	r3, #128
 2228 009e 1B02     		lsls	r3, r3, #8
 2229 00a0 A268     		ldr	r2, [r4, #8]
 2230 00a2 9A42     		cmp	r2, r3
 2231 00a4 14D0     		beq	.L198
 2232              	.L173:
1045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2233              		.loc 1 1045 0
 2234 00a6 2368     		ldr	r3, [r4]
 2235 00a8 1A68     		ldr	r2, [r3]
 2236 00aa 5206     		lsls	r2, r2, #25
 2237 00ac 03D4     		bmi	.L174
1048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2238              		.loc 1 1048 0
 2239 00ae 1A68     		ldr	r2, [r3]
 2240 00b0 4021     		movs	r1, #64
 2241 00b2 0A43     		orrs	r2, r1
 2242 00b4 1A60     		str	r2, [r3]
 2243              	.L174:
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2244              		.loc 1 1052 0
 2245 00b6 E023     		movs	r3, #224
 2246 00b8 DB00     		lsls	r3, r3, #3
 2247 00ba E268     		ldr	r2, [r4, #12]
 2248 00bc 9A42     		cmp	r2, r3
 2249 00be 17D9     		bls	.L175
 2250 00c0 35E0     		b	.L176
 2251              	.L171:
1035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2252              		.loc 1 1035 0
 2253 00c2 2268     		ldr	r2, [r4]
 2254 00c4 5168     		ldr	r1, [r2, #4]
 2255 00c6 8023     		movs	r3, #128
 2256 00c8 5B01     		lsls	r3, r3, #5
 2257 00ca 0B43     		orrs	r3, r1
 2258 00cc 5360     		str	r3, [r2, #4]
 2259 00ce E5E7     		b	.L172
 2260              	.L198:
1041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2261              		.loc 1 1041 0
 2262 00d0 2268     		ldr	r2, [r4]
 2263 00d2 1368     		ldr	r3, [r2]
 2264 00d4 3049     		ldr	r1, .L199+4
ARM GAS  /tmp/ccQ5vJp4.s 			page 120


 2265 00d6 0B40     		ands	r3, r1
 2266 00d8 1360     		str	r3, [r2]
 2267 00da E4E7     		b	.L173
 2268              	.LVL164:
 2269              	.L177:
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 2270              		.loc 1 1068 0
 2271 00dc FFF7FEFF 		bl	HAL_GetTick
 2272              	.LVL165:
 2273 00e0 039B     		ldr	r3, [sp, #12]
 2274 00e2 C01A     		subs	r0, r0, r3
 2275 00e4 B842     		cmp	r0, r7
 2276 00e6 01D3     		bcc	.L179
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 2277              		.loc 1 1068 0 is_stmt 0 discriminator 1
 2278 00e8 7B1C     		adds	r3, r7, #1
 2279 00ea 47D1     		bne	.L191
 2280              	.L179:
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 2281              		.loc 1 1068 0 discriminator 3
 2282 00ec 002F     		cmp	r7, #0
 2283 00ee 47D0     		beq	.L192
 2284              	.L175:
1055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 2285              		.loc 1 1055 0 is_stmt 1
 2286 00f0 4623     		movs	r3, #70
 2287 00f2 E35A     		ldrh	r3, [r4, r3]
 2288 00f4 9BB2     		uxth	r3, r3
 2289 00f6 002B     		cmp	r3, #0
 2290 00f8 2ED0     		beq	.L181
1058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 2291              		.loc 1 1058 0
 2292 00fa 2368     		ldr	r3, [r4]
 2293 00fc 9A68     		ldr	r2, [r3, #8]
 2294 00fe D207     		lsls	r2, r2, #31
 2295 0100 ECD5     		bpl	.L177
1061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 2296              		.loc 1 1061 0
 2297 0102 1B7B     		ldrb	r3, [r3, #12]
 2298 0104 226C     		ldr	r2, [r4, #64]
 2299 0106 1370     		strb	r3, [r2]
1062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount--;
 2300              		.loc 1 1062 0
 2301 0108 236C     		ldr	r3, [r4, #64]
 2302 010a 0133     		adds	r3, r3, #1
 2303 010c 2364     		str	r3, [r4, #64]
1063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 2304              		.loc 1 1063 0
 2305 010e 4622     		movs	r2, #70
 2306 0110 A35A     		ldrh	r3, [r4, r2]
 2307 0112 013B     		subs	r3, r3, #1
 2308 0114 9BB2     		uxth	r3, r3
 2309 0116 A352     		strh	r3, [r4, r2]
 2310 0118 EAE7     		b	.L175
 2311              	.L182:
1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 2312              		.loc 1 1091 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 121


 2313 011a FFF7FEFF 		bl	HAL_GetTick
 2314              	.LVL166:
 2315 011e 039B     		ldr	r3, [sp, #12]
 2316 0120 C01A     		subs	r0, r0, r3
 2317 0122 B842     		cmp	r0, r7
 2318 0124 01D3     		bcc	.L184
1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 2319              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2320 0126 7B1C     		adds	r3, r7, #1
 2321 0128 2CD1     		bne	.L193
 2322              	.L184:
1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 2323              		.loc 1 1091 0 discriminator 3
 2324 012a 002F     		cmp	r7, #0
 2325 012c 2CD0     		beq	.L194
 2326              	.L176:
1079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 2327              		.loc 1 1079 0 is_stmt 1
 2328 012e 4623     		movs	r3, #70
 2329 0130 E35A     		ldrh	r3, [r4, r3]
 2330 0132 9BB2     		uxth	r3, r3
 2331 0134 002B     		cmp	r3, #0
 2332 0136 0FD0     		beq	.L181
1082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 2333              		.loc 1 1082 0
 2334 0138 2368     		ldr	r3, [r4]
 2335 013a 9A68     		ldr	r2, [r3, #8]
 2336 013c D207     		lsls	r2, r2, #31
 2337 013e ECD5     		bpl	.L182
1084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 2338              		.loc 1 1084 0
 2339 0140 DB68     		ldr	r3, [r3, #12]
 2340 0142 226C     		ldr	r2, [r4, #64]
 2341 0144 1380     		strh	r3, [r2]
1085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount--;
 2342              		.loc 1 1085 0
 2343 0146 236C     		ldr	r3, [r4, #64]
 2344 0148 0233     		adds	r3, r3, #2
 2345 014a 2364     		str	r3, [r4, #64]
1086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 2346              		.loc 1 1086 0
 2347 014c 4622     		movs	r2, #70
 2348 014e A35A     		ldrh	r3, [r4, r2]
 2349 0150 013B     		subs	r3, r3, #1
 2350 0152 9BB2     		uxth	r3, r3
 2351 0154 A352     		strh	r3, [r4, r2]
 2352 0156 EAE7     		b	.L176
 2353              	.L181:
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2354              		.loc 1 1162 0
 2355 0158 039A     		ldr	r2, [sp, #12]
 2356 015a 3900     		movs	r1, r7
 2357 015c 2000     		movs	r0, r4
 2358 015e FFF7FEFF 		bl	SPI_EndRxTransaction
 2359              	.LVL167:
 2360 0162 0028     		cmp	r0, #0
 2361 0164 01D0     		beq	.L186
ARM GAS  /tmp/ccQ5vJp4.s 			page 122


1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2362              		.loc 1 1164 0
 2363 0166 2023     		movs	r3, #32
 2364 0168 2366     		str	r3, [r4, #96]
 2365              	.L186:
1176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2366              		.loc 1 1176 0
 2367 016a 236E     		ldr	r3, [r4, #96]
 2368 016c 002B     		cmp	r3, #0
 2369 016e 0DD1     		bne	.L195
 975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2370              		.loc 1 975 0
 2371 0170 0020     		movs	r0, #0
 2372 0172 60E7     		b	.L170
 2373              	.LVL168:
 2374              	.L189:
 998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 2375              		.loc 1 998 0
 2376 0174 0120     		movs	r0, #1
 2377              	.LVL169:
 2378 0176 5EE7     		b	.L170
 2379              	.LVL170:
 2380              	.L190:
 2381 0178 0120     		movs	r0, #1
 2382              	.LVL171:
 2383 017a 5CE7     		b	.L170
 2384              	.L191:
1070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           goto error;
 2385              		.loc 1 1070 0
 2386 017c 0320     		movs	r0, #3
 2387 017e 5AE7     		b	.L170
 2388              	.L192:
 2389 0180 0320     		movs	r0, #3
 2390 0182 58E7     		b	.L170
 2391              	.L193:
1093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           goto error;
 2392              		.loc 1 1093 0
 2393 0184 0320     		movs	r0, #3
 2394 0186 56E7     		b	.L170
 2395              	.L194:
 2396 0188 0320     		movs	r0, #3
 2397 018a 54E7     		b	.L170
 2398              	.L195:
1178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2399              		.loc 1 1178 0
 2400 018c 0120     		movs	r0, #1
 2401 018e 52E7     		b	.L170
 2402              	.LVL172:
 2403              	.L187:
 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2404              		.loc 1 985 0
 2405 0190 0220     		movs	r0, #2
 2406              	.LVL173:
 2407 0192 56E7     		b	.L169
 2408              	.L200:
 2409              		.align	2
 2410              	.L199:
ARM GAS  /tmp/ccQ5vJp4.s 			page 123


 2411 0194 FFEFFFFF 		.word	-4097
 2412 0198 FFBFFFFF 		.word	-16385
 2413              		.cfi_endproc
 2414              	.LFE178:
 2416              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 2417              		.align	1
 2418              		.global	HAL_SPI_Transmit_IT
 2419              		.syntax unified
 2420              		.code	16
 2421              		.thumb_func
 2422              		.fpu softvfp
 2424              	HAL_SPI_Transmit_IT:
 2425              	.LFB180:
1496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2426              		.loc 1 1496 0
 2427              		.cfi_startproc
 2428              		@ args = 0, pretend = 0, frame = 0
 2429              		@ frame_needed = 0, uses_anonymous_args = 0
 2430              	.LVL174:
 2431 0000 10B5     		push	{r4, lr}
 2432              	.LCFI18:
 2433              		.cfi_def_cfa_offset 8
 2434              		.cfi_offset 4, -8
 2435              		.cfi_offset 14, -4
 2436              	.LVL175:
1503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2437              		.loc 1 1503 0
 2438 0002 5C23     		movs	r3, #92
 2439 0004 C35C     		ldrb	r3, [r0, r3]
 2440 0006 012B     		cmp	r3, #1
 2441 0008 49D0     		beq	.L207
1503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2442              		.loc 1 1503 0 is_stmt 0 discriminator 2
 2443 000a 5C23     		movs	r3, #92
 2444 000c 0124     		movs	r4, #1
 2445 000e C454     		strb	r4, [r0, r3]
1505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2446              		.loc 1 1505 0 is_stmt 1 discriminator 2
 2447 0010 0029     		cmp	r1, #0
 2448 0012 3AD0     		beq	.L208
1505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2449              		.loc 1 1505 0 is_stmt 0 discriminator 1
 2450 0014 002A     		cmp	r2, #0
 2451 0016 3AD0     		beq	.L209
1511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2452              		.loc 1 1511 0 is_stmt 1
 2453 0018 0133     		adds	r3, r3, #1
 2454 001a C35C     		ldrb	r3, [r0, r3]
 2455 001c 012B     		cmp	r3, #1
 2456 001e 01D0     		beq	.L212
1513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 2457              		.loc 1 1513 0
 2458 0020 0223     		movs	r3, #2
 2459 0022 35E0     		b	.L203
 2460              	.L212:
1518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2461              		.loc 1 1518 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 124


 2462 0024 5C33     		adds	r3, r3, #92
 2463 0026 0234     		adds	r4, r4, #2
 2464 0028 C454     		strb	r4, [r0, r3]
1519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2465              		.loc 1 1519 0
 2466 002a 0023     		movs	r3, #0
 2467 002c 0366     		str	r3, [r0, #96]
1520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2468              		.loc 1 1520 0
 2469 002e 8163     		str	r1, [r0, #56]
1521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2470              		.loc 1 1521 0
 2471 0030 8287     		strh	r2, [r0, #60]
1522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2472              		.loc 1 1522 0
 2473 0032 C287     		strh	r2, [r0, #62]
1525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2474              		.loc 1 1525 0
 2475 0034 0364     		str	r3, [r0, #64]
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2476              		.loc 1 1526 0
 2477 0036 4422     		movs	r2, #68
 2478              	.LVL176:
 2479 0038 8352     		strh	r3, [r0, r2]
 2480              	.LVL177:
1527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2481              		.loc 1 1527 0
 2482 003a 0232     		adds	r2, r2, #2
 2483 003c 8352     		strh	r3, [r0, r2]
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2484              		.loc 1 1528 0
 2485 003e C364     		str	r3, [r0, #76]
1531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2486              		.loc 1 1531 0
 2487 0040 E023     		movs	r3, #224
 2488 0042 DB00     		lsls	r3, r3, #3
 2489 0044 C268     		ldr	r2, [r0, #12]
 2490 0046 9A42     		cmp	r2, r3
 2491 0048 15D9     		bls	.L204
1533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2492              		.loc 1 1533 0
 2493 004a 164B     		ldr	r3, .L214
 2494 004c 0365     		str	r3, [r0, #80]
 2495              	.L205:
1541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2496              		.loc 1 1541 0
 2497 004e 8023     		movs	r3, #128
 2498 0050 1B02     		lsls	r3, r3, #8
 2499 0052 8268     		ldr	r2, [r0, #8]
 2500 0054 9A42     		cmp	r2, r3
 2501 0056 11D0     		beq	.L213
 2502              	.LVL178:
 2503              	.L206:
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2504              		.loc 1 1555 0
 2505 0058 0268     		ldr	r2, [r0]
 2506 005a 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccQ5vJp4.s 			page 125


 2507 005c A021     		movs	r1, #160
 2508 005e 0B43     		orrs	r3, r1
 2509 0060 5360     		str	r3, [r2, #4]
1559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2510              		.loc 1 1559 0
 2511 0062 0368     		ldr	r3, [r0]
 2512 0064 1A68     		ldr	r2, [r3]
 2513 0066 5206     		lsls	r2, r2, #25
 2514 0068 17D4     		bmi	.L211
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2515              		.loc 1 1562 0
 2516 006a 1A68     		ldr	r2, [r3]
 2517 006c 6039     		subs	r1, r1, #96
 2518 006e 0A43     		orrs	r2, r1
 2519 0070 1A60     		str	r2, [r3]
1497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2520              		.loc 1 1497 0
 2521 0072 0023     		movs	r3, #0
 2522 0074 0CE0     		b	.L203
 2523              	.LVL179:
 2524              	.L204:
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2525              		.loc 1 1537 0
 2526 0076 0C4B     		ldr	r3, .L214+4
 2527 0078 0365     		str	r3, [r0, #80]
 2528 007a E8E7     		b	.L205
 2529              	.L213:
1543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2530              		.loc 1 1543 0
 2531 007c 0268     		ldr	r2, [r0]
 2532 007e 1168     		ldr	r1, [r2]
 2533              	.LVL180:
 2534 0080 8023     		movs	r3, #128
 2535 0082 DB01     		lsls	r3, r3, #7
 2536 0084 0B43     		orrs	r3, r1
 2537 0086 1360     		str	r3, [r2]
 2538 0088 E6E7     		b	.L206
 2539              	.LVL181:
 2540              	.L208:
1507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 2541              		.loc 1 1507 0
 2542 008a 0123     		movs	r3, #1
 2543 008c 00E0     		b	.L203
 2544              	.L209:
 2545 008e 0123     		movs	r3, #1
 2546              	.LVL182:
 2547              	.L203:
1566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
 2548              		.loc 1 1566 0
 2549 0090 5C22     		movs	r2, #92
 2550 0092 0021     		movs	r1, #0
 2551 0094 8154     		strb	r1, [r0, r2]
 2552              	.LVL183:
 2553              	.L202:
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2554              		.loc 1 1568 0
 2555 0096 1800     		movs	r0, r3
ARM GAS  /tmp/ccQ5vJp4.s 			page 126


 2556              	.LVL184:
 2557              		@ sp needed
 2558 0098 10BD     		pop	{r4, pc}
 2559              	.LVL185:
 2560              	.L211:
1497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2561              		.loc 1 1497 0
 2562 009a 0023     		movs	r3, #0
 2563 009c F8E7     		b	.L203
 2564              	.LVL186:
 2565              	.L207:
1503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2566              		.loc 1 1503 0
 2567 009e 0223     		movs	r3, #2
 2568 00a0 F9E7     		b	.L202
 2569              	.L215:
 2570 00a2 C046     		.align	2
 2571              	.L214:
 2572 00a4 00000000 		.word	SPI_TxISR_16BIT
 2573 00a8 00000000 		.word	SPI_TxISR_8BIT
 2574              		.cfi_endproc
 2575              	.LFE180:
 2577              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2578              		.align	1
 2579              		.global	HAL_SPI_TransmitReceive_IT
 2580              		.syntax unified
 2581              		.code	16
 2582              		.thumb_func
 2583              		.fpu softvfp
 2585              	HAL_SPI_TransmitReceive_IT:
 2586              	.LFB182:
1684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t             tmp_mode;
 2587              		.loc 1 1684 0
 2588              		.cfi_startproc
 2589              		@ args = 0, pretend = 0, frame = 0
 2590              		@ frame_needed = 0, uses_anonymous_args = 0
 2591              	.LVL187:
 2592 0000 70B5     		push	{r4, r5, r6, lr}
 2593              	.LCFI19:
 2594              		.cfi_def_cfa_offset 16
 2595              		.cfi_offset 4, -16
 2596              		.cfi_offset 5, -12
 2597              		.cfi_offset 6, -8
 2598              		.cfi_offset 14, -4
 2599              	.LVL188:
1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2600              		.loc 1 1693 0
 2601 0002 5C24     		movs	r4, #92
 2602 0004 045D     		ldrb	r4, [r0, r4]
 2603 0006 012C     		cmp	r4, #1
 2604 0008 6AD0     		beq	.L226
1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2605              		.loc 1 1693 0 is_stmt 0 discriminator 2
 2606 000a 5C24     		movs	r4, #92
 2607 000c 0125     		movs	r5, #1
 2608 000e 0555     		strb	r5, [r0, r4]
1696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
ARM GAS  /tmp/ccQ5vJp4.s 			page 127


 2609              		.loc 1 1696 0 is_stmt 1 discriminator 2
 2610 0010 0134     		adds	r4, r4, #1
 2611 0012 045D     		ldrb	r4, [r0, r4]
 2612 0014 E4B2     		uxtb	r4, r4
 2613              	.LVL189:
1697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2614              		.loc 1 1697 0 discriminator 2
 2615 0016 4568     		ldr	r5, [r0, #4]
 2616              	.LVL190:
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2617              		.loc 1 1699 0 discriminator 2
 2618 0018 012C     		cmp	r4, #1
 2619 001a 10D0     		beq	.L218
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2620              		.loc 1 1699 0 is_stmt 0 discriminator 1
 2621 001c 8226     		movs	r6, #130
 2622 001e 7600     		lsls	r6, r6, #1
 2623 0020 B542     		cmp	r5, r6
 2624 0022 05D0     		beq	.L234
1702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 2625              		.loc 1 1702 0 is_stmt 1
 2626 0024 0223     		movs	r3, #2
 2627              	.LVL191:
 2628              	.L219:
1780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
 2629              		.loc 1 1780 0
 2630 0026 5C22     		movs	r2, #92
 2631 0028 0021     		movs	r1, #0
 2632 002a 8154     		strb	r1, [r0, r2]
 2633              	.LVL192:
 2634              	.L217:
1782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2635              		.loc 1 1782 0
 2636 002c 1800     		movs	r0, r3
 2637              	.LVL193:
 2638              		@ sp needed
 2639 002e 70BD     		pop	{r4, r5, r6, pc}
 2640              	.LVL194:
 2641              	.L234:
1700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2642              		.loc 1 1700 0
 2643 0030 8568     		ldr	r5, [r0, #8]
 2644              	.LVL195:
 2645 0032 002D     		cmp	r5, #0
 2646 0034 4AD1     		bne	.L228
1700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2647              		.loc 1 1700 0 is_stmt 0 discriminator 1
 2648 0036 042C     		cmp	r4, #4
 2649 0038 01D0     		beq	.L218
1702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 2650              		.loc 1 1702 0 is_stmt 1
 2651 003a 0223     		movs	r3, #2
 2652              	.LVL196:
 2653 003c F3E7     		b	.L219
 2654              	.LVL197:
 2655              	.L218:
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQ5vJp4.s 			page 128


 2656              		.loc 1 1706 0
 2657 003e 0029     		cmp	r1, #0
 2658 0040 46D0     		beq	.L230
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2659              		.loc 1 1706 0 is_stmt 0 discriminator 1
 2660 0042 002A     		cmp	r2, #0
 2661 0044 46D0     		beq	.L231
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2662              		.loc 1 1706 0 discriminator 2
 2663 0046 002B     		cmp	r3, #0
 2664 0048 46D0     		beq	.L232
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2665              		.loc 1 1713 0 is_stmt 1
 2666 004a 5D24     		movs	r4, #93
 2667              	.LVL198:
 2668 004c 045D     		ldrb	r4, [r0, r4]
 2669 004e 042C     		cmp	r4, #4
 2670 0050 02D0     		beq	.L220
1715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2671              		.loc 1 1715 0
 2672 0052 5D24     		movs	r4, #93
 2673 0054 0525     		movs	r5, #5
 2674 0056 0555     		strb	r5, [r0, r4]
 2675              	.LVL199:
 2676              	.L220:
1719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2677              		.loc 1 1719 0
 2678 0058 0024     		movs	r4, #0
 2679 005a 0466     		str	r4, [r0, #96]
1720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2680              		.loc 1 1720 0
 2681 005c 8163     		str	r1, [r0, #56]
1721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2682              		.loc 1 1721 0
 2683 005e 8387     		strh	r3, [r0, #60]
1722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2684              		.loc 1 1722 0
 2685 0060 C387     		strh	r3, [r0, #62]
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2686              		.loc 1 1723 0
 2687 0062 0264     		str	r2, [r0, #64]
1724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2688              		.loc 1 1724 0
 2689 0064 4422     		movs	r2, #68
 2690              	.LVL200:
 2691 0066 8352     		strh	r3, [r0, r2]
 2692              	.LVL201:
1725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2693              		.loc 1 1725 0
 2694 0068 0232     		adds	r2, r2, #2
 2695 006a 8352     		strh	r3, [r0, r2]
1728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2696              		.loc 1 1728 0
 2697 006c E022     		movs	r2, #224
 2698 006e D200     		lsls	r2, r2, #3
 2699 0070 C168     		ldr	r1, [r0, #12]
 2700              	.LVL202:
ARM GAS  /tmp/ccQ5vJp4.s 			page 129


 2701 0072 9142     		cmp	r1, r2
 2702 0074 1ED9     		bls	.L221
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 2703              		.loc 1 1730 0
 2704 0076 1B4A     		ldr	r2, .L235
 2705 0078 C264     		str	r2, [r0, #76]
1731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2706              		.loc 1 1731 0
 2707 007a 1B4A     		ldr	r2, .L235+4
 2708 007c 0265     		str	r2, [r0, #80]
 2709              	.L222:
1757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2710              		.loc 1 1757 0
 2711 007e E022     		movs	r2, #224
 2712 0080 D200     		lsls	r2, r2, #3
 2713 0082 C168     		ldr	r1, [r0, #12]
 2714 0084 9142     		cmp	r1, r2
 2715 0086 01D8     		bhi	.L223
1757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2716              		.loc 1 1757 0 is_stmt 0 discriminator 1
 2717 0088 012B     		cmp	r3, #1
 2718 008a 18D9     		bls	.L224
 2719              	.L223:
1760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2720              		.loc 1 1760 0 is_stmt 1
 2721 008c 0268     		ldr	r2, [r0]
 2722 008e 5368     		ldr	r3, [r2, #4]
 2723              	.LVL203:
 2724 0090 1649     		ldr	r1, .L235+8
 2725 0092 0B40     		ands	r3, r1
 2726 0094 5360     		str	r3, [r2, #4]
 2727              	.L225:
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2728              		.loc 1 1769 0
 2729 0096 0268     		ldr	r2, [r0]
 2730 0098 5368     		ldr	r3, [r2, #4]
 2731 009a E021     		movs	r1, #224
 2732 009c 0B43     		orrs	r3, r1
 2733 009e 5360     		str	r3, [r2, #4]
1772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2734              		.loc 1 1772 0
 2735 00a0 0368     		ldr	r3, [r0]
 2736 00a2 1A68     		ldr	r2, [r3]
 2737 00a4 5206     		lsls	r2, r2, #25
 2738 00a6 19D4     		bmi	.L233
1775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2739              		.loc 1 1775 0
 2740 00a8 1A68     		ldr	r2, [r3]
 2741 00aa A039     		subs	r1, r1, #160
 2742 00ac 0A43     		orrs	r2, r1
 2743 00ae 1A60     		str	r2, [r3]
1687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2744              		.loc 1 1687 0
 2745 00b0 0023     		movs	r3, #0
 2746 00b2 B8E7     		b	.L219
 2747              	.LVL204:
 2748              	.L221:
ARM GAS  /tmp/ccQ5vJp4.s 			page 130


1735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 2749              		.loc 1 1735 0
 2750 00b4 0E4A     		ldr	r2, .L235+12
 2751 00b6 C264     		str	r2, [r0, #76]
1736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2752              		.loc 1 1736 0
 2753 00b8 0E4A     		ldr	r2, .L235+16
 2754 00ba 0265     		str	r2, [r0, #80]
 2755 00bc DFE7     		b	.L222
 2756              	.L224:
1765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2757              		.loc 1 1765 0
 2758 00be 0268     		ldr	r2, [r0]
 2759 00c0 5168     		ldr	r1, [r2, #4]
 2760 00c2 8023     		movs	r3, #128
 2761              	.LVL205:
 2762 00c4 5B01     		lsls	r3, r3, #5
 2763 00c6 0B43     		orrs	r3, r1
 2764 00c8 5360     		str	r3, [r2, #4]
 2765 00ca E4E7     		b	.L225
 2766              	.LVL206:
 2767              	.L228:
1702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 2768              		.loc 1 1702 0
 2769 00cc 0223     		movs	r3, #2
 2770              	.LVL207:
 2771 00ce AAE7     		b	.L219
 2772              	.LVL208:
 2773              	.L230:
1708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 2774              		.loc 1 1708 0
 2775 00d0 0123     		movs	r3, #1
 2776              	.LVL209:
 2777 00d2 A8E7     		b	.L219
 2778              	.LVL210:
 2779              	.L231:
 2780 00d4 0123     		movs	r3, #1
 2781              	.LVL211:
 2782 00d6 A6E7     		b	.L219
 2783              	.LVL212:
 2784              	.L232:
 2785 00d8 0123     		movs	r3, #1
 2786              	.LVL213:
 2787 00da A4E7     		b	.L219
 2788              	.LVL214:
 2789              	.L233:
1687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2790              		.loc 1 1687 0
 2791 00dc 0023     		movs	r3, #0
 2792 00de A2E7     		b	.L219
 2793              	.LVL215:
 2794              	.L226:
1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2795              		.loc 1 1693 0
 2796 00e0 0223     		movs	r3, #2
 2797              	.LVL216:
 2798 00e2 A3E7     		b	.L217
ARM GAS  /tmp/ccQ5vJp4.s 			page 131


 2799              	.L236:
 2800              		.align	2
 2801              	.L235:
 2802 00e4 00000000 		.word	SPI_2linesRxISR_16BIT
 2803 00e8 00000000 		.word	SPI_2linesTxISR_16BIT
 2804 00ec FFEFFFFF 		.word	-4097
 2805 00f0 00000000 		.word	SPI_2linesRxISR_8BIT
 2806 00f4 00000000 		.word	SPI_2linesTxISR_8BIT
 2807              		.cfi_endproc
 2808              	.LFE182:
 2810              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2811              		.align	1
 2812              		.global	HAL_SPI_Receive_IT
 2813              		.syntax unified
 2814              		.code	16
 2815              		.thumb_func
 2816              		.fpu softvfp
 2818              	HAL_SPI_Receive_IT:
 2819              	.LFB181:
1579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2820              		.loc 1 1579 0
 2821              		.cfi_startproc
 2822              		@ args = 0, pretend = 0, frame = 0
 2823              		@ frame_needed = 0, uses_anonymous_args = 0
 2824              	.LVL217:
 2825 0000 10B5     		push	{r4, lr}
 2826              	.LCFI20:
 2827              		.cfi_def_cfa_offset 8
 2828              		.cfi_offset 4, -8
 2829              		.cfi_offset 14, -4
 2830              	.LVL218:
1582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2831              		.loc 1 1582 0
 2832 0002 8368     		ldr	r3, [r0, #8]
 2833 0004 002B     		cmp	r3, #0
 2834 0006 04D1     		bne	.L238
1582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2835              		.loc 1 1582 0 is_stmt 0 discriminator 1
 2836 0008 0533     		adds	r3, r3, #5
 2837 000a FF33     		adds	r3, r3, #255
 2838 000c 4468     		ldr	r4, [r0, #4]
 2839 000e 9C42     		cmp	r4, r3
 2840 0010 10D0     		beq	.L249
 2841              	.L238:
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2842              		.loc 1 1590 0 is_stmt 1
 2843 0012 5C24     		movs	r4, #92
 2844 0014 045D     		ldrb	r4, [r0, r4]
 2845 0016 012C     		cmp	r4, #1
 2846 0018 5CD0     		beq	.L244
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2847              		.loc 1 1590 0 is_stmt 0 discriminator 2
 2848 001a 5C24     		movs	r4, #92
 2849 001c 0123     		movs	r3, #1
 2850 001e 0355     		strb	r3, [r0, r4]
1592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2851              		.loc 1 1592 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccQ5vJp4.s 			page 132


 2852 0020 0134     		adds	r4, r4, #1
 2853 0022 045D     		ldrb	r4, [r0, r4]
 2854 0024 012C     		cmp	r4, #1
 2855 0026 0ED0     		beq	.L250
1594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 2856              		.loc 1 1594 0
 2857 0028 0223     		movs	r3, #2
 2858              	.LVL219:
 2859              	.L240:
1670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
 2860              		.loc 1 1670 0
 2861 002a 5C22     		movs	r2, #92
 2862 002c 0021     		movs	r1, #0
 2863 002e 8154     		strb	r1, [r0, r2]
 2864              	.LVL220:
 2865              	.L239:
1672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2866              		.loc 1 1672 0
 2867 0030 1800     		movs	r0, r3
 2868              		@ sp needed
 2869 0032 10BD     		pop	{r4, pc}
 2870              	.LVL221:
 2871              	.L249:
1584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2872              		.loc 1 1584 0
 2873 0034 A73B     		subs	r3, r3, #167
 2874 0036 0424     		movs	r4, #4
 2875 0038 C454     		strb	r4, [r0, r3]
1586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2876              		.loc 1 1586 0
 2877 003a 1300     		movs	r3, r2
 2878 003c 0A00     		movs	r2, r1
 2879              	.LVL222:
 2880 003e FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2881              	.LVL223:
 2882 0042 0300     		movs	r3, r0
 2883 0044 F4E7     		b	.L239
 2884              	.LVL224:
 2885              	.L250:
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2886              		.loc 1 1598 0
 2887 0046 0029     		cmp	r1, #0
 2888 0048 3ED0     		beq	.L246
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2889              		.loc 1 1598 0 is_stmt 0 discriminator 1
 2890 004a 002A     		cmp	r2, #0
 2891 004c 3ED0     		beq	.L247
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2892              		.loc 1 1605 0 is_stmt 1
 2893 004e 5C33     		adds	r3, r3, #92
 2894 0050 0334     		adds	r4, r4, #3
 2895 0052 C454     		strb	r4, [r0, r3]
1606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2896              		.loc 1 1606 0
 2897 0054 0023     		movs	r3, #0
 2898 0056 0366     		str	r3, [r0, #96]
1607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
ARM GAS  /tmp/ccQ5vJp4.s 			page 133


 2899              		.loc 1 1607 0
 2900 0058 0164     		str	r1, [r0, #64]
1608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2901              		.loc 1 1608 0
 2902 005a 4421     		movs	r1, #68
 2903              	.LVL225:
 2904 005c 4252     		strh	r2, [r0, r1]
 2905              	.LVL226:
1609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2906              		.loc 1 1609 0
 2907 005e 0231     		adds	r1, r1, #2
 2908 0060 4252     		strh	r2, [r0, r1]
1612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2909              		.loc 1 1612 0
 2910 0062 8363     		str	r3, [r0, #56]
1613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2911              		.loc 1 1613 0
 2912 0064 8387     		strh	r3, [r0, #60]
1614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2913              		.loc 1 1614 0
 2914 0066 C387     		strh	r3, [r0, #62]
1615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2915              		.loc 1 1615 0
 2916 0068 0365     		str	r3, [r0, #80]
1618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2917              		.loc 1 1618 0
 2918 006a E023     		movs	r3, #224
 2919 006c DB00     		lsls	r3, r3, #3
 2920 006e C268     		ldr	r2, [r0, #12]
 2921              	.LVL227:
 2922 0070 9A42     		cmp	r2, r3
 2923 0072 1AD9     		bls	.L241
1621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
 2924              		.loc 1 1621 0
 2925 0074 0268     		ldr	r2, [r0]
 2926 0076 5368     		ldr	r3, [r2, #4]
 2927 0078 1749     		ldr	r1, .L252
 2928 007a 0B40     		ands	r3, r1
 2929 007c 5360     		str	r3, [r2, #4]
1622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2930              		.loc 1 1622 0
 2931 007e 174B     		ldr	r3, .L252+4
 2932 0080 C364     		str	r3, [r0, #76]
 2933              	.L242:
1632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2934              		.loc 1 1632 0
 2935 0082 8023     		movs	r3, #128
 2936 0084 1B02     		lsls	r3, r3, #8
 2937 0086 8268     		ldr	r2, [r0, #8]
 2938 0088 9A42     		cmp	r2, r3
 2939 008a 17D0     		beq	.L251
 2940              	.L243:
1655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2941              		.loc 1 1655 0
 2942 008c 0268     		ldr	r2, [r0]
 2943 008e 5368     		ldr	r3, [r2, #4]
 2944 0090 6021     		movs	r1, #96
ARM GAS  /tmp/ccQ5vJp4.s 			page 134


 2945 0092 0B43     		orrs	r3, r1
 2946 0094 5360     		str	r3, [r2, #4]
1662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 2947              		.loc 1 1662 0
 2948 0096 0368     		ldr	r3, [r0]
 2949 0098 1A68     		ldr	r2, [r3]
 2950 009a 5206     		lsls	r2, r2, #25
 2951 009c 18D4     		bmi	.L248
1665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2952              		.loc 1 1665 0
 2953 009e 1A68     		ldr	r2, [r3]
 2954 00a0 2039     		subs	r1, r1, #32
 2955 00a2 0A43     		orrs	r2, r1
 2956 00a4 1A60     		str	r2, [r3]
1580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2957              		.loc 1 1580 0
 2958 00a6 0023     		movs	r3, #0
 2959 00a8 BFE7     		b	.L240
 2960              	.L241:
1627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
 2961              		.loc 1 1627 0
 2962 00aa 0268     		ldr	r2, [r0]
 2963 00ac 5168     		ldr	r1, [r2, #4]
 2964 00ae 8023     		movs	r3, #128
 2965 00b0 5B01     		lsls	r3, r3, #5
 2966 00b2 0B43     		orrs	r3, r1
 2967 00b4 5360     		str	r3, [r2, #4]
1628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2968              		.loc 1 1628 0
 2969 00b6 0A4B     		ldr	r3, .L252+8
 2970 00b8 C364     		str	r3, [r0, #76]
 2971 00ba E2E7     		b	.L242
 2972              	.L251:
1634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 2973              		.loc 1 1634 0
 2974 00bc 0268     		ldr	r2, [r0]
 2975 00be 1368     		ldr	r3, [r2]
 2976 00c0 0849     		ldr	r1, .L252+12
 2977 00c2 0B40     		ands	r3, r1
 2978 00c4 1360     		str	r3, [r2]
 2979 00c6 E1E7     		b	.L243
 2980              	.LVL228:
 2981              	.L246:
1600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 2982              		.loc 1 1600 0
 2983 00c8 0123     		movs	r3, #1
 2984 00ca AEE7     		b	.L240
 2985              	.L247:
 2986 00cc 0123     		movs	r3, #1
 2987 00ce ACE7     		b	.L240
 2988              	.LVL229:
 2989              	.L248:
1580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2990              		.loc 1 1580 0
 2991 00d0 0023     		movs	r3, #0
 2992 00d2 AAE7     		b	.L240
 2993              	.LVL230:
ARM GAS  /tmp/ccQ5vJp4.s 			page 135


 2994              	.L244:
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 2995              		.loc 1 1590 0
 2996 00d4 0223     		movs	r3, #2
 2997 00d6 ABE7     		b	.L239
 2998              	.L253:
 2999              		.align	2
 3000              	.L252:
 3001 00d8 FFEFFFFF 		.word	-4097
 3002 00dc 00000000 		.word	SPI_RxISR_16BIT
 3003 00e0 00000000 		.word	SPI_RxISR_8BIT
 3004 00e4 FFBFFFFF 		.word	-16385
 3005              		.cfi_endproc
 3006              	.LFE181:
 3008              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 3009              		.align	1
 3010              		.global	HAL_SPI_Transmit_DMA
 3011              		.syntax unified
 3012              		.code	16
 3013              		.thumb_func
 3014              		.fpu softvfp
 3016              	HAL_SPI_Transmit_DMA:
 3017              	.LFB183:
1793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3018              		.loc 1 1793 0
 3019              		.cfi_startproc
 3020              		@ args = 0, pretend = 0, frame = 0
 3021              		@ frame_needed = 0, uses_anonymous_args = 0
 3022              	.LVL231:
 3023 0000 10B5     		push	{r4, lr}
 3024              	.LCFI21:
 3025              		.cfi_def_cfa_offset 8
 3026              		.cfi_offset 4, -8
 3027              		.cfi_offset 14, -4
 3028 0002 0400     		movs	r4, r0
 3029              	.LVL232:
1803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3030              		.loc 1 1803 0
 3031 0004 5C23     		movs	r3, #92
 3032 0006 C35C     		ldrb	r3, [r0, r3]
 3033 0008 012B     		cmp	r3, #1
 3034 000a 00D1     		bne	.LCB3122
 3035 000c 86E0     		b	.L262	@long jump
 3036              	.LCB3122:
1803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3037              		.loc 1 1803 0 is_stmt 0 discriminator 2
 3038 000e 5C23     		movs	r3, #92
 3039 0010 0120     		movs	r0, #1
 3040              	.LVL233:
 3041 0012 E054     		strb	r0, [r4, r3]
1805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3042              		.loc 1 1805 0 is_stmt 1 discriminator 2
 3043 0014 0133     		adds	r3, r3, #1
 3044 0016 E35C     		ldrb	r3, [r4, r3]
 3045 0018 012B     		cmp	r3, #1
 3046 001a 04D0     		beq	.L266
1807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
ARM GAS  /tmp/ccQ5vJp4.s 			page 136


 3047              		.loc 1 1807 0
 3048 001c 0220     		movs	r0, #2
 3049              	.LVL234:
 3050              	.L256:
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
 3051              		.loc 1 1900 0
 3052 001e 5C23     		movs	r3, #92
 3053 0020 0022     		movs	r2, #0
 3054 0022 E254     		strb	r2, [r4, r3]
 3055              	.LVL235:
 3056              	.L255:
1902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3057              		.loc 1 1902 0
 3058              		@ sp needed
 3059              	.LVL236:
 3060 0024 10BD     		pop	{r4, pc}
 3061              	.LVL237:
 3062              	.L266:
1811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3063              		.loc 1 1811 0
 3064 0026 0029     		cmp	r1, #0
 3065 0028 74D0     		beq	.L264
1811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3066              		.loc 1 1811 0 is_stmt 0 discriminator 1
 3067 002a 002A     		cmp	r2, #0
 3068 002c 74D0     		beq	.L265
1818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3069              		.loc 1 1818 0 is_stmt 1
 3070 002e 5C33     		adds	r3, r3, #92
 3071 0030 0230     		adds	r0, r0, #2
 3072 0032 E054     		strb	r0, [r4, r3]
1819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 3073              		.loc 1 1819 0
 3074 0034 0023     		movs	r3, #0
 3075 0036 2366     		str	r3, [r4, #96]
1820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3076              		.loc 1 1820 0
 3077 0038 A163     		str	r1, [r4, #56]
1821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3078              		.loc 1 1821 0
 3079 003a A287     		strh	r2, [r4, #60]
1822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3080              		.loc 1 1822 0
 3081 003c E287     		strh	r2, [r4, #62]
1825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3082              		.loc 1 1825 0
 3083 003e 2364     		str	r3, [r4, #64]
1826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 3084              		.loc 1 1826 0
 3085 0040 2365     		str	r3, [r4, #80]
1827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 3086              		.loc 1 1827 0
 3087 0042 E364     		str	r3, [r4, #76]
1828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 3088              		.loc 1 1828 0
 3089 0044 4422     		movs	r2, #68
 3090              	.LVL238:
ARM GAS  /tmp/ccQ5vJp4.s 			page 137


 3091 0046 A352     		strh	r3, [r4, r2]
 3092              	.LVL239:
1829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3093              		.loc 1 1829 0
 3094 0048 0232     		adds	r2, r2, #2
 3095 004a A352     		strh	r3, [r4, r2]
1832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3096              		.loc 1 1832 0
 3097 004c 8023     		movs	r3, #128
 3098 004e 1B02     		lsls	r3, r3, #8
 3099 0050 A268     		ldr	r2, [r4, #8]
 3100 0052 9A42     		cmp	r2, r3
 3101 0054 2ED0     		beq	.L267
 3102              	.LVL240:
 3103              	.L257:
1846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3104              		.loc 1 1846 0
 3105 0056 636D     		ldr	r3, [r4, #84]
 3106 0058 314A     		ldr	r2, .L269
 3107 005a 1A63     		str	r2, [r3, #48]
1849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3108              		.loc 1 1849 0
 3109 005c 636D     		ldr	r3, [r4, #84]
 3110 005e 314A     		ldr	r2, .L269+4
 3111 0060 DA62     		str	r2, [r3, #44]
1852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3112              		.loc 1 1852 0
 3113 0062 636D     		ldr	r3, [r4, #84]
 3114 0064 304A     		ldr	r2, .L269+8
 3115 0066 5A63     		str	r2, [r3, #52]
1855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3116              		.loc 1 1855 0
 3117 0068 636D     		ldr	r3, [r4, #84]
 3118 006a 0022     		movs	r2, #0
 3119 006c 9A63     		str	r2, [r3, #56]
1857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Packing mode is enabled only if the DMA setting is HALWORD */
 3120              		.loc 1 1857 0
 3121 006e 2268     		ldr	r2, [r4]
 3122 0070 5368     		ldr	r3, [r2, #4]
 3123 0072 2E49     		ldr	r1, .L269+12
 3124 0074 0B40     		ands	r3, r1
 3125 0076 5360     		str	r3, [r2, #4]
1859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3126              		.loc 1 1859 0
 3127 0078 E023     		movs	r3, #224
 3128 007a DB00     		lsls	r3, r3, #3
 3129 007c E268     		ldr	r2, [r4, #12]
 3130 007e 9A42     		cmp	r2, r3
 3131 0080 05D8     		bhi	.L258
1859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3132              		.loc 1 1859 0 is_stmt 0 discriminator 1
 3133 0082 636D     		ldr	r3, [r4, #84]
 3134 0084 9A69     		ldr	r2, [r3, #24]
 3135 0086 8023     		movs	r3, #128
 3136 0088 DB00     		lsls	r3, r3, #3
 3137 008a 9A42     		cmp	r2, r3
 3138 008c 19D0     		beq	.L268
ARM GAS  /tmp/ccQ5vJp4.s 			page 138


 3139              	.L258:
1875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3140              		.loc 1 1875 0 is_stmt 1
 3141 008e 2268     		ldr	r2, [r4]
 3142 0090 0C32     		adds	r2, r2, #12
 3143 0092 E38F     		ldrh	r3, [r4, #62]
 3144 0094 9BB2     		uxth	r3, r3
 3145 0096 A16B     		ldr	r1, [r4, #56]
 3146 0098 606D     		ldr	r0, [r4, #84]
 3147 009a FFF7FEFF 		bl	HAL_DMA_Start_IT
 3148              	.LVL241:
 3149 009e 0028     		cmp	r0, #0
 3150 00a0 25D0     		beq	.L260
1878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3151              		.loc 1 1878 0
 3152 00a2 236E     		ldr	r3, [r4, #96]
 3153 00a4 1022     		movs	r2, #16
 3154 00a6 1343     		orrs	r3, r2
 3155 00a8 2366     		str	r3, [r4, #96]
 3156              	.LVL242:
1881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 3157              		.loc 1 1881 0
 3158 00aa 5D23     		movs	r3, #93
 3159 00ac 0F3A     		subs	r2, r2, #15
 3160 00ae E254     		strb	r2, [r4, r3]
1879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3161              		.loc 1 1879 0
 3162 00b0 0120     		movs	r0, #1
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3163              		.loc 1 1882 0
 3164 00b2 B4E7     		b	.L256
 3165              	.LVL243:
 3166              	.L267:
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3167              		.loc 1 1834 0
 3168 00b4 2268     		ldr	r2, [r4]
 3169 00b6 1168     		ldr	r1, [r2]
 3170              	.LVL244:
 3171 00b8 8023     		movs	r3, #128
 3172 00ba DB01     		lsls	r3, r3, #7
 3173 00bc 0B43     		orrs	r3, r1
 3174 00be 1360     		str	r3, [r2]
 3175 00c0 C9E7     		b	.L257
 3176              	.L268:
1862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 3177              		.loc 1 1862 0
 3178 00c2 E38F     		ldrh	r3, [r4, #62]
 3179 00c4 DB07     		lsls	r3, r3, #31
 3180 00c6 07D4     		bmi	.L259
1864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
 3181              		.loc 1 1864 0
 3182 00c8 2268     		ldr	r2, [r4]
 3183 00ca 5368     		ldr	r3, [r2, #4]
 3184 00cc 0B40     		ands	r3, r1
 3185 00ce 5360     		str	r3, [r2, #4]
1865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 3186              		.loc 1 1865 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 139


 3187 00d0 E38F     		ldrh	r3, [r4, #62]
 3188 00d2 5B08     		lsrs	r3, r3, #1
 3189 00d4 E387     		strh	r3, [r4, #62]
 3190 00d6 DAE7     		b	.L258
 3191              	.L259:
1869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 3192              		.loc 1 1869 0
 3193 00d8 2268     		ldr	r2, [r4]
 3194 00da 5168     		ldr	r1, [r2, #4]
 3195 00dc 8023     		movs	r3, #128
 3196 00de DB01     		lsls	r3, r3, #7
 3197 00e0 0B43     		orrs	r3, r1
 3198 00e2 5360     		str	r3, [r2, #4]
1870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 3199              		.loc 1 1870 0
 3200 00e4 E38F     		ldrh	r3, [r4, #62]
 3201 00e6 5B08     		lsrs	r3, r3, #1
 3202 00e8 0133     		adds	r3, r3, #1
 3203 00ea E387     		strh	r3, [r4, #62]
 3204 00ec CFE7     		b	.L258
 3205              	.L260:
1886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3206              		.loc 1 1886 0
 3207 00ee 2368     		ldr	r3, [r4]
 3208 00f0 1A68     		ldr	r2, [r3]
 3209 00f2 5206     		lsls	r2, r2, #25
 3210 00f4 03D4     		bmi	.L261
1889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3211              		.loc 1 1889 0
 3212 00f6 1A68     		ldr	r2, [r3]
 3213 00f8 4021     		movs	r1, #64
 3214 00fa 0A43     		orrs	r2, r1
 3215 00fc 1A60     		str	r2, [r3]
 3216              	.L261:
1893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3217              		.loc 1 1893 0
 3218 00fe 2268     		ldr	r2, [r4]
 3219 0100 5368     		ldr	r3, [r2, #4]
 3220 0102 2021     		movs	r1, #32
 3221 0104 0B43     		orrs	r3, r1
 3222 0106 5360     		str	r3, [r2, #4]
1896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3223              		.loc 1 1896 0
 3224 0108 2268     		ldr	r2, [r4]
 3225 010a 5368     		ldr	r3, [r2, #4]
 3226 010c 1E39     		subs	r1, r1, #30
 3227 010e 0B43     		orrs	r3, r1
 3228 0110 5360     		str	r3, [r2, #4]
 3229 0112 84E7     		b	.L256
 3230              	.LVL245:
 3231              	.L264:
1813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 3232              		.loc 1 1813 0
 3233 0114 0120     		movs	r0, #1
 3234 0116 82E7     		b	.L256
 3235              	.L265:
 3236 0118 0120     		movs	r0, #1
ARM GAS  /tmp/ccQ5vJp4.s 			page 140


 3237 011a 80E7     		b	.L256
 3238              	.LVL246:
 3239              	.L262:
1803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3240              		.loc 1 1803 0
 3241 011c 0220     		movs	r0, #2
 3242              	.LVL247:
 3243 011e 81E7     		b	.L255
 3244              	.L270:
 3245              		.align	2
 3246              	.L269:
 3247 0120 00000000 		.word	SPI_DMAHalfTransmitCplt
 3248 0124 00000000 		.word	SPI_DMATransmitCplt
 3249 0128 00000000 		.word	SPI_DMAError
 3250 012c FFBFFFFF 		.word	-16385
 3251              		.cfi_endproc
 3252              	.LFE183:
 3254              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 3255              		.align	1
 3256              		.global	HAL_SPI_TransmitReceive_DMA
 3257              		.syntax unified
 3258              		.code	16
 3259              		.thumb_func
 3260              		.fpu softvfp
 3262              	HAL_SPI_TransmitReceive_DMA:
 3263              	.LFB185:
2058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t             tmp_mode;
 3264              		.loc 1 2058 0
 3265              		.cfi_startproc
 3266              		@ args = 0, pretend = 0, frame = 0
 3267              		@ frame_needed = 0, uses_anonymous_args = 0
 3268              	.LVL248:
 3269 0000 70B5     		push	{r4, r5, r6, lr}
 3270              	.LCFI22:
 3271              		.cfi_def_cfa_offset 16
 3272              		.cfi_offset 4, -16
 3273              		.cfi_offset 5, -12
 3274              		.cfi_offset 6, -8
 3275              		.cfi_offset 14, -4
 3276 0002 0400     		movs	r4, r0
 3277              	.LVL249:
2071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3278              		.loc 1 2071 0
 3279 0004 5C20     		movs	r0, #92
 3280              	.LVL250:
 3281 0006 205C     		ldrb	r0, [r4, r0]
 3282 0008 0128     		cmp	r0, #1
 3283 000a 00D1     		bne	.LCB3372
 3284 000c F3E0     		b	.L286	@long jump
 3285              	.LCB3372:
2071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3286              		.loc 1 2071 0 is_stmt 0 discriminator 2
 3287 000e 5C20     		movs	r0, #92
 3288 0010 0125     		movs	r5, #1
 3289 0012 2554     		strb	r5, [r4, r0]
2074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 3290              		.loc 1 2074 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccQ5vJp4.s 			page 141


 3291 0014 0130     		adds	r0, r0, #1
 3292 0016 205C     		ldrb	r0, [r4, r0]
 3293 0018 C0B2     		uxtb	r0, r0
 3294              	.LVL251:
2075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3295              		.loc 1 2075 0 discriminator 2
 3296 001a 6568     		ldr	r5, [r4, #4]
 3297              	.LVL252:
2077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 3298              		.loc 1 2077 0 discriminator 2
 3299 001c 0128     		cmp	r0, #1
 3300 001e 10D0     		beq	.L273
2077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 3301              		.loc 1 2077 0 is_stmt 0 discriminator 1
 3302 0020 8226     		movs	r6, #130
 3303 0022 7600     		lsls	r6, r6, #1
 3304 0024 B542     		cmp	r5, r6
 3305 0026 04D0     		beq	.L293
2080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 3306              		.loc 1 2080 0 is_stmt 1
 3307 0028 0220     		movs	r0, #2
 3308              	.LVL253:
 3309              	.L274:
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
 3310              		.loc 1 2229 0
 3311 002a 5C23     		movs	r3, #92
 3312 002c 0022     		movs	r2, #0
 3313 002e E254     		strb	r2, [r4, r3]
 3314              	.LVL254:
 3315              	.L272:
2231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3316              		.loc 1 2231 0
 3317              		@ sp needed
 3318              	.LVL255:
 3319 0030 70BD     		pop	{r4, r5, r6, pc}
 3320              	.LVL256:
 3321              	.L293:
2078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3322              		.loc 1 2078 0
 3323 0032 A568     		ldr	r5, [r4, #8]
 3324              	.LVL257:
 3325 0034 002D     		cmp	r5, #0
 3326 0036 00D0     		beq	.LCB3429
 3327 0038 D5E0     		b	.L288	@long jump
 3328              	.LCB3429:
2078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3329              		.loc 1 2078 0 is_stmt 0 discriminator 1
 3330 003a 0428     		cmp	r0, #4
 3331 003c 01D0     		beq	.L273
2080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 3332              		.loc 1 2080 0 is_stmt 1
 3333 003e 0220     		movs	r0, #2
 3334              	.LVL258:
 3335 0040 F3E7     		b	.L274
 3336              	.LVL259:
 3337              	.L273:
2084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQ5vJp4.s 			page 142


 3338              		.loc 1 2084 0
 3339 0042 0029     		cmp	r1, #0
 3340 0044 00D1     		bne	.LCB3442
 3341 0046 D0E0     		b	.L290	@long jump
 3342              	.LCB3442:
2084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3343              		.loc 1 2084 0 is_stmt 0 discriminator 1
 3344 0048 002A     		cmp	r2, #0
 3345 004a 00D1     		bne	.LCB3444
 3346 004c CFE0     		b	.L291	@long jump
 3347              	.LCB3444:
2084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3348              		.loc 1 2084 0 discriminator 2
 3349 004e 002B     		cmp	r3, #0
 3350 0050 00D1     		bne	.LCB3446
 3351 0052 CEE0     		b	.L292	@long jump
 3352              	.LCB3446:
2091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3353              		.loc 1 2091 0 is_stmt 1
 3354 0054 5D20     		movs	r0, #93
 3355              	.LVL260:
 3356 0056 205C     		ldrb	r0, [r4, r0]
 3357 0058 0428     		cmp	r0, #4
 3358 005a 02D0     		beq	.L275
2093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3359              		.loc 1 2093 0
 3360 005c 5D20     		movs	r0, #93
 3361 005e 0525     		movs	r5, #5
 3362 0060 2554     		strb	r5, [r4, r0]
 3363              	.LVL261:
 3364              	.L275:
2097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 3365              		.loc 1 2097 0
 3366 0062 0020     		movs	r0, #0
 3367 0064 2066     		str	r0, [r4, #96]
2098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3368              		.loc 1 2098 0
 3369 0066 A163     		str	r1, [r4, #56]
2099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3370              		.loc 1 2099 0
 3371 0068 A387     		strh	r3, [r4, #60]
2100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 3372              		.loc 1 2100 0
 3373 006a E387     		strh	r3, [r4, #62]
2101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3374              		.loc 1 2101 0
 3375 006c 2264     		str	r2, [r4, #64]
2102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3376              		.loc 1 2102 0
 3377 006e 4422     		movs	r2, #68
 3378              	.LVL262:
 3379 0070 A352     		strh	r3, [r4, r2]
 3380              	.LVL263:
2103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3381              		.loc 1 2103 0
 3382 0072 0232     		adds	r2, r2, #2
 3383 0074 A352     		strh	r3, [r4, r2]
ARM GAS  /tmp/ccQ5vJp4.s 			page 143


2106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3384              		.loc 1 2106 0
 3385 0076 E064     		str	r0, [r4, #76]
2107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3386              		.loc 1 2107 0
 3387 0078 2065     		str	r0, [r4, #80]
2118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3388              		.loc 1 2118 0
 3389 007a 2268     		ldr	r2, [r4]
 3390 007c 5368     		ldr	r3, [r2, #4]
 3391              	.LVL264:
 3392 007e 5F49     		ldr	r1, .L296
 3393              	.LVL265:
 3394 0080 0B40     		ands	r3, r1
 3395 0082 5360     		str	r3, [r2, #4]
2121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3396              		.loc 1 2121 0
 3397 0084 E023     		movs	r3, #224
 3398 0086 DB00     		lsls	r3, r3, #3
 3399 0088 E268     		ldr	r2, [r4, #12]
 3400 008a 9A42     		cmp	r2, r3
 3401 008c 28D9     		bls	.L276
2124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3402              		.loc 1 2124 0
 3403 008e 2268     		ldr	r2, [r4]
 3404 0090 5368     		ldr	r3, [r2, #4]
 3405 0092 5B49     		ldr	r1, .L296+4
 3406 0094 0B40     		ands	r3, r1
 3407 0096 5360     		str	r3, [r2, #4]
 3408              	.L277:
2164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3409              		.loc 1 2164 0
 3410 0098 5D23     		movs	r3, #93
 3411 009a E35C     		ldrb	r3, [r4, r3]
 3412 009c 042B     		cmp	r3, #4
 3413 009e 67D0     		beq	.L294
2173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 3414              		.loc 1 2173 0
 3415 00a0 A36D     		ldr	r3, [r4, #88]
 3416 00a2 584A     		ldr	r2, .L296+8
 3417 00a4 1A63     		str	r2, [r3, #48]
2174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3418              		.loc 1 2174 0
 3419 00a6 A36D     		ldr	r3, [r4, #88]
 3420 00a8 574A     		ldr	r2, .L296+12
 3421 00aa DA62     		str	r2, [r3, #44]
 3422              	.L282:
2178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3423              		.loc 1 2178 0
 3424 00ac A36D     		ldr	r3, [r4, #88]
 3425 00ae 574A     		ldr	r2, .L296+16
 3426 00b0 5A63     		str	r2, [r3, #52]
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3427              		.loc 1 2181 0
 3428 00b2 A36D     		ldr	r3, [r4, #88]
 3429 00b4 0022     		movs	r2, #0
 3430 00b6 9A63     		str	r2, [r3, #56]
ARM GAS  /tmp/ccQ5vJp4.s 			page 144


2184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3431              		.loc 1 2184 0
 3432 00b8 2168     		ldr	r1, [r4]
 3433 00ba 0C31     		adds	r1, r1, #12
 3434 00bc 4623     		movs	r3, #70
 3435 00be E35A     		ldrh	r3, [r4, r3]
 3436 00c0 9BB2     		uxth	r3, r3
 3437 00c2 226C     		ldr	r2, [r4, #64]
 3438 00c4 A06D     		ldr	r0, [r4, #88]
 3439 00c6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3440              	.LVL266:
 3441 00ca 0028     		cmp	r0, #0
 3442 00cc 57D0     		beq	.L283
2187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3443              		.loc 1 2187 0
 3444 00ce 236E     		ldr	r3, [r4, #96]
 3445 00d0 1022     		movs	r2, #16
 3446 00d2 1343     		orrs	r3, r2
 3447 00d4 2366     		str	r3, [r4, #96]
 3448              	.LVL267:
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 3449              		.loc 1 2190 0
 3450 00d6 5D23     		movs	r3, #93
 3451 00d8 0F3A     		subs	r2, r2, #15
 3452 00da E254     		strb	r2, [r4, r3]
2188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3453              		.loc 1 2188 0
 3454 00dc 0120     		movs	r0, #1
2191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3455              		.loc 1 2191 0
 3456 00de A4E7     		b	.L274
 3457              	.LVL268:
 3458              	.L276:
2129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3459              		.loc 1 2129 0
 3460 00e0 2268     		ldr	r2, [r4]
 3461 00e2 5168     		ldr	r1, [r2, #4]
 3462 00e4 8023     		movs	r3, #128
 3463 00e6 5B01     		lsls	r3, r3, #5
 3464 00e8 0B43     		orrs	r3, r1
 3465 00ea 5360     		str	r3, [r2, #4]
2131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 3466              		.loc 1 2131 0
 3467 00ec 636D     		ldr	r3, [r4, #84]
 3468 00ee 9A69     		ldr	r2, [r3, #24]
 3469 00f0 8023     		movs	r3, #128
 3470 00f2 DB00     		lsls	r3, r3, #3
 3471 00f4 9A42     		cmp	r2, r3
 3472 00f6 18D0     		beq	.L295
 3473              	.L278:
2145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 3474              		.loc 1 2145 0
 3475 00f8 A36D     		ldr	r3, [r4, #88]
 3476 00fa 9A69     		ldr	r2, [r3, #24]
 3477 00fc 8023     		movs	r3, #128
 3478 00fe DB00     		lsls	r3, r3, #3
 3479 0100 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccQ5vJp4.s 			page 145


 3480 0102 C9D1     		bne	.L277
2148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3481              		.loc 1 2148 0
 3482 0104 2268     		ldr	r2, [r4]
 3483 0106 5368     		ldr	r3, [r2, #4]
 3484 0108 3D49     		ldr	r1, .L296+4
 3485 010a 0B40     		ands	r3, r1
 3486 010c 5360     		str	r3, [r2, #4]
2150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 3487              		.loc 1 2150 0
 3488 010e 4623     		movs	r3, #70
 3489 0110 E35A     		ldrh	r3, [r4, r3]
 3490 0112 DB07     		lsls	r3, r3, #31
 3491 0114 20D4     		bmi	.L280
2152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3492              		.loc 1 2152 0
 3493 0116 2268     		ldr	r2, [r4]
 3494 0118 5368     		ldr	r3, [r2, #4]
 3495 011a 3D49     		ldr	r1, .L296+20
 3496 011c 0B40     		ands	r3, r1
 3497 011e 5360     		str	r3, [r2, #4]
2153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 3498              		.loc 1 2153 0
 3499 0120 4622     		movs	r2, #70
 3500 0122 A35A     		ldrh	r3, [r4, r2]
 3501 0124 5B08     		lsrs	r3, r3, #1
 3502 0126 A352     		strh	r3, [r4, r2]
 3503 0128 B6E7     		b	.L277
 3504              	.L295:
2133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 3505              		.loc 1 2133 0
 3506 012a A38F     		ldrh	r3, [r4, #60]
 3507 012c DB07     		lsls	r3, r3, #31
 3508 012e 08D4     		bmi	.L279
2135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
 3509              		.loc 1 2135 0
 3510 0130 2268     		ldr	r2, [r4]
 3511 0132 5368     		ldr	r3, [r2, #4]
 3512 0134 3749     		ldr	r1, .L296+24
 3513 0136 0B40     		ands	r3, r1
 3514 0138 5360     		str	r3, [r2, #4]
2136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 3515              		.loc 1 2136 0
 3516 013a E38F     		ldrh	r3, [r4, #62]
 3517 013c 5B08     		lsrs	r3, r3, #1
 3518 013e E387     		strh	r3, [r4, #62]
 3519 0140 DAE7     		b	.L278
 3520              	.L279:
2140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 3521              		.loc 1 2140 0
 3522 0142 2268     		ldr	r2, [r4]
 3523 0144 5168     		ldr	r1, [r2, #4]
 3524 0146 8023     		movs	r3, #128
 3525 0148 DB01     		lsls	r3, r3, #7
 3526 014a 0B43     		orrs	r3, r1
 3527 014c 5360     		str	r3, [r2, #4]
2141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
ARM GAS  /tmp/ccQ5vJp4.s 			page 146


 3528              		.loc 1 2141 0
 3529 014e E38F     		ldrh	r3, [r4, #62]
 3530 0150 5B08     		lsrs	r3, r3, #1
 3531 0152 0133     		adds	r3, r3, #1
 3532 0154 E387     		strh	r3, [r4, #62]
 3533 0156 CFE7     		b	.L278
 3534              	.L280:
2157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3535              		.loc 1 2157 0
 3536 0158 2268     		ldr	r2, [r4]
 3537 015a 5168     		ldr	r1, [r2, #4]
 3538 015c 8023     		movs	r3, #128
 3539 015e 9B01     		lsls	r3, r3, #6
 3540 0160 0B43     		orrs	r3, r1
 3541 0162 5360     		str	r3, [r2, #4]
2158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 3542              		.loc 1 2158 0
 3543 0164 4622     		movs	r2, #70
 3544 0166 A35A     		ldrh	r3, [r4, r2]
 3545 0168 5B08     		lsrs	r3, r3, #1
 3546 016a 0133     		adds	r3, r3, #1
 3547 016c A352     		strh	r3, [r4, r2]
 3548 016e 93E7     		b	.L277
 3549              	.L294:
2167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 3550              		.loc 1 2167 0
 3551 0170 A36D     		ldr	r3, [r4, #88]
 3552 0172 294A     		ldr	r2, .L296+28
 3553 0174 1A63     		str	r2, [r3, #48]
2168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3554              		.loc 1 2168 0
 3555 0176 A36D     		ldr	r3, [r4, #88]
 3556 0178 284A     		ldr	r2, .L296+32
 3557 017a DA62     		str	r2, [r3, #44]
 3558 017c 96E7     		b	.L282
 3559              	.L283:
2195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3560              		.loc 1 2195 0
 3561 017e 2268     		ldr	r2, [r4]
 3562 0180 5368     		ldr	r3, [r2, #4]
 3563 0182 0121     		movs	r1, #1
 3564 0184 0B43     		orrs	r3, r1
 3565 0186 5360     		str	r3, [r2, #4]
2199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 3566              		.loc 1 2199 0
 3567 0188 626D     		ldr	r2, [r4, #84]
 3568 018a 0023     		movs	r3, #0
 3569 018c 1363     		str	r3, [r2, #48]
2200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 3570              		.loc 1 2200 0
 3571 018e 626D     		ldr	r2, [r4, #84]
 3572 0190 D362     		str	r3, [r2, #44]
2201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 3573              		.loc 1 2201 0
 3574 0192 626D     		ldr	r2, [r4, #84]
 3575 0194 5363     		str	r3, [r2, #52]
2202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
ARM GAS  /tmp/ccQ5vJp4.s 			page 147


 3576              		.loc 1 2202 0
 3577 0196 626D     		ldr	r2, [r4, #84]
 3578 0198 9363     		str	r3, [r2, #56]
2205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3579              		.loc 1 2205 0
 3580 019a 2268     		ldr	r2, [r4]
 3581 019c 0C32     		adds	r2, r2, #12
 3582 019e E38F     		ldrh	r3, [r4, #62]
 3583 01a0 9BB2     		uxth	r3, r3
 3584 01a2 A16B     		ldr	r1, [r4, #56]
 3585 01a4 606D     		ldr	r0, [r4, #84]
 3586 01a6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3587              	.LVL269:
 3588 01aa 0028     		cmp	r0, #0
 3589 01ac 08D0     		beq	.L284
2208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3590              		.loc 1 2208 0
 3591 01ae 236E     		ldr	r3, [r4, #96]
 3592 01b0 1022     		movs	r2, #16
 3593 01b2 1343     		orrs	r3, r2
 3594 01b4 2366     		str	r3, [r4, #96]
 3595              	.LVL270:
2211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 3596              		.loc 1 2211 0
 3597 01b6 5D23     		movs	r3, #93
 3598 01b8 0F3A     		subs	r2, r2, #15
 3599 01ba E254     		strb	r2, [r4, r3]
2209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3600              		.loc 1 2209 0
 3601 01bc 0120     		movs	r0, #1
2212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3602              		.loc 1 2212 0
 3603 01be 34E7     		b	.L274
 3604              	.LVL271:
 3605              	.L284:
2216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3606              		.loc 1 2216 0
 3607 01c0 2368     		ldr	r3, [r4]
 3608 01c2 1A68     		ldr	r2, [r3]
 3609 01c4 5206     		lsls	r2, r2, #25
 3610 01c6 03D4     		bmi	.L285
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3611              		.loc 1 2219 0
 3612 01c8 1A68     		ldr	r2, [r3]
 3613 01ca 4021     		movs	r1, #64
 3614 01cc 0A43     		orrs	r2, r1
 3615 01ce 1A60     		str	r2, [r3]
 3616              	.L285:
2222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3617              		.loc 1 2222 0
 3618 01d0 2268     		ldr	r2, [r4]
 3619 01d2 5368     		ldr	r3, [r2, #4]
 3620 01d4 2021     		movs	r1, #32
 3621 01d6 0B43     		orrs	r3, r1
 3622 01d8 5360     		str	r3, [r2, #4]
2225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3623              		.loc 1 2225 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 148


 3624 01da 2268     		ldr	r2, [r4]
 3625 01dc 5368     		ldr	r3, [r2, #4]
 3626 01de 1E39     		subs	r1, r1, #30
 3627 01e0 0B43     		orrs	r3, r1
 3628 01e2 5360     		str	r3, [r2, #4]
 3629 01e4 21E7     		b	.L274
 3630              	.LVL272:
 3631              	.L288:
2080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 3632              		.loc 1 2080 0
 3633 01e6 0220     		movs	r0, #2
 3634              	.LVL273:
 3635 01e8 1FE7     		b	.L274
 3636              	.LVL274:
 3637              	.L290:
2086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 3638              		.loc 1 2086 0
 3639 01ea 0120     		movs	r0, #1
 3640              	.LVL275:
 3641 01ec 1DE7     		b	.L274
 3642              	.LVL276:
 3643              	.L291:
 3644 01ee 0120     		movs	r0, #1
 3645              	.LVL277:
 3646 01f0 1BE7     		b	.L274
 3647              	.LVL278:
 3648              	.L292:
 3649 01f2 0120     		movs	r0, #1
 3650              	.LVL279:
 3651 01f4 19E7     		b	.L274
 3652              	.LVL280:
 3653              	.L286:
2071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3654              		.loc 1 2071 0
 3655 01f6 0220     		movs	r0, #2
 3656 01f8 1AE7     		b	.L272
 3657              	.L297:
 3658 01fa C046     		.align	2
 3659              	.L296:
 3660 01fc FF9FFFFF 		.word	-24577
 3661 0200 FFEFFFFF 		.word	-4097
 3662 0204 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 3663 0208 00000000 		.word	SPI_DMATransmitReceiveCplt
 3664 020c 00000000 		.word	SPI_DMAError
 3665 0210 FFDFFFFF 		.word	-8193
 3666 0214 FFBFFFFF 		.word	-16385
 3667 0218 00000000 		.word	SPI_DMAHalfReceiveCplt
 3668 021c 00000000 		.word	SPI_DMAReceiveCplt
 3669              		.cfi_endproc
 3670              	.LFE185:
 3672              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 3673              		.align	1
 3674              		.global	HAL_SPI_Receive_DMA
 3675              		.syntax unified
 3676              		.code	16
 3677              		.thumb_func
 3678              		.fpu softvfp
ARM GAS  /tmp/ccQ5vJp4.s 			page 149


 3680              	HAL_SPI_Receive_DMA:
 3681              	.LFB184:
1915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3682              		.loc 1 1915 0
 3683              		.cfi_startproc
 3684              		@ args = 0, pretend = 0, frame = 0
 3685              		@ frame_needed = 0, uses_anonymous_args = 0
 3686              	.LVL281:
 3687 0000 70B5     		push	{r4, r5, r6, lr}
 3688              	.LCFI23:
 3689              		.cfi_def_cfa_offset 16
 3690              		.cfi_offset 4, -16
 3691              		.cfi_offset 5, -12
 3692              		.cfi_offset 6, -8
 3693              		.cfi_offset 14, -4
 3694 0002 0400     		movs	r4, r0
 3695              	.LVL282:
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3696              		.loc 1 1921 0
 3697 0004 8568     		ldr	r5, [r0, #8]
 3698 0006 002D     		cmp	r5, #0
 3699 0008 04D1     		bne	.L299
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3700              		.loc 1 1921 0 is_stmt 0 discriminator 1
 3701 000a 8223     		movs	r3, #130
 3702 000c 5B00     		lsls	r3, r3, #1
 3703 000e 4068     		ldr	r0, [r0, #4]
 3704              	.LVL283:
 3705 0010 9842     		cmp	r0, r3
 3706 0012 10D0     		beq	.L312
 3707              	.L299:
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3708              		.loc 1 1933 0 is_stmt 1
 3709 0014 5C20     		movs	r0, #92
 3710 0016 205C     		ldrb	r0, [r4, r0]
 3711 0018 0128     		cmp	r0, #1
 3712 001a 00D1     		bne	.LCB3809
 3713 001c A3E0     		b	.L308	@long jump
 3714              	.LCB3809:
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3715              		.loc 1 1933 0 is_stmt 0 discriminator 2
 3716 001e 5C20     		movs	r0, #92
 3717 0020 0123     		movs	r3, #1
 3718 0022 2354     		strb	r3, [r4, r0]
1935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3719              		.loc 1 1935 0 is_stmt 1 discriminator 2
 3720 0024 0130     		adds	r0, r0, #1
 3721 0026 205C     		ldrb	r0, [r4, r0]
 3722 0028 0128     		cmp	r0, #1
 3723 002a 0DD0     		beq	.L313
1937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 3724              		.loc 1 1937 0
 3725 002c 0220     		movs	r0, #2
 3726              	.LVL284:
 3727              	.L301:
2042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
 3728              		.loc 1 2042 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 150


 3729 002e 5C23     		movs	r3, #92
 3730 0030 0022     		movs	r2, #0
 3731 0032 E254     		strb	r2, [r4, r3]
 3732              	.LVL285:
 3733              	.L300:
2044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3734              		.loc 1 2044 0
 3735              		@ sp needed
 3736              	.LVL286:
 3737 0034 70BD     		pop	{r4, r5, r6, pc}
 3738              	.LVL287:
 3739              	.L312:
1923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3740              		.loc 1 1923 0
 3741 0036 A73B     		subs	r3, r3, #167
 3742 0038 0420     		movs	r0, #4
 3743 003a E054     		strb	r0, [r4, r3]
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3744              		.loc 1 1929 0
 3745 003c 1300     		movs	r3, r2
 3746 003e 0A00     		movs	r2, r1
 3747              	.LVL288:
 3748 0040 2000     		movs	r0, r4
 3749 0042 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 3750              	.LVL289:
 3751 0046 F5E7     		b	.L300
 3752              	.LVL290:
 3753              	.L313:
1941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3754              		.loc 1 1941 0
 3755 0048 0029     		cmp	r1, #0
 3756 004a 00D1     		bne	.LCB3864
 3757 004c 87E0     		b	.L310	@long jump
 3758              	.LCB3864:
1941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3759              		.loc 1 1941 0 is_stmt 0 discriminator 1
 3760 004e 002A     		cmp	r2, #0
 3761 0050 00D1     		bne	.LCB3866
 3762 0052 86E0     		b	.L311	@long jump
 3763              	.LCB3866:
1948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3764              		.loc 1 1948 0 is_stmt 1
 3765 0054 5C33     		adds	r3, r3, #92
 3766 0056 0330     		adds	r0, r0, #3
 3767 0058 E054     		strb	r0, [r4, r3]
1949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 3768              		.loc 1 1949 0
 3769 005a 0023     		movs	r3, #0
 3770 005c 2366     		str	r3, [r4, #96]
1950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3771              		.loc 1 1950 0
 3772 005e 2164     		str	r1, [r4, #64]
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3773              		.loc 1 1951 0
 3774 0060 4421     		movs	r1, #68
 3775              	.LVL291:
 3776 0062 6252     		strh	r2, [r4, r1]
ARM GAS  /tmp/ccQ5vJp4.s 			page 151


 3777              	.LVL292:
1952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3778              		.loc 1 1952 0
 3779 0064 0231     		adds	r1, r1, #2
 3780 0066 6252     		strh	r2, [r4, r1]
1955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3781              		.loc 1 1955 0
 3782 0068 E364     		str	r3, [r4, #76]
1956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 3783              		.loc 1 1956 0
 3784 006a 2365     		str	r3, [r4, #80]
1957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3785              		.loc 1 1957 0
 3786 006c A387     		strh	r3, [r4, #60]
1958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3787              		.loc 1 1958 0
 3788 006e E387     		strh	r3, [r4, #62]
1961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3789              		.loc 1 1961 0
 3790 0070 8023     		movs	r3, #128
 3791 0072 1B02     		lsls	r3, r3, #8
 3792 0074 9D42     		cmp	r5, r3
 3793 0076 2ED0     		beq	.L314
 3794              	.LVL293:
 3795              	.L302:
1975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 3796              		.loc 1 1975 0
 3797 0078 2268     		ldr	r2, [r4]
 3798 007a 5368     		ldr	r3, [r2, #4]
 3799 007c 3B49     		ldr	r1, .L315
 3800 007e 0B40     		ands	r3, r1
 3801 0080 5360     		str	r3, [r2, #4]
1976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3802              		.loc 1 1976 0
 3803 0082 E023     		movs	r3, #224
 3804 0084 DB00     		lsls	r3, r3, #3
 3805 0086 E268     		ldr	r2, [r4, #12]
 3806 0088 9A42     		cmp	r2, r3
 3807 008a 2AD9     		bls	.L303
1979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3808              		.loc 1 1979 0
 3809 008c 2268     		ldr	r2, [r4]
 3810 008e 5368     		ldr	r3, [r2, #4]
 3811 0090 3749     		ldr	r1, .L315+4
 3812 0092 0B40     		ands	r3, r1
 3813 0094 5360     		str	r3, [r2, #4]
 3814              	.L304:
2005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3815              		.loc 1 2005 0
 3816 0096 A36D     		ldr	r3, [r4, #88]
 3817 0098 364A     		ldr	r2, .L315+8
 3818 009a 1A63     		str	r2, [r3, #48]
2008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3819              		.loc 1 2008 0
 3820 009c A36D     		ldr	r3, [r4, #88]
 3821 009e 364A     		ldr	r2, .L315+12
 3822 00a0 DA62     		str	r2, [r3, #44]
ARM GAS  /tmp/ccQ5vJp4.s 			page 152


2011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3823              		.loc 1 2011 0
 3824 00a2 A36D     		ldr	r3, [r4, #88]
 3825 00a4 354A     		ldr	r2, .L315+16
 3826 00a6 5A63     		str	r2, [r3, #52]
2014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3827              		.loc 1 2014 0
 3828 00a8 A36D     		ldr	r3, [r4, #88]
 3829 00aa 0022     		movs	r2, #0
 3830 00ac 9A63     		str	r2, [r3, #56]
2017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3831              		.loc 1 2017 0
 3832 00ae 2168     		ldr	r1, [r4]
 3833 00b0 0C31     		adds	r1, r1, #12
 3834 00b2 4623     		movs	r3, #70
 3835 00b4 E35A     		ldrh	r3, [r4, r3]
 3836 00b6 9BB2     		uxth	r3, r3
 3837 00b8 226C     		ldr	r2, [r4, #64]
 3838 00ba A06D     		ldr	r0, [r4, #88]
 3839 00bc FFF7FEFF 		bl	HAL_DMA_Start_IT
 3840              	.LVL294:
 3841 00c0 0028     		cmp	r0, #0
 3842 00c2 39D0     		beq	.L306
2020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3843              		.loc 1 2020 0
 3844 00c4 236E     		ldr	r3, [r4, #96]
 3845 00c6 1022     		movs	r2, #16
 3846 00c8 1343     		orrs	r3, r2
 3847 00ca 2366     		str	r3, [r4, #96]
 3848              	.LVL295:
2023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 3849              		.loc 1 2023 0
 3850 00cc 5D23     		movs	r3, #93
 3851 00ce 0F3A     		subs	r2, r2, #15
 3852 00d0 E254     		strb	r2, [r4, r3]
2021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3853              		.loc 1 2021 0
 3854 00d2 0120     		movs	r0, #1
2024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3855              		.loc 1 2024 0
 3856 00d4 ABE7     		b	.L301
 3857              	.LVL296:
 3858              	.L314:
1963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3859              		.loc 1 1963 0
 3860 00d6 2268     		ldr	r2, [r4]
 3861              	.LVL297:
 3862 00d8 1368     		ldr	r3, [r2]
 3863 00da 2949     		ldr	r1, .L315+20
 3864 00dc 0B40     		ands	r3, r1
 3865 00de 1360     		str	r3, [r2]
 3866 00e0 CAE7     		b	.L302
 3867              	.L303:
1984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3868              		.loc 1 1984 0
 3869 00e2 2268     		ldr	r2, [r4]
 3870 00e4 5168     		ldr	r1, [r2, #4]
ARM GAS  /tmp/ccQ5vJp4.s 			page 153


 3871 00e6 8023     		movs	r3, #128
 3872 00e8 5B01     		lsls	r3, r3, #5
 3873 00ea 0B43     		orrs	r3, r1
 3874 00ec 5360     		str	r3, [r2, #4]
1986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 3875              		.loc 1 1986 0
 3876 00ee A36D     		ldr	r3, [r4, #88]
 3877 00f0 9A69     		ldr	r2, [r3, #24]
 3878 00f2 8023     		movs	r3, #128
 3879 00f4 DB00     		lsls	r3, r3, #3
 3880 00f6 9A42     		cmp	r2, r3
 3881 00f8 CDD1     		bne	.L304
1989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3882              		.loc 1 1989 0
 3883 00fa 2268     		ldr	r2, [r4]
 3884 00fc 5368     		ldr	r3, [r2, #4]
 3885 00fe 1C49     		ldr	r1, .L315+4
 3886 0100 0B40     		ands	r3, r1
 3887 0102 5360     		str	r3, [r2, #4]
1991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 3888              		.loc 1 1991 0
 3889 0104 4623     		movs	r3, #70
 3890 0106 E35A     		ldrh	r3, [r4, r3]
 3891 0108 DB07     		lsls	r3, r3, #31
 3892 010a 09D4     		bmi	.L305
1993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3893              		.loc 1 1993 0
 3894 010c 2268     		ldr	r2, [r4]
 3895 010e 5368     		ldr	r3, [r2, #4]
 3896 0110 1649     		ldr	r1, .L315
 3897 0112 0B40     		ands	r3, r1
 3898 0114 5360     		str	r3, [r2, #4]
1994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 3899              		.loc 1 1994 0
 3900 0116 4622     		movs	r2, #70
 3901 0118 A35A     		ldrh	r3, [r4, r2]
 3902 011a 5B08     		lsrs	r3, r3, #1
 3903 011c A352     		strh	r3, [r4, r2]
 3904 011e BAE7     		b	.L304
 3905              	.L305:
1998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3906              		.loc 1 1998 0
 3907 0120 2268     		ldr	r2, [r4]
 3908 0122 5168     		ldr	r1, [r2, #4]
 3909 0124 8023     		movs	r3, #128
 3910 0126 9B01     		lsls	r3, r3, #6
 3911 0128 0B43     		orrs	r3, r1
 3912 012a 5360     		str	r3, [r2, #4]
1999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 3913              		.loc 1 1999 0
 3914 012c 4622     		movs	r2, #70
 3915 012e A35A     		ldrh	r3, [r4, r2]
 3916 0130 5B08     		lsrs	r3, r3, #1
 3917 0132 0133     		adds	r3, r3, #1
 3918 0134 A352     		strh	r3, [r4, r2]
 3919 0136 AEE7     		b	.L304
 3920              	.L306:
ARM GAS  /tmp/ccQ5vJp4.s 			page 154


2028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 3921              		.loc 1 2028 0
 3922 0138 2368     		ldr	r3, [r4]
 3923 013a 1A68     		ldr	r2, [r3]
 3924 013c 5206     		lsls	r2, r2, #25
 3925 013e 03D4     		bmi	.L307
2031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 3926              		.loc 1 2031 0
 3927 0140 1A68     		ldr	r2, [r3]
 3928 0142 4021     		movs	r1, #64
 3929 0144 0A43     		orrs	r2, r1
 3930 0146 1A60     		str	r2, [r3]
 3931              	.L307:
2035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3932              		.loc 1 2035 0
 3933 0148 2268     		ldr	r2, [r4]
 3934 014a 5368     		ldr	r3, [r2, #4]
 3935 014c 2021     		movs	r1, #32
 3936 014e 0B43     		orrs	r3, r1
 3937 0150 5360     		str	r3, [r2, #4]
2038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3938              		.loc 1 2038 0
 3939 0152 2268     		ldr	r2, [r4]
 3940 0154 5368     		ldr	r3, [r2, #4]
 3941 0156 1F39     		subs	r1, r1, #31
 3942 0158 0B43     		orrs	r3, r1
 3943 015a 5360     		str	r3, [r2, #4]
 3944 015c 67E7     		b	.L301
 3945              	.LVL298:
 3946              	.L310:
1943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     goto error;
 3947              		.loc 1 1943 0
 3948 015e 0120     		movs	r0, #1
 3949 0160 65E7     		b	.L301
 3950              	.L311:
 3951 0162 0120     		movs	r0, #1
 3952 0164 63E7     		b	.L301
 3953              	.L308:
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 3954              		.loc 1 1933 0
 3955 0166 0220     		movs	r0, #2
 3956 0168 64E7     		b	.L300
 3957              	.L316:
 3958 016a C046     		.align	2
 3959              	.L315:
 3960 016c FFDFFFFF 		.word	-8193
 3961 0170 FFEFFFFF 		.word	-4097
 3962 0174 00000000 		.word	SPI_DMAHalfReceiveCplt
 3963 0178 00000000 		.word	SPI_DMAReceiveCplt
 3964 017c 00000000 		.word	SPI_DMAError
 3965 0180 FFBFFFFF 		.word	-16385
 3966              		.cfi_endproc
 3967              	.LFE184:
 3969              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 3970              		.align	1
 3971              		.global	HAL_SPI_Abort
 3972              		.syntax unified
ARM GAS  /tmp/ccQ5vJp4.s 			page 155


 3973              		.code	16
 3974              		.thumb_func
 3975              		.fpu softvfp
 3977              	HAL_SPI_Abort:
 3978              	.LFB186:
2247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 3979              		.loc 1 2247 0
 3980              		.cfi_startproc
 3981              		@ args = 0, pretend = 0, frame = 16
 3982              		@ frame_needed = 0, uses_anonymous_args = 0
 3983              	.LVL299:
 3984 0000 10B5     		push	{r4, lr}
 3985              	.LCFI24:
 3986              		.cfi_def_cfa_offset 8
 3987              		.cfi_offset 4, -8
 3988              		.cfi_offset 14, -4
 3989 0002 86B0     		sub	sp, sp, #24
 3990              	.LCFI25:
 3991              		.cfi_def_cfa_offset 32
 3992 0004 0400     		movs	r4, r0
 3993              	.LVL300:
2253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   count = resetcount;
 3994              		.loc 1 2253 0
 3995 0006 604B     		ldr	r3, .L337
 3996 0008 1868     		ldr	r0, [r3]
 3997              	.LVL301:
 3998 000a 6049     		ldr	r1, .L337+4
 3999 000c FFF7FEFF 		bl	__aeabi_uidiv
 4000              	.LVL302:
 4001 0010 6423     		movs	r3, #100
 4002 0012 5843     		muls	r0, r3
 4003 0014 0490     		str	r0, [sp, #16]
2254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4004              		.loc 1 2254 0
 4005 0016 049B     		ldr	r3, [sp, #16]
 4006 0018 0593     		str	r3, [sp, #20]
2257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4007              		.loc 1 2257 0
 4008 001a 2268     		ldr	r2, [r4]
 4009 001c 5368     		ldr	r3, [r2, #4]
 4010 001e 2021     		movs	r1, #32
 4011 0020 8B43     		bics	r3, r1
 4012 0022 5360     		str	r3, [r2, #4]
2260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 4013              		.loc 1 2260 0
 4014 0024 2268     		ldr	r2, [r4]
 4015 0026 5368     		ldr	r3, [r2, #4]
 4016 0028 1B06     		lsls	r3, r3, #24
 4017 002a 12D5     		bpl	.L318
2262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4018              		.loc 1 2262 0
 4019 002c 584B     		ldr	r3, .L337+8
 4020 002e 2365     		str	r3, [r4, #80]
 4021              	.L321:
2266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 4022              		.loc 1 2266 0
 4023 0030 059B     		ldr	r3, [sp, #20]
ARM GAS  /tmp/ccQ5vJp4.s 			page 156


 4024 0032 002B     		cmp	r3, #0
 4025 0034 07D0     		beq	.L335
2271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 4026              		.loc 1 2271 0
 4027 0036 059B     		ldr	r3, [sp, #20]
 4028 0038 013B     		subs	r3, r3, #1
 4029 003a 0593     		str	r3, [sp, #20]
2273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Reset Timeout Counter */
 4030              		.loc 1 2273 0
 4031 003c 5D23     		movs	r3, #93
 4032 003e E35C     		ldrb	r3, [r4, r3]
 4033 0040 072B     		cmp	r3, #7
 4034 0042 F5D1     		bne	.L321
 4035 0044 03E0     		b	.L320
 4036              	.L335:
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 4037              		.loc 1 2268 0
 4038 0046 236E     		ldr	r3, [r4, #96]
 4039 0048 4021     		movs	r1, #64
 4040 004a 0B43     		orrs	r3, r1
 4041 004c 2366     		str	r3, [r4, #96]
 4042              	.L320:
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 4043              		.loc 1 2275 0
 4044 004e 049B     		ldr	r3, [sp, #16]
 4045 0050 0593     		str	r3, [sp, #20]
 4046              	.L318:
2278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 4047              		.loc 1 2278 0
 4048 0052 5368     		ldr	r3, [r2, #4]
 4049 0054 5B06     		lsls	r3, r3, #25
 4050 0056 12D5     		bpl	.L322
2280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4051              		.loc 1 2280 0
 4052 0058 4E4B     		ldr	r3, .L337+12
 4053 005a E364     		str	r3, [r4, #76]
 4054              	.L325:
2284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 4055              		.loc 1 2284 0
 4056 005c 059B     		ldr	r3, [sp, #20]
 4057 005e 002B     		cmp	r3, #0
 4058 0060 07D0     		beq	.L336
2289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 4059              		.loc 1 2289 0
 4060 0062 059B     		ldr	r3, [sp, #20]
 4061 0064 013B     		subs	r3, r3, #1
 4062 0066 0593     		str	r3, [sp, #20]
2291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Reset Timeout Counter */
 4063              		.loc 1 2291 0
 4064 0068 5D23     		movs	r3, #93
 4065 006a E35C     		ldrb	r3, [r4, r3]
 4066 006c 072B     		cmp	r3, #7
 4067 006e F5D1     		bne	.L325
 4068 0070 03E0     		b	.L324
 4069              	.L336:
2286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 4070              		.loc 1 2286 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 157


 4071 0072 236E     		ldr	r3, [r4, #96]
 4072 0074 4021     		movs	r1, #64
 4073 0076 0B43     		orrs	r3, r1
 4074 0078 2366     		str	r3, [r4, #96]
 4075              	.L324:
2293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 4076              		.loc 1 2293 0
 4077 007a 049B     		ldr	r3, [sp, #16]
 4078 007c 0593     		str	r3, [sp, #20]
 4079              	.L322:
2297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 4080              		.loc 1 2297 0
 4081 007e 5368     		ldr	r3, [r2, #4]
 4082 0080 9B07     		lsls	r3, r3, #30
 4083 0082 2ED5     		bpl	.L326
2300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 4084              		.loc 1 2300 0
 4085 0084 636D     		ldr	r3, [r4, #84]
 4086 0086 002B     		cmp	r3, #0
 4087 0088 2BD0     		beq	.L326
2304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4088              		.loc 1 2304 0
 4089 008a 0022     		movs	r2, #0
 4090 008c 9A63     		str	r2, [r3, #56]
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 4091              		.loc 1 2307 0
 4092 008e 606D     		ldr	r0, [r4, #84]
 4093 0090 FFF7FEFF 		bl	HAL_DMA_Abort
 4094              	.LVL303:
 4095 0094 0028     		cmp	r0, #0
 4096 0096 01D0     		beq	.L327
2309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 4097              		.loc 1 2309 0
 4098 0098 4023     		movs	r3, #64
 4099 009a 2366     		str	r3, [r4, #96]
 4100              	.L327:
2313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4101              		.loc 1 2313 0
 4102 009c 2268     		ldr	r2, [r4]
 4103 009e 5368     		ldr	r3, [r2, #4]
 4104 00a0 0221     		movs	r1, #2
 4105 00a2 8B43     		bics	r3, r1
 4106 00a4 5360     		str	r3, [r2, #4]
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 4107              		.loc 1 2315 0
 4108 00a6 FFF7FEFF 		bl	HAL_GetTick
 4109              	.LVL304:
 4110 00aa 0200     		movs	r2, r0
 4111 00ac 6421     		movs	r1, #100
 4112 00ae 2000     		movs	r0, r4
 4113 00b0 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4114              	.LVL305:
 4115 00b4 0028     		cmp	r0, #0
 4116 00b6 01D0     		beq	.L328
2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 4117              		.loc 1 2317 0
 4118 00b8 4023     		movs	r3, #64
ARM GAS  /tmp/ccQ5vJp4.s 			page 158


 4119 00ba 2366     		str	r3, [r4, #96]
 4120              	.L328:
2321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4121              		.loc 1 2321 0
 4122 00bc 2268     		ldr	r2, [r4]
 4123 00be 1368     		ldr	r3, [r2]
 4124 00c0 4021     		movs	r1, #64
 4125 00c2 8B43     		bics	r3, r1
 4126 00c4 1360     		str	r3, [r2]
2324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 4127              		.loc 1 2324 0
 4128 00c6 FFF7FEFF 		bl	HAL_GetTick
 4129              	.LVL306:
 4130 00ca C021     		movs	r1, #192
 4131 00cc 0090     		str	r0, [sp]
 4132 00ce 6423     		movs	r3, #100
 4133 00d0 0022     		movs	r2, #0
 4134 00d2 C900     		lsls	r1, r1, #3
 4135 00d4 2000     		movs	r0, r4
 4136 00d6 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 4137              	.LVL307:
 4138 00da 0028     		cmp	r0, #0
 4139 00dc 01D0     		beq	.L326
2326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 4140              		.loc 1 2326 0
 4141 00de 4023     		movs	r3, #64
 4142 00e0 2366     		str	r3, [r4, #96]
 4143              	.L326:
2332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 4144              		.loc 1 2332 0
 4145 00e2 2368     		ldr	r3, [r4]
 4146 00e4 5B68     		ldr	r3, [r3, #4]
 4147 00e6 DB07     		lsls	r3, r3, #31
 4148 00e8 30D5     		bpl	.L329
2335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 4149              		.loc 1 2335 0
 4150 00ea A36D     		ldr	r3, [r4, #88]
 4151 00ec 002B     		cmp	r3, #0
 4152 00ee 2DD0     		beq	.L329
2339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4153              		.loc 1 2339 0
 4154 00f0 0022     		movs	r2, #0
 4155 00f2 9A63     		str	r2, [r3, #56]
2342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 4156              		.loc 1 2342 0
 4157 00f4 A06D     		ldr	r0, [r4, #88]
 4158 00f6 FFF7FEFF 		bl	HAL_DMA_Abort
 4159              	.LVL308:
 4160 00fa 0028     		cmp	r0, #0
 4161 00fc 01D0     		beq	.L330
2344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 4162              		.loc 1 2344 0
 4163 00fe 4023     		movs	r3, #64
 4164 0100 2366     		str	r3, [r4, #96]
 4165              	.L330:
2348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4166              		.loc 1 2348 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 159


 4167 0102 2268     		ldr	r2, [r4]
 4168 0104 1368     		ldr	r3, [r2]
 4169 0106 4021     		movs	r1, #64
 4170 0108 8B43     		bics	r3, r1
 4171 010a 1360     		str	r3, [r2]
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 4172              		.loc 1 2351 0
 4173 010c FFF7FEFF 		bl	HAL_GetTick
 4174              	.LVL309:
 4175 0110 0090     		str	r0, [sp]
 4176 0112 6423     		movs	r3, #100
 4177 0114 0022     		movs	r2, #0
 4178 0116 8021     		movs	r1, #128
 4179 0118 2000     		movs	r0, r4
 4180 011a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 4181              	.LVL310:
 4182 011e 0028     		cmp	r0, #0
 4183 0120 01D0     		beq	.L331
2353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 4184              		.loc 1 2353 0
 4185 0122 4023     		movs	r3, #64
 4186 0124 2366     		str	r3, [r4, #96]
 4187              	.L331:
2357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 4188              		.loc 1 2357 0
 4189 0126 FFF7FEFF 		bl	HAL_GetTick
 4190              	.LVL311:
 4191 012a C021     		movs	r1, #192
 4192 012c 0090     		str	r0, [sp]
 4193 012e 6423     		movs	r3, #100
 4194 0130 0022     		movs	r2, #0
 4195 0132 C900     		lsls	r1, r1, #3
 4196 0134 2000     		movs	r0, r4
 4197 0136 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 4198              	.LVL312:
 4199 013a 0028     		cmp	r0, #0
 4200 013c 01D0     		beq	.L332
2359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 4201              		.loc 1 2359 0
 4202 013e 4023     		movs	r3, #64
 4203 0140 2366     		str	r3, [r4, #96]
 4204              	.L332:
2363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 4205              		.loc 1 2363 0
 4206 0142 2268     		ldr	r2, [r4]
 4207 0144 5368     		ldr	r3, [r2, #4]
 4208 0146 0121     		movs	r1, #1
 4209 0148 8B43     		bics	r3, r1
 4210 014a 5360     		str	r3, [r2, #4]
 4211              	.L329:
2367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4212              		.loc 1 2367 0
 4213 014c 0023     		movs	r3, #0
 4214 014e 4622     		movs	r2, #70
 4215 0150 A352     		strh	r3, [r4, r2]
2368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4216              		.loc 1 2368 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 160


 4217 0152 E387     		strh	r3, [r4, #62]
2371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 4218              		.loc 1 2371 0
 4219 0154 236E     		ldr	r3, [r4, #96]
 4220 0156 402B     		cmp	r3, #64
 4221 0158 13D0     		beq	.L334
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 4222              		.loc 1 2379 0
 4223 015a 0023     		movs	r3, #0
 4224 015c 2366     		str	r3, [r4, #96]
2252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 4225              		.loc 1 2252 0
 4226 015e 0020     		movs	r0, #0
 4227              	.L333:
 4228              	.LVL313:
 4229              	.LBB3:
2383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 4230              		.loc 1 2383 0
 4231 0160 0022     		movs	r2, #0
 4232 0162 0292     		str	r2, [sp, #8]
 4233 0164 2368     		ldr	r3, [r4]
 4234 0166 D968     		ldr	r1, [r3, #12]
 4235 0168 0291     		str	r1, [sp, #8]
 4236 016a 9968     		ldr	r1, [r3, #8]
 4237 016c 0291     		str	r1, [sp, #8]
 4238 016e 0299     		ldr	r1, [sp, #8]
 4239              	.LBE3:
 4240              	.LBB4:
2384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4241              		.loc 1 2384 0
 4242 0170 0392     		str	r2, [sp, #12]
 4243 0172 9B68     		ldr	r3, [r3, #8]
 4244 0174 0393     		str	r3, [sp, #12]
 4245 0176 039B     		ldr	r3, [sp, #12]
 4246              	.LBE4:
2387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4247              		.loc 1 2387 0
 4248 0178 5D23     		movs	r3, #93
 4249 017a 0132     		adds	r2, r2, #1
 4250 017c E254     		strb	r2, [r4, r3]
2390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4251              		.loc 1 2390 0
 4252 017e 06B0     		add	sp, sp, #24
 4253              		@ sp needed
 4254              	.LVL314:
 4255 0180 10BD     		pop	{r4, pc}
 4256              	.LVL315:
 4257              	.L334:
2374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 4258              		.loc 1 2374 0
 4259 0182 0120     		movs	r0, #1
 4260 0184 ECE7     		b	.L333
 4261              	.L338:
 4262 0186 C046     		.align	2
 4263              	.L337:
 4264 0188 00000000 		.word	SystemCoreClock
 4265 018c C05D0000 		.word	24000
ARM GAS  /tmp/ccQ5vJp4.s 			page 161


 4266 0190 00000000 		.word	SPI_AbortTx_ISR
 4267 0194 00000000 		.word	SPI_AbortRx_ISR
 4268              		.cfi_endproc
 4269              	.LFE186:
 4271              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 4272              		.align	1
 4273              		.global	HAL_SPI_DMAPause
 4274              		.syntax unified
 4275              		.code	16
 4276              		.thumb_func
 4277              		.fpu softvfp
 4279              	HAL_SPI_DMAPause:
 4280              	.LFB188:
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Locked */
 4281              		.loc 1 2570 0
 4282              		.cfi_startproc
 4283              		@ args = 0, pretend = 0, frame = 0
 4284              		@ frame_needed = 0, uses_anonymous_args = 0
 4285              	.LVL316:
 4286 0000 10B5     		push	{r4, lr}
 4287              	.LCFI26:
 4288              		.cfi_def_cfa_offset 8
 4289              		.cfi_offset 4, -8
 4290              		.cfi_offset 14, -4
2572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4291              		.loc 1 2572 0
 4292 0002 5C23     		movs	r3, #92
 4293 0004 C35C     		ldrb	r3, [r0, r3]
 4294 0006 012B     		cmp	r3, #1
 4295 0008 0BD0     		beq	.L341
2572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4296              		.loc 1 2572 0 is_stmt 0 discriminator 2
 4297 000a 5C22     		movs	r2, #92
 4298 000c 0123     		movs	r3, #1
 4299 000e 8354     		strb	r3, [r0, r2]
2575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4300              		.loc 1 2575 0 is_stmt 1 discriminator 2
 4301 0010 0168     		ldr	r1, [r0]
 4302 0012 4B68     		ldr	r3, [r1, #4]
 4303 0014 0324     		movs	r4, #3
 4304 0016 A343     		bics	r3, r4
 4305 0018 4B60     		str	r3, [r1, #4]
2578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4306              		.loc 1 2578 0 discriminator 2
 4307 001a 0023     		movs	r3, #0
 4308 001c 8354     		strb	r3, [r0, r2]
2580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 4309              		.loc 1 2580 0 discriminator 2
 4310 001e 0020     		movs	r0, #0
 4311              	.LVL317:
 4312              	.L340:
2581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4313              		.loc 1 2581 0
 4314              		@ sp needed
 4315 0020 10BD     		pop	{r4, pc}
 4316              	.LVL318:
 4317              	.L341:
ARM GAS  /tmp/ccQ5vJp4.s 			page 162


2572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4318              		.loc 1 2572 0
 4319 0022 0220     		movs	r0, #2
 4320              	.LVL319:
 4321 0024 FCE7     		b	.L340
 4322              		.cfi_endproc
 4323              	.LFE188:
 4325              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 4326              		.align	1
 4327              		.global	HAL_SPI_DMAResume
 4328              		.syntax unified
 4329              		.code	16
 4330              		.thumb_func
 4331              		.fpu softvfp
 4333              	HAL_SPI_DMAResume:
 4334              	.LFB189:
2590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Process Locked */
 4335              		.loc 1 2590 0
 4336              		.cfi_startproc
 4337              		@ args = 0, pretend = 0, frame = 0
 4338              		@ frame_needed = 0, uses_anonymous_args = 0
 4339              	.LVL320:
 4340 0000 10B5     		push	{r4, lr}
 4341              	.LCFI27:
 4342              		.cfi_def_cfa_offset 8
 4343              		.cfi_offset 4, -8
 4344              		.cfi_offset 14, -4
2592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4345              		.loc 1 2592 0
 4346 0002 5C23     		movs	r3, #92
 4347 0004 C35C     		ldrb	r3, [r0, r3]
 4348 0006 012B     		cmp	r3, #1
 4349 0008 0BD0     		beq	.L344
2592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4350              		.loc 1 2592 0 is_stmt 0 discriminator 2
 4351 000a 5C22     		movs	r2, #92
 4352 000c 0123     		movs	r3, #1
 4353 000e 8354     		strb	r3, [r0, r2]
2595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4354              		.loc 1 2595 0 is_stmt 1 discriminator 2
 4355 0010 0168     		ldr	r1, [r0]
 4356 0012 4B68     		ldr	r3, [r1, #4]
 4357 0014 0324     		movs	r4, #3
 4358 0016 2343     		orrs	r3, r4
 4359 0018 4B60     		str	r3, [r1, #4]
2598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4360              		.loc 1 2598 0 discriminator 2
 4361 001a 0023     		movs	r3, #0
 4362 001c 8354     		strb	r3, [r0, r2]
2600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 4363              		.loc 1 2600 0 discriminator 2
 4364 001e 0020     		movs	r0, #0
 4365              	.LVL321:
 4366              	.L343:
2601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4367              		.loc 1 2601 0
 4368              		@ sp needed
ARM GAS  /tmp/ccQ5vJp4.s 			page 163


 4369 0020 10BD     		pop	{r4, pc}
 4370              	.LVL322:
 4371              	.L344:
2592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4372              		.loc 1 2592 0
 4373 0022 0220     		movs	r0, #2
 4374              	.LVL323:
 4375 0024 FCE7     		b	.L343
 4376              		.cfi_endproc
 4377              	.LFE189:
 4379              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 4380              		.align	1
 4381              		.global	HAL_SPI_DMAStop
 4382              		.syntax unified
 4383              		.code	16
 4384              		.thumb_func
 4385              		.fpu softvfp
 4387              	HAL_SPI_DMAStop:
 4388              	.LFB190:
2610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 4389              		.loc 1 2610 0
 4390              		.cfi_startproc
 4391              		@ args = 0, pretend = 0, frame = 0
 4392              		@ frame_needed = 0, uses_anonymous_args = 0
 4393              	.LVL324:
 4394 0000 70B5     		push	{r4, r5, r6, lr}
 4395              	.LCFI28:
 4396              		.cfi_def_cfa_offset 16
 4397              		.cfi_offset 4, -16
 4398              		.cfi_offset 5, -12
 4399              		.cfi_offset 6, -8
 4400              		.cfi_offset 14, -4
 4401 0002 0400     		movs	r4, r0
 4402              	.LVL325:
2619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 4403              		.loc 1 2619 0
 4404 0004 406D     		ldr	r0, [r0, #84]
 4405              	.LVL326:
 4406 0006 0028     		cmp	r0, #0
 4407 0008 09D0     		beq	.L348
2621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 4408              		.loc 1 2621 0
 4409 000a FFF7FEFF 		bl	HAL_DMA_Abort
 4410              	.LVL327:
 4411 000e 051E     		subs	r5, r0, #0
 4412 0010 06D0     		beq	.L346
2623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4413              		.loc 1 2623 0
 4414 0012 236E     		ldr	r3, [r4, #96]
 4415 0014 1022     		movs	r2, #16
 4416 0016 1343     		orrs	r3, r2
 4417 0018 2366     		str	r3, [r4, #96]
 4418              	.LVL328:
2624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 4419              		.loc 1 2624 0
 4420 001a 0125     		movs	r5, #1
 4421 001c 00E0     		b	.L346
ARM GAS  /tmp/ccQ5vJp4.s 			page 164


 4422              	.LVL329:
 4423              	.L348:
2611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
 4424              		.loc 1 2611 0
 4425 001e 0025     		movs	r5, #0
 4426              	.LVL330:
 4427              	.L346:
2628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 4428              		.loc 1 2628 0
 4429 0020 A06D     		ldr	r0, [r4, #88]
 4430 0022 0028     		cmp	r0, #0
 4431 0024 08D0     		beq	.L347
2630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 4432              		.loc 1 2630 0
 4433 0026 FFF7FEFF 		bl	HAL_DMA_Abort
 4434              	.LVL331:
 4435 002a 0028     		cmp	r0, #0
 4436 002c 04D0     		beq	.L347
2632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4437              		.loc 1 2632 0
 4438 002e 236E     		ldr	r3, [r4, #96]
 4439 0030 1022     		movs	r2, #16
 4440 0032 1343     		orrs	r3, r2
 4441 0034 2366     		str	r3, [r4, #96]
 4442              	.LVL332:
2633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 4443              		.loc 1 2633 0
 4444 0036 0125     		movs	r5, #1
 4445              	.LVL333:
 4446              	.L347:
2638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4447              		.loc 1 2638 0
 4448 0038 2268     		ldr	r2, [r4]
 4449 003a 5368     		ldr	r3, [r2, #4]
 4450 003c 0321     		movs	r1, #3
 4451 003e 8B43     		bics	r3, r1
 4452 0040 5360     		str	r3, [r2, #4]
2639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   return errorcode;
 4453              		.loc 1 2639 0
 4454 0042 5D23     		movs	r3, #93
 4455 0044 0122     		movs	r2, #1
 4456 0046 E254     		strb	r2, [r4, r3]
2641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4457              		.loc 1 2641 0
 4458 0048 2800     		movs	r0, r5
 4459              		@ sp needed
 4460              	.LVL334:
 4461              	.LVL335:
 4462 004a 70BD     		pop	{r4, r5, r6, pc}
 4463              		.cfi_endproc
 4464              	.LFE190:
 4466              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 4467              		.align	1
 4468              		.weak	HAL_SPI_TxCpltCallback
 4469              		.syntax unified
 4470              		.code	16
 4471              		.thumb_func
ARM GAS  /tmp/ccQ5vJp4.s 			page 165


 4472              		.fpu softvfp
 4474              	HAL_SPI_TxCpltCallback:
 4475              	.LFB192:
2756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4476              		.loc 1 2756 0
 4477              		.cfi_startproc
 4478              		@ args = 0, pretend = 0, frame = 0
 4479              		@ frame_needed = 0, uses_anonymous_args = 0
 4480              		@ link register save eliminated.
 4481              	.LVL336:
2763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4482              		.loc 1 2763 0
 4483              		@ sp needed
 4484 0000 7047     		bx	lr
 4485              		.cfi_endproc
 4486              	.LFE192:
 4488              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 4489              		.align	1
 4490              		.weak	HAL_SPI_RxCpltCallback
 4491              		.syntax unified
 4492              		.code	16
 4493              		.thumb_func
 4494              		.fpu softvfp
 4496              	HAL_SPI_RxCpltCallback:
 4497              	.LFB193:
2772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4498              		.loc 1 2772 0
 4499              		.cfi_startproc
 4500              		@ args = 0, pretend = 0, frame = 0
 4501              		@ frame_needed = 0, uses_anonymous_args = 0
 4502              		@ link register save eliminated.
 4503              	.LVL337:
2779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4504              		.loc 1 2779 0
 4505              		@ sp needed
 4506 0000 7047     		bx	lr
 4507              		.cfi_endproc
 4508              	.LFE193:
 4510              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 4511              		.align	1
 4512              		.weak	HAL_SPI_TxRxCpltCallback
 4513              		.syntax unified
 4514              		.code	16
 4515              		.thumb_func
 4516              		.fpu softvfp
 4518              	HAL_SPI_TxRxCpltCallback:
 4519              	.LFB194:
2788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4520              		.loc 1 2788 0
 4521              		.cfi_startproc
 4522              		@ args = 0, pretend = 0, frame = 0
 4523              		@ frame_needed = 0, uses_anonymous_args = 0
 4524              		@ link register save eliminated.
 4525              	.LVL338:
2795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4526              		.loc 1 2795 0
 4527              		@ sp needed
ARM GAS  /tmp/ccQ5vJp4.s 			page 166


 4528 0000 7047     		bx	lr
 4529              		.cfi_endproc
 4530              	.LFE194:
 4532              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 4533              		.align	1
 4534              		.weak	HAL_SPI_TxHalfCpltCallback
 4535              		.syntax unified
 4536              		.code	16
 4537              		.thumb_func
 4538              		.fpu softvfp
 4540              	HAL_SPI_TxHalfCpltCallback:
 4541              	.LFB195:
2804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4542              		.loc 1 2804 0
 4543              		.cfi_startproc
 4544              		@ args = 0, pretend = 0, frame = 0
 4545              		@ frame_needed = 0, uses_anonymous_args = 0
 4546              		@ link register save eliminated.
 4547              	.LVL339:
2811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4548              		.loc 1 2811 0
 4549              		@ sp needed
 4550 0000 7047     		bx	lr
 4551              		.cfi_endproc
 4552              	.LFE195:
 4554              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 4555              		.align	1
 4556              		.syntax unified
 4557              		.code	16
 4558              		.thumb_func
 4559              		.fpu softvfp
 4561              	SPI_DMAHalfTransmitCplt:
 4562              	.LFB205:
3183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4563              		.loc 1 3183 0
 4564              		.cfi_startproc
 4565              		@ args = 0, pretend = 0, frame = 0
 4566              		@ frame_needed = 0, uses_anonymous_args = 0
 4567              	.LVL340:
 4568 0000 10B5     		push	{r4, lr}
 4569              	.LCFI29:
 4570              		.cfi_def_cfa_offset 8
 4571              		.cfi_offset 4, -8
 4572              		.cfi_offset 14, -4
3184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4573              		.loc 1 3184 0
 4574 0002 806A     		ldr	r0, [r0, #40]
 4575              	.LVL341:
3190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4576              		.loc 1 3190 0
 4577 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 4578              	.LVL342:
3192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4579              		.loc 1 3192 0
 4580              		@ sp needed
 4581 0008 10BD     		pop	{r4, pc}
 4582              		.cfi_endproc
ARM GAS  /tmp/ccQ5vJp4.s 			page 167


 4583              	.LFE205:
 4585              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 4586              		.align	1
 4587              		.weak	HAL_SPI_RxHalfCpltCallback
 4588              		.syntax unified
 4589              		.code	16
 4590              		.thumb_func
 4591              		.fpu softvfp
 4593              	HAL_SPI_RxHalfCpltCallback:
 4594              	.LFB196:
2820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4595              		.loc 1 2820 0
 4596              		.cfi_startproc
 4597              		@ args = 0, pretend = 0, frame = 0
 4598              		@ frame_needed = 0, uses_anonymous_args = 0
 4599              		@ link register save eliminated.
 4600              	.LVL343:
2827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4601              		.loc 1 2827 0
 4602              		@ sp needed
 4603 0000 7047     		bx	lr
 4604              		.cfi_endproc
 4605              	.LFE196:
 4607              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 4608              		.align	1
 4609              		.syntax unified
 4610              		.code	16
 4611              		.thumb_func
 4612              		.fpu softvfp
 4614              	SPI_DMAHalfReceiveCplt:
 4615              	.LFB206:
3201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4616              		.loc 1 3201 0
 4617              		.cfi_startproc
 4618              		@ args = 0, pretend = 0, frame = 0
 4619              		@ frame_needed = 0, uses_anonymous_args = 0
 4620              	.LVL344:
 4621 0000 10B5     		push	{r4, lr}
 4622              	.LCFI30:
 4623              		.cfi_def_cfa_offset 8
 4624              		.cfi_offset 4, -8
 4625              		.cfi_offset 14, -4
3202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4626              		.loc 1 3202 0
 4627 0002 806A     		ldr	r0, [r0, #40]
 4628              	.LVL345:
3208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4629              		.loc 1 3208 0
 4630 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 4631              	.LVL346:
3210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4632              		.loc 1 3210 0
 4633              		@ sp needed
 4634 0008 10BD     		pop	{r4, pc}
 4635              		.cfi_endproc
 4636              	.LFE206:
 4638              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccQ5vJp4.s 			page 168


 4639              		.align	1
 4640              		.weak	HAL_SPI_TxRxHalfCpltCallback
 4641              		.syntax unified
 4642              		.code	16
 4643              		.thumb_func
 4644              		.fpu softvfp
 4646              	HAL_SPI_TxRxHalfCpltCallback:
 4647              	.LFB197:
2836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4648              		.loc 1 2836 0
 4649              		.cfi_startproc
 4650              		@ args = 0, pretend = 0, frame = 0
 4651              		@ frame_needed = 0, uses_anonymous_args = 0
 4652              		@ link register save eliminated.
 4653              	.LVL347:
2843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4654              		.loc 1 2843 0
 4655              		@ sp needed
 4656 0000 7047     		bx	lr
 4657              		.cfi_endproc
 4658              	.LFE197:
 4660              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 4661              		.align	1
 4662              		.syntax unified
 4663              		.code	16
 4664              		.thumb_func
 4665              		.fpu softvfp
 4667              	SPI_DMAHalfTransmitReceiveCplt:
 4668              	.LFB207:
3219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4669              		.loc 1 3219 0
 4670              		.cfi_startproc
 4671              		@ args = 0, pretend = 0, frame = 0
 4672              		@ frame_needed = 0, uses_anonymous_args = 0
 4673              	.LVL348:
 4674 0000 10B5     		push	{r4, lr}
 4675              	.LCFI31:
 4676              		.cfi_def_cfa_offset 8
 4677              		.cfi_offset 4, -8
 4678              		.cfi_offset 14, -4
3220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4679              		.loc 1 3220 0
 4680 0002 806A     		ldr	r0, [r0, #40]
 4681              	.LVL349:
3226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4682              		.loc 1 3226 0
 4683 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 4684              	.LVL350:
3228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4685              		.loc 1 3228 0
 4686              		@ sp needed
 4687 0008 10BD     		pop	{r4, pc}
 4688              		.cfi_endproc
 4689              	.LFE207:
 4691              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 4692              		.align	1
 4693              		.weak	HAL_SPI_ErrorCallback
ARM GAS  /tmp/ccQ5vJp4.s 			page 169


 4694              		.syntax unified
 4695              		.code	16
 4696              		.thumb_func
 4697              		.fpu softvfp
 4699              	HAL_SPI_ErrorCallback:
 4700              	.LFB198:
2852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4701              		.loc 1 2852 0
 4702              		.cfi_startproc
 4703              		@ args = 0, pretend = 0, frame = 0
 4704              		@ frame_needed = 0, uses_anonymous_args = 0
 4705              		@ link register save eliminated.
 4706              	.LVL351:
2862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4707              		.loc 1 2862 0
 4708              		@ sp needed
 4709 0000 7047     		bx	lr
 4710              		.cfi_endproc
 4711              	.LFE198:
 4713              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 4714              		.align	1
 4715              		.syntax unified
 4716              		.code	16
 4717              		.thumb_func
 4718              		.fpu softvfp
 4720              	SPI_CloseTx_ISR:
 4721              	.LFB226:
4098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
 4722              		.loc 1 4098 0
 4723              		.cfi_startproc
 4724              		@ args = 0, pretend = 0, frame = 8
 4725              		@ frame_needed = 0, uses_anonymous_args = 0
 4726              	.LVL352:
 4727 0000 10B5     		push	{r4, lr}
 4728              	.LCFI32:
 4729              		.cfi_def_cfa_offset 8
 4730              		.cfi_offset 4, -8
 4731              		.cfi_offset 14, -4
 4732 0002 82B0     		sub	sp, sp, #8
 4733              	.LCFI33:
 4734              		.cfi_def_cfa_offset 16
 4735 0004 0400     		movs	r4, r0
4102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4736              		.loc 1 4102 0
 4737 0006 FFF7FEFF 		bl	HAL_GetTick
 4738              	.LVL353:
 4739 000a 0200     		movs	r2, r0
 4740              	.LVL354:
4105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4741              		.loc 1 4105 0
 4742 000c 2168     		ldr	r1, [r4]
 4743 000e 4B68     		ldr	r3, [r1, #4]
 4744 0010 A020     		movs	r0, #160
 4745              	.LVL355:
 4746 0012 8343     		bics	r3, r0
 4747 0014 4B60     		str	r3, [r1, #4]
4108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQ5vJp4.s 			page 170


 4748              		.loc 1 4108 0
 4749 0016 6421     		movs	r1, #100
 4750 0018 2000     		movs	r0, r4
 4751 001a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4752              	.LVL356:
 4753 001e 0028     		cmp	r0, #0
 4754 0020 03D0     		beq	.L360
4110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 4755              		.loc 1 4110 0
 4756 0022 236E     		ldr	r3, [r4, #96]
 4757 0024 2022     		movs	r2, #32
 4758 0026 1343     		orrs	r3, r2
 4759 0028 2366     		str	r3, [r4, #96]
 4760              	.L360:
4114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 4761              		.loc 1 4114 0
 4762 002a A368     		ldr	r3, [r4, #8]
 4763 002c 002B     		cmp	r3, #0
 4764 002e 06D1     		bne	.L361
 4765              	.LBB5:
4116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 4766              		.loc 1 4116 0
 4767 0030 0193     		str	r3, [sp, #4]
 4768 0032 2368     		ldr	r3, [r4]
 4769 0034 DA68     		ldr	r2, [r3, #12]
 4770 0036 0192     		str	r2, [sp, #4]
 4771 0038 9B68     		ldr	r3, [r3, #8]
 4772 003a 0193     		str	r3, [sp, #4]
 4773 003c 019B     		ldr	r3, [sp, #4]
 4774              	.L361:
 4775              	.LBE5:
4119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4776              		.loc 1 4119 0
 4777 003e 5D23     		movs	r3, #93
 4778 0040 0122     		movs	r2, #1
 4779 0042 E254     		strb	r2, [r4, r3]
4120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 4780              		.loc 1 4120 0
 4781 0044 236E     		ldr	r3, [r4, #96]
 4782 0046 002B     		cmp	r3, #0
 4783 0048 04D1     		bne	.L364
4135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4784              		.loc 1 4135 0
 4785 004a 2000     		movs	r0, r4
 4786 004c FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4787              	.LVL357:
 4788              	.L359:
4138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4789              		.loc 1 4138 0
 4790 0050 02B0     		add	sp, sp, #8
 4791              		@ sp needed
 4792              	.LVL358:
 4793 0052 10BD     		pop	{r4, pc}
 4794              	.LVL359:
 4795              	.L364:
4126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4796              		.loc 1 4126 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 171


 4797 0054 2000     		movs	r0, r4
 4798 0056 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4799              	.LVL360:
 4800 005a F9E7     		b	.L359
 4801              		.cfi_endproc
 4802              	.LFE226:
 4804              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 4805              		.align	1
 4806              		.syntax unified
 4807              		.code	16
 4808              		.thumb_func
 4809              		.fpu softvfp
 4811              	SPI_TxISR_8BIT:
 4812              	.LFB218:
3733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 4813              		.loc 1 3733 0
 4814              		.cfi_startproc
 4815              		@ args = 0, pretend = 0, frame = 0
 4816              		@ frame_needed = 0, uses_anonymous_args = 0
 4817              	.LVL361:
 4818 0000 10B5     		push	{r4, lr}
 4819              	.LCFI34:
 4820              		.cfi_def_cfa_offset 8
 4821              		.cfi_offset 4, -8
 4822              		.cfi_offset 14, -4
3734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 4823              		.loc 1 3734 0
 4824 0002 836B     		ldr	r3, [r0, #56]
 4825 0004 1B78     		ldrb	r3, [r3]
 4826 0006 0268     		ldr	r2, [r0]
 4827 0008 1373     		strb	r3, [r2, #12]
3735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount--;
 4828              		.loc 1 3735 0
 4829 000a 836B     		ldr	r3, [r0, #56]
 4830 000c 0133     		adds	r3, r3, #1
 4831 000e 8363     		str	r3, [r0, #56]
3736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4832              		.loc 1 3736 0
 4833 0010 C38F     		ldrh	r3, [r0, #62]
 4834 0012 013B     		subs	r3, r3, #1
 4835 0014 9BB2     		uxth	r3, r3
 4836 0016 C387     		strh	r3, [r0, #62]
3738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 4837              		.loc 1 3738 0
 4838 0018 C38F     		ldrh	r3, [r0, #62]
 4839 001a 9BB2     		uxth	r3, r3
 4840 001c 002B     		cmp	r3, #0
 4841 001e 00D0     		beq	.L367
 4842              	.LVL362:
 4843              	.L365:
3749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4844              		.loc 1 3749 0
 4845              		@ sp needed
 4846 0020 10BD     		pop	{r4, pc}
 4847              	.LVL363:
 4848              	.L367:
3747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccQ5vJp4.s 			page 172


 4849              		.loc 1 3747 0
 4850 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 4851              	.LVL364:
3749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4852              		.loc 1 3749 0
 4853 0026 FBE7     		b	.L365
 4854              		.cfi_endproc
 4855              	.LFE218:
 4857              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 4858              		.align	1
 4859              		.syntax unified
 4860              		.code	16
 4861              		.thumb_func
 4862              		.fpu softvfp
 4864              	SPI_TxISR_16BIT:
 4865              	.LFB219:
3758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 4866              		.loc 1 3758 0
 4867              		.cfi_startproc
 4868              		@ args = 0, pretend = 0, frame = 0
 4869              		@ frame_needed = 0, uses_anonymous_args = 0
 4870              	.LVL365:
 4871 0000 10B5     		push	{r4, lr}
 4872              	.LCFI35:
 4873              		.cfi_def_cfa_offset 8
 4874              		.cfi_offset 4, -8
 4875              		.cfi_offset 14, -4
3760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4876              		.loc 1 3760 0
 4877 0002 0368     		ldr	r3, [r0]
 4878 0004 826B     		ldr	r2, [r0, #56]
 4879 0006 1288     		ldrh	r2, [r2]
 4880 0008 DA60     		str	r2, [r3, #12]
3761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount--;
 4881              		.loc 1 3761 0
 4882 000a 836B     		ldr	r3, [r0, #56]
 4883 000c 0233     		adds	r3, r3, #2
 4884 000e 8363     		str	r3, [r0, #56]
3762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4885              		.loc 1 3762 0
 4886 0010 C38F     		ldrh	r3, [r0, #62]
 4887 0012 013B     		subs	r3, r3, #1
 4888 0014 9BB2     		uxth	r3, r3
 4889 0016 C387     		strh	r3, [r0, #62]
3764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 4890              		.loc 1 3764 0
 4891 0018 C38F     		ldrh	r3, [r0, #62]
 4892 001a 9BB2     		uxth	r3, r3
 4893 001c 002B     		cmp	r3, #0
 4894 001e 00D0     		beq	.L370
 4895              	.LVL366:
 4896              	.L368:
3775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4897              		.loc 1 3775 0
 4898              		@ sp needed
 4899 0020 10BD     		pop	{r4, pc}
 4900              	.LVL367:
ARM GAS  /tmp/ccQ5vJp4.s 			page 173


 4901              	.L370:
3773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 4902              		.loc 1 3773 0
 4903 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 4904              	.LVL368:
3775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4905              		.loc 1 3775 0
 4906 0026 FBE7     		b	.L368
 4907              		.cfi_endproc
 4908              	.LFE219:
 4910              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 4911              		.align	1
 4912              		.syntax unified
 4913              		.code	16
 4914              		.thumb_func
 4915              		.fpu softvfp
 4917              	SPI_CloseRx_ISR:
 4918              	.LFB225:
4041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
 4919              		.loc 1 4041 0
 4920              		.cfi_startproc
 4921              		@ args = 0, pretend = 0, frame = 0
 4922              		@ frame_needed = 0, uses_anonymous_args = 0
 4923              	.LVL369:
 4924 0000 10B5     		push	{r4, lr}
 4925              	.LCFI36:
 4926              		.cfi_def_cfa_offset 8
 4927              		.cfi_offset 4, -8
 4928              		.cfi_offset 14, -4
 4929 0002 0400     		movs	r4, r0
4043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4930              		.loc 1 4043 0
 4931 0004 0268     		ldr	r2, [r0]
 4932 0006 5368     		ldr	r3, [r2, #4]
 4933 0008 6021     		movs	r1, #96
 4934 000a 8B43     		bics	r3, r1
 4935 000c 5360     		str	r3, [r2, #4]
4046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 4936              		.loc 1 4046 0
 4937 000e FFF7FEFF 		bl	HAL_GetTick
 4938              	.LVL370:
 4939 0012 0200     		movs	r2, r0
 4940 0014 6421     		movs	r1, #100
 4941 0016 2000     		movs	r0, r4
 4942 0018 FFF7FEFF 		bl	SPI_EndRxTransaction
 4943              	.LVL371:
 4944 001c 0028     		cmp	r0, #0
 4945 001e 03D0     		beq	.L372
4048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 4946              		.loc 1 4048 0
 4947 0020 236E     		ldr	r3, [r4, #96]
 4948 0022 2022     		movs	r2, #32
 4949 0024 1343     		orrs	r3, r2
 4950 0026 2366     		str	r3, [r4, #96]
 4951              	.L372:
4050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4952              		.loc 1 4050 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 174


 4953 0028 5D23     		movs	r3, #93
 4954 002a 0122     		movs	r2, #1
 4955 002c E254     		strb	r2, [r4, r3]
4068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 4956              		.loc 1 4068 0
 4957 002e 236E     		ldr	r3, [r4, #96]
 4958 0030 002B     		cmp	r3, #0
 4959 0032 03D0     		beq	.L375
4083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4960              		.loc 1 4083 0
 4961 0034 2000     		movs	r0, r4
 4962 0036 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4963              	.LVL372:
 4964              	.L371:
4089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 4965              		.loc 1 4089 0
 4966              		@ sp needed
 4967              	.LVL373:
 4968 003a 10BD     		pop	{r4, pc}
 4969              	.LVL374:
 4970              	.L375:
4074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4971              		.loc 1 4074 0
 4972 003c 2000     		movs	r0, r4
 4973 003e FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4974              	.LVL375:
 4975 0042 FAE7     		b	.L371
 4976              		.cfi_endproc
 4977              	.LFE225:
 4979              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 4980              		.align	1
 4981              		.syntax unified
 4982              		.code	16
 4983              		.thumb_func
 4984              		.fpu softvfp
 4986              	SPI_RxISR_8BIT:
 4987              	.LFB216:
3648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 4988              		.loc 1 3648 0
 4989              		.cfi_startproc
 4990              		@ args = 0, pretend = 0, frame = 0
 4991              		@ frame_needed = 0, uses_anonymous_args = 0
 4992              	.LVL376:
 4993 0000 10B5     		push	{r4, lr}
 4994              	.LCFI37:
 4995              		.cfi_def_cfa_offset 8
 4996              		.cfi_offset 4, -8
 4997              		.cfi_offset 14, -4
3649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 4998              		.loc 1 3649 0
 4999 0002 0368     		ldr	r3, [r0]
 5000 0004 1B7B     		ldrb	r3, [r3, #12]
 5001 0006 026C     		ldr	r2, [r0, #64]
 5002 0008 1370     		strb	r3, [r2]
3650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount--;
 5003              		.loc 1 3650 0
 5004 000a 036C     		ldr	r3, [r0, #64]
ARM GAS  /tmp/ccQ5vJp4.s 			page 175


 5005 000c 0133     		adds	r3, r3, #1
 5006 000e 0364     		str	r3, [r0, #64]
3651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5007              		.loc 1 3651 0
 5008 0010 4622     		movs	r2, #70
 5009 0012 835A     		ldrh	r3, [r0, r2]
 5010 0014 013B     		subs	r3, r3, #1
 5011 0016 9BB2     		uxth	r3, r3
 5012 0018 8352     		strh	r3, [r0, r2]
3661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5013              		.loc 1 3661 0
 5014 001a 835A     		ldrh	r3, [r0, r2]
 5015 001c 9BB2     		uxth	r3, r3
 5016 001e 002B     		cmp	r3, #0
 5017 0020 00D0     		beq	.L378
 5018              	.LVL377:
 5019              	.L376:
3672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5020              		.loc 1 3672 0
 5021              		@ sp needed
 5022 0022 10BD     		pop	{r4, pc}
 5023              	.LVL378:
 5024              	.L378:
3670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 5025              		.loc 1 3670 0
 5026 0024 FFF7FEFF 		bl	SPI_CloseRx_ISR
 5027              	.LVL379:
3672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5028              		.loc 1 3672 0
 5029 0028 FBE7     		b	.L376
 5030              		.cfi_endproc
 5031              	.LFE216:
 5033              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 5034              		.align	1
 5035              		.syntax unified
 5036              		.code	16
 5037              		.thumb_func
 5038              		.fpu softvfp
 5040              	SPI_RxISR_16BIT:
 5041              	.LFB217:
3700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 5042              		.loc 1 3700 0
 5043              		.cfi_startproc
 5044              		@ args = 0, pretend = 0, frame = 0
 5045              		@ frame_needed = 0, uses_anonymous_args = 0
 5046              	.LVL380:
 5047 0000 10B5     		push	{r4, lr}
 5048              	.LCFI38:
 5049              		.cfi_def_cfa_offset 8
 5050              		.cfi_offset 4, -8
 5051              		.cfi_offset 14, -4
3701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 5052              		.loc 1 3701 0
 5053 0002 0368     		ldr	r3, [r0]
 5054 0004 DB68     		ldr	r3, [r3, #12]
 5055 0006 026C     		ldr	r2, [r0, #64]
 5056 0008 1380     		strh	r3, [r2]
ARM GAS  /tmp/ccQ5vJp4.s 			page 176


3702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount--;
 5057              		.loc 1 3702 0
 5058 000a 036C     		ldr	r3, [r0, #64]
 5059 000c 0233     		adds	r3, r3, #2
 5060 000e 0364     		str	r3, [r0, #64]
3703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5061              		.loc 1 3703 0
 5062 0010 4622     		movs	r2, #70
 5063 0012 835A     		ldrh	r3, [r0, r2]
 5064 0014 013B     		subs	r3, r3, #1
 5065 0016 9BB2     		uxth	r3, r3
 5066 0018 8352     		strh	r3, [r0, r2]
3713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5067              		.loc 1 3713 0
 5068 001a 835A     		ldrh	r3, [r0, r2]
 5069 001c 9BB2     		uxth	r3, r3
 5070 001e 002B     		cmp	r3, #0
 5071 0020 00D0     		beq	.L381
 5072              	.LVL381:
 5073              	.L379:
3724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5074              		.loc 1 3724 0
 5075              		@ sp needed
 5076 0022 10BD     		pop	{r4, pc}
 5077              	.LVL382:
 5078              	.L381:
3722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 5079              		.loc 1 3722 0
 5080 0024 FFF7FEFF 		bl	SPI_CloseRx_ISR
 5081              	.LVL383:
3724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5082              		.loc 1 3724 0
 5083 0028 FBE7     		b	.L379
 5084              		.cfi_endproc
 5085              	.LFE217:
 5087              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 5088              		.align	1
 5089              		.syntax unified
 5090              		.code	16
 5091              		.thumb_func
 5092              		.fpu softvfp
 5094              	SPI_CloseRxTx_ISR:
 5095              	.LFB224:
3964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
 5096              		.loc 1 3964 0
 5097              		.cfi_startproc
 5098              		@ args = 0, pretend = 0, frame = 0
 5099              		@ frame_needed = 0, uses_anonymous_args = 0
 5100              	.LVL384:
 5101 0000 10B5     		push	{r4, lr}
 5102              	.LCFI39:
 5103              		.cfi_def_cfa_offset 8
 5104              		.cfi_offset 4, -8
 5105              		.cfi_offset 14, -4
 5106 0002 0400     		movs	r4, r0
3968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5107              		.loc 1 3968 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 177


 5108 0004 FFF7FEFF 		bl	HAL_GetTick
 5109              	.LVL385:
 5110 0008 0200     		movs	r2, r0
 5111              	.LVL386:
3971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5112              		.loc 1 3971 0
 5113 000a 2168     		ldr	r1, [r4]
 5114 000c 4B68     		ldr	r3, [r1, #4]
 5115 000e 2020     		movs	r0, #32
 5116              	.LVL387:
 5117 0010 8343     		bics	r3, r0
 5118 0012 4B60     		str	r3, [r1, #4]
3974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5119              		.loc 1 3974 0
 5120 0014 6421     		movs	r1, #100
 5121 0016 2000     		movs	r0, r4
 5122 0018 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5123              	.LVL388:
 5124 001c 0028     		cmp	r0, #0
 5125 001e 03D0     		beq	.L383
3976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 5126              		.loc 1 3976 0
 5127 0020 236E     		ldr	r3, [r4, #96]
 5128 0022 2022     		movs	r2, #32
 5129 0024 1343     		orrs	r3, r2
 5130 0026 2366     		str	r3, [r4, #96]
 5131              	.L383:
3996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5132              		.loc 1 3996 0
 5133 0028 236E     		ldr	r3, [r4, #96]
 5134 002a 002B     		cmp	r3, #0
 5135 002c 11D1     		bne	.L384
3998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 5136              		.loc 1 3998 0
 5137 002e 5D33     		adds	r3, r3, #93
 5138 0030 E35C     		ldrb	r3, [r4, r3]
 5139 0032 042B     		cmp	r3, #4
 5140 0034 06D0     		beq	.L387
4010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Call user TxRx complete callback */
 5141              		.loc 1 4010 0
 5142 0036 5D23     		movs	r3, #93
 5143 0038 0122     		movs	r2, #1
 5144 003a E254     		strb	r2, [r4, r3]
4015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5145              		.loc 1 4015 0
 5146 003c 2000     		movs	r0, r4
 5147 003e FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5148              	.LVL389:
 5149              	.L382:
4032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5150              		.loc 1 4032 0
 5151              		@ sp needed
 5152              	.LVL390:
 5153 0042 10BD     		pop	{r4, pc}
 5154              	.LVL391:
 5155              	.L387:
4000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         /* Call user Rx complete callback */
ARM GAS  /tmp/ccQ5vJp4.s 			page 178


 5156              		.loc 1 4000 0
 5157 0044 5933     		adds	r3, r3, #89
 5158 0046 0122     		movs	r2, #1
 5159 0048 E254     		strb	r2, [r4, r3]
4005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5160              		.loc 1 4005 0
 5161 004a 2000     		movs	r0, r4
 5162 004c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5163              	.LVL392:
 5164 0050 F7E7     		b	.L382
 5165              	.L384:
4021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Call user error callback */
 5166              		.loc 1 4021 0
 5167 0052 5D23     		movs	r3, #93
 5168 0054 0122     		movs	r2, #1
 5169 0056 E254     		strb	r2, [r4, r3]
4026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5170              		.loc 1 4026 0
 5171 0058 2000     		movs	r0, r4
 5172 005a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5173              	.LVL393:
4032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5174              		.loc 1 4032 0
 5175 005e F0E7     		b	.L382
 5176              		.cfi_endproc
 5177              	.LFE224:
 5179              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 5180              		.align	1
 5181              		.syntax unified
 5182              		.code	16
 5183              		.thumb_func
 5184              		.fpu softvfp
 5186              	SPI_2linesTxISR_8BIT:
 5187              	.LFB213:
3491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
 5188              		.loc 1 3491 0
 5189              		.cfi_startproc
 5190              		@ args = 0, pretend = 0, frame = 0
 5191              		@ frame_needed = 0, uses_anonymous_args = 0
 5192              	.LVL394:
 5193 0000 10B5     		push	{r4, lr}
 5194              	.LCFI40:
 5195              		.cfi_def_cfa_offset 8
 5196              		.cfi_offset 4, -8
 5197              		.cfi_offset 14, -4
3493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5198              		.loc 1 3493 0
 5199 0002 C38F     		ldrh	r3, [r0, #62]
 5200 0004 9BB2     		uxth	r3, r3
 5201 0006 012B     		cmp	r3, #1
 5202 0008 19D9     		bls	.L389
3495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
 5203              		.loc 1 3495 0
 5204 000a 0368     		ldr	r3, [r0]
 5205 000c 826B     		ldr	r2, [r0, #56]
 5206 000e 1288     		ldrh	r2, [r2]
 5207 0010 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccQ5vJp4.s 			page 179


3496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
 5208              		.loc 1 3496 0
 5209 0012 836B     		ldr	r3, [r0, #56]
 5210 0014 0233     		adds	r3, r3, #2
 5211 0016 8363     		str	r3, [r0, #56]
3497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 5212              		.loc 1 3497 0
 5213 0018 C38F     		ldrh	r3, [r0, #62]
 5214 001a 023B     		subs	r3, r3, #2
 5215 001c 9BB2     		uxth	r3, r3
 5216 001e C387     		strh	r3, [r0, #62]
 5217              	.L390:
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5218              		.loc 1 3508 0
 5219 0020 C38F     		ldrh	r3, [r0, #62]
 5220 0022 9BB2     		uxth	r3, r3
 5221 0024 002B     		cmp	r3, #0
 5222 0026 09D1     		bne	.L388
3522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5223              		.loc 1 3522 0
 5224 0028 0268     		ldr	r2, [r0]
 5225 002a 5368     		ldr	r3, [r2, #4]
 5226 002c 8021     		movs	r1, #128
 5227 002e 8B43     		bics	r3, r1
 5228 0030 5360     		str	r3, [r2, #4]
3524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5229              		.loc 1 3524 0
 5230 0032 4623     		movs	r3, #70
 5231 0034 C35A     		ldrh	r3, [r0, r3]
 5232 0036 9BB2     		uxth	r3, r3
 5233 0038 002B     		cmp	r3, #0
 5234 003a 0CD0     		beq	.L392
 5235              	.LVL395:
 5236              	.L388:
3529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5237              		.loc 1 3529 0
 5238              		@ sp needed
 5239 003c 10BD     		pop	{r4, pc}
 5240              	.LVL396:
 5241              	.L389:
3502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->pTxBuffPtr++;
 5242              		.loc 1 3502 0
 5243 003e 836B     		ldr	r3, [r0, #56]
 5244 0040 1B78     		ldrb	r3, [r3]
 5245 0042 0268     		ldr	r2, [r0]
 5246 0044 1373     		strb	r3, [r2, #12]
3503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxXferCount--;
 5247              		.loc 1 3503 0
 5248 0046 836B     		ldr	r3, [r0, #56]
 5249 0048 0133     		adds	r3, r3, #1
 5250 004a 8363     		str	r3, [r0, #56]
3504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 5251              		.loc 1 3504 0
 5252 004c C38F     		ldrh	r3, [r0, #62]
 5253 004e 013B     		subs	r3, r3, #1
 5254 0050 9BB2     		uxth	r3, r3
 5255 0052 C387     		strh	r3, [r0, #62]
ARM GAS  /tmp/ccQ5vJp4.s 			page 180


 5256 0054 E4E7     		b	.L390
 5257              	.L392:
3526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5258              		.loc 1 3526 0
 5259 0056 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 5260              	.LVL397:
3529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5261              		.loc 1 3529 0
 5262 005a EFE7     		b	.L388
 5263              		.cfi_endproc
 5264              	.LFE213:
 5266              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 5267              		.align	1
 5268              		.syntax unified
 5269              		.code	16
 5270              		.thumb_func
 5271              		.fpu softvfp
 5273              	SPI_2linesRxISR_8BIT:
 5274              	.LFB212:
3413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Receive data in packing mode */
 5275              		.loc 1 3413 0
 5276              		.cfi_startproc
 5277              		@ args = 0, pretend = 0, frame = 0
 5278              		@ frame_needed = 0, uses_anonymous_args = 0
 5279              	.LVL398:
 5280 0000 10B5     		push	{r4, lr}
 5281              	.LCFI41:
 5282              		.cfi_def_cfa_offset 8
 5283              		.cfi_offset 4, -8
 5284              		.cfi_offset 14, -4
3415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5285              		.loc 1 3415 0
 5286 0002 4623     		movs	r3, #70
 5287 0004 C35A     		ldrh	r3, [r0, r3]
 5288 0006 9BB2     		uxth	r3, r3
 5289 0008 012B     		cmp	r3, #1
 5290 000a 25D9     		bls	.L394
3417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
 5291              		.loc 1 3417 0
 5292 000c 0368     		ldr	r3, [r0]
 5293 000e DB68     		ldr	r3, [r3, #12]
 5294 0010 026C     		ldr	r2, [r0, #64]
 5295 0012 1380     		strh	r3, [r2]
3418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
 5296              		.loc 1 3418 0
 5297 0014 036C     		ldr	r3, [r0, #64]
 5298 0016 0233     		adds	r3, r3, #2
 5299 0018 0364     		str	r3, [r0, #64]
3419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
 5300              		.loc 1 3419 0
 5301 001a 4622     		movs	r2, #70
 5302 001c 835A     		ldrh	r3, [r0, r2]
 5303 001e 023B     		subs	r3, r3, #2
 5304 0020 9BB2     		uxth	r3, r3
 5305 0022 8352     		strh	r3, [r0, r2]
3420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5306              		.loc 1 3420 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 181


 5307 0024 835A     		ldrh	r3, [r0, r2]
 5308 0026 9BB2     		uxth	r3, r3
 5309 0028 012B     		cmp	r3, #1
 5310 002a 0ED0     		beq	.L397
 5311              	.L395:
3435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5312              		.loc 1 3435 0
 5313 002c 4623     		movs	r3, #70
 5314 002e C35A     		ldrh	r3, [r0, r3]
 5315 0030 9BB2     		uxth	r3, r3
 5316 0032 002B     		cmp	r3, #0
 5317 0034 08D1     		bne	.L393
3447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5318              		.loc 1 3447 0
 5319 0036 0268     		ldr	r2, [r0]
 5320 0038 5368     		ldr	r3, [r2, #4]
 5321 003a 6021     		movs	r1, #96
 5322 003c 8B43     		bics	r3, r1
 5323 003e 5360     		str	r3, [r2, #4]
3449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5324              		.loc 1 3449 0
 5325 0040 C38F     		ldrh	r3, [r0, #62]
 5326 0042 9BB2     		uxth	r3, r3
 5327 0044 002B     		cmp	r3, #0
 5328 0046 14D0     		beq	.L398
 5329              	.LVL399:
 5330              	.L393:
3454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5331              		.loc 1 3454 0
 5332              		@ sp needed
 5333 0048 10BD     		pop	{r4, pc}
 5334              	.LVL400:
 5335              	.L397:
3423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5336              		.loc 1 3423 0
 5337 004a 0268     		ldr	r2, [r0]
 5338 004c 5168     		ldr	r1, [r2, #4]
 5339 004e 8023     		movs	r3, #128
 5340 0050 5B01     		lsls	r3, r3, #5
 5341 0052 0B43     		orrs	r3, r1
 5342 0054 5360     		str	r3, [r2, #4]
 5343 0056 E9E7     		b	.L395
 5344              	.L394:
3429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->pRxBuffPtr++;
 5345              		.loc 1 3429 0
 5346 0058 0368     		ldr	r3, [r0]
 5347 005a 1B7B     		ldrb	r3, [r3, #12]
 5348 005c 026C     		ldr	r2, [r0, #64]
 5349 005e 1370     		strb	r3, [r2]
3430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxXferCount--;
 5350              		.loc 1 3430 0
 5351 0060 036C     		ldr	r3, [r0, #64]
 5352 0062 0133     		adds	r3, r3, #1
 5353 0064 0364     		str	r3, [r0, #64]
3431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 5354              		.loc 1 3431 0
 5355 0066 4622     		movs	r2, #70
ARM GAS  /tmp/ccQ5vJp4.s 			page 182


 5356 0068 835A     		ldrh	r3, [r0, r2]
 5357 006a 013B     		subs	r3, r3, #1
 5358 006c 9BB2     		uxth	r3, r3
 5359 006e 8352     		strh	r3, [r0, r2]
 5360 0070 DCE7     		b	.L395
 5361              	.L398:
3451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5362              		.loc 1 3451 0
 5363 0072 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 5364              	.LVL401:
3454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5365              		.loc 1 3454 0
 5366 0076 E7E7     		b	.L393
 5367              		.cfi_endproc
 5368              	.LFE212:
 5370              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 5371              		.align	1
 5372              		.syntax unified
 5373              		.code	16
 5374              		.thumb_func
 5375              		.fpu softvfp
 5377              	SPI_2linesTxISR_16BIT:
 5378              	.LFB215:
3590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 5379              		.loc 1 3590 0
 5380              		.cfi_startproc
 5381              		@ args = 0, pretend = 0, frame = 0
 5382              		@ frame_needed = 0, uses_anonymous_args = 0
 5383              	.LVL402:
 5384 0000 10B5     		push	{r4, lr}
 5385              	.LCFI42:
 5386              		.cfi_def_cfa_offset 8
 5387              		.cfi_offset 4, -8
 5388              		.cfi_offset 14, -4
3592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 5389              		.loc 1 3592 0
 5390 0002 0368     		ldr	r3, [r0]
 5391 0004 826B     		ldr	r2, [r0, #56]
 5392 0006 1288     		ldrh	r2, [r2]
 5393 0008 DA60     		str	r2, [r3, #12]
3593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount--;
 5394              		.loc 1 3593 0
 5395 000a 836B     		ldr	r3, [r0, #56]
 5396 000c 0233     		adds	r3, r3, #2
 5397 000e 8363     		str	r3, [r0, #56]
3594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5398              		.loc 1 3594 0
 5399 0010 C38F     		ldrh	r3, [r0, #62]
 5400 0012 013B     		subs	r3, r3, #1
 5401 0014 9BB2     		uxth	r3, r3
 5402 0016 C387     		strh	r3, [r0, #62]
3597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5403              		.loc 1 3597 0
 5404 0018 C38F     		ldrh	r3, [r0, #62]
 5405 001a 9BB2     		uxth	r3, r3
 5406 001c 002B     		cmp	r3, #0
 5407 001e 09D1     		bne	.L399
ARM GAS  /tmp/ccQ5vJp4.s 			page 183


3611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5408              		.loc 1 3611 0
 5409 0020 0268     		ldr	r2, [r0]
 5410 0022 5368     		ldr	r3, [r2, #4]
 5411 0024 8021     		movs	r1, #128
 5412 0026 8B43     		bics	r3, r1
 5413 0028 5360     		str	r3, [r2, #4]
3613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5414              		.loc 1 3613 0
 5415 002a 4623     		movs	r3, #70
 5416 002c C35A     		ldrh	r3, [r0, r3]
 5417 002e 9BB2     		uxth	r3, r3
 5418 0030 002B     		cmp	r3, #0
 5419 0032 00D0     		beq	.L401
 5420              	.LVL403:
 5421              	.L399:
3618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5422              		.loc 1 3618 0
 5423              		@ sp needed
 5424 0034 10BD     		pop	{r4, pc}
 5425              	.LVL404:
 5426              	.L401:
3615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5427              		.loc 1 3615 0
 5428 0036 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 5429              	.LVL405:
3618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5430              		.loc 1 3618 0
 5431 003a FBE7     		b	.L399
 5432              		.cfi_endproc
 5433              	.LFE215:
 5435              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 5436              		.align	1
 5437              		.syntax unified
 5438              		.code	16
 5439              		.thumb_func
 5440              		.fpu softvfp
 5442              	SPI_2linesRxISR_16BIT:
 5443              	.LFB214:
3538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
 5444              		.loc 1 3538 0
 5445              		.cfi_startproc
 5446              		@ args = 0, pretend = 0, frame = 0
 5447              		@ frame_needed = 0, uses_anonymous_args = 0
 5448              	.LVL406:
 5449 0000 10B5     		push	{r4, lr}
 5450              	.LCFI43:
 5451              		.cfi_def_cfa_offset 8
 5452              		.cfi_offset 4, -8
 5453              		.cfi_offset 14, -4
3540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 5454              		.loc 1 3540 0
 5455 0002 0368     		ldr	r3, [r0]
 5456 0004 DB68     		ldr	r3, [r3, #12]
 5457 0006 026C     		ldr	r2, [r0, #64]
 5458 0008 1380     		strh	r3, [r2]
3541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount--;
ARM GAS  /tmp/ccQ5vJp4.s 			page 184


 5459              		.loc 1 3541 0
 5460 000a 036C     		ldr	r3, [r0, #64]
 5461 000c 0233     		adds	r3, r3, #2
 5462 000e 0364     		str	r3, [r0, #64]
3542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5463              		.loc 1 3542 0
 5464 0010 4622     		movs	r2, #70
 5465 0012 835A     		ldrh	r3, [r0, r2]
 5466 0014 013B     		subs	r3, r3, #1
 5467 0016 9BB2     		uxth	r3, r3
 5468 0018 8352     		strh	r3, [r0, r2]
3544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5469              		.loc 1 3544 0
 5470 001a 835A     		ldrh	r3, [r0, r2]
 5471 001c 9BB2     		uxth	r3, r3
 5472 001e 002B     		cmp	r3, #0
 5473 0020 08D1     		bne	.L402
3555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5474              		.loc 1 3555 0
 5475 0022 0268     		ldr	r2, [r0]
 5476 0024 5368     		ldr	r3, [r2, #4]
 5477 0026 4021     		movs	r1, #64
 5478 0028 8B43     		bics	r3, r1
 5479 002a 5360     		str	r3, [r2, #4]
3557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5480              		.loc 1 3557 0
 5481 002c C38F     		ldrh	r3, [r0, #62]
 5482 002e 9BB2     		uxth	r3, r3
 5483 0030 002B     		cmp	r3, #0
 5484 0032 00D0     		beq	.L404
 5485              	.LVL407:
 5486              	.L402:
3562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5487              		.loc 1 3562 0
 5488              		@ sp needed
 5489 0034 10BD     		pop	{r4, pc}
 5490              	.LVL408:
 5491              	.L404:
3559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5492              		.loc 1 3559 0
 5493 0036 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 5494              	.LVL409:
3562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5495              		.loc 1 3562 0
 5496 003a FBE7     		b	.L402
 5497              		.cfi_endproc
 5498              	.LFE214:
 5500              		.section	.text.SPI_DMAError,"ax",%progbits
 5501              		.align	1
 5502              		.syntax unified
 5503              		.code	16
 5504              		.thumb_func
 5505              		.fpu softvfp
 5507              	SPI_DMAError:
 5508              	.LFB208:
3237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5509              		.loc 1 3237 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 185


 5510              		.cfi_startproc
 5511              		@ args = 0, pretend = 0, frame = 0
 5512              		@ frame_needed = 0, uses_anonymous_args = 0
 5513              	.LVL410:
 5514 0000 10B5     		push	{r4, lr}
 5515              	.LCFI44:
 5516              		.cfi_def_cfa_offset 8
 5517              		.cfi_offset 4, -8
 5518              		.cfi_offset 14, -4
3238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5519              		.loc 1 3238 0
 5520 0002 806A     		ldr	r0, [r0, #40]
 5521              	.LVL411:
3241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5522              		.loc 1 3241 0
 5523 0004 0268     		ldr	r2, [r0]
 5524 0006 5368     		ldr	r3, [r2, #4]
 5525 0008 0321     		movs	r1, #3
 5526 000a 8B43     		bics	r3, r1
 5527 000c 5360     		str	r3, [r2, #4]
3243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 5528              		.loc 1 3243 0
 5529 000e 036E     		ldr	r3, [r0, #96]
 5530 0010 1022     		movs	r2, #16
 5531 0012 1343     		orrs	r3, r2
 5532 0014 0366     		str	r3, [r0, #96]
3244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Call user error callback */
 5533              		.loc 1 3244 0
 5534 0016 5D23     		movs	r3, #93
 5535 0018 0F3A     		subs	r2, r2, #15
 5536 001a C254     		strb	r2, [r0, r3]
3249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5537              		.loc 1 3249 0
 5538 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5539              	.LVL412:
3251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5540              		.loc 1 3251 0
 5541              		@ sp needed
 5542 0020 10BD     		pop	{r4, pc}
 5543              		.cfi_endproc
 5544              	.LFE208:
 5546              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 5547              		.align	1
 5548              		.syntax unified
 5549              		.code	16
 5550              		.thumb_func
 5551              		.fpu softvfp
 5553              	SPI_DMATransmitCplt:
 5554              	.LFB202:
2942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5555              		.loc 1 2942 0
 5556              		.cfi_startproc
 5557              		@ args = 0, pretend = 0, frame = 8
 5558              		@ frame_needed = 0, uses_anonymous_args = 0
 5559              	.LVL413:
 5560 0000 30B5     		push	{r4, r5, lr}
 5561              	.LCFI45:
ARM GAS  /tmp/ccQ5vJp4.s 			page 186


 5562              		.cfi_def_cfa_offset 12
 5563              		.cfi_offset 4, -12
 5564              		.cfi_offset 5, -8
 5565              		.cfi_offset 14, -4
 5566 0002 83B0     		sub	sp, sp, #12
 5567              	.LCFI46:
 5568              		.cfi_def_cfa_offset 24
 5569 0004 0500     		movs	r5, r0
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
 5570              		.loc 1 2943 0
 5571 0006 846A     		ldr	r4, [r0, #40]
 5572              	.LVL414:
2947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5573              		.loc 1 2947 0
 5574 0008 FFF7FEFF 		bl	HAL_GetTick
 5575              	.LVL415:
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5576              		.loc 1 2950 0
 5577 000c 2B68     		ldr	r3, [r5]
 5578 000e 1B68     		ldr	r3, [r3]
 5579 0010 9B06     		lsls	r3, r3, #26
 5580 0012 26D4     		bmi	.L407
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5581              		.loc 1 2953 0
 5582 0014 2268     		ldr	r2, [r4]
 5583 0016 5368     		ldr	r3, [r2, #4]
 5584 0018 2021     		movs	r1, #32
 5585 001a 8B43     		bics	r3, r1
 5586 001c 5360     		str	r3, [r2, #4]
2956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5587              		.loc 1 2956 0
 5588 001e 2268     		ldr	r2, [r4]
 5589 0020 5368     		ldr	r3, [r2, #4]
 5590 0022 1E39     		subs	r1, r1, #30
 5591 0024 8B43     		bics	r3, r1
 5592 0026 5360     		str	r3, [r2, #4]
2959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5593              		.loc 1 2959 0
 5594 0028 0200     		movs	r2, r0
 5595 002a 6231     		adds	r1, r1, #98
 5596 002c 2000     		movs	r0, r4
 5597              	.LVL416:
 5598 002e FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5599              	.LVL417:
 5600 0032 0028     		cmp	r0, #0
 5601 0034 03D0     		beq	.L408
2961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5602              		.loc 1 2961 0
 5603 0036 236E     		ldr	r3, [r4, #96]
 5604 0038 2022     		movs	r2, #32
 5605 003a 1343     		orrs	r3, r2
 5606 003c 2366     		str	r3, [r4, #96]
 5607              	.L408:
2965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5608              		.loc 1 2965 0
 5609 003e A368     		ldr	r3, [r4, #8]
 5610 0040 002B     		cmp	r3, #0
ARM GAS  /tmp/ccQ5vJp4.s 			page 187


 5611 0042 06D1     		bne	.L409
 5612              	.LBB6:
2967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5613              		.loc 1 2967 0
 5614 0044 0193     		str	r3, [sp, #4]
 5615 0046 2368     		ldr	r3, [r4]
 5616 0048 DA68     		ldr	r2, [r3, #12]
 5617 004a 0192     		str	r2, [sp, #4]
 5618 004c 9B68     		ldr	r3, [r3, #8]
 5619 004e 0193     		str	r3, [sp, #4]
 5620 0050 019B     		ldr	r3, [sp, #4]
 5621              	.L409:
 5622              	.LBE6:
2970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5623              		.loc 1 2970 0
 5624 0052 0023     		movs	r3, #0
 5625 0054 E387     		strh	r3, [r4, #62]
2971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5626              		.loc 1 2971 0
 5627 0056 5D33     		adds	r3, r3, #93
 5628 0058 0122     		movs	r2, #1
 5629 005a E254     		strb	r2, [r4, r3]
2973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5630              		.loc 1 2973 0
 5631 005c 236E     		ldr	r3, [r4, #96]
 5632 005e 002B     		cmp	r3, #0
 5633 0060 04D1     		bne	.L411
 5634              	.L407:
2988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5635              		.loc 1 2988 0
 5636 0062 2000     		movs	r0, r4
 5637 0064 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 5638              	.LVL418:
 5639              	.L406:
2990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5640              		.loc 1 2990 0
 5641 0068 03B0     		add	sp, sp, #12
 5642              		@ sp needed
 5643              	.LVL419:
 5644              	.LVL420:
 5645 006a 30BD     		pop	{r4, r5, pc}
 5646              	.LVL421:
 5647              	.L411:
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5648              		.loc 1 2979 0
 5649 006c 2000     		movs	r0, r4
 5650 006e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5651              	.LVL422:
2981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5652              		.loc 1 2981 0
 5653 0072 F9E7     		b	.L406
 5654              		.cfi_endproc
 5655              	.LFE202:
 5657              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 5658              		.align	1
 5659              		.syntax unified
 5660              		.code	16
ARM GAS  /tmp/ccQ5vJp4.s 			page 188


 5661              		.thumb_func
 5662              		.fpu softvfp
 5664              	SPI_DMAReceiveCplt:
 5665              	.LFB203:
2999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5666              		.loc 1 2999 0
 5667              		.cfi_startproc
 5668              		@ args = 0, pretend = 0, frame = 0
 5669              		@ frame_needed = 0, uses_anonymous_args = 0
 5670              	.LVL423:
 5671 0000 70B5     		push	{r4, r5, r6, lr}
 5672              	.LCFI47:
 5673              		.cfi_def_cfa_offset 16
 5674              		.cfi_offset 4, -16
 5675              		.cfi_offset 5, -12
 5676              		.cfi_offset 6, -8
 5677              		.cfi_offset 14, -4
 5678 0002 0500     		movs	r5, r0
3000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
 5679              		.loc 1 3000 0
 5680 0004 846A     		ldr	r4, [r0, #40]
 5681              	.LVL424:
3004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5682              		.loc 1 3004 0
 5683 0006 FFF7FEFF 		bl	HAL_GetTick
 5684              	.LVL425:
3007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5685              		.loc 1 3007 0
 5686 000a 2B68     		ldr	r3, [r5]
 5687 000c 1B68     		ldr	r3, [r3]
 5688 000e 9B06     		lsls	r3, r3, #26
 5689 0010 1BD4     		bmi	.L413
3010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5690              		.loc 1 3010 0
 5691 0012 2268     		ldr	r2, [r4]
 5692 0014 5368     		ldr	r3, [r2, #4]
 5693 0016 2021     		movs	r1, #32
 5694 0018 8B43     		bics	r3, r1
 5695 001a 5360     		str	r3, [r2, #4]
3048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5696              		.loc 1 3048 0
 5697 001c 2268     		ldr	r2, [r4]
 5698 001e 5368     		ldr	r3, [r2, #4]
 5699 0020 1D39     		subs	r1, r1, #29
 5700 0022 8B43     		bics	r3, r1
 5701 0024 5360     		str	r3, [r2, #4]
3051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5702              		.loc 1 3051 0
 5703 0026 0200     		movs	r2, r0
 5704 0028 6131     		adds	r1, r1, #97
 5705 002a 2000     		movs	r0, r4
 5706              	.LVL426:
 5707 002c FFF7FEFF 		bl	SPI_EndRxTransaction
 5708              	.LVL427:
 5709 0030 0028     		cmp	r0, #0
 5710 0032 01D0     		beq	.L414
3053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
ARM GAS  /tmp/ccQ5vJp4.s 			page 189


 5711              		.loc 1 3053 0
 5712 0034 2023     		movs	r3, #32
 5713 0036 2366     		str	r3, [r4, #96]
 5714              	.L414:
3056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5715              		.loc 1 3056 0
 5716 0038 4623     		movs	r3, #70
 5717 003a 0022     		movs	r2, #0
 5718 003c E252     		strh	r2, [r4, r3]
3057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5719              		.loc 1 3057 0
 5720 003e 1733     		adds	r3, r3, #23
 5721 0040 0132     		adds	r2, r2, #1
 5722 0042 E254     		strb	r2, [r4, r3]
3068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5723              		.loc 1 3068 0
 5724 0044 236E     		ldr	r3, [r4, #96]
 5725 0046 002B     		cmp	r3, #0
 5726 0048 03D1     		bne	.L416
 5727              	.L413:
3083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5728              		.loc 1 3083 0
 5729 004a 2000     		movs	r0, r4
 5730 004c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5731              	.LVL428:
 5732              	.L412:
3085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5733              		.loc 1 3085 0
 5734              		@ sp needed
 5735              	.LVL429:
 5736              	.LVL430:
 5737 0050 70BD     		pop	{r4, r5, r6, pc}
 5738              	.LVL431:
 5739              	.L416:
3074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5740              		.loc 1 3074 0
 5741 0052 2000     		movs	r0, r4
 5742 0054 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5743              	.LVL432:
3076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5744              		.loc 1 3076 0
 5745 0058 FAE7     		b	.L412
 5746              		.cfi_endproc
 5747              	.LFE203:
 5749              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 5750              		.align	1
 5751              		.syntax unified
 5752              		.code	16
 5753              		.thumb_func
 5754              		.fpu softvfp
 5756              	SPI_DMATransmitReceiveCplt:
 5757              	.LFB204:
3094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5758              		.loc 1 3094 0
 5759              		.cfi_startproc
 5760              		@ args = 0, pretend = 0, frame = 0
 5761              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccQ5vJp4.s 			page 190


 5762              	.LVL433:
 5763 0000 70B5     		push	{r4, r5, r6, lr}
 5764              	.LCFI48:
 5765              		.cfi_def_cfa_offset 16
 5766              		.cfi_offset 4, -16
 5767              		.cfi_offset 5, -12
 5768              		.cfi_offset 6, -8
 5769              		.cfi_offset 14, -4
 5770 0002 0500     		movs	r5, r0
3095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t tickstart;
 5771              		.loc 1 3095 0
 5772 0004 846A     		ldr	r4, [r0, #40]
 5773              	.LVL434:
3099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5774              		.loc 1 3099 0
 5775 0006 FFF7FEFF 		bl	HAL_GetTick
 5776              	.LVL435:
3102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5777              		.loc 1 3102 0
 5778 000a 2B68     		ldr	r3, [r5]
 5779 000c 1B68     		ldr	r3, [r3]
 5780 000e 9B06     		lsls	r3, r3, #26
 5781 0010 1ED4     		bmi	.L418
3105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5782              		.loc 1 3105 0
 5783 0012 2268     		ldr	r2, [r4]
 5784 0014 5368     		ldr	r3, [r2, #4]
 5785 0016 2021     		movs	r1, #32
 5786 0018 8B43     		bics	r3, r1
 5787 001a 5360     		str	r3, [r2, #4]
3136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5788              		.loc 1 3136 0
 5789 001c 0200     		movs	r2, r0
 5790 001e 4431     		adds	r1, r1, #68
 5791 0020 2000     		movs	r0, r4
 5792              	.LVL436:
 5793 0022 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5794              	.LVL437:
 5795 0026 0028     		cmp	r0, #0
 5796 0028 03D0     		beq	.L419
3138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5797              		.loc 1 3138 0
 5798 002a 236E     		ldr	r3, [r4, #96]
 5799 002c 2022     		movs	r2, #32
 5800 002e 1343     		orrs	r3, r2
 5801 0030 2366     		str	r3, [r4, #96]
 5802              	.L419:
3142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5803              		.loc 1 3142 0
 5804 0032 2268     		ldr	r2, [r4]
 5805 0034 5368     		ldr	r3, [r2, #4]
 5806 0036 0321     		movs	r1, #3
 5807 0038 8B43     		bics	r3, r1
 5808 003a 5360     		str	r3, [r2, #4]
3144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5809              		.loc 1 3144 0
 5810 003c 0023     		movs	r3, #0
ARM GAS  /tmp/ccQ5vJp4.s 			page 191


 5811 003e E387     		strh	r3, [r4, #62]
3145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5812              		.loc 1 3145 0
 5813 0040 4622     		movs	r2, #70
 5814 0042 A352     		strh	r3, [r4, r2]
3146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5815              		.loc 1 3146 0
 5816 0044 5D33     		adds	r3, r3, #93
 5817 0046 453A     		subs	r2, r2, #69
 5818 0048 E254     		strb	r2, [r4, r3]
3157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5819              		.loc 1 3157 0
 5820 004a 236E     		ldr	r3, [r4, #96]
 5821 004c 002B     		cmp	r3, #0
 5822 004e 03D1     		bne	.L421
 5823              	.L418:
3172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5824              		.loc 1 3172 0
 5825 0050 2000     		movs	r0, r4
 5826 0052 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5827              	.LVL438:
 5828              	.L417:
3174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5829              		.loc 1 3174 0
 5830              		@ sp needed
 5831              	.LVL439:
 5832              	.LVL440:
 5833 0056 70BD     		pop	{r4, r5, r6, pc}
 5834              	.LVL441:
 5835              	.L421:
3163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5836              		.loc 1 3163 0
 5837 0058 2000     		movs	r0, r4
 5838 005a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5839              	.LVL442:
3165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5840              		.loc 1 3165 0
 5841 005e FAE7     		b	.L417
 5842              		.cfi_endproc
 5843              	.LFE204:
 5845              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 5846              		.align	1
 5847              		.global	HAL_SPI_IRQHandler
 5848              		.syntax unified
 5849              		.code	16
 5850              		.thumb_func
 5851              		.fpu softvfp
 5853              	HAL_SPI_IRQHandler:
 5854              	.LFB191:
2650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 5855              		.loc 1 2650 0
 5856              		.cfi_startproc
 5857              		@ args = 0, pretend = 0, frame = 16
 5858              		@ frame_needed = 0, uses_anonymous_args = 0
 5859              	.LVL443:
 5860 0000 70B5     		push	{r4, r5, r6, lr}
 5861              	.LCFI49:
ARM GAS  /tmp/ccQ5vJp4.s 			page 192


 5862              		.cfi_def_cfa_offset 16
 5863              		.cfi_offset 4, -16
 5864              		.cfi_offset 5, -12
 5865              		.cfi_offset 6, -8
 5866              		.cfi_offset 14, -4
 5867 0002 84B0     		sub	sp, sp, #16
 5868              	.LCFI50:
 5869              		.cfi_def_cfa_offset 32
 5870 0004 0400     		movs	r4, r0
2651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 5871              		.loc 1 2651 0
 5872 0006 0168     		ldr	r1, [r0]
 5873 0008 4868     		ldr	r0, [r1, #4]
 5874              	.LVL444:
2652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5875              		.loc 1 2652 0
 5876 000a 8A68     		ldr	r2, [r1, #8]
 5877              	.LVL445:
2655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 5878              		.loc 1 2655 0
 5879 000c 9509     		lsrs	r5, r2, #6
 5880 000e 0123     		movs	r3, #1
 5881 0010 2B40     		ands	r3, r5
 5882 0012 07D1     		bne	.L423
2655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 5883              		.loc 1 2655 0 is_stmt 0 discriminator 1
 5884 0014 D507     		lsls	r5, r2, #31
 5885 0016 05D5     		bpl	.L423
2656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5886              		.loc 1 2656 0 is_stmt 1
 5887 0018 4506     		lsls	r5, r0, #25
 5888 001a 03D5     		bpl	.L423
2658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return;
 5889              		.loc 1 2658 0
 5890 001c E36C     		ldr	r3, [r4, #76]
 5891 001e 2000     		movs	r0, r4
 5892              	.LVL446:
 5893 0020 9847     		blx	r3
 5894              	.LVL447:
2659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 5895              		.loc 1 2659 0
 5896 0022 06E0     		b	.L422
 5897              	.LVL448:
 5898              	.L423:
2663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5899              		.loc 1 2663 0
 5900 0024 9507     		lsls	r5, r2, #30
 5901 0026 06D5     		bpl	.L425
2663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5902              		.loc 1 2663 0 is_stmt 0 discriminator 1
 5903 0028 0506     		lsls	r5, r0, #24
 5904 002a 04D5     		bpl	.L425
2665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     return;
 5905              		.loc 1 2665 0 is_stmt 1
 5906 002c 236D     		ldr	r3, [r4, #80]
 5907 002e 2000     		movs	r0, r4
 5908              	.LVL449:
ARM GAS  /tmp/ccQ5vJp4.s 			page 193


 5909 0030 9847     		blx	r3
 5910              	.LVL450:
 5911              	.L422:
2747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 5912              		.loc 1 2747 0
 5913 0032 04B0     		add	sp, sp, #16
 5914              		@ sp needed
 5915              	.LVL451:
 5916 0034 70BD     		pop	{r4, r5, r6, pc}
 5917              	.LVL452:
 5918              	.L425:
2670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5919              		.loc 1 2670 0
 5920 0036 5509     		lsrs	r5, r2, #5
 5921 0038 0126     		movs	r6, #1
 5922 003a 3540     		ands	r5, r6
 5923 003c 03D1     		bne	.L426
2670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5924              		.loc 1 2670 0 is_stmt 0 discriminator 2
 5925 003e 002B     		cmp	r3, #0
 5926 0040 01D1     		bne	.L426
2670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5927              		.loc 1 2670 0 discriminator 4
 5928 0042 D605     		lsls	r6, r2, #23
 5929 0044 F5D5     		bpl	.L422
 5930              	.L426:
2670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 5931              		.loc 1 2670 0 discriminator 5
 5932 0046 8606     		lsls	r6, r0, #26
 5933 0048 F3D5     		bpl	.L422
2673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5934              		.loc 1 2673 0 is_stmt 1
 5935 004a 002B     		cmp	r3, #0
 5936 004c 0ED0     		beq	.L427
2675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 5937              		.loc 1 2675 0
 5938 004e 5D23     		movs	r3, #93
 5939 0050 E35C     		ldrb	r3, [r4, r3]
 5940 0052 032B     		cmp	r3, #3
 5941 0054 54D0     		beq	.L428
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5942              		.loc 1 2677 0
 5943 0056 236E     		ldr	r3, [r4, #96]
 5944 0058 0426     		movs	r6, #4
 5945 005a 3343     		orrs	r3, r6
 5946 005c 2366     		str	r3, [r4, #96]
 5947              	.LBB7:
2678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 5948              		.loc 1 2678 0
 5949 005e 0023     		movs	r3, #0
 5950 0060 0093     		str	r3, [sp]
 5951 0062 CB68     		ldr	r3, [r1, #12]
 5952 0064 0093     		str	r3, [sp]
 5953 0066 8B68     		ldr	r3, [r1, #8]
 5954 0068 0093     		str	r3, [sp]
 5955 006a 009B     		ldr	r3, [sp]
 5956              	.L427:
ARM GAS  /tmp/ccQ5vJp4.s 			page 194


 5957              	.LBE7:
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5958              		.loc 1 2688 0
 5959 006c 002D     		cmp	r5, #0
 5960 006e 0CD0     		beq	.L429
2690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 5961              		.loc 1 2690 0
 5962 0070 236E     		ldr	r3, [r4, #96]
 5963 0072 0125     		movs	r5, #1
 5964 0074 2B43     		orrs	r3, r5
 5965 0076 2366     		str	r3, [r4, #96]
 5966              	.LBB8:
2691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5967              		.loc 1 2691 0
 5968 0078 0023     		movs	r3, #0
 5969 007a 0293     		str	r3, [sp, #8]
 5970 007c 8B68     		ldr	r3, [r1, #8]
 5971 007e 0293     		str	r3, [sp, #8]
 5972 0080 0B68     		ldr	r3, [r1]
 5973 0082 3F35     		adds	r5, r5, #63
 5974 0084 AB43     		bics	r3, r5
 5975 0086 0B60     		str	r3, [r1]
 5976 0088 029B     		ldr	r3, [sp, #8]
 5977              	.L429:
 5978              	.LBE8:
2695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5979              		.loc 1 2695 0
 5980 008a D305     		lsls	r3, r2, #23
 5981 008c 09D5     		bpl	.L430
2697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 5982              		.loc 1 2697 0
 5983 008e 236E     		ldr	r3, [r4, #96]
 5984 0090 0822     		movs	r2, #8
 5985              	.LVL453:
 5986 0092 1343     		orrs	r3, r2
 5987 0094 2366     		str	r3, [r4, #96]
 5988              	.LBB9:
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 5989              		.loc 1 2698 0
 5990 0096 0023     		movs	r3, #0
 5991 0098 0393     		str	r3, [sp, #12]
 5992 009a 2368     		ldr	r3, [r4]
 5993 009c 9B68     		ldr	r3, [r3, #8]
 5994 009e 0393     		str	r3, [sp, #12]
 5995 00a0 039B     		ldr	r3, [sp, #12]
 5996              	.L430:
 5997              	.LBE9:
2701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 5998              		.loc 1 2701 0
 5999 00a2 236E     		ldr	r3, [r4, #96]
 6000 00a4 002B     		cmp	r3, #0
 6001 00a6 C4D0     		beq	.L422
2704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6002              		.loc 1 2704 0
 6003 00a8 2268     		ldr	r2, [r4]
 6004 00aa 5368     		ldr	r3, [r2, #4]
 6005 00ac E021     		movs	r1, #224
ARM GAS  /tmp/ccQ5vJp4.s 			page 195


 6006 00ae 8B43     		bics	r3, r1
 6007 00b0 5360     		str	r3, [r2, #4]
2706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
 6008              		.loc 1 2706 0
 6009 00b2 5D23     		movs	r3, #93
 6010 00b4 0122     		movs	r2, #1
 6011 00b6 E254     		strb	r2, [r4, r3]
2708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 6012              		.loc 1 2708 0
 6013 00b8 8307     		lsls	r3, r0, #30
 6014 00ba 29D0     		beq	.L431
2710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6015              		.loc 1 2710 0
 6016 00bc 2268     		ldr	r2, [r4]
 6017 00be 5368     		ldr	r3, [r2, #4]
 6018 00c0 DD39     		subs	r1, r1, #221
 6019 00c2 8B43     		bics	r3, r1
 6020 00c4 5360     		str	r3, [r2, #4]
2713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 6021              		.loc 1 2713 0
 6022 00c6 A36D     		ldr	r3, [r4, #88]
 6023 00c8 002B     		cmp	r3, #0
 6024 00ca 0AD0     		beq	.L432
2717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 6025              		.loc 1 2717 0
 6026 00cc 124A     		ldr	r2, .L433
 6027 00ce 9A63     		str	r2, [r3, #56]
2718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           {
 6028              		.loc 1 2718 0
 6029 00d0 A06D     		ldr	r0, [r4, #88]
 6030              	.LVL454:
 6031 00d2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6032              	.LVL455:
 6033 00d6 0028     		cmp	r0, #0
 6034 00d8 03D0     		beq	.L432
2720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           }
 6035              		.loc 1 2720 0
 6036 00da 236E     		ldr	r3, [r4, #96]
 6037 00dc 4022     		movs	r2, #64
 6038 00de 1343     		orrs	r3, r2
 6039 00e0 2366     		str	r3, [r4, #96]
 6040              	.L432:
2724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         {
 6041              		.loc 1 2724 0
 6042 00e2 636D     		ldr	r3, [r4, #84]
 6043 00e4 002B     		cmp	r3, #0
 6044 00e6 A4D0     		beq	.L422
2728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 6045              		.loc 1 2728 0
 6046 00e8 0B4A     		ldr	r2, .L433
 6047 00ea 9A63     		str	r2, [r3, #56]
2729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           {
 6048              		.loc 1 2729 0
 6049 00ec 606D     		ldr	r0, [r4, #84]
 6050 00ee FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6051              	.LVL456:
 6052 00f2 0028     		cmp	r0, #0
ARM GAS  /tmp/ccQ5vJp4.s 			page 196


 6053 00f4 9DD0     		beq	.L422
2731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****           }
 6054              		.loc 1 2731 0
 6055 00f6 236E     		ldr	r3, [r4, #96]
 6056 00f8 4022     		movs	r2, #64
 6057 00fa 1343     		orrs	r3, r2
 6058 00fc 2366     		str	r3, [r4, #96]
 6059 00fe 98E7     		b	.L422
 6060              	.LVL457:
 6061              	.L428:
 6062              	.LBB10:
2682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         return;
 6063              		.loc 1 2682 0
 6064 0100 0023     		movs	r3, #0
 6065 0102 0193     		str	r3, [sp, #4]
 6066 0104 CB68     		ldr	r3, [r1, #12]
 6067 0106 0193     		str	r3, [sp, #4]
 6068 0108 8B68     		ldr	r3, [r1, #8]
 6069 010a 0193     		str	r3, [sp, #4]
 6070 010c 019B     		ldr	r3, [sp, #4]
 6071              	.LBE10:
2683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 6072              		.loc 1 2683 0
 6073 010e 90E7     		b	.L422
 6074              	.LVL458:
 6075              	.L431:
2741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6076              		.loc 1 2741 0
 6077 0110 2000     		movs	r0, r4
 6078              	.LVL459:
 6079 0112 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 6080              	.LVL460:
 6081 0116 8CE7     		b	.L422
 6082              	.L434:
 6083              		.align	2
 6084              	.L433:
 6085 0118 00000000 		.word	SPI_DMAAbortOnError
 6086              		.cfi_endproc
 6087              	.LFE191:
 6089              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 6090              		.align	1
 6091              		.syntax unified
 6092              		.code	16
 6093              		.thumb_func
 6094              		.fpu softvfp
 6096              	SPI_DMAAbortOnError:
 6097              	.LFB209:
3260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6098              		.loc 1 3260 0
 6099              		.cfi_startproc
 6100              		@ args = 0, pretend = 0, frame = 0
 6101              		@ frame_needed = 0, uses_anonymous_args = 0
 6102              	.LVL461:
 6103 0000 10B5     		push	{r4, lr}
 6104              	.LCFI51:
 6105              		.cfi_def_cfa_offset 8
 6106              		.cfi_offset 4, -8
ARM GAS  /tmp/ccQ5vJp4.s 			page 197


 6107              		.cfi_offset 14, -4
3261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 6108              		.loc 1 3261 0
 6109 0002 806A     		ldr	r0, [r0, #40]
 6110              	.LVL462:
3262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6111              		.loc 1 3262 0
 6112 0004 0023     		movs	r3, #0
 6113 0006 4622     		movs	r2, #70
 6114 0008 8352     		strh	r3, [r0, r2]
3263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6115              		.loc 1 3263 0
 6116 000a C387     		strh	r3, [r0, #62]
3269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6117              		.loc 1 3269 0
 6118 000c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 6119              	.LVL463:
3271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6120              		.loc 1 3271 0
 6121              		@ sp needed
 6122 0010 10BD     		pop	{r4, pc}
 6123              		.cfi_endproc
 6124              	.LFE209:
 6126              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 6127              		.align	1
 6128              		.weak	HAL_SPI_AbortCpltCallback
 6129              		.syntax unified
 6130              		.code	16
 6131              		.thumb_func
 6132              		.fpu softvfp
 6134              	HAL_SPI_AbortCpltCallback:
 6135              	.LFB199:
2870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 6136              		.loc 1 2870 0
 6137              		.cfi_startproc
 6138              		@ args = 0, pretend = 0, frame = 0
 6139              		@ frame_needed = 0, uses_anonymous_args = 0
 6140              		@ link register save eliminated.
 6141              	.LVL464:
2877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6142              		.loc 1 2877 0
 6143              		@ sp needed
 6144 0000 7047     		bx	lr
 6145              		.cfi_endproc
 6146              	.LFE199:
 6148              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 6149              		.align	1
 6150              		.global	HAL_SPI_Abort_IT
 6151              		.syntax unified
 6152              		.code	16
 6153              		.thumb_func
 6154              		.fpu softvfp
 6156              	HAL_SPI_Abort_IT:
 6157              	.LFB187:
2408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 6158              		.loc 1 2408 0
 6159              		.cfi_startproc
ARM GAS  /tmp/ccQ5vJp4.s 			page 198


 6160              		@ args = 0, pretend = 0, frame = 16
 6161              		@ frame_needed = 0, uses_anonymous_args = 0
 6162              	.LVL465:
 6163 0000 70B5     		push	{r4, r5, r6, lr}
 6164              	.LCFI52:
 6165              		.cfi_def_cfa_offset 16
 6166              		.cfi_offset 4, -16
 6167              		.cfi_offset 5, -12
 6168              		.cfi_offset 6, -8
 6169              		.cfi_offset 14, -4
 6170 0002 84B0     		sub	sp, sp, #16
 6171              	.LCFI53:
 6172              		.cfi_def_cfa_offset 32
 6173 0004 0400     		movs	r4, r0
 6174              	.LVL466:
2416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   count = resetcount;
 6175              		.loc 1 2416 0
 6176 0006 4F4B     		ldr	r3, .L462
 6177 0008 1868     		ldr	r0, [r3]
 6178              	.LVL467:
 6179 000a 4F49     		ldr	r1, .L462+4
 6180 000c FFF7FEFF 		bl	__aeabi_uidiv
 6181              	.LVL468:
 6182 0010 6423     		movs	r3, #100
 6183 0012 5843     		muls	r0, r3
 6184 0014 0290     		str	r0, [sp, #8]
2417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6185              		.loc 1 2417 0
 6186 0016 029B     		ldr	r3, [sp, #8]
 6187 0018 0393     		str	r3, [sp, #12]
2420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6188              		.loc 1 2420 0
 6189 001a 2268     		ldr	r2, [r4]
 6190 001c 5368     		ldr	r3, [r2, #4]
 6191 001e 2021     		movs	r1, #32
 6192 0020 8B43     		bics	r3, r1
 6193 0022 5360     		str	r3, [r2, #4]
2423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6194              		.loc 1 2423 0
 6195 0024 2268     		ldr	r2, [r4]
 6196 0026 5368     		ldr	r3, [r2, #4]
 6197 0028 1B06     		lsls	r3, r3, #24
 6198 002a 12D5     		bpl	.L438
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 6199              		.loc 1 2425 0
 6200 002c 474B     		ldr	r3, .L462+8
 6201 002e 2365     		str	r3, [r4, #80]
 6202              	.L441:
2429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 6203              		.loc 1 2429 0
 6204 0030 039B     		ldr	r3, [sp, #12]
 6205 0032 002B     		cmp	r3, #0
 6206 0034 07D0     		beq	.L459
2434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 6207              		.loc 1 2434 0
 6208 0036 039B     		ldr	r3, [sp, #12]
 6209 0038 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccQ5vJp4.s 			page 199


 6210 003a 0393     		str	r3, [sp, #12]
2436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Reset Timeout Counter */
 6211              		.loc 1 2436 0
 6212 003c 5D23     		movs	r3, #93
 6213 003e E35C     		ldrb	r3, [r4, r3]
 6214 0040 072B     		cmp	r3, #7
 6215 0042 F5D1     		bne	.L441
 6216 0044 03E0     		b	.L440
 6217              	.L459:
2431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 6218              		.loc 1 2431 0
 6219 0046 236E     		ldr	r3, [r4, #96]
 6220 0048 4021     		movs	r1, #64
 6221 004a 0B43     		orrs	r3, r1
 6222 004c 2366     		str	r3, [r4, #96]
 6223              	.L440:
2438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 6224              		.loc 1 2438 0
 6225 004e 029B     		ldr	r3, [sp, #8]
 6226 0050 0393     		str	r3, [sp, #12]
 6227              	.L438:
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6228              		.loc 1 2441 0
 6229 0052 5368     		ldr	r3, [r2, #4]
 6230 0054 5B06     		lsls	r3, r3, #25
 6231 0056 12D5     		bpl	.L442
2443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 6232              		.loc 1 2443 0
 6233 0058 3D4B     		ldr	r3, .L462+12
 6234 005a E364     		str	r3, [r4, #76]
 6235              	.L445:
2447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 6236              		.loc 1 2447 0
 6237 005c 039B     		ldr	r3, [sp, #12]
 6238 005e 002B     		cmp	r3, #0
 6239 0060 07D0     		beq	.L460
2452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 6240              		.loc 1 2452 0
 6241 0062 039B     		ldr	r3, [sp, #12]
 6242 0064 013B     		subs	r3, r3, #1
 6243 0066 0393     		str	r3, [sp, #12]
2454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     /* Reset Timeout Counter */
 6244              		.loc 1 2454 0
 6245 0068 5D23     		movs	r3, #93
 6246 006a E35C     		ldrb	r3, [r4, r3]
 6247 006c 072B     		cmp	r3, #7
 6248 006e F5D1     		bne	.L445
 6249 0070 03E0     		b	.L444
 6250              	.L460:
2449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         break;
 6251              		.loc 1 2449 0
 6252 0072 236E     		ldr	r3, [r4, #96]
 6253 0074 4021     		movs	r1, #64
 6254 0076 0B43     		orrs	r3, r1
 6255 0078 2366     		str	r3, [r4, #96]
 6256              	.L444:
2456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccQ5vJp4.s 			page 200


 6257              		.loc 1 2456 0
 6258 007a 029B     		ldr	r3, [sp, #8]
 6259 007c 0393     		str	r3, [sp, #12]
 6260              	.L442:
2462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6261              		.loc 1 2462 0
 6262 007e 636D     		ldr	r3, [r4, #84]
 6263 0080 002B     		cmp	r3, #0
 6264 0082 04D0     		beq	.L446
2466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 6265              		.loc 1 2466 0
 6266 0084 5268     		ldr	r2, [r2, #4]
 6267 0086 9207     		lsls	r2, r2, #30
 6268 0088 1CD5     		bpl	.L447
2468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 6269              		.loc 1 2468 0
 6270 008a 324A     		ldr	r2, .L462+16
 6271 008c 9A63     		str	r2, [r3, #56]
 6272              	.L446:
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6273              		.loc 1 2476 0
 6274 008e A36D     		ldr	r3, [r4, #88]
 6275 0090 002B     		cmp	r3, #0
 6276 0092 05D0     		beq	.L448
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 6277              		.loc 1 2480 0
 6278 0094 2268     		ldr	r2, [r4]
 6279 0096 5268     		ldr	r2, [r2, #4]
 6280 0098 D207     		lsls	r2, r2, #31
 6281 009a 16D5     		bpl	.L449
2482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 6282              		.loc 1 2482 0
 6283 009c 2E4A     		ldr	r2, .L462+20
 6284 009e 9A63     		str	r2, [r3, #56]
 6285              	.L448:
2491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6286              		.loc 1 2491 0
 6287 00a0 2368     		ldr	r3, [r4]
 6288 00a2 5B68     		ldr	r3, [r3, #4]
 6289 00a4 9B07     		lsls	r3, r3, #30
 6290 00a6 13D5     		bpl	.L454
2494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 6291              		.loc 1 2494 0
 6292 00a8 606D     		ldr	r0, [r4, #84]
 6293 00aa 0028     		cmp	r0, #0
 6294 00ac 27D0     		beq	.L455
2497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 6295              		.loc 1 2497 0
 6296 00ae FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6297              	.LVL469:
 6298 00b2 0028     		cmp	r0, #0
 6299 00b4 25D0     		beq	.L456
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 6300              		.loc 1 2499 0
 6301 00b6 636D     		ldr	r3, [r4, #84]
 6302 00b8 0022     		movs	r2, #0
 6303 00ba 9A63     		str	r2, [r3, #56]
ARM GAS  /tmp/ccQ5vJp4.s 			page 201


2500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 6304              		.loc 1 2500 0
 6305 00bc 4023     		movs	r3, #64
 6306 00be 2366     		str	r3, [r4, #96]
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 6307              		.loc 1 2415 0
 6308 00c0 0126     		movs	r6, #1
 6309 00c2 06E0     		b	.L450
 6310              	.L447:
2472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 6311              		.loc 1 2472 0
 6312 00c4 0022     		movs	r2, #0
 6313 00c6 9A63     		str	r2, [r3, #56]
 6314 00c8 E1E7     		b	.L446
 6315              	.L449:
2486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 6316              		.loc 1 2486 0
 6317 00ca 0022     		movs	r2, #0
 6318 00cc 9A63     		str	r2, [r3, #56]
 6319 00ce E7E7     		b	.L448
 6320              	.L454:
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 6321              		.loc 1 2415 0
 6322 00d0 0126     		movs	r6, #1
 6323              	.L450:
 6324              	.LVL470:
2509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6325              		.loc 1 2509 0
 6326 00d2 2368     		ldr	r3, [r4]
 6327 00d4 5B68     		ldr	r3, [r3, #4]
 6328 00d6 DB07     		lsls	r3, r3, #31
 6329 00d8 0BD5     		bpl	.L451
2512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 6330              		.loc 1 2512 0
 6331 00da A06D     		ldr	r0, [r4, #88]
 6332 00dc 0028     		cmp	r0, #0
 6333 00de 08D0     		beq	.L451
2515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       {
 6334              		.loc 1 2515 0
 6335 00e0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6336              	.LVL471:
 6337 00e4 051E     		subs	r5, r0, #0
 6338 00e6 07D0     		beq	.L452
2517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 6339              		.loc 1 2517 0
 6340 00e8 A36D     		ldr	r3, [r4, #88]
 6341 00ea 0022     		movs	r2, #0
 6342 00ec 9A63     		str	r2, [r3, #56]
2518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 6343              		.loc 1 2518 0
 6344 00ee 4023     		movs	r3, #64
 6345 00f0 2366     		str	r3, [r4, #96]
 6346              	.L451:
2527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6347              		.loc 1 2527 0
 6348 00f2 012E     		cmp	r6, #1
 6349 00f4 07D0     		beq	.L461
ARM GAS  /tmp/ccQ5vJp4.s 			page 202


2414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   abortcplt = 1U;
 6350              		.loc 1 2414 0
 6351 00f6 0025     		movs	r5, #0
 6352              	.LVL472:
 6353              	.L452:
2561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6354              		.loc 1 2561 0
 6355 00f8 2800     		movs	r0, r5
 6356 00fa 04B0     		add	sp, sp, #16
 6357              		@ sp needed
 6358              	.LVL473:
 6359              	.LVL474:
 6360              	.LVL475:
 6361 00fc 70BD     		pop	{r4, r5, r6, pc}
 6362              	.LVL476:
 6363              	.L455:
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 6364              		.loc 1 2415 0
 6365 00fe 0126     		movs	r6, #1
 6366 0100 E7E7     		b	.L450
 6367              	.L456:
2504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****       }
 6368              		.loc 1 2504 0
 6369 0102 0026     		movs	r6, #0
 6370 0104 E5E7     		b	.L450
 6371              	.LVL477:
 6372              	.L461:
2530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 6373              		.loc 1 2530 0
 6374 0106 0023     		movs	r3, #0
 6375 0108 4622     		movs	r2, #70
 6376 010a A352     		strh	r3, [r4, r2]
2531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6377              		.loc 1 2531 0
 6378 010c E387     		strh	r3, [r4, #62]
2534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 6379              		.loc 1 2534 0
 6380 010e 236E     		ldr	r3, [r4, #96]
 6381 0110 402B     		cmp	r3, #64
 6382 0112 15D0     		beq	.L458
2542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 6383              		.loc 1 2542 0
 6384 0114 0023     		movs	r3, #0
 6385 0116 2366     		str	r3, [r4, #96]
2414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   abortcplt = 1U;
 6386              		.loc 1 2414 0
 6387 0118 0025     		movs	r5, #0
 6388              	.L453:
 6389              	.LVL478:
 6390              	.LBB11:
2546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
 6391              		.loc 1 2546 0
 6392 011a 0022     		movs	r2, #0
 6393 011c 0092     		str	r2, [sp]
 6394 011e 2368     		ldr	r3, [r4]
 6395 0120 D968     		ldr	r1, [r3, #12]
 6396 0122 0091     		str	r1, [sp]
ARM GAS  /tmp/ccQ5vJp4.s 			page 203


 6397 0124 9968     		ldr	r1, [r3, #8]
 6398 0126 0091     		str	r1, [sp]
 6399 0128 0099     		ldr	r1, [sp]
 6400              	.LBE11:
 6401              	.LBB12:
2547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6402              		.loc 1 2547 0
 6403 012a 0192     		str	r2, [sp, #4]
 6404 012c 9B68     		ldr	r3, [r3, #8]
 6405 012e 0193     		str	r3, [sp, #4]
 6406 0130 019B     		ldr	r3, [sp, #4]
 6407              	.LBE12:
2550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6408              		.loc 1 2550 0
 6409 0132 5D23     		movs	r3, #93
 6410 0134 0132     		adds	r2, r2, #1
 6411 0136 E254     		strb	r2, [r4, r3]
2556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6412              		.loc 1 2556 0
 6413 0138 2000     		movs	r0, r4
 6414 013a FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 6415              	.LVL479:
 6416 013e DBE7     		b	.L452
 6417              	.LVL480:
 6418              	.L458:
2537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     }
 6419              		.loc 1 2537 0
 6420 0140 0125     		movs	r5, #1
 6421 0142 EAE7     		b	.L453
 6422              	.L463:
 6423              		.align	2
 6424              	.L462:
 6425 0144 00000000 		.word	SystemCoreClock
 6426 0148 C05D0000 		.word	24000
 6427 014c 00000000 		.word	SPI_AbortTx_ISR
 6428 0150 00000000 		.word	SPI_AbortRx_ISR
 6429 0154 00000000 		.word	SPI_DMATxAbortCallback
 6430 0158 00000000 		.word	SPI_DMARxAbortCallback
 6431              		.cfi_endproc
 6432              	.LFE187:
 6434              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 6435              		.align	1
 6436              		.syntax unified
 6437              		.code	16
 6438              		.thumb_func
 6439              		.fpu softvfp
 6441              	SPI_DMARxAbortCallback:
 6442              	.LFB211:
3348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6443              		.loc 1 3348 0
 6444              		.cfi_startproc
 6445              		@ args = 0, pretend = 0, frame = 8
 6446              		@ frame_needed = 0, uses_anonymous_args = 0
 6447              	.LVL481:
 6448 0000 10B5     		push	{r4, lr}
 6449              	.LCFI54:
 6450              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccQ5vJp4.s 			page 204


 6451              		.cfi_offset 4, -8
 6452              		.cfi_offset 14, -4
 6453 0002 84B0     		sub	sp, sp, #16
 6454              	.LCFI55:
 6455              		.cfi_def_cfa_offset 24
3349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6456              		.loc 1 3349 0
 6457 0004 846A     		ldr	r4, [r0, #40]
 6458              	.LVL482:
3352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6459              		.loc 1 3352 0
 6460 0006 2268     		ldr	r2, [r4]
 6461 0008 1368     		ldr	r3, [r2]
 6462 000a 4021     		movs	r1, #64
 6463 000c 8B43     		bics	r3, r1
 6464 000e 1360     		str	r3, [r2]
3354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6465              		.loc 1 3354 0
 6466 0010 A36D     		ldr	r3, [r4, #88]
 6467 0012 0022     		movs	r2, #0
 6468 0014 9A63     		str	r2, [r3, #56]
3357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6469              		.loc 1 3357 0
 6470 0016 2268     		ldr	r2, [r4]
 6471 0018 5368     		ldr	r3, [r2, #4]
 6472 001a 3F39     		subs	r1, r1, #63
 6473 001c 8B43     		bics	r3, r1
 6474 001e 5360     		str	r3, [r2, #4]
3360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6475              		.loc 1 3360 0
 6476 0020 FFF7FEFF 		bl	HAL_GetTick
 6477              	.LVL483:
 6478 0024 0090     		str	r0, [sp]
 6479 0026 6423     		movs	r3, #100
 6480 0028 0022     		movs	r2, #0
 6481 002a 8021     		movs	r1, #128
 6482 002c 2000     		movs	r0, r4
 6483 002e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6484              	.LVL484:
 6485 0032 0028     		cmp	r0, #0
 6486 0034 01D0     		beq	.L465
3362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 6487              		.loc 1 3362 0
 6488 0036 4023     		movs	r3, #64
 6489 0038 2366     		str	r3, [r4, #96]
 6490              	.L465:
3366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6491              		.loc 1 3366 0
 6492 003a FFF7FEFF 		bl	HAL_GetTick
 6493              	.LVL485:
 6494 003e C021     		movs	r1, #192
 6495 0040 0090     		str	r0, [sp]
 6496 0042 6423     		movs	r3, #100
 6497 0044 0022     		movs	r2, #0
 6498 0046 C900     		lsls	r1, r1, #3
 6499 0048 2000     		movs	r0, r4
 6500 004a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
ARM GAS  /tmp/ccQ5vJp4.s 			page 205


 6501              	.LVL486:
 6502 004e 0028     		cmp	r0, #0
 6503 0050 01D0     		beq	.L466
3368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 6504              		.loc 1 3368 0
 6505 0052 4023     		movs	r3, #64
 6506 0054 2366     		str	r3, [r4, #96]
 6507              	.L466:
3372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6508              		.loc 1 3372 0
 6509 0056 636D     		ldr	r3, [r4, #84]
 6510 0058 002B     		cmp	r3, #0
 6511 005a 02D0     		beq	.L467
3374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 6512              		.loc 1 3374 0
 6513 005c 9B6B     		ldr	r3, [r3, #56]
 6514 005e 002B     		cmp	r3, #0
 6515 0060 1AD1     		bne	.L464
 6516              	.L467:
3381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6517              		.loc 1 3381 0
 6518 0062 0023     		movs	r3, #0
 6519 0064 4622     		movs	r2, #70
 6520 0066 A352     		strh	r3, [r4, r2]
3382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6521              		.loc 1 3382 0
 6522 0068 E387     		strh	r3, [r4, #62]
3385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6523              		.loc 1 3385 0
 6524 006a 236E     		ldr	r3, [r4, #96]
 6525 006c 402B     		cmp	r3, #64
 6526 006e 01D0     		beq	.L469
3388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 6527              		.loc 1 3388 0
 6528 0070 0023     		movs	r3, #0
 6529 0072 2366     		str	r3, [r4, #96]
 6530              	.L469:
 6531              	.LBB13:
3392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 6532              		.loc 1 3392 0
 6533 0074 0022     		movs	r2, #0
 6534 0076 0292     		str	r2, [sp, #8]
 6535 0078 2368     		ldr	r3, [r4]
 6536 007a D968     		ldr	r1, [r3, #12]
 6537 007c 0291     		str	r1, [sp, #8]
 6538 007e 9968     		ldr	r1, [r3, #8]
 6539 0080 0291     		str	r1, [sp, #8]
 6540 0082 0299     		ldr	r1, [sp, #8]
 6541              	.LBE13:
 6542              	.LBB14:
3393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6543              		.loc 1 3393 0
 6544 0084 0392     		str	r2, [sp, #12]
 6545 0086 9B68     		ldr	r3, [r3, #8]
 6546 0088 0393     		str	r3, [sp, #12]
 6547 008a 039B     		ldr	r3, [sp, #12]
 6548              	.LBE14:
ARM GAS  /tmp/ccQ5vJp4.s 			page 206


3396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6549              		.loc 1 3396 0
 6550 008c 5D23     		movs	r3, #93
 6551 008e 0132     		adds	r2, r2, #1
 6552 0090 E254     		strb	r2, [r4, r3]
3402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6553              		.loc 1 3402 0
 6554 0092 2000     		movs	r0, r4
 6555 0094 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 6556              	.LVL487:
 6557              	.L464:
3404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6558              		.loc 1 3404 0
 6559 0098 04B0     		add	sp, sp, #16
 6560              		@ sp needed
 6561              	.LVL488:
 6562 009a 10BD     		pop	{r4, pc}
 6563              		.cfi_endproc
 6564              	.LFE211:
 6566              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 6567              		.align	1
 6568              		.syntax unified
 6569              		.code	16
 6570              		.thumb_func
 6571              		.fpu softvfp
 6573              	SPI_DMATxAbortCallback:
 6574              	.LFB210:
3282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6575              		.loc 1 3282 0
 6576              		.cfi_startproc
 6577              		@ args = 0, pretend = 0, frame = 8
 6578              		@ frame_needed = 0, uses_anonymous_args = 0
 6579              	.LVL489:
 6580 0000 10B5     		push	{r4, lr}
 6581              	.LCFI56:
 6582              		.cfi_def_cfa_offset 8
 6583              		.cfi_offset 4, -8
 6584              		.cfi_offset 14, -4
 6585 0002 84B0     		sub	sp, sp, #16
 6586              	.LCFI57:
 6587              		.cfi_def_cfa_offset 24
3283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6588              		.loc 1 3283 0
 6589 0004 846A     		ldr	r4, [r0, #40]
 6590              	.LVL490:
3285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6591              		.loc 1 3285 0
 6592 0006 636D     		ldr	r3, [r4, #84]
 6593 0008 0022     		movs	r2, #0
 6594 000a 9A63     		str	r2, [r3, #56]
3288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6595              		.loc 1 3288 0
 6596 000c 2268     		ldr	r2, [r4]
 6597 000e 5368     		ldr	r3, [r2, #4]
 6598 0010 0221     		movs	r1, #2
 6599 0012 8B43     		bics	r3, r1
 6600 0014 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccQ5vJp4.s 			page 207


3290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6601              		.loc 1 3290 0
 6602 0016 FFF7FEFF 		bl	HAL_GetTick
 6603              	.LVL491:
 6604 001a 0200     		movs	r2, r0
 6605 001c 6421     		movs	r1, #100
 6606 001e 2000     		movs	r0, r4
 6607 0020 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 6608              	.LVL492:
 6609 0024 0028     		cmp	r0, #0
 6610 0026 01D0     		beq	.L471
3292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 6611              		.loc 1 3292 0
 6612 0028 4023     		movs	r3, #64
 6613 002a 2366     		str	r3, [r4, #96]
 6614              	.L471:
3296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6615              		.loc 1 3296 0
 6616 002c 2268     		ldr	r2, [r4]
 6617 002e 1368     		ldr	r3, [r2]
 6618 0030 4021     		movs	r1, #64
 6619 0032 8B43     		bics	r3, r1
 6620 0034 1360     		str	r3, [r2]
3299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6621              		.loc 1 3299 0
 6622 0036 FFF7FEFF 		bl	HAL_GetTick
 6623              	.LVL493:
 6624 003a C021     		movs	r1, #192
 6625 003c 0090     		str	r0, [sp]
 6626 003e 6423     		movs	r3, #100
 6627 0040 0022     		movs	r2, #0
 6628 0042 C900     		lsls	r1, r1, #3
 6629 0044 2000     		movs	r0, r4
 6630 0046 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 6631              	.LVL494:
 6632 004a 0028     		cmp	r0, #0
 6633 004c 01D0     		beq	.L472
3301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 6634              		.loc 1 3301 0
 6635 004e 4023     		movs	r3, #64
 6636 0050 2366     		str	r3, [r4, #96]
 6637              	.L472:
3305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6638              		.loc 1 3305 0
 6639 0052 A36D     		ldr	r3, [r4, #88]
 6640 0054 002B     		cmp	r3, #0
 6641 0056 02D0     		beq	.L473
3307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****     {
 6642              		.loc 1 3307 0
 6643 0058 9B6B     		ldr	r3, [r3, #56]
 6644 005a 002B     		cmp	r3, #0
 6645 005c 1AD1     		bne	.L470
 6646              	.L473:
3314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6647              		.loc 1 3314 0
 6648 005e 0023     		movs	r3, #0
 6649 0060 4622     		movs	r2, #70
ARM GAS  /tmp/ccQ5vJp4.s 			page 208


 6650 0062 A352     		strh	r3, [r4, r2]
3315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6651              		.loc 1 3315 0
 6652 0064 E387     		strh	r3, [r4, #62]
3318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   {
 6653              		.loc 1 3318 0
 6654 0066 236E     		ldr	r3, [r4, #96]
 6655 0068 402B     		cmp	r3, #64
 6656 006a 01D0     		beq	.L475
3321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   }
 6657              		.loc 1 3321 0
 6658 006c 0023     		movs	r3, #0
 6659 006e 2366     		str	r3, [r4, #96]
 6660              	.L475:
 6661              	.LBB15:
3325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 6662              		.loc 1 3325 0
 6663 0070 0022     		movs	r2, #0
 6664 0072 0292     		str	r2, [sp, #8]
 6665 0074 2368     		ldr	r3, [r4]
 6666 0076 D968     		ldr	r1, [r3, #12]
 6667 0078 0291     		str	r1, [sp, #8]
 6668 007a 9968     		ldr	r1, [r3, #8]
 6669 007c 0291     		str	r1, [sp, #8]
 6670 007e 0299     		ldr	r1, [sp, #8]
 6671              	.LBE15:
 6672              	.LBB16:
3326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6673              		.loc 1 3326 0
 6674 0080 0392     		str	r2, [sp, #12]
 6675 0082 9B68     		ldr	r3, [r3, #8]
 6676 0084 0393     		str	r3, [sp, #12]
 6677 0086 039B     		ldr	r3, [sp, #12]
 6678              	.LBE16:
3329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6679              		.loc 1 3329 0
 6680 0088 5D23     		movs	r3, #93
 6681 008a 0132     		adds	r2, r2, #1
 6682 008c E254     		strb	r2, [r4, r3]
3335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6683              		.loc 1 3335 0
 6684 008e 2000     		movs	r0, r4
 6685 0090 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 6686              	.LVL495:
 6687              	.L470:
3337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6688              		.loc 1 3337 0
 6689 0094 04B0     		add	sp, sp, #16
 6690              		@ sp needed
 6691              	.LVL496:
 6692 0096 10BD     		pop	{r4, pc}
 6693              		.cfi_endproc
 6694              	.LFE210:
 6696              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 6697              		.align	1
 6698              		.global	HAL_SPI_GetState
 6699              		.syntax unified
ARM GAS  /tmp/ccQ5vJp4.s 			page 209


 6700              		.code	16
 6701              		.thumb_func
 6702              		.fpu softvfp
 6704              	HAL_SPI_GetState:
 6705              	.LFB200:
2905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Return SPI handle state */
 6706              		.loc 1 2905 0
 6707              		.cfi_startproc
 6708              		@ args = 0, pretend = 0, frame = 0
 6709              		@ frame_needed = 0, uses_anonymous_args = 0
 6710              		@ link register save eliminated.
 6711              	.LVL497:
2907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 6712              		.loc 1 2907 0
 6713 0000 5D23     		movs	r3, #93
 6714 0002 C05C     		ldrb	r0, [r0, r3]
 6715              	.LVL498:
 6716 0004 C0B2     		uxtb	r0, r0
2908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6717              		.loc 1 2908 0
 6718              		@ sp needed
 6719 0006 7047     		bx	lr
 6720              		.cfi_endproc
 6721              	.LFE200:
 6723              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 6724              		.align	1
 6725              		.global	HAL_SPI_GetError
 6726              		.syntax unified
 6727              		.code	16
 6728              		.thumb_func
 6729              		.fpu softvfp
 6731              	HAL_SPI_GetError:
 6732              	.LFB201:
2917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c ****   /* Return SPI ErrorCode */
 6733              		.loc 1 2917 0
 6734              		.cfi_startproc
 6735              		@ args = 0, pretend = 0, frame = 0
 6736              		@ frame_needed = 0, uses_anonymous_args = 0
 6737              		@ link register save eliminated.
 6738              	.LVL499:
2919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** }
 6739              		.loc 1 2919 0
 6740 0000 006E     		ldr	r0, [r0, #96]
 6741              	.LVL500:
2920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c **** 
 6742              		.loc 1 2920 0
 6743              		@ sp needed
 6744 0002 7047     		bx	lr
 6745              		.cfi_endproc
 6746              	.LFE201:
 6748              		.text
 6749              	.Letext0:
 6750              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 6751              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 6752              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 6753              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 6754              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
ARM GAS  /tmp/ccQ5vJp4.s 			page 210


 6755              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 6756              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 6757              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 6758              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h"
 6759              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
ARM GAS  /tmp/ccQ5vJp4.s 			page 211


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_spi.c
     /tmp/ccQ5vJp4.s:16     .text.SPI_WaitFlagStateUntilTimeout:00000000 $t
     /tmp/ccQ5vJp4.s:22     .text.SPI_WaitFlagStateUntilTimeout:00000000 SPI_WaitFlagStateUntilTimeout
     /tmp/ccQ5vJp4.s:146    .text.SPI_WaitFlagStateUntilTimeout:00000098 $d
     /tmp/ccQ5vJp4.s:151    .text.SPI_WaitFifoStateUntilTimeout:00000000 $t
     /tmp/ccQ5vJp4.s:157    .text.SPI_WaitFifoStateUntilTimeout:00000000 SPI_WaitFifoStateUntilTimeout
     /tmp/ccQ5vJp4.s:293    .text.SPI_WaitFifoStateUntilTimeout:000000a4 $d
     /tmp/ccQ5vJp4.s:298    .text.SPI_EndRxTxTransaction:00000000 $t
     /tmp/ccQ5vJp4.s:304    .text.SPI_EndRxTxTransaction:00000000 SPI_EndRxTxTransaction
     /tmp/ccQ5vJp4.s:395    .text.SPI_EndRxTransaction:00000000 $t
     /tmp/ccQ5vJp4.s:401    .text.SPI_EndRxTransaction:00000000 SPI_EndRxTransaction
     /tmp/ccQ5vJp4.s:524    .text.SPI_AbortRx_ISR:00000000 $t
     /tmp/ccQ5vJp4.s:530    .text.SPI_AbortRx_ISR:00000000 SPI_AbortRx_ISR
     /tmp/ccQ5vJp4.s:635    .text.SPI_AbortRx_ISR:00000088 $d
     /tmp/ccQ5vJp4.s:641    .text.SPI_AbortTx_ISR:00000000 $t
     /tmp/ccQ5vJp4.s:647    .text.SPI_AbortTx_ISR:00000000 SPI_AbortTx_ISR
     /tmp/ccQ5vJp4.s:815    .text.SPI_AbortTx_ISR:000000e8 $d
     /tmp/ccQ5vJp4.s:821    .text.HAL_SPI_MspInit:00000000 $t
     /tmp/ccQ5vJp4.s:828    .text.HAL_SPI_MspInit:00000000 HAL_SPI_MspInit
     /tmp/ccQ5vJp4.s:843    .text.HAL_SPI_Init:00000000 $t
     /tmp/ccQ5vJp4.s:850    .text.HAL_SPI_Init:00000000 HAL_SPI_Init
     /tmp/ccQ5vJp4.s:1007   .text.HAL_SPI_Init:000000c8 $d
     /tmp/ccQ5vJp4.s:1012   .text.HAL_SPI_MspDeInit:00000000 $t
     /tmp/ccQ5vJp4.s:1019   .text.HAL_SPI_MspDeInit:00000000 HAL_SPI_MspDeInit
     /tmp/ccQ5vJp4.s:1034   .text.HAL_SPI_DeInit:00000000 $t
     /tmp/ccQ5vJp4.s:1041   .text.HAL_SPI_DeInit:00000000 HAL_SPI_DeInit
     /tmp/ccQ5vJp4.s:1096   .text.HAL_SPI_Transmit:00000000 $t
     /tmp/ccQ5vJp4.s:1103   .text.HAL_SPI_Transmit:00000000 HAL_SPI_Transmit
     /tmp/ccQ5vJp4.s:1487   .text.HAL_SPI_TransmitReceive:00000000 $t
     /tmp/ccQ5vJp4.s:1494   .text.HAL_SPI_TransmitReceive:00000000 HAL_SPI_TransmitReceive
     /tmp/ccQ5vJp4.s:2073   .text.HAL_SPI_TransmitReceive:000002cc $d
     /tmp/ccQ5vJp4.s:2078   .text.HAL_SPI_Receive:00000000 $t
     /tmp/ccQ5vJp4.s:2085   .text.HAL_SPI_Receive:00000000 HAL_SPI_Receive
     /tmp/ccQ5vJp4.s:2411   .text.HAL_SPI_Receive:00000194 $d
     /tmp/ccQ5vJp4.s:2417   .text.HAL_SPI_Transmit_IT:00000000 $t
     /tmp/ccQ5vJp4.s:2424   .text.HAL_SPI_Transmit_IT:00000000 HAL_SPI_Transmit_IT
     /tmp/ccQ5vJp4.s:2572   .text.HAL_SPI_Transmit_IT:000000a4 $d
     /tmp/ccQ5vJp4.s:4864   .text.SPI_TxISR_16BIT:00000000 SPI_TxISR_16BIT
     /tmp/ccQ5vJp4.s:4811   .text.SPI_TxISR_8BIT:00000000 SPI_TxISR_8BIT
     /tmp/ccQ5vJp4.s:2578   .text.HAL_SPI_TransmitReceive_IT:00000000 $t
     /tmp/ccQ5vJp4.s:2585   .text.HAL_SPI_TransmitReceive_IT:00000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccQ5vJp4.s:2802   .text.HAL_SPI_TransmitReceive_IT:000000e4 $d
     /tmp/ccQ5vJp4.s:5442   .text.SPI_2linesRxISR_16BIT:00000000 SPI_2linesRxISR_16BIT
     /tmp/ccQ5vJp4.s:5377   .text.SPI_2linesTxISR_16BIT:00000000 SPI_2linesTxISR_16BIT
     /tmp/ccQ5vJp4.s:5273   .text.SPI_2linesRxISR_8BIT:00000000 SPI_2linesRxISR_8BIT
     /tmp/ccQ5vJp4.s:5186   .text.SPI_2linesTxISR_8BIT:00000000 SPI_2linesTxISR_8BIT
     /tmp/ccQ5vJp4.s:2811   .text.HAL_SPI_Receive_IT:00000000 $t
     /tmp/ccQ5vJp4.s:2818   .text.HAL_SPI_Receive_IT:00000000 HAL_SPI_Receive_IT
     /tmp/ccQ5vJp4.s:3001   .text.HAL_SPI_Receive_IT:000000d8 $d
     /tmp/ccQ5vJp4.s:5040   .text.SPI_RxISR_16BIT:00000000 SPI_RxISR_16BIT
     /tmp/ccQ5vJp4.s:4986   .text.SPI_RxISR_8BIT:00000000 SPI_RxISR_8BIT
     /tmp/ccQ5vJp4.s:3009   .text.HAL_SPI_Transmit_DMA:00000000 $t
     /tmp/ccQ5vJp4.s:3016   .text.HAL_SPI_Transmit_DMA:00000000 HAL_SPI_Transmit_DMA
     /tmp/ccQ5vJp4.s:3247   .text.HAL_SPI_Transmit_DMA:00000120 $d
     /tmp/ccQ5vJp4.s:4561   .text.SPI_DMAHalfTransmitCplt:00000000 SPI_DMAHalfTransmitCplt
     /tmp/ccQ5vJp4.s:5553   .text.SPI_DMATransmitCplt:00000000 SPI_DMATransmitCplt
ARM GAS  /tmp/ccQ5vJp4.s 			page 212


     /tmp/ccQ5vJp4.s:5507   .text.SPI_DMAError:00000000 SPI_DMAError
     /tmp/ccQ5vJp4.s:3255   .text.HAL_SPI_TransmitReceive_DMA:00000000 $t
     /tmp/ccQ5vJp4.s:3262   .text.HAL_SPI_TransmitReceive_DMA:00000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccQ5vJp4.s:3660   .text.HAL_SPI_TransmitReceive_DMA:000001fc $d
     /tmp/ccQ5vJp4.s:4667   .text.SPI_DMAHalfTransmitReceiveCplt:00000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccQ5vJp4.s:5756   .text.SPI_DMATransmitReceiveCplt:00000000 SPI_DMATransmitReceiveCplt
     /tmp/ccQ5vJp4.s:4614   .text.SPI_DMAHalfReceiveCplt:00000000 SPI_DMAHalfReceiveCplt
     /tmp/ccQ5vJp4.s:5664   .text.SPI_DMAReceiveCplt:00000000 SPI_DMAReceiveCplt
     /tmp/ccQ5vJp4.s:3673   .text.HAL_SPI_Receive_DMA:00000000 $t
     /tmp/ccQ5vJp4.s:3680   .text.HAL_SPI_Receive_DMA:00000000 HAL_SPI_Receive_DMA
     /tmp/ccQ5vJp4.s:3960   .text.HAL_SPI_Receive_DMA:0000016c $d
     /tmp/ccQ5vJp4.s:3970   .text.HAL_SPI_Abort:00000000 $t
     /tmp/ccQ5vJp4.s:3977   .text.HAL_SPI_Abort:00000000 HAL_SPI_Abort
     /tmp/ccQ5vJp4.s:4264   .text.HAL_SPI_Abort:00000188 $d
     /tmp/ccQ5vJp4.s:4272   .text.HAL_SPI_DMAPause:00000000 $t
     /tmp/ccQ5vJp4.s:4279   .text.HAL_SPI_DMAPause:00000000 HAL_SPI_DMAPause
     /tmp/ccQ5vJp4.s:4326   .text.HAL_SPI_DMAResume:00000000 $t
     /tmp/ccQ5vJp4.s:4333   .text.HAL_SPI_DMAResume:00000000 HAL_SPI_DMAResume
     /tmp/ccQ5vJp4.s:4380   .text.HAL_SPI_DMAStop:00000000 $t
     /tmp/ccQ5vJp4.s:4387   .text.HAL_SPI_DMAStop:00000000 HAL_SPI_DMAStop
     /tmp/ccQ5vJp4.s:4467   .text.HAL_SPI_TxCpltCallback:00000000 $t
     /tmp/ccQ5vJp4.s:4474   .text.HAL_SPI_TxCpltCallback:00000000 HAL_SPI_TxCpltCallback
     /tmp/ccQ5vJp4.s:4489   .text.HAL_SPI_RxCpltCallback:00000000 $t
     /tmp/ccQ5vJp4.s:4496   .text.HAL_SPI_RxCpltCallback:00000000 HAL_SPI_RxCpltCallback
     /tmp/ccQ5vJp4.s:4511   .text.HAL_SPI_TxRxCpltCallback:00000000 $t
     /tmp/ccQ5vJp4.s:4518   .text.HAL_SPI_TxRxCpltCallback:00000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccQ5vJp4.s:4533   .text.HAL_SPI_TxHalfCpltCallback:00000000 $t
     /tmp/ccQ5vJp4.s:4540   .text.HAL_SPI_TxHalfCpltCallback:00000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccQ5vJp4.s:4555   .text.SPI_DMAHalfTransmitCplt:00000000 $t
     /tmp/ccQ5vJp4.s:4586   .text.HAL_SPI_RxHalfCpltCallback:00000000 $t
     /tmp/ccQ5vJp4.s:4593   .text.HAL_SPI_RxHalfCpltCallback:00000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccQ5vJp4.s:4608   .text.SPI_DMAHalfReceiveCplt:00000000 $t
     /tmp/ccQ5vJp4.s:4639   .text.HAL_SPI_TxRxHalfCpltCallback:00000000 $t
     /tmp/ccQ5vJp4.s:4646   .text.HAL_SPI_TxRxHalfCpltCallback:00000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccQ5vJp4.s:4661   .text.SPI_DMAHalfTransmitReceiveCplt:00000000 $t
     /tmp/ccQ5vJp4.s:4692   .text.HAL_SPI_ErrorCallback:00000000 $t
     /tmp/ccQ5vJp4.s:4699   .text.HAL_SPI_ErrorCallback:00000000 HAL_SPI_ErrorCallback
     /tmp/ccQ5vJp4.s:4714   .text.SPI_CloseTx_ISR:00000000 $t
     /tmp/ccQ5vJp4.s:4720   .text.SPI_CloseTx_ISR:00000000 SPI_CloseTx_ISR
     /tmp/ccQ5vJp4.s:4805   .text.SPI_TxISR_8BIT:00000000 $t
     /tmp/ccQ5vJp4.s:4858   .text.SPI_TxISR_16BIT:00000000 $t
     /tmp/ccQ5vJp4.s:4911   .text.SPI_CloseRx_ISR:00000000 $t
     /tmp/ccQ5vJp4.s:4917   .text.SPI_CloseRx_ISR:00000000 SPI_CloseRx_ISR
     /tmp/ccQ5vJp4.s:4980   .text.SPI_RxISR_8BIT:00000000 $t
     /tmp/ccQ5vJp4.s:5034   .text.SPI_RxISR_16BIT:00000000 $t
     /tmp/ccQ5vJp4.s:5088   .text.SPI_CloseRxTx_ISR:00000000 $t
     /tmp/ccQ5vJp4.s:5094   .text.SPI_CloseRxTx_ISR:00000000 SPI_CloseRxTx_ISR
     /tmp/ccQ5vJp4.s:5180   .text.SPI_2linesTxISR_8BIT:00000000 $t
     /tmp/ccQ5vJp4.s:5267   .text.SPI_2linesRxISR_8BIT:00000000 $t
     /tmp/ccQ5vJp4.s:5371   .text.SPI_2linesTxISR_16BIT:00000000 $t
     /tmp/ccQ5vJp4.s:5436   .text.SPI_2linesRxISR_16BIT:00000000 $t
     /tmp/ccQ5vJp4.s:5501   .text.SPI_DMAError:00000000 $t
     /tmp/ccQ5vJp4.s:5547   .text.SPI_DMATransmitCplt:00000000 $t
     /tmp/ccQ5vJp4.s:5658   .text.SPI_DMAReceiveCplt:00000000 $t
     /tmp/ccQ5vJp4.s:5750   .text.SPI_DMATransmitReceiveCplt:00000000 $t
     /tmp/ccQ5vJp4.s:5846   .text.HAL_SPI_IRQHandler:00000000 $t
     /tmp/ccQ5vJp4.s:5853   .text.HAL_SPI_IRQHandler:00000000 HAL_SPI_IRQHandler
ARM GAS  /tmp/ccQ5vJp4.s 			page 213


     /tmp/ccQ5vJp4.s:6085   .text.HAL_SPI_IRQHandler:00000118 $d
     /tmp/ccQ5vJp4.s:6096   .text.SPI_DMAAbortOnError:00000000 SPI_DMAAbortOnError
     /tmp/ccQ5vJp4.s:6090   .text.SPI_DMAAbortOnError:00000000 $t
     /tmp/ccQ5vJp4.s:6127   .text.HAL_SPI_AbortCpltCallback:00000000 $t
     /tmp/ccQ5vJp4.s:6134   .text.HAL_SPI_AbortCpltCallback:00000000 HAL_SPI_AbortCpltCallback
     /tmp/ccQ5vJp4.s:6149   .text.HAL_SPI_Abort_IT:00000000 $t
     /tmp/ccQ5vJp4.s:6156   .text.HAL_SPI_Abort_IT:00000000 HAL_SPI_Abort_IT
     /tmp/ccQ5vJp4.s:6425   .text.HAL_SPI_Abort_IT:00000144 $d
     /tmp/ccQ5vJp4.s:6573   .text.SPI_DMATxAbortCallback:00000000 SPI_DMATxAbortCallback
     /tmp/ccQ5vJp4.s:6441   .text.SPI_DMARxAbortCallback:00000000 SPI_DMARxAbortCallback
     /tmp/ccQ5vJp4.s:6435   .text.SPI_DMARxAbortCallback:00000000 $t
     /tmp/ccQ5vJp4.s:6567   .text.SPI_DMATxAbortCallback:00000000 $t
     /tmp/ccQ5vJp4.s:6697   .text.HAL_SPI_GetState:00000000 $t
     /tmp/ccQ5vJp4.s:6704   .text.HAL_SPI_GetState:00000000 HAL_SPI_GetState
     /tmp/ccQ5vJp4.s:6724   .text.HAL_SPI_GetError:00000000 $t
     /tmp/ccQ5vJp4.s:6731   .text.HAL_SPI_GetError:00000000 HAL_SPI_GetError

UNDEFINED SYMBOLS
HAL_GetTick
__aeabi_uidiv
SystemCoreClock
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
