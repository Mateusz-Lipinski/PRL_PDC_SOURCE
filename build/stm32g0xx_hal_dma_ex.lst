ARM GAS  /tmp/cchYokGJ.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_hal_dma_ex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_DMAEx_ConfigMuxSync,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_DMAEx_ConfigMuxSync
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_DMAEx_ConfigMuxSync:
  24              	.LFB173:
  25              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @file    stm32g0xx_hal_dma_ex.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief   DMA Extension HAL module driver
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *         This file provides firmware functions to manage the following
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *         functionalities of the DMA Extension peripheral:
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *           + Extended features functions
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   @verbatim
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ==============================================================================
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                         ##### How to use this driver #####
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ==============================================================================
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   [..]
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   The DMA Extension HAL driver can be used as follows:
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****    (+) Configure the DMA_MUX Synchronization Block using HAL_DMAEx_ConfigMuxSync function.
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****    (+) Configure the DMA_MUX Request Generator Block using HAL_DMAEx_ConfigMuxRequestGenerator func
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        Functions HAL_DMAEx_EnableMuxRequestGenerator and HAL_DMAEx_DisableMuxRequestGenerator can t
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        to respectively enable/disable the request generator.
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****    (+) To handle the DMAMUX Interrupts, the function  HAL_DMAEx_MUX_IRQHandler should be called fro
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        the DMAMUX IRQ handler i.e DMAMUX1_OVR_IRQHandler.
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        As only one interrupt line is available for all DMAMUX channels and request generators , HAL
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        called with, as parameter, the appropriate DMA handle as many as used DMAs in the user proje
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       (exception done if a given DMA is not using the DMAMUX SYNC block neither a request generator
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   @endverbatim
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ******************************************************************************
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @attention
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics. 
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * All rights reserved.</center></h2>
ARM GAS  /tmp/cchYokGJ.s 			page 2


  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * the "License"; You may not use this file except in compliance with the 
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * License. You may obtain a copy of the License at:
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ******************************************************************************
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Includes ------------------------------------------------------------------*/
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** #include "stm32g0xx_hal.h"
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /** @addtogroup STM32G0xx_HAL_Driver
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @{
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /** @defgroup DMAEx DMAEx
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief DMA Extended HAL module driver
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @{
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** #ifdef HAL_DMA_MODULE_ENABLED
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private typedef -----------------------------------------------------------*/
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private define ------------------------------------------------------------*/
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private macro -------------------------------------------------------------*/
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private variables ---------------------------------------------------------*/
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private Constants ---------------------------------------------------------*/
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private function prototypes -----------------------------------------------*/
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private functions ---------------------------------------------------------*/
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /** @defgroup DMAEx_Exported_Functions DMAEx Exported Functions
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @{
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /** @defgroup DMAEx_Exported_Functions_Group1 DMAEx Extended features functions
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****  *  @brief   Extended features functions
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****  *
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** @verbatim
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****  ===============================================================================
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                 #####  Extended features functions  #####
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****  ===============================================================================
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     [..]  This section provides functions allowing to:
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     (+) Configure the DMA_MUX Synchronization Block using HAL_DMAEx_ConfigMuxSync function.
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     (+) Configure the DMA_MUX Request Generator Block using HAL_DMAEx_ConfigMuxRequestGenerator fun
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        Functions HAL_DMAEx_EnableMuxRequestGenerator and HAL_DMAEx_DisableMuxRequestGenerator can t
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        to respectively enable/disable the request generator.
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** @endverbatim
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @{
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief  Configure the DMAMUX synchronization parameters for a given DMA channel (instance).
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
ARM GAS  /tmp/cchYokGJ.s 			page 3


  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *                     the configuration information for the specified DMA channel.
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param  pSyncConfig Pointer to HAL_DMA_MuxSyncConfigTypeDef : contains the DMAMUX synchronizati
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval HAL status
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** HAL_StatusTypeDef HAL_DMAEx_ConfigMuxSync(DMA_HandleTypeDef *hdma, HAL_DMA_MuxSyncConfigTypeDef *pS
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
  26              		.loc 1 96 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check the parameters */
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_SIGNAL_ID(pSyncConfig->SyncSignalID));
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_POLARITY(pSyncConfig-> SyncPolarity));
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_STATE(pSyncConfig->SyncEnable));
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_EVENT(pSyncConfig->EventEnable));
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_REQUEST_NUMBER(pSyncConfig->RequestNumber));
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /*Check if the DMA state is ready */
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if (hdma->State == HAL_DMA_STATE_READY)
  38              		.loc 1 108 0
  39 0002 2523     		movs	r3, #37
  40 0004 C35C     		ldrb	r3, [r0, r3]
  41 0006 012B     		cmp	r3, #1
  42 0008 01D0     		beq	.L5
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process Locked */
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     __HAL_LOCK(hdma);
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Set the new synchronization parameters (and keep the request ID filled during the Init)*/
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     MODIFY_REG(hdma->DMAmuxChannel->CCR, \
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                (~DMAMUX_CxCR_DMAREQ_ID), \
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                ((pSyncConfig->SyncSignalID) << DMAMUX_CxCR_SYNC_ID_Pos) | ((pSyncConfig->RequestNum
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                pSyncConfig->SyncPolarity | ((uint32_t)pSyncConfig->SyncEnable << DMAMUX_CxCR_SE_Pos
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                ((uint32_t)pSyncConfig->EventEnable << DMAMUX_CxCR_EGE_Pos));
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process UnLocked */
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     __HAL_UNLOCK(hdma);
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_OK;
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /*DMA State not Ready*/
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_ERROR;
  43              		.loc 1 128 0
  44 000a 0120     		movs	r0, #1
ARM GAS  /tmp/cchYokGJ.s 			page 4


  45              	.LVL1:
  46              	.L2:
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
  47              		.loc 1 130 0
  48              		@ sp needed
  49 000c 70BD     		pop	{r4, r5, r6, pc}
  50              	.LVL2:
  51              	.L5:
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  52              		.loc 1 111 0
  53 000e 2333     		adds	r3, r3, #35
  54 0010 C35C     		ldrb	r3, [r0, r3]
  55 0012 012B     		cmp	r3, #1
  56 0014 1AD0     		beq	.L4
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  57              		.loc 1 111 0 is_stmt 0 discriminator 2
  58 0016 2425     		movs	r5, #36
  59 0018 0123     		movs	r3, #1
  60 001a 4355     		strb	r3, [r0, r5]
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                (~DMAMUX_CxCR_DMAREQ_ID), \
  61              		.loc 1 114 0 is_stmt 1 discriminator 2
  62 001c 466C     		ldr	r6, [r0, #68]
  63 001e 3368     		ldr	r3, [r6]
  64 0020 FF24     		movs	r4, #255
  65 0022 1C40     		ands	r4, r3
  66 0024 0B68     		ldr	r3, [r1]
  67 0026 1B06     		lsls	r3, r3, #24
  68 0028 CA68     		ldr	r2, [r1, #12]
  69 002a 013A     		subs	r2, r2, #1
  70 002c D204     		lsls	r2, r2, #19
  71 002e 1343     		orrs	r3, r2
  72 0030 4A68     		ldr	r2, [r1, #4]
  73 0032 1343     		orrs	r3, r2
  74 0034 0A7A     		ldrb	r2, [r1, #8]
  75 0036 1204     		lsls	r2, r2, #16
  76 0038 1343     		orrs	r3, r2
  77 003a 4A7A     		ldrb	r2, [r1, #9]
  78 003c 5202     		lsls	r2, r2, #9
  79 003e 1343     		orrs	r3, r2
  80 0040 2343     		orrs	r3, r4
  81 0042 3360     		str	r3, [r6]
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  82              		.loc 1 121 0 discriminator 2
  83 0044 0023     		movs	r3, #0
  84 0046 4355     		strb	r3, [r0, r5]
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
  85              		.loc 1 123 0 discriminator 2
  86 0048 0020     		movs	r0, #0
  87              	.LVL3:
  88 004a DFE7     		b	.L2
  89              	.LVL4:
  90              	.L4:
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  91              		.loc 1 111 0
  92 004c 0220     		movs	r0, #2
  93              	.LVL5:
ARM GAS  /tmp/cchYokGJ.s 			page 5


  94 004e DDE7     		b	.L2
  95              		.cfi_endproc
  96              	.LFE173:
  98              		.section	.text.HAL_DMAEx_ConfigMuxRequestGenerator,"ax",%progbits
  99              		.align	1
 100              		.global	HAL_DMAEx_ConfigMuxRequestGenerator
 101              		.syntax unified
 102              		.code	16
 103              		.thumb_func
 104              		.fpu softvfp
 106              	HAL_DMAEx_ConfigMuxRequestGenerator:
 107              	.LFB174:
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief  Configure the DMAMUX request generator block used by the given DMA channel (instance).
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *                     the configuration information for the specified DMA channel.
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** * @param  pRequestGeneratorConfig Pointer to HAL_DMA_MuxRequestGeneratorConfigTypeDef :
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *         contains the request generator parameters.
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval HAL status
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** HAL_StatusTypeDef HAL_DMAEx_ConfigMuxRequestGenerator(DMA_HandleTypeDef *hdma, HAL_DMA_MuxRequestGe
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
 108              		.loc 1 142 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              	.LVL6:
 113 0000 30B5     		push	{r4, r5, lr}
 114              	.LCFI1:
 115              		.cfi_def_cfa_offset 12
 116              		.cfi_offset 4, -12
 117              		.cfi_offset 5, -8
 118              		.cfi_offset 14, -4
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check the parameters */
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_REQUEST_GEN_SIGNAL_ID(pRequestGeneratorConfig->SignalID));
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_REQUEST_GEN_POLARITY(pRequestGeneratorConfig->Polarity));
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_REQUEST_GEN_REQUEST_NUMBER(pRequestGeneratorConfig->RequestNumber));
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* check if the DMA state is ready
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****      and DMA is using a DMAMUX request generator block
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if ((hdma->State == HAL_DMA_STATE_READY) && (hdma->DMAmuxRequestGen != 0U))
 119              		.loc 1 154 0
 120 0002 2523     		movs	r3, #37
 121 0004 C35C     		ldrb	r3, [r0, r3]
 122 0006 012B     		cmp	r3, #1
 123 0008 01D0     		beq	.L11
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process Locked */
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     __HAL_LOCK(hdma);
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Set the request generator new parameters*/
ARM GAS  /tmp/cchYokGJ.s 			page 6


 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxRequestGen->RGCR = pRequestGeneratorConfig->SignalID | \
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    ((pRequestGeneratorConfig->RequestNumber - 1U) << DMAMUX_RGxCR_G
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    pRequestGeneratorConfig->Polarity;
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process UnLocked */
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     __HAL_UNLOCK(hdma);
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_OK;
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_ERROR;
 124              		.loc 1 170 0
 125 000a 0120     		movs	r0, #1
 126              	.LVL7:
 127              	.L7:
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 128              		.loc 1 172 0
 129              		@ sp needed
 130 000c 30BD     		pop	{r4, r5, pc}
 131              	.LVL8:
 132              	.L11:
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 133              		.loc 1 154 0 discriminator 1
 134 000e 026D     		ldr	r2, [r0, #80]
 135 0010 002A     		cmp	r2, #0
 136 0012 12D0     		beq	.L9
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 137              		.loc 1 157 0
 138 0014 2333     		adds	r3, r3, #35
 139 0016 C35C     		ldrb	r3, [r0, r3]
 140 0018 012B     		cmp	r3, #1
 141 001a 10D0     		beq	.L10
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 142              		.loc 1 157 0 is_stmt 0 discriminator 2
 143 001c 2424     		movs	r4, #36
 144 001e 0123     		movs	r3, #1
 145 0020 0355     		strb	r3, [r0, r4]
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    pRequestGeneratorConfig->Polarity;
 146              		.loc 1 161 0 is_stmt 1 discriminator 2
 147 0022 8B68     		ldr	r3, [r1, #8]
 148 0024 013B     		subs	r3, r3, #1
 149 0026 DB04     		lsls	r3, r3, #19
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    ((pRequestGeneratorConfig->RequestNumber - 1U) << DMAMUX_RGxCR_G
 150              		.loc 1 160 0 discriminator 2
 151 0028 0D68     		ldr	r5, [r1]
 152 002a 2B43     		orrs	r3, r5
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process UnLocked */
 153              		.loc 1 162 0 discriminator 2
 154 002c 4968     		ldr	r1, [r1, #4]
 155              	.LVL9:
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    pRequestGeneratorConfig->Polarity;
 156              		.loc 1 161 0 discriminator 2
 157 002e 0B43     		orrs	r3, r1
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    ((pRequestGeneratorConfig->RequestNumber - 1U) << DMAMUX_RGxCR_G
 158              		.loc 1 160 0 discriminator 2
 159 0030 1360     		str	r3, [r2]
ARM GAS  /tmp/cchYokGJ.s 			page 7


 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 160              		.loc 1 164 0 discriminator 2
 161 0032 0023     		movs	r3, #0
 162 0034 0355     		strb	r3, [r0, r4]
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 163              		.loc 1 166 0 discriminator 2
 164 0036 0020     		movs	r0, #0
 165              	.LVL10:
 166 0038 E8E7     		b	.L7
 167              	.LVL11:
 168              	.L9:
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 169              		.loc 1 170 0
 170 003a 0120     		movs	r0, #1
 171              	.LVL12:
 172 003c E6E7     		b	.L7
 173              	.LVL13:
 174              	.L10:
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 175              		.loc 1 157 0
 176 003e 0220     		movs	r0, #2
 177              	.LVL14:
 178 0040 E4E7     		b	.L7
 179              		.cfi_endproc
 180              	.LFE174:
 182              		.section	.text.HAL_DMAEx_EnableMuxRequestGenerator,"ax",%progbits
 183              		.align	1
 184              		.global	HAL_DMAEx_EnableMuxRequestGenerator
 185              		.syntax unified
 186              		.code	16
 187              		.thumb_func
 188              		.fpu softvfp
 190              	HAL_DMAEx_EnableMuxRequestGenerator:
 191              	.LFB175:
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief  Enable the DMAMUX request generator block used by the given DMA channel (instance).
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *                     the configuration information for the specified DMA channel.
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval HAL status
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** HAL_StatusTypeDef HAL_DMAEx_EnableMuxRequestGenerator(DMA_HandleTypeDef *hdma)
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
 192              		.loc 1 181 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197              	.LVL15:
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check the parameters */
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* check if the DMA state is ready
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****      and DMA is using a DMAMUX request generator block
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if ((hdma->State != HAL_DMA_STATE_RESET) && (hdma->DMAmuxRequestGen != 0))
 198              		.loc 1 188 0
ARM GAS  /tmp/cchYokGJ.s 			page 8


 199 0000 2523     		movs	r3, #37
 200 0002 C35C     		ldrb	r3, [r0, r3]
 201 0004 002B     		cmp	r3, #0
 202 0006 09D0     		beq	.L14
 203              		.loc 1 188 0 is_stmt 0 discriminator 1
 204 0008 036D     		ldr	r3, [r0, #80]
 205 000a 002B     		cmp	r3, #0
 206 000c 08D0     		beq	.L15
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Enable the request generator*/
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_GE;
 207              		.loc 1 192 0 is_stmt 1
 208 000e 1968     		ldr	r1, [r3]
 209 0010 8022     		movs	r2, #128
 210 0012 5202     		lsls	r2, r2, #9
 211 0014 0A43     		orrs	r2, r1
 212 0016 1A60     		str	r2, [r3]
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_OK;
 213              		.loc 1 194 0
 214 0018 0020     		movs	r0, #0
 215              	.LVL16:
 216 001a 00E0     		b	.L13
 217              	.LVL17:
 218              	.L14:
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_ERROR;
 219              		.loc 1 198 0
 220 001c 0120     		movs	r0, #1
 221              	.LVL18:
 222              	.L13:
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 223              		.loc 1 200 0
 224              		@ sp needed
 225 001e 7047     		bx	lr
 226              	.LVL19:
 227              	.L15:
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 228              		.loc 1 198 0
 229 0020 0120     		movs	r0, #1
 230              	.LVL20:
 231 0022 FCE7     		b	.L13
 232              		.cfi_endproc
 233              	.LFE175:
 235              		.section	.text.HAL_DMAEx_DisableMuxRequestGenerator,"ax",%progbits
 236              		.align	1
 237              		.global	HAL_DMAEx_DisableMuxRequestGenerator
 238              		.syntax unified
 239              		.code	16
 240              		.thumb_func
 241              		.fpu softvfp
 243              	HAL_DMAEx_DisableMuxRequestGenerator:
 244              	.LFB176:
ARM GAS  /tmp/cchYokGJ.s 			page 9


 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief  Disable the DMAMUX request generator block used by the given DMA channel (instance).
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *                     the configuration information for the specified DMA channel.
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval HAL status
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** HAL_StatusTypeDef HAL_DMAEx_DisableMuxRequestGenerator(DMA_HandleTypeDef *hdma)
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
 245              		.loc 1 209 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250              	.LVL21:
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check the parameters */
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* check if the DMA state is ready
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****      and DMA is using a DMAMUX request generator block
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if ((hdma->State != HAL_DMA_STATE_RESET) && (hdma->DMAmuxRequestGen != 0))
 251              		.loc 1 216 0
 252 0000 2523     		movs	r3, #37
 253 0002 C35C     		ldrb	r3, [r0, r3]
 254 0004 002B     		cmp	r3, #0
 255 0006 08D0     		beq	.L18
 256              		.loc 1 216 0 is_stmt 0 discriminator 1
 257 0008 036D     		ldr	r3, [r0, #80]
 258 000a 002B     		cmp	r3, #0
 259 000c 07D0     		beq	.L19
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Disable the request generator*/
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_GE;
 260              		.loc 1 220 0 is_stmt 1
 261 000e 1A68     		ldr	r2, [r3]
 262 0010 0449     		ldr	r1, .L20
 263 0012 0A40     		ands	r2, r1
 264 0014 1A60     		str	r2, [r3]
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_OK;
 265              		.loc 1 222 0
 266 0016 0020     		movs	r0, #0
 267              	.LVL22:
 268 0018 00E0     		b	.L17
 269              	.LVL23:
 270              	.L18:
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_ERROR;
 271              		.loc 1 226 0
 272 001a 0120     		movs	r0, #1
 273              	.LVL24:
 274              	.L17:
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
ARM GAS  /tmp/cchYokGJ.s 			page 10


 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 275              		.loc 1 228 0
 276              		@ sp needed
 277 001c 7047     		bx	lr
 278              	.LVL25:
 279              	.L19:
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 280              		.loc 1 226 0
 281 001e 0120     		movs	r0, #1
 282              	.LVL26:
 283 0020 FCE7     		b	.L17
 284              	.L21:
 285 0022 C046     		.align	2
 286              	.L20:
 287 0024 FFFFFEFF 		.word	-65537
 288              		.cfi_endproc
 289              	.LFE176:
 291              		.section	.text.HAL_DMAEx_MUX_IRQHandler,"ax",%progbits
 292              		.align	1
 293              		.global	HAL_DMAEx_MUX_IRQHandler
 294              		.syntax unified
 295              		.code	16
 296              		.thumb_func
 297              		.fpu softvfp
 299              	HAL_DMAEx_MUX_IRQHandler:
 300              	.LFB177:
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief  Handles DMAMUX interrupt request.
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *               the configuration information for the specified DMA channel.
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval None
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** void HAL_DMAEx_MUX_IRQHandler(DMA_HandleTypeDef *hdma)
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
 301              		.loc 1 237 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              	.LVL27:
 306 0000 10B5     		push	{r4, lr}
 307              	.LCFI2:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 4, -8
 310              		.cfi_offset 14, -4
 311 0002 0400     		movs	r4, r0
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check for DMAMUX Synchronization overrun */
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if ((hdma->DMAmuxChannelStatus->CSR & hdma->DMAmuxChannelStatusMask) != 0U)
 312              		.loc 1 239 0
 313 0004 836C     		ldr	r3, [r0, #72]
 314 0006 1B68     		ldr	r3, [r3]
 315 0008 C26C     		ldr	r2, [r0, #76]
 316 000a 1A42     		tst	r2, r3
 317 000c 10D0     		beq	.L23
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Disable the synchro overrun interrupt */
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
ARM GAS  /tmp/cchYokGJ.s 			page 11


 318              		.loc 1 242 0
 319 000e 426C     		ldr	r2, [r0, #68]
 320 0010 1368     		ldr	r3, [r2]
 321 0012 1449     		ldr	r1, .L25
 322 0014 0B40     		ands	r3, r1
 323 0016 1360     		str	r3, [r2]
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Clear the DMAMUX synchro overrun flag */
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 324              		.loc 1 245 0
 325 0018 836C     		ldr	r3, [r0, #72]
 326 001a C26C     		ldr	r2, [r0, #76]
 327 001c 5A60     		str	r2, [r3, #4]
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Update error code */
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->ErrorCode |= HAL_DMA_ERROR_SYNC;
 328              		.loc 1 248 0
 329 001e C26B     		ldr	r2, [r0, #60]
 330 0020 8023     		movs	r3, #128
 331 0022 9B00     		lsls	r3, r3, #2
 332 0024 1343     		orrs	r3, r2
 333 0026 C363     		str	r3, [r0, #60]
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     if (hdma->XferErrorCallback != NULL)
 334              		.loc 1 250 0
 335 0028 436B     		ldr	r3, [r0, #52]
 336 002a 002B     		cmp	r3, #0
 337 002c 00D0     		beq	.L23
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     {
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       /* Transfer error callback */
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       hdma->XferErrorCallback(hdma);
 338              		.loc 1 253 0
 339 002e 9847     		blx	r3
 340              	.LVL28:
 341              	.L23:
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     }
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if (hdma->DMAmuxRequestGen != 0)
 342              		.loc 1 257 0
 343 0030 236D     		ldr	r3, [r4, #80]
 344 0032 002B     		cmp	r3, #0
 345 0034 15D0     		beq	.L22
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* if using a DMAMUX request generator block Check for DMAMUX request generator overrun */
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     if ((hdma->DMAmuxRequestGenStatus->RGSR & hdma->DMAmuxRequestGenStatusMask) != 0U)
 346              		.loc 1 260 0
 347 0036 626D     		ldr	r2, [r4, #84]
 348 0038 1268     		ldr	r2, [r2]
 349 003a A16D     		ldr	r1, [r4, #88]
 350 003c 1142     		tst	r1, r2
 351 003e 10D0     		beq	.L22
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     {
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       /* Disable the request gen overrun interrupt */
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 352              		.loc 1 263 0
 353 0040 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/cchYokGJ.s 			page 12


 354 0042 0849     		ldr	r1, .L25
 355 0044 0A40     		ands	r2, r1
 356 0046 1A60     		str	r2, [r3]
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       /* Clear the DMAMUX request generator overrun flag */
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 357              		.loc 1 266 0
 358 0048 636D     		ldr	r3, [r4, #84]
 359 004a A26D     		ldr	r2, [r4, #88]
 360 004c 5A60     		str	r2, [r3, #4]
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       /* Update error code */
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_REQGEN;
 361              		.loc 1 269 0
 362 004e E26B     		ldr	r2, [r4, #60]
 363 0050 8023     		movs	r3, #128
 364 0052 DB00     		lsls	r3, r3, #3
 365 0054 1343     		orrs	r3, r2
 366 0056 E363     		str	r3, [r4, #60]
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       if (hdma->XferErrorCallback != NULL)
 367              		.loc 1 271 0
 368 0058 636B     		ldr	r3, [r4, #52]
 369 005a 002B     		cmp	r3, #0
 370 005c 01D0     		beq	.L22
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       {
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****         /* Transfer error callback */
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****         hdma->XferErrorCallback(hdma);
 371              		.loc 1 274 0
 372 005e 2000     		movs	r0, r4
 373 0060 9847     		blx	r3
 374              	.LVL29:
 375              	.L22:
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       }
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     }
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 376              		.loc 1 278 0
 377              		@ sp needed
 378              	.LVL30:
 379 0062 10BD     		pop	{r4, pc}
 380              	.L26:
 381              		.align	2
 382              	.L25:
 383 0064 FFFEFFFF 		.word	-257
 384              		.cfi_endproc
 385              	.LFE177:
 387              		.text
 388              	.Letext0:
 389              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 390              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 391              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 392              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 393              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 394              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 395              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 396              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma_ex.h"
ARM GAS  /tmp/cchYokGJ.s 			page 13


 397              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 398              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
ARM GAS  /tmp/cchYokGJ.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_dma_ex.c
     /tmp/cchYokGJ.s:16     .text.HAL_DMAEx_ConfigMuxSync:00000000 $t
     /tmp/cchYokGJ.s:23     .text.HAL_DMAEx_ConfigMuxSync:00000000 HAL_DMAEx_ConfigMuxSync
     /tmp/cchYokGJ.s:99     .text.HAL_DMAEx_ConfigMuxRequestGenerator:00000000 $t
     /tmp/cchYokGJ.s:106    .text.HAL_DMAEx_ConfigMuxRequestGenerator:00000000 HAL_DMAEx_ConfigMuxRequestGenerator
     /tmp/cchYokGJ.s:183    .text.HAL_DMAEx_EnableMuxRequestGenerator:00000000 $t
     /tmp/cchYokGJ.s:190    .text.HAL_DMAEx_EnableMuxRequestGenerator:00000000 HAL_DMAEx_EnableMuxRequestGenerator
     /tmp/cchYokGJ.s:236    .text.HAL_DMAEx_DisableMuxRequestGenerator:00000000 $t
     /tmp/cchYokGJ.s:243    .text.HAL_DMAEx_DisableMuxRequestGenerator:00000000 HAL_DMAEx_DisableMuxRequestGenerator
     /tmp/cchYokGJ.s:287    .text.HAL_DMAEx_DisableMuxRequestGenerator:00000024 $d
     /tmp/cchYokGJ.s:292    .text.HAL_DMAEx_MUX_IRQHandler:00000000 $t
     /tmp/cchYokGJ.s:299    .text.HAL_DMAEx_MUX_IRQHandler:00000000 HAL_DMAEx_MUX_IRQHandler
     /tmp/cchYokGJ.s:383    .text.HAL_DMAEx_MUX_IRQHandler:00000064 $d

NO UNDEFINED SYMBOLS
